var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutPage.html",[0,0.989,1,1.888]],["body/components/AboutPage.html",[0,0.673,1,1.55,2,1.022,3,0.035,4,0.02,5,2.155,6,1.733,7,0.607,8,0.607,9,0.018,10,1.224,11,0.584,12,1.437,13,0.543,14,3.037,15,2.965,16,0.882,17,3.254,18,0.9,19,2.425,20,0.291,21,0.29,22,5.342,23,4.76,24,3.254,25,0.461,26,3.925,27,1.733,28,2.167,29,3.925,30,2.425,31,3.004,32,3.925,33,0.266,34,1.125,35,2.479,36,1.168,37,1.374,38,0.469,39,0.007,40,0.851,41,0.229,42,0.285,43,1.374,44,1.665,45,2.16,46,1.208,47,2.714,48,0.849,49,0.832,50,1.374,51,1.374,52,4.946,53,1.653,54,2.425,55,2.243,56,1.285,57,1.74,58,4.48,59,2.425,60,0.253,61,1.374,62,3.497,63,5.685,64,1,65,4.946,66,1.374,67,1.374,68,1.37,69,1.856,70,1.055,71,2.425,72,1.988,73,1.374,74,2.425,75,1.4,76,3.925,77,0.93,78,0.963,79,2.425,80,2.425,81,2.425,82,1.727,83,2.16,84,3.925,85,3.254,86,2.425,87,2.425,88,2.425,89,1.752,90,2.425,91,2.519,92,2.425,93,3.215,94,3.122,95,2.425,96,2.425,97,3.254,98,4.9,99,5.064,100,3.925,101,2.425,102,2.425,103,2.425,104,1.374,105,4.775,106,3.004,107,2.425,108,5.951,109,4.952,110,4.406,111,3.86,112,3.815,113,2.16,114,2.425,115,2.425,116,1.916,117,2.425,118,2.425,119,2.576,120,1.665,121,2.425,122,1.215,123,1.287,124,2.425,125,2.425,126,3.925,127,2.425,128,2.425,129,1.469,130,2.425,131,1.152,132,2.425,133,3.246,134,2.425,135,2.425,136,2.425,137,1.327,138,1.967,139,2.425,140,1.986,141,2.425,142,1.124,143,1.215,144,2.425,145,2.425,146,1.986,147,2.425,148,2.425,149,2.425,150,1.856,151,2.425,152,1.046,153,3.925,154,1.404,155,2.425,156,2.425,157,2.16,158,2.425,159,1.752,160,2.425,161,2.425,162,2.425,163,2.425,164,1.374,165,6.368,166,3.826,167,2.425,168,2.425,169,2.425,170,2.425,171,1.183,172,1.752,173,2.425,174,2.425,175,2.425,176,2.425,177,2.425,178,2.425,179,2.425,180,2.899,181,2.425,182,2.425,183,2.425,184,2.425,185,2.425,186,1.665,187,2.425,188,1.374,189,0.07,190,0.126,191,0.5,192,0.02,193,0.118,194,0.902,195,1.224,196,1.224,197,0.653,198,3.237,199,1.224,200,1.224,201,1.224,202,1.125,203,1.125,204,0.623,205,0.545,206,1.856,207,1.856,208,1.052,209,1.856,210,1.374,211,1.374,212,0.689,213,0.944,214,7.305,215,1.125,216,1.374,217,1.374,218,1.374,219,1.374,220,1.224,221,1.374,222,1.374,223,0.993,224,4.292,225,1.374,226,1.224,227,0.49,228,1.224,229,0.816,230,1.374,231,1.374,232,1.374,233,1.374,234,1.374,235,0.49,236,0.681,237,1.374,238,1.125,239,3.925,240,2.16,241,2.425,242,2.425,243,2.425,244,2.16,245,2.425,246,2.425,247,2.425,248,2.425,249,2.425,250,2.425,251,2.425,252,3.254,253,1.374,254,2.425,255,2.425,256,2.425,257,2.425,258,2.425,259,1.591,260,2.425,261,2.425,262,2.425,263,1.665,264,2.425,265,2.425,266,2.425,267,1.752,268,1.986,269,2.425,270,1.327,271,2.425,272,1.124,273,0.957,274,2.425,275,2.425,276,1.374,277,1.986,278,1.052,279,1.125,280,0.705,281,5.199,282,0.902,283,3.497,284,1.125,285,5.272,286,1.125,287,6.578,288,1.469,289,3.705,290,0.902,291,3.931,292,2.471,293,3.815,294,2.714,295,1.665,296,3.254,297,1.374,298,1.125,299,1.224,300,3.215,301,3.397,302,1.752,303,1.224,304,3.925,305,1.374,306,2.425,307,1.374,308,0.848,309,3.344,310,3.542,311,4.355,312,4.082,313,1.374,314,2.218,315,0.944,316,2.714,317,2.665,318,1.838,319,1.374,320,0.51,321,4.613,322,3.975,323,2.836,324,3.323,325,1.224,326,0.607,327,1.052,328,4.051,329,4.161,330,4.754,331,3.113,332,4.709,333,4.009,334,2.378,335,3.547,336,3.38,337,3.35,338,3.745,339,1.052,340,2.836,341,4.946,342,6.48,343,3.37,344,1.052,345,4.58,346,2.665,347,3.542,348,3.931,349,2.294,350,2.471,351,1.856,352,3.363,353,3.38,354,3.363,355,3.073,356,1.665,357,2.838,358,1.224,359,2.899,360,2.899,361,2.16,362,1.224,363,1.224,364,3.444,365,2.425,366,1.224,367,2.665,368,3.573,369,1.046,370,3.547,371,4.2,372,3.38,373,2.899,374,4.079,375,2.192,376,3.86,377,3.528,378,3.246,379,1.224,380,1.125,381,3.183,382,5.304,383,2.378,384,2.16,385,1.902,386,2.294,387,4.098,388,2.471,389,3.236,390,1.125,391,4.946,392,3.731,393,2.89,394,1.439,395,3.254,396,1.224,397,3.905,398,0.902,399,1.374,400,1.374,401,1.224,402,3.991,403,2.16,404,1.052,405,2.618,406,3.175,407,2.425,408,1.986,409,1.125,410,1.752,411,1.902,412,0.944,413,2.425,414,1.125,415,2.425,416,2.491,417,2.16,418,3.246,419,2.471,420,3.254,421,2.899,422,3.314,423,3.122,424,3.624,425,0.902,426,1.752,427,0.944,428,0.993,429,2.618,430,3.573,431,4.25,432,1.125,433,2.665,434,2.076,435,2.576,436,2.665,437,1.374,438,1.374,439,3.03,440,4.406,441,2.899,442,2.135,443,1.374,444,4.406,445,2.425,446,6.683,447,0.902,448,0.944,449,2.16,450,3.322,451,4.207,452,2.16,453,1.591,454,3.497,455,2.836,456,1.374,457,1.374,458,2.425,459,3.246,460,2.425,461,2.135,462,2.576,463,2.576,464,0.902,465,0.944,466,1.374,467,1.374,468,5.982,469,1.224,470,6.868,471,1.374,472,1.374,473,2.148,474,4.376,475,0.944,476,4.946,477,1.374,478,3.991,479,0.607,480,1.052,481,0.993,482,1.224,483,5.982,484,1.374,485,0.944,486,3.925,487,5.685,488,1.374,489,1.374,490,1.052,491,1.374,492,1.971,493,2.16,494,2.16,495,2.16,496,1.224,497,0.944,498,1.374,499,0.993,500,1.374,501,0.902,502,0.993,503,3.246,504,0.944,505,1.665,506,1.591,507,1.591,508,1.052,509,1.374,510,1.125,511,0.944,512,1.224,513,6.476,514,1.856,515,1.374,516,1.374,517,2.899,518,1.374,519,2.16,520,1.374,521,3.215,522,1.224,523,1.374,524,1.374,525,1.374,526,2.425,527,2.425,528,2.425,529,1.437,530,0.902,531,3.925,532,1.374,533,1.374,534,0.993,535,1.374,536,1.374,537,2.425,538,1.374,539,1.224,540,2.16,541,1.986,542,2.16,543,2.16,544,1.224,545,0.848,546,2.425,547,1.374,548,1.224,549,2.425,550,2.899,551,1.374,552,0.463,553,1.071,554,0.554,555,0.607,556,1.374,557,0.607,558,0.554,559,0.607,560,0.554,561,1.174,562,1.071,563,0.554,564,2.184,565,0.543,566,1.071,567,0.543,568,0.607,569,0.567,570,0.481,571,0.607,572,0.554,573,0.607,574,0.422,575,0.543,576,0.593,577,0.607,578,0.554,579,0.593,580,0.51,581,0.554,582,0.554,583,1.733,584,0.554,585,0.607,586,0.51,587,0.607,588,0.554,589,0.543,590,0.607,591,0.543,592,0.567,593,0.607,594,0.554,595,0.593,596,0.543,597,0.914,598,0.607,599,0.554,600,0.554,601,0.543,602,0.607,603,0.554,604,0.543,605,0.607,606,0.531,607,0.867,608,0.531,609,0.554,610,0.543,611,0.543,612,0.607,613,0.567,614,0.593,615,0.579,616,0.543,617,0.593,618,0.607,619,0.002,620,0.002]],["title/modules/AboutPageModule.html",[621,1.494,622,3.659]],["body/modules/AboutPageModule.html",[1,3.761,3,0.099,4,0.099,9,0.089,39,0.007,189,0.278,190,0.633,192,0.099,193,0.592,552,2.328,619,0.005,620,0.005,621,2.161,622,7.429,623,2.619,624,3.374,625,4.7,626,3.67,627,3.565,628,2.731,629,6.161,630,6.161,631,6.161,632,6.881,633,4.392,634,3.67,635,3.127,636,6.916,637,3.268,638,3.339,639,4.528,640,3.466,641,4.675,642,2.916,643,4.392,644,2.242,645,4.042,646,2.983,647,3.053,648,3.907,649,6.161,650,4.189]],["title/modules/AboutPageRoutingModule.html",[621,1.494,632,3.454]],["body/modules/AboutPageRoutingModule.html",[0,1.521,1,3.389,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,619,0.006,620,0.006,623,2.786,628,2.904,632,6.2,637,2.904,638,3.462,649,6.552,651,7.354,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155]],["title/components/AppComponent.html",[0,0.989,558,1.928]],["body/components/AppComponent.html",[0,1.417,1,1.621,2,2.475,3,0.084,4,0.059,5,1.656,6,1.812,7,1.812,8,1.812,9,0.053,13,1.621,14,3.508,15,3.24,16,2.135,18,2.178,20,0.224,21,0.703,25,1.116,33,1.135,35,4.247,36,1.584,38,1.325,39,0.007,40,0.857,41,0.405,42,0.804,48,1.177,49,2.351,60,0.616,70,1.331,75,1.283,94,2.399,105,2.246,120,2.819,137,2.246,146,3.362,154,2.532,166,3.805,189,0.216,190,0.376,191,1.493,192,0.059,193,0.351,204,0.571,273,1.621,280,1.707,281,2.819,289,2.116,293,3.969,301,2.819,302,2.965,309,4.448,310,3.257,311,3.966,312,4.075,314,3.316,316,2.486,321,3.532,322,2.319,324,2.318,332,4.503,333,3.749,334,2.178,335,2.178,336,2.319,337,2.057,343,3.578,345,3.316,346,4.808,355,2.42,357,1.656,370,2.178,371,3.212,374,3.86,375,1.77,378,3.748,381,3.667,392,5.192,393,2.399,397,2.399,408,3.362,412,2.819,418,2.694,422,4.368,423,2.399,424,4.151,429,2.399,433,3.362,434,1.902,439,2.475,447,2.694,448,2.819,450,2.399,451,3.695,453,2.694,459,2.694,473,2.246,474,6.48,475,2.819,485,2.819,506,3.852,507,3.852,521,4.808,522,5.229,529,2.592,552,1.382,553,2.592,554,1.656,555,1.812,557,1.812,558,3.017,559,1.812,560,1.656,561,2.073,562,2.592,563,1.656,564,3.634,565,1.621,566,2.592,567,1.621,568,1.812,569,1.692,570,1.436,571,1.812,572,1.656,573,1.812,574,1.26,575,1.621,576,1.77,577,1.812,578,1.656,579,1.77,580,2.178,581,1.656,582,1.656,583,3.302,584,1.656,585,1.812,586,1.523,587,1.812,588,1.656,589,1.621,590,1.812,591,1.621,592,1.692,593,1.812,594,1.656,595,1.77,596,1.621,597,1.924,598,1.812,599,1.656,600,1.656,601,1.621,602,1.812,603,1.656,604,1.621,605,1.812,606,1.587,607,1.827,608,1.587,609,1.656,610,1.621,611,1.621,612,1.812,613,1.692,614,1.77,615,1.73,616,1.621,617,1.77,618,1.812,619,0.004,620,0.004,657,3.657,658,6.852,659,5.87,660,3.025,661,4.47,662,5.245,663,5.229,664,5.87,665,7.478,666,5.229,667,5.87,668,4.104,669,5.401,670,3.493,671,5.87,672,3.657,673,4.53,674,4.104,675,7.478,676,5.87,677,4.241,678,4.104,679,4.241,680,5.87,681,3.657,682,5.87,683,4.104,684,4.104,685,3.657,686,3.141,687,3.141,688,2.002,689,1.256,690,4.493,691,3.141,692,3.141,693,3.141,694,4.104,695,2.819,696,4.104,697,4.104,698,4.104,699,3.657,700,3.657,701,6.852,702,4.104,703,4.104,704,7.912,705,6.852,706,1.62,707,3.657,708,3.657,709,2.116,710,2.399,711,2.319,712,3.362,713,2.178,714,5.229,715,2.694,716,2.178,717,1.133,718,3.362,719,3.657,720,2.246,721,2.057,722,3.657,723,2.246]],["title/modules/AppModule.html",[621,1.494,724,3.659]],["body/modules/AppModule.html",[3,0.063,4,0.063,9,0.057,15,1.463,39,0.007,89,3.199,91,1.786,122,2.219,171,2.16,186,3.041,189,0.284,190,0.406,191,1.611,192,0.102,193,0.379,214,5.467,552,1.491,558,3.742,570,1.549,619,0.004,620,0.004,621,1.384,623,1.677,624,2.16,625,3.791,626,3.791,627,3.682,628,1.749,633,3.287,634,2.35,635,2.002,637,2.446,638,2.499,642,1.867,643,2.35,644,1.436,645,2.588,646,3.081,647,1.955,648,2.502,670,3.154,687,3.389,688,2.16,724,7.487,725,3.945,726,3.945,727,3.945,728,3.945,729,3.945,730,6.095,731,4.348,732,3.725,733,4.616,734,5.11,735,4.766,736,4.766,737,4.116,738,4.93,739,3.627,740,6.194,741,7.143,742,6.194,743,3.945,744,3.627,745,7.143,746,7.143,747,4.428,748,7.736,749,5.073,750,7.143,751,5.073,752,5.073,753,5.073,754,5.073,755,5.073,756,5.073,757,5.073,758,5.073,759,5.073,760,5.073,761,5.073,762,4.428,763,4.254,764,6.194,765,3.627,766,3.627,767,3.627,768,4.428,769,3.199,770,4.74,771,4.74,772,4.74,773,5.073,774,5.073,775,5.073,776,5.073,777,5.073,778,5.073,779,5.073,780,3.389,781,3.389,782,4.065,783,2.944,784,4.065,785,5.073,786,5.073,787,5.518,788,2.611,789,4.065,790,2.945,791,6.194,792,4.428,793,3.945,794,5.518,795,3.627,796,3.199,797,4.428,798,4.74,799,4.428,800,3.389,801,3.199,802,3.945,803,3.041,804,3.627,805,3.499,806,3.945,807,4.065,808,3.627,809,1.045,810,3.945,811,0.996,812,4.428,813,4.428,814,3.389,815,4.428,816,4.428,817,7.935,818,3.945,819,3.627,820,3.945,821,7.143,822,9.464,823,2.588,824,3.627,825,1.955,826,3.627,827,1.955,828,3.041,829,3.945,830,7.736,831,4.428,832,4.428,833,4.428,834,4.428,835,4.428,836,4.428,837,4.428,838,4.428,839,4.428,840,4.428,841,4.428,842,4.428,843,4.428,844,4.428,845,4.428,846,4.428,847,4.428,848,4.428,849,4.428,850,4.428,851,4.428,852,3.945,853,2.906,854,5.073]],["title/modules/AppRoutingModule.html",[621,1.494,730,3.454]],["body/modules/AppRoutingModule.html",[3,0.085,4,0.085,9,0.077,39,0.007,47,3.611,83,5.31,122,2.987,189,0.252,190,0.546,191,2.168,192,0.085,193,0.51,204,0.829,561,1.562,580,2.802,614,3.257,619,0.005,620,0.005,623,2.258,628,2.354,637,2.354,638,3.046,652,3.261,653,4.154,654,4.008,655,4.113,730,5.456,825,2.631,827,2.631,855,5.96,856,7.551,857,7.864,858,5.96,859,6.789,860,5.96,861,5.96,862,5.96,863,5.96,864,9.661,865,9.661,866,5.96,867,5.96,868,5.96,869,5.96,870,5.96,871,4.094,872,5.96,873,5.96,874,4.562,875,5.96,876,5.96,877,5.96,878,5.96,879,5.96,880,5.96,881,5.96,882,5.96,883,5.96,884,5.96,885,4.306,886,5.96,887,5.96,888,5.96,889,5.96,890,5.96,891,7.551,892,5.456,893,5.96,894,7.551,895,5.96,896,6.727,897,5.96,898,5.96,899,5.96,900,5.96]],["title/interfaces/Artist.html",[561,1.253,901,0.015]],["body/interfaces/Artist.html",[3,0.096,4,0.096,9,0.087,20,0.366,21,0.973,39,0.007,40,0.946,41,0.497,42,1.067,60,0.773,189,0.194,192,0.096,205,1.51,561,2.13,619,0.005,620,0.005,717,1.852,901,0.022,902,1.02,903,5.979,904,2.023,905,2.999,906,8.095,907,6.24,908,2.507,909,6.954,910,6.954,911,8.095,912,1.516,913,3.766,914,2.888,915,3.922,916,2.524,917,2.097,918,2.06,919,2.136]],["title/interfaces/ArtistData.html",[901,0.015,920,3.659]],["body/interfaces/ArtistData.html",[0,1.629,3,0.091,4,0.091,9,0.082,11,1.534,14,2.274,15,2.106,16,2.319,18,2.366,20,0.429,21,0.943,33,1.233,35,4.284,39,0.007,40,0.955,41,0.403,42,0.925,60,0.745,189,0.247,190,0.584,191,2.319,192,0.091,193,0.546,259,4.184,273,2.517,375,1.509,561,2.339,575,2.517,576,3.686,619,0.005,620,0.005,689,1.828,732,3.773,811,1.434,824,5.222,901,0.021,902,0.969,912,1.022,914,2.602,916,1.729,920,6.832,921,5.222,922,4.879,923,5.222,924,1.686,925,4.329,926,5.409,927,5.409,928,7.017,929,3.602,930,5.68,931,5.68,932,3.286,933,5.222,934,4.879,935,3.726,936,2.187,937,5.68,938,5.222,939,1.992,940,5.68,941,2.465,942,5.68,943,5.68,944,5.68,945,5.68,946,5.68,947,5.68,948,5.68,949,5.68,950,7.017,951,5.68,952,5.68]],["title/components/ArtistGridCardComponent.html",[0,0.989,560,1.928]],["body/components/ArtistGridCardComponent.html",[0,1.399,1,1.583,2,2.434,3,0.083,4,0.057,5,1.618,6,1.77,7,1.77,8,1.77,9,0.052,13,1.583,14,3.497,15,3.233,16,2.1,18,2.142,20,0.219,21,0.691,25,1.098,36,1.703,39,0.007,40,0.77,41,0.378,48,1.402,49,2.801,53,1.166,55,1.069,77,1.65,78,1.709,154,1.73,166,3.756,189,0.167,190,0.367,192,0.057,193,0.343,224,2.893,281,3.965,285,4.645,289,2.067,291,3.634,293,3.064,309,3.999,310,1.906,311,3.39,312,3.931,321,2.975,322,2.265,324,1.583,330,4.18,332,2.194,333,2.194,335,3.064,336,3.261,337,2.893,343,3.058,347,2.744,348,2.524,349,4.582,350,4.258,352,2.524,355,1.653,357,1.618,370,2.128,371,3.158,374,2.816,375,2.107,377,2.265,378,2.893,385,3.373,386,3.373,388,3.634,394,1.015,397,2.343,405,3.953,406,4.161,411,2.343,418,2.631,422,3.064,423,2.343,424,2.429,426,2.897,431,2.631,434,1.858,439,4.157,442,2.631,464,2.631,479,2.549,481,2.897,529,2.549,552,1.35,553,2.549,554,1.618,555,1.77,557,1.77,558,1.618,559,1.77,560,2.985,561,2.533,562,2.549,563,1.618,564,3.605,565,1.583,566,2.549,567,1.583,568,1.77,569,1.653,570,1.402,571,1.77,572,1.618,573,1.77,574,1.231,575,1.583,576,1.73,577,1.77,578,1.618,579,3.382,580,1.488,581,1.618,582,1.618,583,3.267,584,1.618,585,1.77,586,1.488,587,1.77,588,1.618,589,1.583,590,1.77,591,1.583,592,1.653,593,1.77,594,1.618,595,2.49,596,1.583,597,1.899,598,1.77,599,1.618,600,1.618,601,1.583,602,1.77,603,1.618,604,1.583,605,1.77,606,1.55,607,1.803,608,1.55,609,1.618,610,1.583,611,1.583,612,1.77,613,1.653,614,1.73,615,1.691,616,1.583,617,1.73,618,1.77,619,0.004,620,0.004,709,3.814,711,2.265,713,2.128,717,1.107,811,1.522,908,1.593,909,3.069,912,0.925,925,2.675,926,5.082,927,5.779,939,2.45,941,1.55,953,6.641,954,7.528,955,3.284,956,6.026,957,5.143,958,6.026,959,5.663,960,6.592,961,6.592,962,6.592,963,6.592,964,6.06,965,7.399,966,3.064,967,4.171,968,3.051,969,5.177,970,4.01,971,4.01,972,4.01,973,4.01,974,3.572,975,3.572,976,4.01,977,3.572,978,4.01,979,3.572,980,4.01,981,3.572,982,2.631,983,4.01,984,4.01,985,4.01,986,5.143,987,5.772,988,3.572,989,2.754,990,4.01,991,3.572,992,2.893,993,5.143,994,4.728,995,3.572,996,3.572,997,3.284,998,3.572,999,5.143,1000,3.572,1001,3.572,1002,1.906,1003,2.754,1004,3.572,1005,2.754,1006,2.429,1007,2.265,1008,4.171,1009,5.143,1010,5.143,1011,3.572]],["title/components/ArtistModalComponent.html",[0,0.989,563,1.928]],["body/components/ArtistModalComponent.html",[0,1.414,1,1.344,2,2.157,3,0.049,4,0.049,5,1.373,6,1.503,7,1.503,8,1.503,9,0.044,13,1.344,14,3.448,15,3.187,16,1.861,18,1.899,20,0.186,21,0.612,25,0.973,28,2.726,33,0.989,36,1.666,38,1.418,39,0.007,40,0.917,41,0.42,42,0.86,48,1.372,49,2.109,60,0.532,77,1.757,78,1.82,82,2.715,154,1.468,180,3.032,189,0.243,190,0.312,192,0.049,193,0.291,204,1.261,205,0.766,227,1.825,229,2.592,235,1.825,236,1.92,309,3.249,312,3.018,343,2.78,345,1.923,353,2.89,357,1.373,374,3.576,375,1.734,381,1.577,387,2.233,392,2.233,419,3.221,439,2.157,473,1.862,514,6.114,529,2.259,552,1.146,553,2.259,554,1.373,555,1.503,557,1.503,558,1.373,559,1.503,560,1.373,561,2.497,562,2.259,563,2.758,564,3.399,565,1.344,566,2.259,567,1.344,568,1.503,569,1.403,570,1.19,571,1.503,572,1.373,573,1.503,574,1.044,575,1.344,576,1.468,577,1.503,578,1.373,579,3.694,580,1.263,581,1.373,582,1.373,583,3.018,584,1.373,585,1.503,586,1.263,587,1.503,588,1.373,589,1.344,590,1.503,591,1.344,592,1.403,593,1.503,594,1.373,595,1.468,596,1.344,597,1.726,598,1.503,599,1.373,600,1.373,601,1.344,602,1.503,603,1.373,604,1.344,605,1.503,606,2.377,607,2.376,608,2.377,609,1.373,610,1.344,611,1.344,612,1.503,613,1.403,614,1.468,615,1.435,616,1.344,617,1.468,618,1.503,619,0.003,620,0.003,642,1.435,644,1.103,689,1.832,708,3.032,710,1.989,711,1.923,712,2.787,713,1.806,717,0.939,737,3.897,809,0.574,811,1.927,825,3.399,908,1.697,910,5.233,917,1.064,918,1.044,919,1.083,924,0.626,925,2.371,953,6.501,966,2.715,968,1.403,969,2.605,982,2.233,1012,6.887,1013,2.142,1014,3.473,1015,4.222,1016,3.514,1017,6.148,1018,5.392,1019,6.148,1020,4.939,1021,4.558,1022,5.116,1023,4.696,1024,6.837,1025,4.19,1026,3.221,1027,2.605,1028,4.304,1029,3.593,1030,3.862,1031,4.222,1032,3.091,1033,3.403,1034,3.916,1035,5.116,1036,3.032,1037,4.558,1038,3.032,1039,5.116,1040,3.403,1041,2.459,1042,3.403,1043,3.403,1044,4.558,1045,3.403,1046,2.849,1047,3.403,1048,3.032,1049,2.787,1050,5.116,1051,3.403,1052,3.403,1053,5.116,1054,2.142,1055,2.062,1056,1.706,1057,1.706,1058,2.142,1059,2.142,1060,0.536,1061,2.142,1062,2.142,1063,2.787,1064,3.403,1065,3.403,1066,5.477,1067,5.035,1068,3.403,1069,4.558,1070,3.403,1071,3.403,1072,3.403,1073,3.403,1074,3.403,1075,2.605,1076,2.605,1077,2.337,1078,2.787,1079,1.825,1080,3.032,1081,3.032,1082,3.403,1083,3.403,1084,2.337,1085,2.459,1086,2.605,1087,6.148,1088,2.459,1089,2.459,1090,3.358,1091,5.116,1092,5.116,1093,4.558,1094,3.403,1095,3.099,1096,5.116,1097,3.403,1098,6.148,1099,5.116,1100,2.337,1101,3.403,1102,2.99,1103,3.403,1104,2.605,1105,2.715,1106,2.787,1107,3.403,1108,5.477,1109,1.435,1110,3.032,1111,1.706,1112,2.787,1113,2.459,1114,3.032,1115,5.296,1116,2.02,1117,2.787,1118,4.442,1119,2.652,1120,0.892,1121,3.032,1122,3.032,1123,2.787,1124,4.558,1125,3.032,1126,2.459,1127,3.032,1128,3.032,1129,3.032,1130,3.032,1131,2.787,1132,1.989,1133,3.221,1134,2.715,1135,2.564,1136,3.403,1137,3.403]],["title/modules/ArtistProfilePageModule.html",[621,1.494,1138,3.659]],["body/modules/ArtistProfilePageModule.html",[3,0.096,4,0.096,9,0.087,39,0.007,189,0.279,190,0.616,192,0.096,193,0.575,552,2.262,561,2.131,565,3.736,580,2.494,619,0.005,620,0.005,621,2.1,623,2.545,624,3.278,625,4.642,626,3.566,627,3.464,628,2.654,633,4.317,634,3.566,635,3.039,637,3.212,638,3.281,639,4.45,640,3.368,641,4.595,642,2.833,643,4.317,644,2.179,645,3.927,646,2.898,647,2.967,648,3.797,650,4.071,731,4.877,892,5.877,1138,7.485,1139,5.987,1140,5.987,1141,5.987,1142,6.835,1143,6.225,1144,8.134,1145,4.41,1146,5.143]],["title/modules/ArtistProfilePageRoutingModule.html",[621,1.494,1142,3.454]],["body/modules/ArtistProfilePageRoutingModule.html",[0,1.515,3,0.105,4,0.105,9,0.095,39,0.007,189,0.262,190,0.671,191,2.664,192,0.105,193,0.627,204,1.018,561,1.919,565,3.38,580,2.718,619,0.006,620,0.006,623,2.774,628,2.892,637,2.892,638,3.454,652,4.007,653,4.547,654,4.543,655,3.088,656,4.137,892,5.291,1142,6.185,1143,5.605,1146,5.605]],["title/injectables/ArtistsMappingStrapi.html",[1147,0.956,1148,3.915]],["body/injectables/ArtistsMappingStrapi.html",[3,0.04,4,0.04,9,0.036,11,0.674,20,0.153,25,0.837,36,1.549,38,1.602,39,0.007,40,0.91,41,0.424,42,0.972,46,2.289,48,1.577,53,1.28,55,2.655,57,2.484,60,0.522,64,3.182,70,2.502,72,2.49,75,2.631,78,1.986,91,2.873,112,4.469,116,2.752,123,2.336,142,3.3,143,3.569,152,3.328,171,4.717,189,0.178,190,0.256,192,0.04,193,0.24,204,1.073,205,0.99,213,5.299,273,3.414,280,0.814,320,2.019,375,1.685,434,2.858,473,2.977,561,2.484,619,0.003,620,0.003,689,1.801,715,2.889,716,2.336,717,1.215,721,3.569,809,1.513,906,2.494,907,3.023,908,0.772,909,3.369,910,2.142,911,3.922,912,1.349,916,2.153,917,1.376,918,1.351,919,1.401,924,0.809,935,4.353,936,2.116,939,1.376,968,1.815,1079,2.2,1120,2.349,1147,0.881,1148,3.605,1149,1.105,1150,7.502,1151,4.002,1152,2.142,1153,2.092,1154,3.605,1155,2.336,1156,3.369,1157,3.605,1158,6.753,1159,5.575,1160,4.19,1161,3.18,1162,3.18,1163,3.18,1164,3.18,1165,3.18,1166,4.402,1167,4.402,1168,4.402,1169,4.402,1170,3.18,1171,3.18,1172,3.18,1173,2.799,1174,6.896,1175,4.304,1176,6.32,1177,5.052,1178,5.832,1179,4.456,1180,5.905,1181,3.18,1182,2.799,1183,3.605,1184,3.18,1185,2.799,1186,4.721,1187,4.757,1188,3.092,1189,3.092,1190,3.3,1191,3.922,1192,3.369,1193,3.18,1194,2.59,1195,5.495,1196,2.799,1197,3.605,1198,6.168,1199,3.22,1200,2.858,1201,2.771,1202,2.269,1203,2.771,1204,3.369,1205,4.222,1206,2.257,1207,3.18,1208,2.799,1209,4.048,1210,5.052,1211,4.402,1212,2.799,1213,5.701,1214,2.789,1215,6.168,1216,4.673,1217,4.402,1218,6.344,1219,4.402,1220,2.799,1221,3.779,1222,3.023,1223,3.023,1224,3.605,1225,4.402,1226,3.369,1227,4.402,1228,2.799,1229,4.402,1230,4.402,1231,4.402,1232,2.148,1233,4.402,1234,2.799,1235,4.721,1236,4.402,1237,3.922,1238,4.402,1239,4.482,1240,4.402,1241,2.269,1242,3.023,1243,3.369,1244,2.494,1245,5.052,1246,3.023,1247,3.605,1248,5.052,1249,3.369,1250,2.887,1251,2.799,1252,4.456,1253,1.815,1254,2.092,1255,1.486,1256,1.129,1257,2.022,1258,1.129,1259,0.859,1260,4.457,1261,4.456,1262,2.799,1263,2.799,1264,5.441,1265,4.402,1266,2.799,1267,2.799,1268,2.799,1269,2.799,1270,2.799,1271,2.799,1272,2.799,1273,2.799,1274,2.494,1275,2.494,1276,1.486,1277,2.494,1278,2.293,1279,2.799,1280,2.206,1281,2.494,1282,3.605,1283,2.799,1284,2.799,1285,2.799,1286,2.799,1287,2.799,1288,2.799,1289,2.799,1290,2.799,1291,2.799,1292,1.366,1293,2.799,1294,2.799,1295,2.799,1296,2.799,1297,2.799,1298,2.799,1299,2.799,1300,2.799,1301,2.799,1302,2.799,1303,2.799,1304,2.799,1305,2.293,1306,2.799,1307,2.799,1308,2.206,1309,4.402,1310,2.494,1311,1.486,1312,2.799,1313,4.456]],["title/components/ArtistsPage.html",[0,0.989,567,1.888]],["body/components/ArtistsPage.html",[0,1.532,1,1.377,2,2.197,3,0.05,4,0.05,5,2.102,6,1.54,7,1.54,8,1.54,9,0.045,11,1.254,12,2.754,13,1.377,14,3.456,15,3.195,16,1.895,18,1.934,20,0.34,21,0.624,25,0.991,27,3.27,28,2.744,33,1.008,35,4.036,36,1.674,38,1.432,39,0.007,40,0.862,41,0.423,42,0.869,46,1.294,48,1.383,49,2.374,53,2.013,55,1.663,57,2.154,70,1.131,75,1.09,77,2.117,78,2.193,82,2.765,142,2.415,143,2.612,154,1.504,166,2.149,189,0.239,190,0.319,191,1.269,192,0.05,193,0.299,197,3.289,204,1.08,224,2.612,229,2.616,236,2.377,292,2.195,309,2.477,310,1.658,311,2.612,312,3.055,314,1.97,315,2.395,320,2.749,327,2.669,343,1.577,375,1.638,378,1.748,394,1.752,404,2.669,419,3.28,424,2.113,439,3.276,440,3.107,441,3.107,444,3.107,510,2.856,529,2.301,552,1.174,553,2.301,554,1.407,555,1.54,557,1.54,558,1.407,559,1.54,560,1.407,561,2.51,562,2.301,563,2.792,564,3.431,565,1.377,566,2.301,567,2.733,568,1.54,569,1.438,570,1.22,571,1.54,572,1.407,573,1.54,574,1.07,575,1.377,576,1.504,577,1.54,578,1.407,579,1.504,580,1.294,581,1.407,582,1.407,583,3.055,584,1.407,585,1.54,586,1.294,587,1.54,588,1.407,589,1.377,590,1.54,591,1.377,592,1.438,593,1.54,594,1.407,595,1.504,596,1.377,597,1.752,598,1.54,599,1.407,600,1.407,601,1.377,602,1.54,603,1.407,604,1.377,605,1.54,606,1.348,607,1.663,608,1.348,609,1.407,610,1.377,611,1.377,612,1.54,613,1.438,614,1.504,615,1.47,616,1.377,617,1.504,618,1.54,619,0.003,620,0.003,644,1.131,689,1.723,715,2.289,732,3.055,765,2.856,811,1.172,827,3.911,912,1.327,953,2.52,968,2.572,992,2.612,993,4.642,994,4.268,1006,2.113,1012,2.669,1014,2.944,1029,3.646,1030,3.91,1046,2.891,1060,0.549,1062,2.195,1084,3.579,1085,3.765,1088,3.765,1089,3.765,1090,2.289,1100,3.579,1105,2.765,1109,3.123,1116,2.733,1118,2.52,1119,1.504,1132,3.045,1135,2.612,1194,2.269,1206,1.754,1216,4.542,1276,3.311,1314,3.107,1315,6.238,1316,5.211,1317,6.238,1318,6.165,1319,6.921,1320,5.211,1321,4.642,1322,5.211,1323,5.211,1324,3.487,1325,4.774,1326,5.297,1327,5.211,1328,3.28,1329,3.487,1330,3.487,1331,3.487,1332,5.211,1333,3.487,1334,4.268,1335,3.487,1336,3.107,1337,5.211,1338,3.487,1339,5.211,1340,3.487,1341,3.487,1342,5.211,1343,3.487,1344,3.487,1345,3.156,1346,3.487,1347,3.107,1348,2.856,1349,3.487,1350,5.558,1351,5.211,1352,6.364,1353,3.487,1354,3.107,1355,3.487,1356,3.487,1357,2.856,1358,2.669,1359,2.102,1360,3.487,1361,5,1362,2.856,1363,3.487,1364,3.107,1365,3.487,1366,3.487,1367,6.238,1368,3.487,1369,2.52,1370,3.487,1371,3.487,1372,3.487,1373,3.107,1374,3.42,1375,3.487,1376,3.487,1377,2.856,1378,2.669,1379,2.669,1380,1.97,1381,3.487,1382,3.487,1383,3.487,1384,2.856,1385,3.487,1386,1.851,1387,2.669,1388,3.487,1389,4.642,1390,3.487,1391,1.748,1392,5.109,1393,3.765,1394,4.642,1395,4.642,1396,2.477,1397,3.988,1398,4.268,1399,5.211,1400,3.988,1401,3.487,1402,4.642,1403,2.669,1404,5.211,1405,3.107,1406,3.487,1407,3.28,1408,3.487,1409,3.988,1410,3.487,1411,3.487,1412,3.487,1413,3.107,1414,3.487,1415,3.107,1416,3.487]],["title/modules/ArtistsPageModule.html",[621,1.494,1417,3.659]],["body/modules/ArtistsPageModule.html",[3,0.095,4,0.095,9,0.085,39,0.007,189,0.28,190,0.605,192,0.095,193,0.566,552,2.225,563,3.802,567,3.721,619,0.005,620,0.005,621,2.066,623,2.503,624,3.224,625,4.609,626,3.508,627,3.407,628,2.61,633,4.273,634,3.508,635,2.989,637,3.18,638,3.248,639,4.406,640,3.313,641,4.549,642,2.787,643,4.273,644,2.143,645,3.862,646,2.851,647,2.918,648,3.734,650,4.004,731,4.857,789,5.284,827,2.918,953,4.775,1012,5.058,1062,4.161,1145,4.337,1417,7.533,1418,5.888,1419,5.888,1420,5.888,1421,6.808,1422,6.609,1423,6.609,1424,5.888]],["title/modules/ArtistsPageRoutingModule.html",[621,1.494,1421,3.454]],["body/modules/ArtistsPageRoutingModule.html",[0,1.515,3,0.105,4,0.105,9,0.095,39,0.007,189,0.262,190,0.671,191,2.664,192,0.105,193,0.627,204,1.018,567,3.38,619,0.006,620,0.006,623,2.774,628,2.892,637,2.892,638,3.454,652,4.684,653,4.547,654,4.543,655,3.088,656,4.137,827,3.233,1421,6.185,1424,6.524,1425,7.323]],["title/injectables/ArtistsService.html",[732,2.11,1147,0.956]],["body/injectables/ArtistsService.html",[3,0.069,4,0.069,9,0.062,11,1.158,20,0.262,25,1.247,33,1.269,36,1.709,38,1.744,39,0.007,40,0.979,41,0.461,42,1.058,48,1.548,53,1.4,57,1.908,60,0.746,64,2.705,68,2.719,91,1.941,133,4.305,137,2.633,143,2.412,189,0.256,190,0.441,192,0.069,193,0.412,204,1.037,280,1.4,308,1.683,326,2.124,369,2.076,375,1.766,394,1.218,425,3.158,561,2.1,619,0.004,620,0.004,732,2.896,809,1.598,827,2.124,904,1.633,924,1.372,935,3.833,936,2.75,968,2.705,1060,0.758,1079,2.339,1119,2.829,1135,3.288,1147,1.312,1149,1.9,1155,2.554,1206,1.62,1214,2.176,1216,3.158,1257,3.477,1259,1.477,1396,2.287,1398,3.941,1403,3.683,1426,4.287,1427,5.755,1428,6.56,1429,5.372,1430,5.844,1431,4.254,1432,3.481,1433,3.941,1434,6.134,1435,4.812,1436,3.589,1437,6.56,1438,4.812,1439,2.012,1440,5.372,1441,4.812,1442,6.56,1443,4.812,1444,2.176,1445,3.234,1446,5.081,1447,3.941,1448,3.295,1449,2.176,1450,3.683,1451,3.683,1452,2.176,1453,3.941,1454,2.076,1455,3.683,1456,1.589,1457,3.477,1458,5.02,1459,4.812,1460,2.719,1461,3.941,1462,2.176,1463,4.812,1464,1.941,1465,1.532,1466,4.129,1467,2.554,1468,4.812,1469,3.683,1470,4.812,1471,4.812,1472,3.683,1473,2.766,1474,5.372,1475,6.56,1476,4.812,1477,4.131,1478,5.505,1479,3.295,1480,4.898,1481,4.812,1482,7.463,1483,5.372,1484,4.812,1485,2.915,1486,4.812,1487,4.812,1488,6.56,1489,6.56,1490,3.683,1491,2.554,1492,4.812,1493,4.812,1494,4.287,1495,4.812,1496,3.029,1497,4.812,1498,4.812,1499,4.812,1500,4.812,1501,4.812,1502,4.812,1503,4.812,1504,4.287,1505,4.812,1506,4.812,1507,3.683,1508,6.56,1509,6.56,1510,3.477,1511,6.56,1512,4.812,1513,4.812,1514,4.812,1515,3.305,1516,4.287,1517,4.812]],["title/injectables/AudioPlayerService.html",[733,2.616,1147,0.956]],["body/injectables/AudioPlayerService.html",[3,0.04,4,0.04,9,0.036,20,0.335,21,0.525,25,0.834,28,1.758,33,1.049,36,1.751,38,1.569,39,0.007,40,0.876,41,0.447,42,0.952,46,1.628,48,1.583,49,3.05,55,1.894,57,1.276,60,0.6,70,1.422,77,1.758,78,1.606,111,3.168,119,2.878,137,3.366,189,0.178,190,0.255,192,0.063,193,0.238,197,2.578,204,1.297,205,0.627,227,0.994,229,1.476,235,0.994,236,1.523,280,0.81,326,1.936,375,2.208,394,1.694,398,3.559,429,3.595,479,2.395,545,2.837,561,1.612,570,2.485,595,1.892,597,1.728,607,2.433,619,0.003,620,0.003,660,2.395,689,1.916,715,1.828,733,2.4,809,1.458,811,1.384,825,1.936,901,0.009,912,1.454,913,2.032,914,2.032,924,0.806,939,2.755,941,2.875,959,5.691,1046,2.513,1060,0.439,1079,2.386,1116,1.1,1126,3.168,1134,1.478,1147,0.877,1149,1.1,1205,1.524,1250,2.878,1259,0.855,1311,1.478,1439,0.596,1465,0.887,1477,1.436,1518,6.453,1519,2.132,1520,4.832,1521,4.88,1522,4.385,1523,3.907,1524,5.039,1525,5.039,1526,5.481,1527,5.481,1528,4.385,1529,4.708,1530,5.039,1531,3.907,1532,5.039,1533,3.907,1534,4.385,1535,4.385,1536,5.481,1537,5.481,1538,3.907,1539,5.481,1540,5.039,1541,4.832,1542,4.385,1543,4.385,1544,3.907,1545,4.007,1546,2.786,1547,3.592,1548,2.786,1549,2.013,1550,2.786,1551,2.786,1552,2.786,1553,2.786,1554,3.907,1555,2.786,1556,2.594,1557,2.786,1558,2.786,1559,3.907,1560,2.786,1561,2.132,1562,2.786,1563,3.592,1564,2.786,1565,2.786,1566,3.592,1567,2.786,1568,3.592,1569,3.907,1570,2.786,1571,5.481,1572,3.907,1573,5.039,1574,2.786,1575,2.786,1576,2.786,1577,3.592,1578,2.786,1579,5.82,1580,2.786,1581,2.786,1582,2.786,1583,3.907,1584,2.786,1585,3.907,1586,6.331,1587,7.37,1588,3.17,1589,5.961,1590,4.832,1591,3.356,1592,6.309,1593,6.491,1594,5.039,1595,6.331,1596,6.331,1597,4.832,1598,5.481,1599,2.786,1600,3.907,1601,2.482,1602,3.907,1603,2.482,1604,3.907,1605,1.574,1606,2.282,1607,1.913,1608,4.832,1609,2.282,1610,3.592,1611,3.907,1612,4.037,1613,4.708,1614,3.907,1615,4.832,1616,3.356,1617,2.482,1618,2.482,1619,2.482,1620,7.92,1621,2.482,1622,4.832,1623,2.482,1624,2.482,1625,2.482,1626,2.482,1627,3.907,1628,3.907,1629,2.482,1630,2.482,1631,5.961,1632,2.482,1633,1.574,1634,2.482,1635,4.708,1636,6.624,1637,2.482,1638,2.563,1639,2.482,1640,1.913,1641,2.482,1642,3.907,1643,3.592,1644,2.482,1645,1.396,1646,3.907,1647,2.482,1648,2.482,1649,2.482,1650,3.907,1651,2.482,1652,4.832,1653,4.473,1654,3.907,1655,1.828,1656,4.832,1657,5.481,1658,2.482,1659,2.482,1660,3.907,1661,4.832,1662,5.481,1663,3.907,1664,5.961,1665,2.482,1666,2.482,1667,3.907,1668,2.482,1669,1.913,1670,2.482,1671,2.482,1672,2.282,1673,1.754,1674,2.482,1675,2.482,1676,2.482,1677,2.482,1678,2.482,1679,4.832,1680,4.832,1681,2.482,1682,4.151,1683,3.907,1684,2.482,1685,2.132,1686,2.132,1687,3.907,1688,3.907,1689,2.482,1690,2.482,1691,2.482,1692,3.907,1693,2.482,1694,2.482,1695,2.482,1696,2.482,1697,2.482,1698,2.282,1699,1.913,1700,2.282,1701,3.356,1702,2.878,1703,2.282,1704,2.482,1705,2.482,1706,2.482,1707,1.828,1708,2.482,1709,3.354]],["title/injectables/BaseAuthenticationService.html",[670,2.11,1147,0.956]],["body/injectables/BaseAuthenticationService.html",[3,0.076,4,0.076,9,0.069,11,1.282,20,0.29,21,0.841,25,1.336,33,1.358,36,1.797,38,1.615,39,0.007,40,0.869,41,0.482,42,0.98,48,1.531,49,1.828,53,1.55,57,1.55,75,1.665,77,2.547,78,2.639,131,2.532,189,0.251,190,0.488,192,0.076,193,0.456,280,1.55,619,0.005,620,0.005,660,4.12,670,3.101,706,2.546,811,2.005,939,1.665,1046,4.212,1056,4.84,1060,0.839,1147,1.405,1149,2.104,1201,3.354,1214,2.409,1253,2.197,1256,2.149,1259,1.635,1439,2.074,1456,1.76,1477,2.746,1556,2.961,1710,4.078,1711,5.101,1712,6.435,1713,6.435,1714,6.435,1715,6.013,1716,5.736,1717,8.671,1718,6.392,1719,4.609,1720,6.392,1721,4.609,1722,5.752,1723,5.328,1724,4.305,1725,7.023,1726,5.752,1727,4.363,1728,5.328,1729,5.375,1730,4.746,1731,4.078,1732,4.746,1733,6.257,1734,4.746,1735,4.746,1736,5.752,1737,5.328,1738,6.84,1739,5.328,1740,5.328,1741,5.752,1742,5.328,1743,5.752,1744,5.328,1745,5.752,1746,5.752,1747,4.746,1748,4.254,1749,4.746,1750,3.113,1751,2.599,1752,3.659,1753,5.328,1754,4.746,1755,2.469,1756,5.328,1757,2.915,1758,4.363,1759,4.746,1760,4.746]],["title/classes/BaseMediaService.html",[193,0.409,1032,2.162]],["body/classes/BaseMediaService.html",[3,0.105,4,0.105,9,0.095,20,0.402,25,1.633,36,1.377,38,1.424,39,0.006,40,0.767,41,0.377,42,0.865,48,1.265,189,0.213,192,0.105,193,0.63,619,0.006,620,0.006,1032,3.884,1056,4.305,1060,1.16,1111,4.695,1439,1.945,1717,8.345,1761,6.032,1762,3.909,1763,5.636,1764,7.034,1765,7.365]],["title/injectables/BaseRepositoryFirebaseService.html",[1147,0.956,1766,3.915]],["body/injectables/BaseRepositoryFirebaseService.html",[3,0.052,4,0.052,9,0.047,11,0.869,15,1.193,20,0.197,21,0.64,25,1.017,28,2.065,33,1.034,36,1.597,38,1.575,39,0.007,40,0.848,41,0.417,42,0.956,48,1.514,53,2.433,55,2.476,57,2.048,60,0.695,64,3.522,70,2.552,72,1.263,75,2.919,91,1.457,112,4.323,116,2.738,138,1.81,186,4.373,189,0.247,190,0.331,192,0.052,193,0.309,204,1.094,272,1.673,273,1.426,280,1.05,308,1.87,320,2.613,326,2.361,434,2.478,447,4.62,619,0.004,620,0.004,689,1.827,716,2.838,720,2.926,721,1.81,722,6.271,723,2.926,782,2.369,800,2.763,809,1.467,828,3.672,905,1.239,912,1.393,924,1.758,936,2.578,968,2.205,1060,0.569,1079,2.68,1119,2.306,1135,2.68,1147,1.069,1149,1.426,1151,3.026,1153,2.541,1155,2.838,1160,2.418,1190,3.262,1194,2.963,1199,2.879,1200,4.135,1201,3.366,1202,3.282,1206,1.215,1214,2.418,1241,2.756,1253,2.903,1254,3.346,1255,2.838,1256,1.457,1258,1.457,1259,1.108,1260,4.198,1396,1.716,1397,4.092,1400,4.092,1431,2.838,1432,2.838,1436,4.755,1439,2.008,1444,2.418,1445,3.556,1448,3.692,1449,2.418,1452,2.418,1454,2.306,1456,1.193,1464,1.457,1465,1.702,1479,3.108,1556,2.254,1711,3.379,1754,3.216,1766,4.379,1767,6.651,1768,3.216,1769,4.763,1770,4.763,1771,7.451,1772,3.366,1773,3.509,1774,3.509,1775,4.763,1776,6.368,1777,5.215,1778,5.347,1779,2.763,1780,5.215,1781,5.347,1782,3.863,1783,3.61,1784,9.385,1785,7.04,1786,4.888,1787,3.125,1788,3.672,1789,5.347,1790,3.61,1791,3.125,1792,3.366,1793,1.761,1794,2.254,1795,2.569,1796,3.61,1797,4.246,1798,4.114,1799,2.187,1800,3.216,1801,2.957,1802,2.957,1803,3.61,1804,2.11,1805,3.61,1806,3.125,1807,3.191,1808,3.125,1809,2.926,1810,5.347,1811,3.61,1812,7.515,1813,4.763,1814,1.522,1815,4.763,1816,3.61,1817,2.926,1818,3.125,1819,3.125,1820,3.61,1821,2.763,1822,2.763,1823,2.957,1824,3.216,1825,3.216,1826,3.61,1827,3.61,1828,3.61,1829,3.61,1830,3.216,1831,3.216,1832,3.61,1833,5.347,1834,2.369,1835,3.61,1836,2.254,1837,2.957,1838,1.975,1839,2.11,1840,1.633,1841,2.763,1842,3.61,1843,2.187,1844,3.61,1845,2.763,1846,2.957,1847,2.957,1848,3.61,1849,3.216,1850,7.04,1851,3.61,1852,3.61,1853,3.61,1854,5.347,1855,3.61,1856,2.957,1857,3.61,1858,3.61,1859,3.61,1860,3.61,1861,3.61,1862,3.61,1863,3.61,1864,3.61,1865,6.368,1866,6.368,1867,2.187,1868,3.61,1869,6.368,1870,5.673,1871,5.347,1872,5.347,1873,3.61,1874,2.48,1875,3.61,1876,3.61,1877,3.61,1878,3.61,1879,3.61,1880,3.61,1881,3.61,1882,3.61,1883,3.61,1884,3.61,1885,3.61]],["title/injectables/BaseRepositoryHttpService.html",[1147,0.956,1886,3.454]],["body/injectables/BaseRepositoryHttpService.html",[3,0.058,4,0.058,9,0.052,11,0.979,20,0.222,25,1.109,33,1.128,36,1.534,38,1.587,39,0.007,40,0.854,41,0.42,42,0.963,48,1.534,53,2.293,55,2.41,57,2.458,60,0.728,64,3.564,68,3.851,70,3.01,72,2.039,75,2.641,91,3.31,112,4.354,116,2.741,123,3.094,189,0.254,190,0.372,192,0.058,193,0.348,205,0.915,270,3.19,272,2.702,273,2.302,280,1.183,308,2.757,320,2.164,326,2.574,375,0.962,619,0.004,620,0.004,716,4.354,720,3.19,723,5.194,784,2.668,788,1.714,790,3.07,809,1.331,823,3.984,828,2.793,852,5.194,905,1.395,912,1.315,924,1.707,936,2,968,2.404,1060,0.64,1079,2.079,1119,2.515,1135,2.922,1147,1.166,1149,1.606,1151,3.24,1153,2.771,1155,3.094,1158,3.112,1160,2.636,1190,3.451,1194,2.868,1199,2.636,1200,3.451,1202,3.005,1205,3.19,1206,1.369,1214,2.636,1253,2.404,1254,3.539,1255,3.094,1256,1.64,1258,1.64,1259,1.248,1260,4.456,1431,3.094,1432,3.094,1436,4.623,1439,2.054,1444,2.636,1445,3.31,1448,3.816,1449,2.636,1452,2.636,1454,2.515,1456,1.343,1464,1.64,1465,1.294,1479,2.574,1480,2.668,1485,3.532,1711,4.184,1748,4.511,1755,2.702,1767,6.467,1769,5.194,1770,5.194,1772,3.67,1773,3.826,1774,3.826,1775,5.194,1786,5.051,1787,3.407,1791,3.407,1792,3.67,1793,2.844,1794,3.139,1795,3.004,1797,4.207,1798,3.407,1804,3.407,1806,3.407,1807,2.922,1808,3.407,1809,3.19,1817,3.19,1818,3.407,1819,3.407,1836,2.458,1838,2.225,1839,2.376,1840,1.839,1843,2.463,1867,2.463,1886,4.213,1887,3.622,1888,4.229,1889,5.83,1890,5.83,1891,5.83,1892,5.83,1893,5.83,1894,4.775,1895,5.83,1896,3.112,1897,2.431,1898,4.352,1899,4.066,1900,4.066,1901,5.319,1902,3.094,1903,6.279,1904,4.066,1905,4.066,1906,5.83,1907,4.066,1908,4.066,1909,4.005,1910,5.83,1911,4.462,1912,3.532,1913,2.376,1914,2.297,1915,3.33,1916,3.112,1917,2.56,1918,2.56,1919,4.066,1920,4.066,1921,6.457,1922,2.463,1923,4.066,1924,2.793,1925,4.066,1926,2.56,1927,4.066,1928,3.33,1929,4.066,1930,2.793]],["title/injectables/BaseRepositoryLocalStorageService.html",[1147,0.956,1931,3.915]],["body/injectables/BaseRepositoryLocalStorageService.html",[3,0.057,4,0.057,9,0.052,11,0.962,20,0.427,21,0.689,25,1.095,33,0.773,36,1.609,38,1.578,39,0.007,40,0.849,41,0.43,42,0.958,46,2.138,48,1.547,53,2.503,55,2.372,60,0.726,64,3.669,68,3.254,70,2.885,72,2.362,75,1.8,77,1.646,78,1.705,112,4.329,116,2.794,138,2.004,140,4.717,189,0.243,190,0.366,192,0.057,193,0.342,204,0.556,236,1.617,272,1.853,273,1.579,280,1.163,320,2.742,326,2.543,375,1.853,394,1.458,619,0.004,620,0.004,689,1.444,716,3.057,720,3.151,723,5.259,809,1.322,811,1.519,823,2.336,905,1.371,912,1.184,924,1.772,936,2.687,968,2.375,1060,0.63,1079,2.408,1119,2.484,1135,2.887,1147,1.152,1149,1.579,1151,2.738,1153,2.738,1160,3.541,1190,2.669,1194,2.967,1199,1.808,1200,2.669,1202,2.061,1206,1.346,1214,2.604,1253,2.375,1254,3.209,1255,3.057,1256,1.613,1258,1.613,1259,1.227,1260,4.037,1311,3.057,1364,5.131,1369,4.161,1397,4.408,1400,4.408,1431,3.057,1432,3.057,1436,4.796,1439,2.035,1444,2.604,1445,3.471,1448,3.799,1449,2.604,1452,2.604,1454,2.484,1456,1.32,1464,1.613,1478,3.956,1479,2.543,1645,2.887,1755,2.669,1757,3.151,1767,6.708,1786,4.318,1791,3.366,1793,1.95,1794,2.428,1795,2.724,1797,3.815,1798,2.336,1799,2.422,1800,3.561,1801,3.274,1802,3.274,1804,2.336,1806,3.366,1808,3.366,1809,3.151,1817,3.151,1818,3.366,1836,2.428,1838,2.187,1839,2.336,1840,1.808,1914,2.258,1931,4.717,1932,5.122,1933,3.561,1934,5.76,1935,6.752,1936,8.157,1937,5.76,1938,6.752,1939,6.752,1940,5.76,1941,5.76,1942,6.752,1943,7.388,1944,3.997,1945,3.997,1946,3.997,1947,5.76,1948,3.997,1949,5.76,1950,3.997,1951,2.517,1952,3.997,1953,3.997,1954,5.76,1955,6.582,1956,5.76,1957,5.131,1958,3.997,1959,3.997,1960,3.997,1961,3.997,1962,3.997,1963,3.06,1964,3.561,1965,3.997,1966,2.746,1967,3.997,1968,3.997,1969,3.997,1970,3.997,1971,3.997,1972,6.015,1973,3.997,1974,3.997,1975,3.997,1976,3.997,1977,3.997,1978,6.752,1979,6.752,1980,3.997,1981,5.76,1982,5.76,1983,3.997,1984,3.997,1985,2.138,1986,5.76,1987,3.997,1988,3.997]],["title/injectables/BaseService.html",[1147,0.956,1427,3.009]],["body/injectables/BaseService.html",[3,0.077,4,0.077,9,0.07,11,1.297,20,0.294,25,1.345,33,1.368,36,1.749,38,1.788,39,0.007,40,0.963,41,0.473,42,1.085,48,1.588,60,0.728,189,0.263,190,0.494,192,0.077,193,0.461,280,1.567,320,3.113,619,0.005,620,0.005,809,1.509,905,1.849,912,1.571,916,1.919,924,1.452,968,2.917,1056,4.731,1060,0.848,1119,3.052,1135,3.546,1147,1.415,1149,2.128,1194,3.46,1206,1.814,1258,2.174,1259,1.654,1345,3.264,1427,4.454,1431,5.01,1432,3.755,1433,4.413,1436,3.871,1439,2.091,1444,3.199,1445,3.607,1448,3.846,1449,3.199,1452,3.199,1454,3.052,1456,1.78,1460,3.044,1462,2.436,1464,2.174,1561,6.046,1711,2.86,1793,4.362,1794,3.842,1795,3.677,1836,3.537,1840,2.436,1989,4.8,1990,5.388,1991,5.388,1992,5.388,1993,5.388,1994,5.388,1995,5.388,1996,5.388,1997,5.388,1998,5.388,1999,4.286,2000,5.388,2001,3.701,2002,4.413,2003,5.388,2004,4.124,2005,5.388,2006,5.388,2007,5.388,2008,5.388,2009,5.388]],["title/components/ChangePasswordModalComponent.html",[0,0.989,572,1.928]],["body/components/ChangePasswordModalComponent.html",[0,0.947,1,0.856,2,1.51,3,0.031,4,0.031,5,0.875,6,0.957,7,0.957,8,0.957,9,0.028,13,0.856,14,3.277,15,3.024,16,1.303,18,1.329,20,0.118,21,0.429,25,0.681,28,1.484,33,0.693,36,1.541,38,0.693,39,0.007,40,0.613,41,0.324,42,0.42,48,1.152,49,1.57,55,1.788,57,1.331,60,0.414,69,1.659,70,0.703,75,1.661,77,1.308,78,1.355,105,3.837,116,0.665,133,3.488,154,0.935,166,4.005,189,0.203,190,0.199,192,0.031,193,0.186,198,2.588,204,1.091,224,4.312,227,0.773,229,2.586,235,0.773,236,2.104,282,1.423,288,1.313,289,2.74,290,3.004,291,2.255,292,1.365,294,4.404,295,1.489,298,5.493,301,3.144,302,3.307,309,3.73,310,2.526,311,4.182,312,4.175,314,3.581,315,1.489,316,1.313,321,4.35,322,3.003,324,3.157,329,3.565,330,3.962,331,3.346,332,4.925,333,4.099,334,1.901,335,2.429,336,2.586,337,2.664,338,2.593,340,5.066,343,3.287,344,2.741,345,2.024,346,2.934,347,1.03,348,1.365,349,1.267,350,1.365,353,2.024,355,3.236,357,3.099,364,1.313,369,0.935,370,2.821,371,3.22,372,1.225,373,1.931,374,3.9,375,2.119,376,1.566,377,1.225,378,2.664,381,2.463,382,1.776,385,3.704,386,3.704,387,3.004,389,2.17,392,1.423,393,1.267,394,0.907,397,2.093,405,1.267,406,3.364,410,1.566,411,4.098,418,3.004,419,4.222,421,3.191,422,3.722,423,2.093,424,2.17,427,1.489,429,2.093,430,2.588,431,2.351,434,2.121,435,4.159,439,1.51,450,2.675,451,2.255,455,2.588,459,1.423,461,3.488,462,3.488,463,3.488,475,3.651,479,2.021,485,1.489,492,1.313,497,1.489,501,1.423,503,1.423,504,1.489,505,3.144,506,1.423,507,1.423,511,1.489,529,1.581,530,2.351,545,1.253,552,0.73,553,1.581,554,0.875,555,0.957,557,0.957,558,0.875,559,0.957,560,0.875,561,1.542,562,1.581,563,0.875,564,2.798,565,0.856,566,1.581,567,0.856,568,0.957,569,0.894,570,0.758,571,0.957,572,2.144,573,3.21,574,2.941,575,0.856,576,0.935,577,0.957,578,0.875,579,0.935,580,0.805,581,0.875,582,0.875,583,2.347,584,0.875,585,0.957,586,0.805,587,0.957,588,0.875,589,0.856,590,0.957,591,0.856,592,0.894,593,0.957,594,0.875,595,0.935,596,0.856,597,1.285,598,0.957,599,0.875,600,0.875,601,0.856,602,0.957,603,0.875,604,0.856,605,0.957,606,0.838,607,1.22,608,0.838,609,0.875,610,0.856,611,0.856,612,0.957,613,0.894,614,0.935,615,0.914,616,0.856,617,0.935,618,0.957,619,0.002,620,0.002,642,0.914,644,0.703,646,0.935,647,0.957,670,2.347,688,1.747,689,1.602,706,1.263,707,3.191,709,3.267,710,1.267,711,1.225,713,1.151,717,0.988,809,0.993,811,0.806,914,2.316,925,3.369,939,1.981,941,0.838,966,1.151,1005,1.489,1007,1.225,1008,1.566,1013,1.365,1014,4.107,1015,3.144,1016,2.46,1018,3.99,1020,3.84,1023,3.651,1026,2.255,1028,3.99,1029,2.675,1030,3.003,1036,1.931,1038,1.931,1048,1.931,1049,2.934,1054,1.365,1056,1.087,1059,3.346,1060,0.341,1075,1.659,1077,3.144,1079,0.773,1104,1.659,1116,0.856,1120,1.661,1123,1.776,1132,1.267,1359,0.875,1380,2.586,1407,1.365,1477,1.117,1707,1.423,1709,2.294,1817,1.96,1985,0.805,2010,7.434,2011,6.386,2012,4.078,2013,4.577,2014,4.577,2015,5.315,2016,5.885,2017,5.315,2018,3.582,2019,5.315,2020,5.243,2021,6.477,2022,6.673,2023,1.931,2024,3.559,2025,3.503,2026,3.651,2027,4.063,2028,3.749,2029,4.577,2030,4.068,2031,2.168,2032,4.577,2033,3.582,2034,2.168,2035,2.168,2036,2.168,2037,3.582,2038,2.168,2039,2.934,2040,2.168,2041,1.931,2042,1.931,2043,2.168,2044,2.168,2045,2.168,2046,2.168,2047,1.931,2048,2.741,2049,1.931,2050,0.957,2051,1.931,2052,2.168,2053,3.582,2054,2.168,2055,4.577,2056,3.582,2057,3.582,2058,2.168,2059,2.168,2060,1.776,2061,1.566,2062,2.168,2063,1.489,2064,1.931,2065,2.168,2066,2.168,2067,2.168,2068,2.168,2069,3.582,2070,2.168,2071,2.024,2072,2.46,2073,1.423,2074,1.225,2075,2.093,2076,2.168,2077,2.168,2078,3.503,2079,2.168,2080,2.168,2081,2.168,2082,2.168,2083,1.423,2084,1.365,2085,1.566,2086,2.168,2087,3.582,2088,2.586,2089,3.582,2090,1.659,2091,3.191,2092,2.168,2093,2.168,2094,2.168,2095,2.168,2096,2.168,2097,2.168,2098,5.191,2099,4.577,2100,7.012,2101,2.168,2102,2.168,2103,1.566,2104,3.582,2105,2.168,2106,2.168,2107,1.931,2108,3.582,2109,4.876,2110,3.582,2111,2.351,2112,2.934,2113,3.582,2114,3.582,2115,3.582,2116,3.582,2117,3.582,2118,4.577,2119,3.582,2120,3.582,2121,1.489,2122,5.191,2123,1.931,2124,2.168,2125,1.931,2126,3.503,2127,2.168,2128,1.566,2129,2.168,2130,1.659,2131,1.776,2132,1.566,2133,1.659,2134,3.582,2135,1.931,2136,2.588,2137,2.934,2138,1.776,2139,3.488,2140,1.267,2141,2.168,2142,2.168,2143,3.582,2144,3.582,2145,3.582,2146,3.582,2147,1.489,2148,2.168,2149,2.168,2150,3.749,2151,3.191,2152,1.931,2153,1.776,2154,1.776,2155,5.885,2156,3.191,2157,1.931,2158,1.659,2159,1.776,2160,1.659,2161,3.582,2162,1.776,2163,3.582,2164,2.168,2165,3.582,2166,1.931,2167,1.566,2168,1.566,2169,1.931,2170,1.931,2171,1.931,2172,1.776,2173,1.659,2174,1.931,2175,1.931,2176,1.776]],["title/components/ClickableArtistNamesComponent.html",[0,0.989,575,1.888]],["body/components/ClickableArtistNamesComponent.html",[0,1.268,1,1.338,2,2.15,3,0.048,4,0.048,5,1.367,6,1.496,7,1.496,8,1.496,9,0.044,11,1.227,13,1.338,14,3.447,15,3.186,16,1.855,18,1.892,20,0.278,21,0.61,25,0.97,28,1.653,33,0.986,34,2.775,35,3.853,36,1.665,38,0.986,39,0.007,40,0.83,41,0.429,42,0.599,48,1.053,49,1.749,55,1.818,57,1.483,60,0.599,70,1.988,72,2.144,77,2.197,78,2.276,93,2.775,108,2.593,143,2.556,154,1.461,166,3.739,189,0.177,190,0.31,191,1.232,192,0.048,193,0.29,198,2.448,224,4.209,259,2.223,273,1.338,279,2.775,281,2.327,288,4.656,289,3.771,290,2.223,292,2.133,310,1.61,311,1.698,312,3.011,321,4.111,322,2.881,324,2.889,326,1.496,329,4.831,330,5.079,335,2.706,336,2.881,337,2.556,338,1.653,343,1.532,347,2.423,348,2.133,352,2.133,354,2.133,355,3.016,357,2.057,372,2.881,374,2.991,375,2.162,377,3.854,378,1.698,379,3.018,381,1.57,386,2.98,389,2.052,394,0.858,397,2.98,398,3.346,405,1.98,409,2.775,412,4.211,429,3.583,431,4.801,439,2.15,447,4.023,448,3.502,450,3.583,455,2.448,459,2.223,461,2.223,462,2.223,463,2.223,479,1.496,490,3.902,501,2.223,502,2.448,503,3.346,504,2.327,511,2.327,529,2.251,534,2.448,539,3.018,548,5.462,552,1.14,553,2.251,554,1.367,555,1.496,557,1.496,558,1.367,559,1.496,560,1.367,561,2.546,562,2.251,563,1.367,564,3.394,565,1.338,566,2.251,567,1.338,568,1.496,569,1.397,570,1.185,571,1.496,572,1.367,573,1.496,574,1.04,575,2.694,576,3.878,577,1.496,578,1.367,579,1.461,580,1.257,581,1.367,582,1.367,583,3.011,584,1.367,585,1.496,586,1.257,587,1.496,588,1.367,589,1.338,590,1.496,591,1.338,592,1.397,593,1.496,594,1.367,595,1.461,596,1.338,597,1.722,598,1.496,599,1.367,600,1.367,601,1.338,602,1.496,603,1.367,604,1.338,605,1.496,606,1.31,607,1.634,608,1.31,609,1.367,610,1.338,611,1.338,612,1.496,613,1.397,614,1.461,615,1.428,616,1.338,617,1.461,618,1.496,619,0.003,620,0.003,689,1.565,706,0.935,732,3.521,811,0.762,824,4.176,827,3.011,901,0.011,912,0.817,914,2.253,916,0.919,920,5.883,921,7.426,922,6.94,923,2.775,924,0.937,925,3.562,926,3.502,927,4.211,928,5.462,929,1.914,930,4.542,931,6.077,932,3.16,933,5.021,934,3.902,935,1.98,936,1.162,937,5.462,938,5.991,939,1.593,940,5.462,941,1.972,942,5.462,943,5.462,944,6.077,945,3.018,946,6.077,947,3.018,948,3.018,949,3.018,950,4.542,951,5.462,952,3.018,966,2.706,967,3.684,969,2.593,992,2.556,1005,2.327,1026,3.21,1402,4.542,1415,3.018,1588,1.98,1655,5.044,2137,2.775,2150,4.176,2177,5.099,2178,6.821,2179,5.099,2180,3.388,2181,3.388,2182,3.388,2183,3.388,2184,3.388,2185,3.388,2186,3.388,2187,3.388,2188,3.388,2189,3.388,2190,3.388,2191,3.388,2192,3.388,2193,3.388,2194,5.099,2195,5.099,2196,5.099,2197,7.687,2198,2.775,2199,6.131,2200,6.821,2201,3.388,2202,3.388,2203,3.388,2204,3.388,2205,3.388,2206,3.388,2207,3.388,2208,3.388,2209,3.018,2210,2.775,2211,3.388,2212,5.099,2213,3.388,2214,2.593,2215,3.388,2216,3.388,2217,3.388,2218,3.388,2219,3.388,2220,3.388,2221,3.388,2222,3.388,2223,3.388,2224,3.388,2225,2.133,2226,3.388]],["title/interfaces/CollectionChange.html",[901,0.015,2227,3.454]],["body/interfaces/CollectionChange.html",[3,0.101,4,0.101,9,0.091,20,0.384,21,1.001,39,0.007,41,0.494,42,0.982,49,2.414,60,0.734,189,0.242,192,0.12,619,0.006,620,0.006,901,0.027,902,1.07,905,2.414,924,1.697,1060,1.108,1120,2.419,1439,1.789,1445,3.599,1840,3.182,2227,6.041,2228,4.833,2229,5.386,2230,6.127,2231,6.127,2232,6.127,2233,4.43,2234,5.764,2235,5.764]],["title/interfaces/Data.html",[901,0.015,1120,1.253]],["body/interfaces/Data.html",[3,0.057,4,0.057,9,0.051,11,0.954,20,0.216,21,0.685,33,0.767,39,0.007,41,0.293,48,1.397,53,1.153,55,2.367,57,2.497,60,0.608,64,3.035,68,2.24,70,2.531,72,2.35,75,2.439,77,1.133,78,1.695,91,2.711,116,2.815,123,2.104,138,1.987,171,3.968,189,0.253,190,0.363,192,0.112,193,0.339,204,1.235,205,1.931,236,1.887,270,2.169,272,1.837,273,1.565,280,1.153,320,2.494,326,1.75,383,3.468,394,1.004,619,0.004,620,0.004,689,0.848,706,1.094,716,3.038,720,2.169,721,1.987,723,4.697,783,1.884,788,1.671,790,2.361,809,1.571,823,2.317,853,3.757,901,0.024,902,0.87,905,1.36,912,1.402,916,1.075,924,1.653,936,1.964,1060,0.624,1079,2.042,1120,2.197,1147,1.145,1151,1.884,1153,1.884,1155,3.038,1160,3.039,1175,2.793,1187,2.24,1188,2.869,1189,1.987,1190,2.653,1194,2.839,1199,1.792,1200,2.653,1202,2.043,1203,2.495,1206,1.334,1232,2.793,1253,2.361,1254,2.721,1255,3.038,1256,1.599,1258,1.599,1259,1.217,1260,4.425,1280,3.689,1396,1.884,1407,2.495,1439,1.924,1444,1.792,1445,3.149,1448,2.967,1449,1.792,1452,1.792,1454,1.71,1456,1.309,1464,1.599,1465,1.262,1467,2.104,1473,3.103,1479,1.75,1485,2.401,1491,2.104,1709,2.869,1711,4.142,1772,2.495,1773,2.601,1774,2.601,1786,4.301,1787,2.317,1788,3.932,1791,2.317,1792,2.495,1793,1.934,1794,2.414,1795,2.31,1797,3.797,1798,3.346,1799,4.071,1804,2.317,1806,2.317,1807,3.912,1808,2.317,1809,2.169,1817,2.169,1818,2.317,1819,2.317,1836,2.414,1838,2.169,1839,2.317,1840,1.792,1843,2.401,1867,2.401,1874,2.723,1888,2.043,1897,1.414,1898,2.317,1901,2.495,1902,2.104,1909,2.723,1912,3.468,1913,2.317,1914,2.24,1917,2.495,1918,2.495,1922,2.401,1924,2.723,1926,2.495,1930,2.723,1951,2.495,1966,2.723,1985,2.494,2088,3.234,2236,2.723,2237,2.495,2238,2.723,2239,2.169,2240,1.75,2241,2.589,2242,2.864,2243,1.934,2244,2.601,2245,3.932,2246,2.317,2247,4.071,2248,4.41,2249,2.864,2250,3.368,2251,3.968,2252,4.855,2253,5.76,2254,2.601,2255,2.043,2256,3.689,2257,2.864,2258,2.864,2259,1.987,2260,2.043,2261,2.043,2262,2.24,2263,3.757,2264,4.136,2265,2.169,2266,2.864,2267,2.723,2268,2.864,2269,2.723,2270,2.864,2271,2.495,2272,2.864,2273,2.864,2274,4.077,2275,2.864,2276,2.864,2277,4.633,2278,2.864,2279,2.864,2280,3.927,2281,2.864,2282,3.566,2283,3.932,2284,2.864,2285,4.136,2286,2.864,2287,2.864,2288,2.723,2289,2.601,2290,2.601,2291,5.317,2292,2.723,2293,4.136,2294,3.757,2295,3.757,2296,2.601,2297,2.601,2298,4.136,2299,2.864,2300,2.864,2301,2.723,2302,2.864,2303,2.864,2304,2.864,2305,2.864,2306,2.864,2307,2.864]],["title/directives/DragDropDirective.html",[554,1.928,616,1.888]],["body/directives/DragDropDirective.html",[3,0.072,4,0.072,9,0.065,13,2,14,2.422,20,0.37,21,0.813,25,1.291,33,0.979,36,1.802,38,1.583,39,0.007,40,0.852,41,0.459,42,0.961,46,1.879,48,1.466,49,2.628,53,1.975,55,1.35,77,1.94,78,2.01,189,0.146,190,0.464,192,0.072,193,0.434,194,3.323,204,1.138,227,1.806,235,1.806,334,2.688,394,1.719,453,3.323,473,3.715,554,2.739,615,2.135,616,2.681,617,2.929,619,0.004,620,0.004,666,6.049,672,6.824,673,5.745,681,7.604,685,4.511,689,1.751,700,6.824,809,1.146,811,1.528,908,1.397,912,1.088,914,2.243,925,3.55,926,4.663,927,5.261,939,2.667,941,2.625,966,3.604,967,4.906,1116,2,1120,1.779,1160,2.29,1189,2.538,1345,4.113,1361,4.906,2308,8.62,2309,4.511,2310,7.66,2311,8.185,2312,8.185,2313,6.79,2314,6.79,2315,6.79,2316,7.66,2317,7.66,2318,7.66,2319,6.79,2320,6.79,2321,6.79,2322,6.79,2323,6.049,2324,5.064,2325,7.292,2326,6.274,2327,7.292,2328,6.79,2329,5.064,2330,5.064,2331,5.064,2332,6.79,2333,6.79,2334,6.79,2335,6.79,2336,6.79,2337,6.79,2338,6.79,2339,6.79,2340,9.239,2341,6.79,2342,6.79,2343,6.79,2344,6.79,2345,6.79,2346,5.064,2347,5.064,2348,7.66,2349,5.064,2350,6.79,2351,5.064,2352,5.064,2353,6.79,2354,6.79,2355,5.064,2356,4.511,2357,5.064,2358,5.064,2359,5.064,2360,7.66,2361,7.66,2362,7.66,2363,4.663,2364,6.79,2365,5.064,2366,5.064,2367,5.064,2368,5.064,2369,4.511,2370,4.511,2371,5.064,2372,5.064]],["title/pipes/DurationPipe.html",[1473,2.015,2373,3.454]],["body/pipes/DurationPipe.html",[3,0.096,4,0.096,9,0.087,11,1.615,13,2.65,25,1.276,36,1.255,38,1.298,39,0.007,40,0.91,41,0.343,42,0.788,48,1.152,60,0.737,78,2.755,189,0.194,190,0.615,192,0.096,193,0.575,204,1.293,338,3.274,375,1.923,545,2.843,619,0.005,620,0.005,809,1.534,912,1.456,1308,3.364,1310,5.979,1311,3.562,1473,3.427,1549,6.565,1698,5.497,1701,5.137,1702,5.334,2373,5.872,2374,4.849,2375,5.979,2376,8.127,2377,6.711,2378,6.657,2379,7.241,2380,6.711,2381,5.497,2382,5.979,2383,5.979,2384,5.979,2385,5.979,2386,5.979,2387,4.592,2388,5.979]],["title/components/EditProfileModalComponent.html",[0,0.989,578,1.928]],["body/components/EditProfileModalComponent.html",[0,1.19,1,0.977,2,1.682,3,0.035,4,0.035,5,0.998,6,1.092,7,1.092,8,1.092,9,0.032,11,0.96,12,2.213,13,0.977,14,3.333,15,3.096,16,1.451,18,1.48,20,0.135,21,0.477,25,0.758,27,2.785,28,2.643,33,0.771,36,1.524,38,0.969,39,0.007,40,0.702,41,0.363,42,0.588,48,1.158,49,1.368,53,2.217,55,1.063,56,2.914,57,1.16,60,0.552,70,1.293,72,1.753,75,1.246,78,0.732,94,2.929,116,0.759,120,1.698,131,1.896,152,1.72,154,1.067,166,2.925,171,1.946,189,0.22,190,0.227,192,0.035,193,0.212,204,1.195,205,1.76,227,1.422,229,3.091,235,1.422,236,1.615,267,1.787,282,1.623,291,3.155,309,3.508,310,3.371,311,3.38,312,3.364,314,2.253,315,1.698,321,1.275,324,1.575,332,3.146,333,3.146,334,2.117,343,2.266,345,1.397,347,1.896,349,1.445,350,1.557,353,2.832,355,2.371,357,2.32,370,2.66,371,3.69,374,3.29,375,1.361,377,2.832,378,3.38,381,2.665,405,1.445,411,3.686,422,4.044,423,3.941,434,2.323,439,1.682,442,1.623,453,1.623,454,2.203,465,1.698,473,1.353,479,1.761,480,3.053,506,1.623,507,1.623,510,2.025,529,1.761,530,2.617,545,1.395,550,2.203,552,0.832,553,1.761,554,0.998,555,1.092,557,1.092,558,0.998,559,1.092,560,0.998,561,1.653,562,1.761,563,0.998,564,2.977,565,0.977,566,1.761,567,0.977,568,1.092,569,1.02,570,0.865,571,1.092,572,2.022,573,2.213,574,1.538,575,0.977,576,1.067,577,1.092,578,2.32,579,3.183,580,3.529,581,0.998,582,0.998,583,2.539,584,0.998,585,1.092,586,0.918,587,1.092,588,0.998,589,0.977,590,1.092,591,0.977,592,2.067,593,1.092,594,0.998,595,1.067,596,0.977,597,1.408,598,1.092,599,0.998,600,0.998,601,0.977,602,1.092,603,0.998,604,0.977,605,1.092,606,0.956,607,1.336,608,0.956,609,0.998,610,0.977,611,0.977,612,1.092,613,1.02,614,1.067,615,1.043,616,0.977,617,1.067,618,1.092,619,0.003,620,0.003,642,1.043,644,0.802,646,1.067,647,1.092,689,1.772,706,2.159,709,3.251,710,1.445,713,2.117,719,2.203,738,3.36,807,1.623,809,1.286,811,1.517,908,2.373,924,1.057,925,3.125,936,1.368,966,2.117,1002,1.175,1003,1.698,1007,1.397,1008,1.787,1013,1.557,1014,4.42,1015,3.442,1016,2.739,1018,4.245,1020,4.155,1023,4.332,1026,2.511,1028,4.245,1029,2.929,1030,3.249,1031,3.442,1032,2.6,1054,1.557,1056,1.239,1057,1.239,1059,1.557,1060,0.389,1062,1.557,1067,2.025,1075,1.893,1077,2.739,1084,1.698,1100,1.698,1104,3.053,1106,3.267,1109,1.682,1111,4.152,1112,3.267,1113,3.621,1114,2.203,1115,1.787,1117,4.105,1119,2.162,1120,1.653,1131,3.267,1132,2.331,1151,1.896,1160,1.118,1188,1.239,1190,1.146,1199,1.118,1202,1.275,1214,2.266,1221,3.052,1239,2.511,1241,2.964,1250,1.312,1253,1.02,1359,0.998,1369,2.882,1380,2.832,1386,2.66,1396,1.175,1403,1.893,1491,1.312,1515,1.698,1655,1.623,1755,2.323,1757,2.182,1758,2.025,1763,2.617,1888,2.056,1911,3.836,1985,1.48,2011,1.893,2023,2.203,2024,3.764,2026,4.872,2027,4.297,2051,2.203,2061,1.787,2071,2.253,2072,2.739,2074,1.397,2075,2.331,2083,2.617,2085,4.155,2109,4.763,2121,1.698,2122,5.81,2123,2.203,2130,1.893,2131,2.025,2139,4.139,2147,1.698,2176,2.025,2292,1.698,2387,4.305,2389,6.785,2390,6.34,2391,5.75,2392,3.988,2393,3.988,2394,3.928,2395,5.012,2396,3.553,2397,2.203,2398,2.473,2399,2.473,2400,2.473,2401,2.473,2402,3.988,2403,2.473,2404,3.988,2405,3.988,2406,2.473,2407,2.473,2408,2.473,2409,2.025,2410,2.473,2411,2.203,2412,2.473,2413,1.787,2414,1.787,2415,2.025,2416,1.787,2417,2.025,2418,1.893,2419,2.203,2420,2.117,2421,2.025,2422,1.893,2423,1.893,2424,3.053,2425,1.893,2426,1.893,2427,1.893,2428,1.893,2429,1.893,2430,2.203,2431,3.836,2432,2.473,2433,2.025,2434,5.756,2435,5.012,2436,5.75,2437,1.557,2438,3.267,2439,5.75,2440,5.75,2441,5.75,2442,2.473,2443,3.988,2444,2.203,2445,3.988,2446,2.473,2447,2.473,2448,2.203,2449,2.473,2450,2.473,2451,5.161,2452,4.401,2453,3.821,2454,5.012,2455,2.473,2456,4.465,2457,5.012,2458,2.473,2459,5.012,2460,1.893,2461,2.025,2462,2.473,2463,2.473,2464,4.105,2465,2.473,2466,3.988,2467,2.473,2468,2.203,2469,1.787,2470,2.203,2471,2.025,2472,1.557,2473,1.698,2474,3.836,2475,2.473,2476,2.203,2477,3.553,2478,2.025,2479,2.473,2480,2.473,2481,2.025,2482,3.988,2483,2.473,2484,2.473,2485,1.397,2486,2.203,2487,2.473,2488,2.473,2489,2.473,2490,2.473,2491,2.473,2492,2.473,2493,3.988,2494,1.698,2495,2.473,2496,2.473,2497,2.473,2498,1.498,2499,3.267,2500,1.893,2501,2.473,2502,1.312,2503,2.473,2504,2.473,2505,1.893,2506,2.473,2507,2.473,2508,2.203,2509,2.473,2510,2.473,2511,2.473,2512,2.473,2513,3.988,2514,3.988,2515,3.988,2516,3.988,2517,3.988,2518,3.988,2519,3.988,2520,3.988,2521,3.988,2522,2.473,2523,2.203,2524,2.473,2525,3.267,2526,2.473,2527,2.473,2528,2.203,2529,2.473,2530,2.473,2531,2.473,2532,2.473,2533,2.473,2534,2.473,2535,2.473,2536,3.988,2537,2.473,2538,2.473,2539,2.473,2540,2.203,2541,2.473,2542,2.473,2543,5.012,2544,2.473,2545,2.473,2546,2.473]],["title/injectables/EnhancedAudioPlayerService.html",[734,2.896,1147,0.956]],["body/injectables/EnhancedAudioPlayerService.html",[3,0.065,4,0.065,9,0.059,20,0.344,25,1.2,28,2.758,33,1.22,36,1.793,38,1.72,39,0.007,40,0.926,41,0.455,42,1.044,46,1.688,48,1.631,49,3.098,60,0.491,77,1.3,78,1.347,189,0.252,190,0.417,192,0.065,193,0.389,197,3.72,204,1.088,229,2.634,272,2.108,273,1.796,280,1.323,375,1.493,570,3.378,607,2.545,619,0.004,620,0.004,689,1.759,733,4.773,734,3.822,736,4.929,803,3.124,805,2.569,809,1.388,825,2.786,912,1.522,932,3.252,1026,3.972,1060,0.716,1147,1.262,1149,1.796,1246,3.124,1259,1.396,1439,0.973,1465,1.448,1466,2.863,1483,3.725,1491,2.414,1519,3.481,1521,4.976,1523,5.621,1524,6.41,1525,6.733,1529,5.99,1530,6.41,1531,5.621,1532,6.41,1533,5.621,1538,5.621,1540,6.41,1541,6.972,1545,4.194,1547,5.168,1549,3.286,1556,3.3,1563,5.168,1566,5.168,1568,3.725,1573,6.41,1577,5.168,1579,3.725,1601,4.052,1605,2.569,1606,3.725,1607,3.124,1638,2.658,1894,3.725,2240,2.008,2494,3.124,2502,2.414,2547,6.954,2548,6.31,2549,6.31,2550,6.31,2551,4.052,2552,4.548,2553,4.548,2554,4.548,2555,4.548,2556,6.31,2557,4.548,2558,4.548,2559,4.548,2560,6.31,2561,4.548,2562,4.548,2563,4.548,2564,4.548,2565,4.548,2566,6.31,2567,4.548,2568,4.548,2569,4.548,2570,4.548,2571,2.658,2572,6.31,2573,3.725,2574,4.052,2575,4.548,2576,6.31,2577,4.548,2578,2.863,2579,4.548,2580,6.31,2581,4.548,2582,4.052,2583,4.548,2584,4.548,2585,4.548,2586,3.286,2587,3.481,2588,3.481,2589,4.548,2590,4.548,2591,4.548,2592,4.548,2593,4.052,2594,4.548,2595,4.548,2596,3.481,2597,4.548,2598,4.548]],["title/interfaces/EnrichedSong.html",[901,0.015,1545,2.11]],["body/interfaces/EnrichedSong.html",[3,0.107,4,0.107,9,0.096,20,0.407,21,1.036,39,0.006,41,0.382,42,1.016,60,0.712,189,0.216,192,0.107,607,2.437,619,0.006,620,0.006,901,0.024,902,1.134,904,2.154,932,4.848,1545,3.82,2599,5.709,2600,6.646,2601,7.459]],["title/interfaces/EnrichedSong-1.html",[394,1.01,901,0.013,1545,1.761]],["body/interfaces/EnrichedSong-1.html",[0,1.113,3,0.052,4,0.052,9,0.047,11,0.876,12,2.375,14,1.298,15,1.203,16,1.324,18,1.351,20,0.411,21,0.644,27,1.607,28,2.776,33,0.704,35,3.207,39,0.007,41,0.186,42,0.632,46,3.111,53,1.565,55,1.434,57,1.059,60,0.667,62,3.243,70,1.18,75,1.138,142,2.965,166,2.218,189,0.258,190,0.333,191,1.324,192,0.052,193,0.312,204,1.276,212,2.696,227,2.913,229,3.112,235,2.913,236,2.661,375,1.672,545,1.882,561,2.5,565,1.438,580,1.351,582,2.851,607,2.447,619,0.004,620,0.004,640,1.825,644,1.18,646,1.57,647,1.607,689,2,699,3.243,732,2.825,733,3.501,737,3.122,805,2.057,807,4.639,809,1.445,811,0.819,825,3.701,827,3.121,892,2.63,896,3.243,901,0.012,902,0.553,904,1.339,912,0.862,924,0.989,929,2.057,932,4.209,939,2.209,941,2.08,982,2.389,991,4.793,992,1.825,1007,2.057,1046,1.687,1055,2.205,1058,2.292,1060,0.573,1079,2.282,1081,3.243,1102,2.128,1120,1.41,1134,2.855,1143,2.786,1204,2.786,1216,4.199,1232,1.776,1253,1.501,1308,3.543,1359,3.382,1373,3.243,1374,2.389,1380,3.615,1386,4.621,1396,1.73,1518,2.5,1545,3.606,1556,1.535,1592,2.982,1633,2.057,1645,1.825,1653,4.45,1682,2.786,2024,3.396,2026,4.395,2027,3.259,2061,2.63,2071,3.039,2072,3.695,2073,2.389,2074,4.261,2075,3.144,2083,2.389,2084,3.387,2085,2.63,2109,2.128,2240,1.607,2434,5.685,2437,2.292,2448,3.243,2460,2.786,2481,4.406,2573,2.982,2578,3.387,2602,3.243,2603,2.773,2604,4.117,2605,6.399,2606,1.992,2607,4.199,2608,2.786,2609,3.641,2610,3.641,2611,1.992,2612,3.641,2613,3.641,2614,5.701,2615,2.786,2616,3.641,2617,2.63,2618,3.243,2619,3.243,2620,6.465,2621,3.243,2622,3.641,2623,3.641,2624,2.63,2625,2.389,2626,1.825,2627,1.992,2628,1.992,2629,3.641,2630,4.117,2631,3.641,2632,2.63,2633,3.243,2634,6.399,2635,5.701,2636,3.641,2637,3.641,2638,3.641,2639,5.38,2640,3.641,2641,3.641,2642,3.641,2643,7.894,2644,3.641,2645,3.641,2646,3.641,2647,3.641,2648,3.641,2649,3.243,2650,3.243,2651,3.641,2652,5.38,2653,3.641,2654,3.641,2655,2.389,2656,2.389,2657,3.641,2658,2.389,2659,2.63,2660,3.531,2661,3.641,2662,4.793,2663,3.243,2664,3.641,2665,3.641,2666,3.641,2667,3.641,2668,3.641,2669,4.793,2670,6.399,2671,2.982,2672,3.641,2673,3.641,2674,3.641,2675,4.793,2676,3.641,2677,3.641,2678,4.793,2679,5.38,2680,2.786,2681,3.641,2682,4.793,2683,1.825,2684,3.641,2685,3.641,2686,3.243,2687,3.243,2688,3.641,2689,5.38,2690,3.641,2691,4.028,2692,5.38,2693,5.38,2694,5.38,2695,5.38,2696,3.641,2697,3.887,2698,3.243,2699,1.932,2700,3.641,2701,2.63,2702,3.641,2703,3.641,2704,3.641,2705,6.297,2706,3.641,2707,3.641,2708,2.292,2709,3.641,2710,3.641,2711,3.641,2712,2.786]],["title/interfaces/EnrichedSong-2.html",[369,1.721,901,0.013,1545,1.761]],["body/interfaces/EnrichedSong-2.html",[3,0.08,4,0.08,9,0.073,20,0.306,21,0.87,28,1.822,39,0.007,41,0.287,42,0.854,55,2.149,60,0.628,72,2.544,116,1.725,142,2.605,143,2.817,189,0.246,190,0.515,192,0.104,193,0.481,194,3.688,204,1.227,227,2.004,229,1.892,235,2.004,236,2.394,280,1.635,375,2.017,561,2.37,607,2.618,619,0.005,620,0.005,732,3.56,736,3.175,809,1.575,825,3.211,827,3.764,901,0.018,902,0.854,904,1.81,932,5.011,992,3.645,1059,5.076,1060,0.885,1116,2.219,1134,3.86,1147,1.455,1259,1.725,1359,2.267,1386,2.983,1439,1.725,1465,1.789,1466,3.538,1474,4.603,1479,2.481,1491,3.86,1507,4.301,1515,3.86,1545,3.56,1556,2.37,1605,3.175,1645,2.817,1673,3.538,1814,3.814,2239,3.075,2282,3.86,2578,4.578,2655,4.773,2656,4.773,2658,4.773,2660,5.595,2713,3.86,2714,4.603,2715,5.007,2716,5.007,2717,5.007,2718,5.007,2719,3.538,2720,5.007,2721,5.007,2722,5.007,2723,5.007,2724,4.061,2725,4.301,2726,3.688,2727,5.007,2728,6.479,2729,6.479,2730,5.566,2731,5.007,2732,5.007,2733,3.538]],["title/interfaces/FirebaseArtist.html",[901,0.015,2734,3.915]],["body/interfaces/FirebaseArtist.html",[3,0.103,4,0.103,9,0.093,20,0.393,21,1.015,39,0.007,40,0.968,41,0.476,42,1.092,60,0.749,189,0.208,192,0.103,619,0.006,620,0.006,901,0.023,902,1.095,908,2.567,910,7.118,912,1.444,1069,8.286,1834,4.726,2734,6.943,2735,4.726,2736,6.416,2737,7.118]],["title/injectables/FirebaseAuthenticationService.html",[1147,0.956,2738,3.915]],["body/injectables/FirebaseAuthenticationService.html",[3,0.053,4,0.053,9,0.048,15,1.222,20,0.202,21,0.652,25,1.035,28,2.31,33,1.053,36,1.752,38,1.378,39,0.007,40,0.79,41,0.459,42,0.836,48,1.41,49,1.269,56,2.998,60,0.555,77,2.407,78,2.494,186,2.541,189,0.256,190,0.339,192,0.053,193,0.317,204,1.28,227,2.304,229,2.763,235,1.942,236,2.132,280,1.076,308,1.294,318,2.09,479,1.634,574,1.982,619,0.004,620,0.004,660,3.505,670,4.064,688,1.805,689,1.918,706,2.638,769,2.673,782,2.428,809,1.475,811,1.967,826,5.834,904,1.355,908,1.021,916,1.003,939,2.019,941,2.105,1046,3.301,1060,0.583,1079,3.066,1116,2.551,1120,0.97,1147,1.089,1149,1.461,1256,1.493,1259,1.136,1359,1.493,1362,5.834,1439,1.918,1446,5.432,1456,1.222,1462,1.673,1465,1.178,1467,2.889,1556,2.295,1645,3.238,1710,2.832,1711,4.639,1712,4.459,1713,4.459,1714,4.459,1715,4.944,1716,4.436,1718,5.452,1719,3.573,1720,5.811,1721,3.573,1722,4.459,1724,3.672,1726,5.291,1727,3.03,1729,4.167,1730,3.296,1731,2.832,1732,4.85,1734,3.296,1736,4.459,1738,4.459,1741,3.03,1743,3.03,1745,3.03,1746,3.03,1750,2.162,1751,1.805,1760,3.296,1771,7.313,1777,5.291,1779,2.832,1782,3.934,1821,2.832,1822,2.832,1823,3.03,1824,3.296,1825,3.296,1834,2.428,1841,2.832,1845,2.832,1846,3.03,1847,3.03,1870,3.296,1897,2.541,1985,2.644,2063,2.541,2084,2.329,2240,1.634,2460,2.832,2571,2.162,2738,4.459,2739,6.723,2740,6.459,2741,6.459,2742,5.452,2743,3.7,2744,3.7,2745,3.7,2746,3.301,2747,3.7,2748,3.7,2749,4.85,2750,3.433,2751,3.7,2752,3.7,2753,3.296,2754,3.296,2755,3.296,2756,3.296,2757,3.296,2758,3.296,2759,3.03,2760,2.241,2761,3.7,2762,3.7,2763,3.7,2764,3.7,2765,3.7,2766,2.832,2767,2.832,2768,3.7,2769,3.7,2770,3.296,2771,3.296,2772,3.7,2773,3.7,2774,3.7,2775,6.459,2776,6.459,2777,3.7,2778,3.296,2779,5.444,2780,5.444,2781,5.444,2782,6.459,2783,5.755,2784,5.755,2785,4.029,2786,6.459,2787,7.124,2788,5.387,2789,6.459,2790,6.459,2791,6.459,2792,5.444,2793,3.7,2794,3.7,2795,2.428,2796,4.85,2797,4.85,2798,3.296,2799,2.673,2800,3.7,2801,3.296,2802,3.7,2803,3.7,2804,3.296,2805,3.7,2806,3.7,2807,3.7,2808,3.7,2809,3.7,2810,3.7,2811,5.444,2812,3.7,2813,3.7,2814,3.296,2815,3.7,2816,3.7,2817,3.7,2818,3.7,2819,3.7,2820,3.7,2821,3.7,2822,3.7,2823,2.162,2824,3.7,2825,3.7,2826,2.329,2827,3.7,2828,3.7,2829,1.56,2830,4.85,2831,1.56,2832,3.7,2833,3.7,2834,3.7,2835,3.7,2836,5.444,2837,5.444,2838,3.7,2839,3.7,2840,3.03,2841,3.7,2842,3.7,2843,3.7,2844,3.7,2845,3.7]],["title/injectables/FirebaseCollectionSubscriptionService.html",[798,3.659,1147,0.956]],["body/injectables/FirebaseCollectionSubscriptionService.html",[3,0.068,4,0.068,9,0.061,11,1.14,15,1.565,20,0.258,21,0.777,25,1.234,33,1.255,36,1.68,38,1.54,39,0.007,40,0.829,41,0.451,42,0.935,46,1.758,48,1.367,49,2.732,53,1.378,60,0.71,72,1.657,77,2.116,78,1.922,122,2.375,189,0.273,190,0.434,192,0.068,193,0.406,204,1.226,212,4.318,236,1.823,280,1.378,561,1.241,597,1.33,607,1.263,619,0.004,620,0.004,689,2.053,706,1.307,782,3.109,798,4.967,800,7.123,801,4.689,809,1.454,811,1.938,825,2.092,826,3.88,827,2.092,905,1.625,924,1.193,1060,0.746,1147,1.298,1149,1.871,1151,3.085,1153,2.252,1232,2.311,1254,4.54,1256,1.911,1257,3.423,1259,1.454,1439,1.584,1445,1.911,1456,1.565,1462,2.142,1465,2.859,1605,2.677,1633,3.667,1645,2.375,1709,3.991,1711,2.514,1751,2.311,1777,6.063,1779,3.626,1780,7.056,1782,4.689,1821,3.626,1822,3.626,1823,3.88,1834,3.109,1840,2.142,1841,3.626,1845,3.626,1846,3.88,1847,3.88,1849,4.221,1985,1.758,2001,3.254,2227,4.689,2229,3.626,2230,3.254,2231,3.254,2232,4.458,2233,4.086,2234,5.316,2235,5.316,2283,3.254,2626,3.991,2846,8.118,2847,7.403,2848,7.403,2849,6.49,2850,8.002,2851,7.403,2852,7.403,2853,7.403,2854,7.403,2855,6.49,2856,6.49,2857,4.738,2858,4.738,2859,4.738,2860,4.738,2861,4.738,2862,4.738,2863,6.49,2864,6.49,2865,4.738,2866,6.49,2867,3.88,2868,3.88,2869,3.88,2870,3.88,2871,2.87,2872,4.738,2873,4.738,2874,4.738,2875,4.738,2876,4.738,2877,4.738,2878,4.738,2879,4.738,2880,4.738,2881,4.738,2882,4.738,2883,4.738,2884,4.738,2885,4.738,2886,4.738,2887,4.738,2888,4.738,2889,4.967,2890,6.49,2891,4.738,2892,4.738,2893,4.738,2894,4.738,2895,3.626,2896,4.738,2897,4.738,2898,4.738,2899,4.738,2900,4.738,2901,4.738,2902,4.738,2903,6.49,2904,4.738,2905,3.423,2906,4.738,2907,4.221,2908,4.738,2909,4.738,2910,4.738,2911,4.738]],["title/interfaces/FirebaseGroup.html",[901,0.015,2912,3.915]],["body/interfaces/FirebaseGroup.html",[3,0.108,4,0.108,9,0.098,20,0.413,21,1.045,39,0.006,40,0.984,41,0.388,60,0.716,192,0.108,619,0.006,620,0.006,901,0.024,902,1.152,2735,4.973,2912,7.152,2913,6.752]],["title/injectables/FirebaseMediaService.html",[1147,0.956,2914,3.915]],["body/injectables/FirebaseMediaService.html",[3,0.088,4,0.088,9,0.079,13,2.426,15,2.029,20,0.335,21,0.921,25,1.464,33,1.488,36,1.571,38,1.488,39,0.007,40,0.801,41,0.394,42,0.903,48,1.055,189,0.271,190,0.563,192,0.088,193,0.526,204,1.225,205,1.382,280,1.787,308,2.148,619,0.005,620,0.005,660,3.711,689,1.885,706,1.695,782,4.031,784,4.031,809,1.299,811,1.382,904,1.916,1032,3.984,1057,3.079,1060,0.967,1111,4.547,1147,1.539,1149,2.426,1259,1.885,1439,1.798,1446,3.721,1456,2.029,1462,2.778,1465,1.955,1711,3.26,1748,5.337,1749,5.472,1762,3.26,1763,5.051,1764,6.303,1779,4.701,1782,5.56,1821,4.701,1822,4.701,1841,4.701,1845,4.701,1897,2.997,1916,4.701,1985,2.28,2240,2.712,2471,5.031,2739,6.883,2914,6.303,2915,8.404,2916,7.696,2917,6.143,2918,6.143,2919,6.143,2920,6.143,2921,6.143,2922,7.696,2923,6.143,2924,3.59,2925,6.143,2926,6.143,2927,6.143,2928,4.438,2929,6.143,2930,5.031,2931,5.031,2932,6.143,2933,6.143,2934,6.143,2935,6.143,2936,6.143,2937,6.143,2938,6.143,2939,4.701,2940,6.143,2941,6.143,2942,6.143,2943,6.143,2944,6.143,2945,6.143]],["title/interfaces/FirebasePerson.html",[901,0.015,2946,3.915]],["body/interfaces/FirebasePerson.html",[3,0.099,4,0.099,9,0.089,20,0.378,21,0.991,39,0.007,40,0.956,41,0.493,42,1.118,60,0.777,189,0.2,192,0.099,592,3.786,619,0.005,620,0.005,706,2.534,901,0.022,902,1.053,912,1.42,1834,4.545,2735,4.545,2737,7.027,2823,5.366,2826,5.78,2946,6.783,2947,6.169,2948,8.18,2949,8.18]],["title/interfaces/FirebasePlaylist.html",[901,0.015,2950,3.915]],["body/interfaces/FirebasePlaylist.html",[3,0.101,4,0.101,9,0.091,20,0.384,21,1.002,39,0.007,40,0.961,41,0.489,42,0.982,60,0.772,189,0.204,192,0.101,545,3.23,619,0.006,620,0.006,901,0.023,902,1.071,908,2.548,1834,4.624,2735,4.624,2737,7.396,2950,6.854,2951,5.771,2952,5.594,2953,5.813,2954,6.06]],["title/interfaces/FirebaseSong.html",[901,0.015,2955,3.915]],["body/interfaces/FirebaseSong.html",[3,0.1,4,0.1,9,0.09,20,0.381,21,0.997,39,0.007,40,0.959,41,0.488,42,1.142,60,0.772,189,0.202,192,0.1,545,3.221,619,0.005,620,0.005,901,0.023,902,1.063,908,2.542,1612,6.044,1834,4.587,2735,4.587,2737,7.384,2955,6.821,2956,5.725,2957,6.326,2958,7.049]],["title/interfaces/FirebaseUser.html",[901,0.015,2767,3.659]],["body/interfaces/FirebaseUser.html",[3,0.095,4,0.095,9,0.086,20,0.364,21,0.969,39,0.007,40,0.944,41,0.502,42,1.064,56,3.58,60,0.788,192,0.095,619,0.005,620,0.005,901,0.021,902,1.014,908,2.502,914,2.88,924,1.667,2683,4.544,2735,4.376,2767,6.196,2788,5.95,2823,5.298,2959,5.104,2960,9.066,2961,4.309,2962,4.961,2963,9.066]],["title/components/FollowArtistButtonComponent.html",[0,0.989,581,1.928]],["body/components/FollowArtistButtonComponent.html",[0,1.399,1,1.582,2,2.432,3,0.057,4,0.057,5,1.616,6,1.769,7,1.769,8,1.769,9,0.052,11,1.388,12,2.985,13,1.582,14,3.497,15,3.233,16,2.099,18,2.141,20,0.218,21,0.691,25,1.097,27,3.265,28,2.647,33,1.116,36,1.703,38,1.116,39,0.007,40,0.816,41,0.401,42,0.677,46,1.487,48,1.346,49,2.319,55,1.068,60,0.655,77,2.461,78,2.19,105,2.192,154,1.728,189,0.226,190,0.367,192,0.057,193,0.343,204,0.94,212,3.389,227,1.429,229,2.832,235,1.429,236,1.62,289,2.065,309,2.742,312,3.265,324,2.67,335,2.126,336,2.264,337,2.008,338,1.955,343,2.609,347,1.904,354,2.522,374,2.815,375,1.6,381,1.857,385,2.341,386,2.341,388,2.522,393,2.341,405,2.341,406,3.588,416,3.067,430,2.895,435,3.786,439,2.432,450,2.341,529,2.547,545,1.401,552,1.349,553,2.547,554,1.616,555,1.769,557,1.769,558,1.616,559,1.769,560,1.616,561,2.597,562,2.547,563,1.616,564,3.604,565,1.582,566,2.547,567,1.582,568,1.769,569,1.652,570,1.401,571,1.769,572,1.616,573,1.769,574,1.23,575,1.582,576,1.728,577,1.769,578,1.616,579,1.728,580,1.487,581,2.984,582,3.591,583,3.265,584,1.616,585,1.769,586,1.487,587,1.769,588,1.616,589,1.582,590,1.769,591,1.582,592,1.652,593,1.769,594,1.616,595,1.728,596,1.582,597,1.899,598,1.769,599,1.616,600,1.616,601,1.582,602,1.769,603,1.616,604,1.582,605,1.769,606,1.549,607,1.802,608,1.549,609,1.616,610,1.582,611,1.582,612,1.769,613,1.652,614,1.728,615,1.689,616,1.582,617,1.728,618,1.769,619,0.004,620,0.004,644,1.299,689,1.928,709,3.485,711,2.264,713,2.126,809,0.676,811,1.298,918,1.771,925,3.428,939,2.551,941,2.231,966,3.062,1060,0.631,1116,1.582,1216,3.786,1253,1.652,1359,2.727,1380,3.259,2024,4.465,2071,2.264,2072,2.752,2073,2.629,2074,4.179,2075,2.341,2084,2.522,2571,2.341,2603,3.485,2606,2.192,2607,5.357,2611,3.699,2614,7.273,2620,5.537,2626,3.707,2627,2.192,2628,2.192,2632,2.895,2633,3.57,2635,6.589,2669,6.589,2671,3.282,2678,3.57,2682,6.023,2686,3.57,2687,3.57,2712,4.416,2964,8.251,2965,7.585,2966,2.895,2967,5.661,2968,4.725,2969,7.396,2970,4.725,2971,6.761,2972,3.57,2973,5.14,2974,4.007,2975,3.282,2976,3.282,2977,3.282,2978,3.57,2979,3.282,2980,4.007,2981,4.007,2982,4.007,2983,3.57,2984,3.57,2985,4.007,2986,4.007,2987,5.537,2988,4.007,2989,4.007,2990,5.769,2991,5.769,2992,4.007,2993,2.629,2994,5.769,2995,3.57]],["title/interfaces/Formats.html",[901,0.015,1292,2.332]],["body/interfaces/Formats.html",[3,0.078,4,0.078,9,0.07,20,0.295,21,0.85,33,1.047,39,0.007,40,0.908,41,0.446,60,0.78,189,0.259,190,0.496,192,0.135,193,0.464,204,0.987,205,1.963,308,1.894,324,3.446,355,3.598,357,3.521,619,0.005,620,0.005,655,3.544,660,2.391,689,1.798,717,2.555,781,2.963,783,2.574,788,2.284,790,2.233,809,1.337,811,1.218,901,0.03,902,0.823,904,1.348,912,1.563,916,1.469,917,2.893,918,2.841,919,2.946,924,0.996,1032,3.21,1057,2.715,1060,0.853,1105,4.203,1111,2.715,1292,4.101,1439,1.159,1456,1.789,1462,2.449,1465,1.724,1762,2.874,1897,1.932,2050,2.391,2241,3.21,2243,2.642,2250,2.715,2251,3.864,2255,2.792,2256,2.715,2259,2.715,2260,2.792,2261,2.792,2274,2.715,2420,4.631,2829,2.284,2831,2.284,2924,3.165,2996,3.165,2997,3.06,2998,3.884,2999,3.06,3000,3.281,3001,3.281,3002,3.281,3003,3.281,3004,5.286,3005,5.286,3006,3.281,3007,2.284,3008,5.286,3009,5.059,3010,3.281,3011,3.281,3012,3.06,3013,3.281,3014,3.281,3015,3.281,3016,3.281,3017,3.281,3018,3.165,3019,3.281,3020,3.281,3021,3.281]],["title/interfaces/Group.html",[901,0.015,2140,2.794]],["body/interfaces/Group.html",[3,0.106,4,0.106,9,0.096,20,0.404,21,1.031,39,0.006,40,0.949,41,0.441,42,1.012,60,0.731,189,0.214,192,0.106,592,3.758,619,0.006,620,0.006,901,0.024,902,1.126,904,2.145,905,3.127,915,4.328,2140,5.036,3022,6.598,3023,5.669,3024,7.406]],["title/modules/HomePageModule.html",[621,1.494,3025,3.659]],["body/modules/HomePageModule.html",[3,0.096,4,0.096,9,0.086,39,0.007,47,4.055,189,0.281,190,0.613,192,0.096,193,0.573,552,2.253,586,3.508,619,0.005,620,0.005,621,2.092,623,2.535,624,3.266,625,4.634,626,3.553,627,4.183,628,2.643,633,4.307,634,3.553,635,3.027,637,3.204,638,3.274,639,4.44,640,3.355,641,4.585,642,2.822,643,4.307,644,2.17,645,3.912,646,2.887,647,2.955,648,3.782,650,4.055,731,4.872,787,7.229,788,2.822,1145,4.393,3025,7.481,3026,5.964,3027,5.964,3028,5.964,3029,6.829,3030,6.694,3031,5.964]],["title/modules/HomePageRoutingModule.html",[621,1.494,3029,3.454]],["body/modules/HomePageRoutingModule.html",[0,1.521,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,586,3.185,619,0.006,620,0.006,623,2.786,628,2.904,637,2.904,638,3.462,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155,3029,6.2,3031,6.552,3032,7.354]],["title/interfaces/IArtistsRepository.html",[901,0.015,1434,3.659]],["body/interfaces/IArtistsRepository.html",[3,0.078,4,0.078,9,0.071,20,0.298,25,1.358,36,1.734,38,1.794,39,0.007,40,0.976,41,0.474,42,1.089,48,1.593,53,2.314,55,2.393,60,0.777,64,3.609,72,1.912,116,1.678,138,2.74,142,2.534,143,4.228,152,3.432,189,0.23,192,0.078,270,2.991,272,2.534,273,2.821,308,1.912,561,1.433,619,0.005,620,0.005,720,2.991,901,0.018,902,0.831,904,1.778,909,6.089,912,1.503,935,4.174,994,5.85,1060,0.861,1199,3.23,1214,2.472,1216,5.536,1232,2.667,1257,3.95,1397,4.184,1429,5.85,1430,6.364,1434,5.467,1439,2.095,1440,5.85,1464,2.206,1479,3.154,1480,4.688,1496,3.442,1561,4.184,1655,3.588,1797,4.766,1817,2.991,1831,7.516,1836,3.354,2620,6.909,2699,3.791,3033,8.356,3034,3.312,3035,7.143,3036,7.143,3037,7.143,3038,7.143,3039,7.143,3040,7.143,3041,7.143,3042,5.892,3043,4.871,3044,7.143,3045,4.871,3046,4.184,3047,7.143,3048,4.478,3049,7.143,3050,5.467,3051,7.143,3052,4.871,3053,7.143,3054,4.871,3055,7.143,3056,5.467,3057,4.871,3058,5.467,3059,4.184,3060,5.467,3061,5.467,3062,5.467,3063,4.184,3064,5.467]],["title/interfaces/IArtistsService.html",[901,0.015,1458,3.659]],["body/interfaces/IArtistsService.html",[3,0.104,4,0.104,9,0.094,20,0.395,25,1.619,36,1.356,38,1.403,39,0.007,40,0.755,41,0.371,42,0.851,48,1.245,60,0.704,189,0.261,192,0.104,308,2.536,561,1.9,619,0.006,620,0.006,901,0.023,902,1.103,904,2.119,935,4.238,1060,1.142,1257,5.24,1429,6.971,1439,1.933,1440,6.971,1458,6.514,1460,4.097,1999,5.473,3065,7.583,3066,4.759,3067,5.24]],["title/interfaces/IAuthMapping.html",[901,0.015,1724,2.464]],["body/interfaces/IAuthMapping.html",[3,0.097,4,0.097,9,0.087,20,0.368,25,1.55,36,1.742,38,1.802,39,0.007,40,0.97,41,0.477,42,1.094,48,1.6,129,4.087,189,0.253,192,0.097,619,0.005,620,0.005,706,2.512,901,0.022,902,1.026,1109,3.694,1719,5.35,1721,5.35,1724,4.202,1751,3.291,2746,4.318,2750,4.214,2760,4.087,3068,8.436,3069,5.163,3070,4.247,3071,5.525,3072,4.247,3073,5.525,3074,4.247,3075,6.01,3076,7.263,3077,4.247,3078,5.525,3079,4.247,3080,5.525,3081,6.746,3082,6.746,3083,6.746,3084,6.746,3085,6.746,3086,6.746]],["title/interfaces/IAuthentication.html",[901,0.015,1748,2.896]],["body/interfaces/IAuthentication.html",[3,0.101,4,0.101,9,0.091,20,0.386,25,1.597,36,1.766,38,1.624,39,0.007,40,0.874,41,0.429,42,0.986,48,1.622,189,0.205,192,0.101,619,0.006,620,0.006,901,0.023,902,1.077,1060,1.116,1439,2.02,1556,2.987,1718,6.848,1719,5.509,1720,6.848,1721,5.509,1729,5.422,1731,5.422,1733,6.312,1735,6.312,1748,5.086,3087,6.312,3088,7.085,3089,7.085,3090,7.085,3091,7.085,3092,7.085,3093,7.085,3094,7.085,3095,7.085,3096,7.085,3097,7.085]],["title/interfaces/IBaseMapping.html",[901,0.015,1254,2.272]],["body/interfaces/IBaseMapping.html",[3,0.091,4,0.091,9,0.082,20,0.346,25,1.493,36,1.768,38,1.829,39,0.007,40,0.985,41,0.484,42,1.11,48,1.624,189,0.246,192,0.091,320,2.355,619,0.005,620,0.005,901,0.02,902,0.965,905,2.177,912,1.516,1060,0.999,1120,2.504,1161,5.673,1162,5.673,1163,5.673,1164,5.673,1165,5.673,1170,5.673,1171,5.673,1172,4.584,1181,4.584,1184,4.584,1193,4.584,1194,3.102,1206,2.643,1207,4.584,1243,4.856,1249,4.856,1254,3.732,1258,2.559,1276,4.167,1439,1.357,1445,3.764,1840,2.869,3069,4.856,3071,5.196,3073,5.196,3078,5.196,3080,5.196,3098,6.016,3099,5.652,3100,5.652,3101,6.344,3102,6.344,3103,5.652,3104,6.344,3105,6.344,3106,6.344,3107,6.344,3108,6.344,3109,6.344,3110,6.344]],["title/interfaces/IBaseRepository.html",[901,0.015,1836,2.015]],["body/interfaces/IBaseRepository.html",[3,0.087,4,0.087,9,0.078,20,0.33,25,1.451,36,1.689,38,1.747,39,0.007,40,0.941,41,0.462,42,1.061,48,1.551,60,0.769,189,0.253,192,0.125,320,2.248,597,1.701,619,0.005,620,0.005,901,0.028,902,0.921,905,2.078,912,1.518,924,1.535,968,3.145,1060,0.954,1119,3.29,1135,3.823,1194,3.189,1206,2.039,1258,2.444,1431,4.049,1432,4.049,1439,2.111,1444,3.776,1445,3.821,1448,3.989,1449,3.776,1452,3.776,1454,3.602,1793,4.074,1794,3.696,1795,3.645,1836,3.521,1840,2.739,2871,3.669,3034,3.669,3045,5.396,3054,5.396,3098,5.807,3111,6.057,3112,6.057,3113,6.057,3114,5.239,3115,4.636,3116,4.636]],["title/interfaces/IBaseRepository-1.html",[394,1.01,901,0.013,1836,1.682]],["body/interfaces/IBaseRepository-1.html",[3,0.087,4,0.087,9,0.078,20,0.33,25,1.451,36,1.689,38,1.747,39,0.007,40,0.941,41,0.462,42,1.061,48,1.551,60,0.769,189,0.253,192,0.125,320,2.248,597,1.701,619,0.005,620,0.005,901,0.028,902,0.921,905,2.078,912,1.518,924,1.535,968,3.145,1060,0.954,1119,3.29,1135,3.823,1194,3.189,1206,2.039,1258,2.444,1431,4.049,1432,4.049,1439,2.111,1444,3.776,1445,3.821,1448,3.989,1449,3.776,1452,3.776,1454,3.602,1793,4.074,1794,3.696,1795,3.645,1836,3.521,1840,2.739,2871,3.669,3034,3.669,3043,5.396,3052,5.396,3098,5.807,3114,5.239,3115,4.636,3116,4.636,3117,6.057,3118,6.057,3119,6.057]],["title/interfaces/IBaseService.html",[901,0.015,1999,2.896]],["body/interfaces/IBaseService.html",[3,0.088,4,0.088,9,0.079,20,0.333,25,1.459,36,1.754,38,1.788,39,0.007,40,0.963,41,0.473,42,1.085,48,1.611,60,0.745,189,0.242,192,0.088,320,2.848,619,0.005,620,0.005,901,0.02,902,0.93,912,1.562,924,1.542,968,3.164,1060,0.963,1119,3.31,1135,3.846,1194,3.363,1206,2.058,1258,2.467,1431,5.036,1432,4.072,1439,2.107,1444,3.47,1445,3.73,1448,3.883,1449,3.47,1452,3.47,1454,3.31,1464,2.467,1561,6.419,1793,4.291,1794,3.536,1795,3.548,1999,4.648,2001,4.199,3066,4.012,3067,4.417,3120,8.453,3121,5.447,3122,5.447,3123,5.007,3124,5.007,3125,5.007,3126,5.447]],["title/interfaces/ICollectionSubscription.html",[901,0.015,2233,3.009]],["body/interfaces/ICollectionSubscription.html",[3,0.1,4,0.1,9,0.09,20,0.382,25,1.586,36,1.56,38,1.613,39,0.007,40,0.868,41,0.456,42,0.979,48,1.432,49,2.862,60,0.752,189,0.241,192,0.119,619,0.006,620,0.006,901,0.027,902,1.066,905,2.405,924,1.288,1060,1.104,1120,1.836,1439,1.905,1445,2.828,1633,4.713,1780,6.832,1840,3.169,2227,5.064,2228,6.117,2229,5.364,2230,4.814,2231,4.814,2232,4.814,2233,5.251,2234,6.832,2235,6.832,2850,7.432,3127,7.009,3128,7.009]],["title/interfaces/IPlaylistsRepository.html",[901,0.015,3129,3.659]],["body/interfaces/IPlaylistsRepository.html",[3,0.108,4,0.108,9,0.097,39,0.007,189,0.252,192,0.108,308,2.639,597,2.119,619,0.006,620,0.006,901,0.024,902,1.147,904,2.168,1464,3.044,1836,3.872,2871,4.571,3034,4.571,3129,6.667,3130,6.722]],["title/interfaces/IPlaylistsService.html",[901,0.015,3131,3.659]],["body/interfaces/IPlaylistsService.html",[3,0.094,4,0.094,9,0.085,20,0.359,25,1.529,36,1.689,38,1.747,39,0.007,40,0.94,41,0.462,42,1.06,48,1.551,60,0.778,189,0.251,192,0.094,308,2.306,597,1.851,619,0.005,620,0.005,901,0.021,902,1.002,904,2.001,1025,6.585,1060,1.038,1439,2.074,1460,3.725,1999,5.255,2871,3.994,3042,6.181,3066,4.326,3067,4.763,3123,5.4,3124,5.4,3125,5.4,3131,6.153,3132,8.249,3133,6.585,3134,7.163,3135,7.163,3136,7.163,3137,4.698,3138,7.163,3139,5.522,3140,7.163,3141,7.163]],["title/interfaces/ISongsRepository.html",[901,0.015,3142,3.454]],["body/interfaces/ISongsRepository.html",[3,0.098,4,0.098,9,0.089,20,0.374,25,1.566,36,1.54,38,1.593,39,0.007,40,0.857,41,0.421,42,1.075,48,1.414,53,1.996,57,1.996,60,0.74,189,0.255,192,0.098,308,2.4,607,1.829,619,0.005,620,0.005,901,0.022,902,1.043,904,2.05,924,1.261,1060,1.08,1119,3.807,1250,4.858,1439,2.003,1448,3.897,1454,3.553,1464,2.768,1477,3.537,1605,3.876,1638,4.01,1836,3.721,2262,3.876,3034,4.156,3046,5.251,3048,5.62,3137,4.01,3142,5.951,3143,7.863,3144,6.746,3145,5.251,3146,6.113,3147,6.861,3148,6.861,3149,6.861]],["title/interfaces/ISongsService.html",[901,0.015,3150,3.454]],["body/interfaces/ISongsService.html",[3,0.104,4,0.104,9,0.094,20,0.395,25,1.619,36,1.356,38,1.403,39,0.007,40,0.755,41,0.371,42,0.851,48,1.245,60,0.704,189,0.261,192,0.104,308,2.536,607,1.933,619,0.006,620,0.006,901,0.023,902,1.103,904,2.119,1060,1.142,1439,1.933,1460,4.097,1605,4.097,1999,5.473,3066,4.759,3067,5.24,3137,4.238,3144,6.971,3145,6.514,3150,6.15,3151,7.583]],["title/interfaces/IStrapiAuthentication.html",[901,0.015,2241,2.162]],["body/interfaces/IStrapiAuthentication.html",[3,0.106,4,0.106,9,0.095,20,0.403,25,1.636,36,1.381,39,0.007,48,1.268,60,0.575,189,0.249,192,0.106,619,0.006,620,0.006,901,0.024,902,1.123,904,2.142,1060,1.163,1079,3.068,1439,1.58,1748,5.514,2241,3.89,2243,3.603,2742,6.967,3152,7.664,3153,6.58,3154,7.385,3155,7.385]],["title/interfaces/ITasksService.html",[901,0.015,3156,3.915]],["body/interfaces/ITasksService.html",[3,0.107,4,0.107,9,0.097,39,0.007,189,0.25,192,0.107,273,2.954,308,2.616,619,0.006,620,0.006,901,0.024,902,1.137,904,2.158,936,2.567,1396,3.556,1460,4.226,1638,4.372,1999,5.543,2262,4.226,3066,4.909,3156,7.099,3157,6.665,3158,5.725,3159,7.481]],["title/interfaces/IUserMapping.html",[901,0.015,3160,3.915]],["body/interfaces/IUserMapping.html",[3,0.09,4,0.09,9,0.081,20,0.343,25,1.487,36,1.766,38,1.826,39,0.007,40,0.983,41,0.483,42,1.109,48,1.622,189,0.226,192,0.09,320,2.337,619,0.005,620,0.005,706,2.719,901,0.02,902,0.958,912,1.542,1120,2.474,1161,5.648,1162,5.648,1163,5.648,1164,5.648,1165,5.648,1170,5.648,1171,5.648,1172,5.648,1181,5.648,1184,5.648,1193,5.648,1194,3.092,1206,2.861,1207,5.648,1250,4.511,1258,2.541,1276,4.511,1751,3.073,3069,4.82,3071,5.159,3073,5.159,3075,5.611,3078,5.159,3080,5.159,3099,5.611,3100,5.611,3160,6.402,3161,7.816,3162,7.817,3163,7.817]],["title/interfaces/IUserRepository.html",[901,0.015,3164,3.659]],["body/interfaces/IUserRepository.html",[3,0.084,4,0.084,9,0.076,20,0.32,25,1.422,36,1.76,38,1.82,39,0.007,40,0.98,41,0.481,42,1.105,48,1.616,56,2.317,60,0.786,189,0.238,192,0.084,308,2.052,582,3.016,619,0.005,620,0.005,706,1.619,901,0.019,902,0.892,904,1.861,924,1.078,1060,0.924,1250,4.367,1439,2.11,1464,2.367,1751,2.862,1836,3.469,2451,6.297,2680,5.721,2766,5.721,3034,3.554,3046,4.49,3048,4.805,3137,5.346,3139,6.283,3161,7.783,3164,5.721,3165,6.123,3166,6.123,3167,6.123,3168,6.123,3169,6.123,3170,6.123,3171,5.866,3172,6.123,3173,7.493,3174,6.123,3175,5.866,3176,6.123,3177,5.866,3178,6.123,3179,6.123,3180,5.866,3181,6.123,3182,5.866,3183,6.123,3184,5.866]],["title/interfaces/IUserService.html",[901,0.015,3185,3.659]],["body/interfaces/IUserService.html",[3,0.084,4,0.084,9,0.076,20,0.32,25,1.422,36,1.76,38,1.82,39,0.007,40,0.98,41,0.481,42,1.105,48,1.616,56,2.317,60,0.786,189,0.238,192,0.084,308,2.052,582,3.016,619,0.005,620,0.005,706,1.619,901,0.019,902,0.892,904,1.861,924,1.078,1060,0.924,1250,4.367,1439,2.11,1460,3.314,1751,2.862,1999,4.984,2451,6.297,2680,5.721,2766,5.721,3066,3.85,3067,4.239,3121,5.226,3122,5.226,3123,4.805,3124,4.805,3125,4.805,3126,5.226,3137,5.346,3139,6.283,3165,6.123,3166,6.123,3167,6.123,3168,6.123,3169,6.123,3170,6.123,3172,6.123,3173,7.493,3174,6.123,3176,6.123,3178,6.123,3179,6.123,3181,6.123,3183,6.123,3185,5.721,3186,8.466,3187,5.866]],["title/injectables/JsonServerRepositoryService.html",[1147,0.956,3188,3.659]],["body/injectables/JsonServerRepositoryService.html",[3,0.055,4,0.055,9,0.05,20,0.21,25,1.066,33,1.084,36,1.506,38,1.557,39,0.007,40,0.838,41,0.412,42,0.945,48,1.463,53,1.922,55,2.543,57,2.244,60,0.716,64,3.32,68,3.734,70,2.695,72,1.96,75,2.516,77,1.1,78,1.14,91,3.436,112,4.273,116,2.708,123,2.975,137,2.107,138,2.809,159,2.782,172,6.737,189,0.255,190,0.353,192,0.08,193,0.33,197,1.83,205,0.866,270,4.66,272,3.364,273,2.867,280,1.12,308,1.96,320,2.694,326,2.475,394,1.838,434,1.784,619,0.004,620,0.004,716,4.52,718,3.153,720,2.107,723,4.891,784,2.527,788,1.623,790,2.993,809,1.466,814,7.041,823,4.243,828,2.644,901,0.012,904,1.395,905,1.321,912,1.448,924,1.596,936,1.923,968,2.311,1060,0.606,1079,2.357,1119,2.418,1120,1.009,1135,2.809,1147,1.121,1149,1.52,1151,3.451,1153,2.664,1155,3.508,1160,2.535,1179,4.05,1188,2.809,1190,3.063,1194,2.807,1199,2.535,1200,3.364,1202,2.889,1205,3.067,1206,1.296,1209,3.678,1252,4.05,1253,2.993,1254,3.451,1255,2.975,1256,1.553,1258,1.553,1259,1.182,1260,4.151,1276,2.043,1431,2.975,1432,2.975,1436,2.107,1439,2.006,1444,2.535,1445,3.353,1446,4.674,1448,3.555,1449,1.741,1452,1.741,1454,2.418,1456,1.272,1464,1.553,1465,1.225,1479,1.7,1480,2.527,1485,2.332,1748,4.398,1786,4.857,1787,3.276,1791,2.25,1792,2.424,1793,2.735,1794,3.061,1795,2.929,1797,3.734,1798,4.243,1799,4.674,1804,3.276,1806,2.25,1807,3.313,1808,2.25,1809,2.107,1817,3.067,1818,3.276,1819,3.276,1836,1.623,1838,2.107,1839,2.25,1840,1.741,1843,2.332,1867,2.332,1886,6.374,1888,2.889,1896,2.947,1897,2.589,1898,4.243,1901,3.529,1902,2.975,1903,5.905,1913,2.25,1914,2.175,1915,3.153,1916,2.947,1917,2.424,1918,2.424,1921,5.946,1926,2.424,1928,3.153,1951,3.529,2237,2.424,2244,2.527,2246,2.25,2262,4.102,2263,4.337,2280,2.25,2289,2.527,2290,2.527,2294,2.527,2296,2.527,2799,4.775,3188,4.29,3189,4.591,3190,4.994,3191,4.994,3192,4.994,3193,3.85,3194,3.85,3195,4.994,3196,3.85,3197,5.888,3198,3.85,3199,4.994,3200,4.994,3201,3.85,3202,3.85,3203,3.43,3204,3.43,3205,3.153,3206,3.43,3207,3.43,3208,3.43,3209,3.43,3210,3.43,3211,3.43,3212,4.994,3213,3.43,3214,3.43,3215,3.43,3216,4.994,3217,3.43,3218,3.43,3219,3.43,3220,4.994,3221,3.43,3222,3.43,3223,3.43,3224,3.43,3225,3.43,3226,3.43,3227,3.43]],["title/injectables/LanguageService.html",[669,3.137,1147,0.956]],["body/injectables/LanguageService.html",[3,0.089,4,0.089,9,0.08,20,0.339,21,0.927,25,1.473,33,1.201,36,1.76,38,1.633,39,0.007,40,0.879,41,0.465,42,0.991,48,1.519,49,2.897,60,0.76,72,2.171,77,2.214,78,2.294,189,0.224,190,0.569,192,0.089,193,0.532,194,4.074,204,1.077,280,1.806,619,0.005,620,0.005,646,2.678,647,2.741,663,6.902,669,5.084,677,5.597,679,6.102,689,1.985,809,1.308,1147,1.55,1149,2.452,1241,4.353,1259,1.905,2027,5.357,2109,4.528,3228,5.531,3229,8.445,3230,6.917,3231,8.445,3232,8.843,3233,8.843,3234,7.747,3235,6.208,3236,7.747,3237,6.208,3238,6.208,3239,6.208,3240,7.747,3241,6.208,3242,7.747,3243,6.208,3244,6.208,3245,6.208,3246,7.747,3247,6.208,3248,6.208,3249,6.208,3250,6.208,3251,6.208,3252,6.208,3253,6.208,3254,6.208,3255,6.208,3256,6.208]],["title/interfaces/Large.html",[901,0.015,917,1.494]],["body/interfaces/Large.html",[3,0.074,4,0.074,9,0.067,20,0.284,21,0.827,33,1.006,39,0.007,40,0.955,41,0.484,60,0.783,189,0.256,190,0.476,192,0.134,193,0.445,204,0.961,205,2.064,308,1.819,324,3.623,355,3.783,357,3.702,619,0.005,620,0.005,655,3.809,660,2.296,689,1.77,717,2.142,781,2.845,783,2.472,788,2.193,790,2.144,809,1.31,811,1.17,901,0.03,902,0.791,904,1.295,912,1.58,916,1.41,917,2.585,918,2.382,919,2.471,924,0.956,1032,3.125,1057,2.606,1060,0.819,1105,4.12,1111,2.606,1292,3.787,1439,1.112,1456,1.718,1462,2.351,1465,1.655,1762,2.76,1897,1.855,2050,2.296,2241,3.125,2243,2.537,2250,2.606,2251,3.787,2255,2.68,2256,2.606,2259,2.606,2260,2.68,2261,2.68,2274,2.606,2420,4.87,2829,2.193,2831,2.193,2924,3.039,2996,3.039,2997,2.938,2998,3.782,2999,2.938,3000,3.15,3001,3.15,3002,3.15,3003,3.15,3004,5.558,3005,5.558,3006,3.15,3007,2.193,3008,5.558,3009,5.184,3010,3.15,3011,3.15,3012,2.938,3013,3.15,3014,3.15,3015,3.15,3016,3.15,3017,3.15,3018,3.039,3019,3.15,3020,3.15,3021,3.15]],["title/components/LikeButtonComponent.html",[0,0.989,588,1.928]],["body/components/LikeButtonComponent.html",[0,1.302,1,1.399,2,2.222,3,0.051,4,0.051,5,1.429,6,1.564,7,1.564,8,1.564,9,0.046,11,1.269,12,2.78,13,1.399,14,3.461,15,3.199,16,1.917,18,1.956,20,0.193,21,0.631,25,1.002,27,3.292,28,2.534,33,1.218,36,1.695,38,1.019,39,0.007,40,0.776,41,0.381,42,0.619,46,1.314,48,1.28,49,2.16,53,1.533,55,1.987,57,1.831,60,0.581,77,2.509,78,2.397,105,2.884,150,2.711,154,1.528,166,2.596,189,0.215,190,0.324,192,0.051,193,0.303,197,1.683,204,0.969,212,3.156,227,1.88,229,2.51,235,1.88,236,2.387,289,1.826,309,3.315,312,3.292,321,1.826,324,2.754,334,1.88,335,2.798,336,2.001,337,3.156,338,3.813,339,4.034,343,2.384,345,2.001,347,1.683,364,2.146,374,1.728,375,1.247,381,1.641,406,2.798,439,2.222,479,1.564,492,2.146,499,2.559,529,2.327,545,1.239,552,1.192,553,2.327,554,1.429,555,1.564,557,1.564,558,1.429,559,1.564,560,1.429,561,1.954,562,2.327,563,1.429,564,3.45,565,1.399,566,2.327,567,1.399,568,1.564,569,1.46,570,1.239,571,1.564,572,1.429,573,1.564,574,1.087,575,1.399,576,1.528,577,1.564,578,1.429,579,1.528,580,1.314,581,1.429,582,1.429,583,3.079,584,1.429,585,1.564,586,1.314,587,1.564,588,2.813,589,1.399,590,1.564,591,1.399,592,1.46,593,1.564,594,1.429,595,1.528,596,1.399,597,1.768,598,1.564,599,1.429,600,1.429,601,1.399,602,1.564,603,1.429,604,1.399,605,1.564,606,1.37,607,1.678,608,1.37,609,1.429,610,1.399,611,1.399,612,1.564,613,1.46,614,1.528,615,1.493,616,1.399,617,1.528,618,1.564,619,0.003,620,0.003,644,1.148,689,1.992,709,3.245,711,2.001,713,1.88,717,0.977,809,0.598,811,1.186,914,2.08,917,1.647,918,1.618,924,0.651,925,3.232,936,2.16,938,5.157,939,2.703,941,2.038,966,2.798,989,4.324,1059,2.23,1060,0.558,1116,1.399,1235,2.711,1253,2.173,1359,2.54,1380,2.978,1473,1.493,1613,2.711,1633,2.001,1955,3.155,2024,4.296,2071,3.94,2072,2.433,2073,2.324,2074,2.978,2075,2.07,2084,2.23,2453,3.193,2485,2.978,2499,2.901,2571,2.07,2603,3.245,2606,1.938,2607,5.129,2611,3.445,2625,2.324,2626,3.737,2627,1.938,2628,1.938,2630,4.819,2712,4.034,2966,2.559,2967,5.337,2968,4.317,2970,4.317,2972,3.155,2973,3.155,2975,2.901,2976,2.901,2983,3.155,2984,3.155,2987,5.157,2993,3.459,2995,3.155,3042,5.129,3257,8.199,3258,7.538,3259,5.271,3260,5.271,3261,6.296,3262,7.211,3263,6.296,3264,6.974,3265,6.642,3266,6.296,3267,6.974,3268,5.271,3269,3.155,3270,3.542,3271,3.155,3272,3.542,3273,4.034,3274,3.542,3275,4.317,3276,3.542,3277,4.034,3278,5.271,3279,5.271,3280,4.034,3281,3.542,3282,3.542,3283,3.542,3284,3.542,3285,3.62,3286,2.433,3287,3.542,3288,7.455,3289,7.455,3290,3.542,3291,3.542,3292,3.542,3293,3.542,3294,3.542,3295,4.034,3296,3.542,3297,3.542,3298,2.433,3299,2.711,3300,3.542,3301,3.542,3302,7.211,3303,3.542,3304,6.974,3305,5.271,3306,3.155,3307,6.296,3308,7.455,3309,3.155,3310,3.542,3311,3.542,3312,3.155,3313,3.542,3314,3.542,3315,3.542,3316,3.542,3317,3.542,3318,3.542,3319,3.155,3320,2.901,3321,3.155,3322,2.559,3323,4.696,3324,4.317,3325,3.155,3326,3.155]],["title/components/LoginPage.html",[0,0.989,589,1.888]],["body/components/LoginPage.html",[0,1.221,1,1.258,2,2.052,3,0.046,4,0.046,5,1.285,6,1.406,7,1.406,8,1.406,9,0.041,13,1.258,14,3.427,15,3.174,16,1.77,18,1.806,20,0.174,21,0.582,25,0.925,28,2.611,33,0.941,35,3.914,36,1.543,38,0.941,39,0.007,40,0.741,41,0.338,42,0.571,46,1.182,47,2.948,48,1.135,49,1.669,55,1.297,56,3.259,57,1.415,60,0.46,64,2.725,77,0.91,78,0.943,82,1.69,105,2.662,108,2.438,109,2.005,131,1.514,133,2.09,152,2.099,154,1.374,165,3.985,166,3.8,189,0.206,190,0.292,191,1.159,192,0.046,193,0.273,197,1.514,204,0.919,224,4.593,227,1.136,229,2.834,235,1.136,236,2.261,259,3.193,282,2.09,285,3.342,288,1.929,289,3.407,290,3.193,292,2.005,293,4.273,294,4.547,295,2.188,309,2.313,310,2.806,311,4.452,312,4.046,316,1.929,321,4.151,322,3.336,323,4.266,324,2.811,326,1.406,329,4.547,330,4.906,331,4.161,332,4.107,333,3.616,337,1.596,338,2.88,340,3.516,342,3.724,343,3.219,345,1.8,347,1.514,351,2.438,353,2.749,354,2.005,355,2.006,357,2.666,364,1.929,370,4.144,371,4.406,372,1.8,374,4.177,375,1.953,377,1.8,378,2.439,381,3.619,383,1.929,385,1.861,386,1.861,388,2.005,389,2.948,393,1.861,394,1.232,397,3.45,405,1.861,406,2.582,411,4.386,412,2.188,422,3.133,423,1.861,427,3.342,428,2.301,434,2.255,439,2.052,450,1.861,451,2.005,459,2.09,464,2.09,465,3.342,473,2.662,479,2.148,480,3.724,482,2.838,485,3.342,490,2.438,492,1.929,497,2.188,505,4.539,529,2.148,530,3.193,534,2.301,545,1.114,552,1.072,553,2.148,554,1.285,555,1.406,557,1.406,558,1.285,559,1.406,560,1.285,561,1.866,562,2.148,563,1.285,564,3.314,565,1.258,566,2.148,567,1.258,568,1.406,569,1.313,570,1.114,571,1.406,572,1.285,573,1.406,574,2.185,575,1.258,576,1.374,577,1.406,578,1.285,579,1.374,580,1.182,581,1.285,582,1.285,583,2.918,584,1.285,585,1.406,586,1.182,587,1.406,588,1.285,589,2.61,590,1.406,591,1.258,592,1.313,593,1.406,594,1.285,595,1.374,596,1.258,597,1.658,598,1.406,599,1.285,600,1.285,601,1.258,602,1.406,603,1.285,604,1.258,605,1.406,606,1.232,607,1.574,608,1.232,609,1.285,610,1.258,611,1.258,612,1.406,613,1.313,614,1.374,615,1.343,616,1.258,617,1.374,618,1.406,619,0.003,620,0.003,635,1.44,642,1.343,644,1.033,661,3.336,670,2.918,688,1.554,689,1.606,709,2.508,710,1.861,711,1.8,713,1.69,809,0.821,871,4.89,874,3.724,914,1.607,925,2.255,939,1.521,941,1.232,1006,1.929,1018,3.717,1023,4.539,1026,3.063,1027,2.438,1028,4.161,1034,3.724,1054,2.005,1056,1.596,1076,2.438,1077,3.342,1132,1.861,1190,2.736,1359,1.963,1361,2.301,1380,3.734,1808,1.861,1856,4.836,2024,3.508,2025,4.519,2026,4.539,2039,2.609,2060,2.609,2061,2.301,2071,2.749,2075,1.861,2078,5.449,2083,2.09,2085,4.266,2098,4.836,2112,3.985,2121,2.188,2132,2.301,2136,3.516,2139,2.09,2147,3.342,2153,2.609,2160,2.438,2167,3.516,2168,3.516,2225,2.005,2409,2.609,2433,2.609,2505,3.724,2604,5.059,2617,4.266,3320,2.609,3327,2.838,3328,5.904,3329,4.866,3330,5.904,3331,5.26,3332,6.609,3333,4.335,3334,5.888,3335,4.519,3336,4.866,3337,3.185,3338,3.185,3339,4.335,3340,3.185,3341,3.185,3342,3.185,3343,3.185,3344,2.838,3345,3.185,3346,3.185,3347,3.185,3348,3.185,3349,6.148,3350,3.185,3351,3.185,3352,5.413,3353,4.335,3354,2.838,3355,5.904,3356,3.185,3357,3.185,3358,3.185,3359,2.838,3360,2.838,3361,3.185,3362,3.185,3363,2.838,3364,3.185,3365,3.185,3366,3.185,3367,2.438,3368,3.185,3369,3.185,3370,2.09,3371,2.609,3372,4.335,3373,3.185,3374,3.185,3375,4.866,3376,4.866,3377,3.985,3378,6.148,3379,6.687,3380,4.335,3381,4.866,3382,2.838,3383,2.838,3384,2.838,3385,3.985,3386,2.838,3387,2.838,3388,4.335,3389,3.185,3390,2.838,3391,2.838]],["title/modules/LoginPageModule.html",[621,1.494,3392,3.659]],["body/modules/LoginPageModule.html",[3,0.098,4,0.098,9,0.088,39,0.007,189,0.278,190,0.626,192,0.098,193,0.585,552,2.3,589,3.751,619,0.005,620,0.005,621,2.136,623,2.589,624,3.334,625,4.676,626,3.627,627,3.523,628,2.699,633,4.361,634,3.627,635,3.09,637,3.245,638,3.315,639,4.496,640,3.425,641,4.642,642,2.881,643,4.361,644,2.216,648,3.861,731,4.896,789,5.392,871,4.694,1145,4.485,3392,7.503,3393,6.089,3394,6.089,3395,6.089,3396,6.862,3397,6.834,3398,6.089]],["title/modules/LoginPageRoutingModule.html",[621,1.494,3396,3.454]],["body/modules/LoginPageRoutingModule.html",[0,1.521,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,589,3.389,619,0.006,620,0.006,623,2.786,628,2.904,637,2.904,638,3.462,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155,3396,6.2,3398,6.552,3399,7.354]],["title/interfaces/Medium.html",[717,1.319,901,0.015]],["body/interfaces/Medium.html",[3,0.074,4,0.074,9,0.067,20,0.284,21,0.827,33,1.006,39,0.007,40,0.955,41,0.484,60,0.783,189,0.256,190,0.476,192,0.134,193,0.445,204,0.961,205,2.064,308,1.819,324,3.623,355,3.783,357,3.702,619,0.005,620,0.005,655,3.809,660,2.296,689,1.77,717,2.283,781,2.845,783,2.472,788,2.193,790,2.144,809,1.31,811,1.17,901,0.03,902,0.791,904,1.295,912,1.58,916,1.41,917,2.426,918,2.382,919,2.471,924,0.956,1032,3.125,1057,2.606,1060,0.819,1105,4.12,1111,2.606,1292,3.787,1439,1.112,1456,1.718,1462,2.351,1465,1.655,1762,2.76,1897,1.855,2050,2.296,2241,3.125,2243,2.537,2250,2.606,2251,3.787,2255,2.68,2256,2.606,2259,2.606,2260,2.68,2261,2.68,2274,2.606,2420,4.87,2829,2.193,2831,2.193,2924,3.039,2996,3.039,2997,2.938,2998,3.782,2999,2.938,3000,3.15,3001,3.15,3002,3.15,3003,3.15,3004,5.558,3005,5.558,3006,3.15,3007,2.193,3008,5.558,3009,5.184,3010,3.15,3011,3.15,3012,2.938,3013,3.15,3014,3.15,3015,3.15,3016,3.15,3017,3.15,3018,3.039,3019,3.15,3020,3.15,3021,3.15]],["title/interfaces/Meta.html",[901,0.015,2247,2.896]],["body/interfaces/Meta.html",[3,0.057,4,0.057,9,0.051,11,0.959,20,0.217,21,0.688,33,0.771,39,0.007,41,0.204,48,1.399,53,1.159,55,2.37,57,2.501,60,0.609,64,3.042,68,2.252,70,2.536,72,2.357,75,2.444,77,1.139,78,1.702,91,2.719,116,2.818,123,2.115,138,1.997,171,3.975,189,0.253,190,0.365,192,0.112,193,0.341,204,1.236,205,1.934,236,1.893,270,2.181,272,1.847,273,1.574,280,1.159,320,2.502,326,1.76,383,3.481,394,1.009,619,0.004,620,0.004,689,0.853,706,1.1,716,3.05,720,2.181,721,1.997,723,4.704,783,1.894,788,1.68,790,2.37,809,1.573,823,2.329,853,3.772,901,0.024,902,0.874,905,1.367,912,1.346,916,1.081,924,1.581,936,1.972,1060,0.628,1079,2.05,1120,2.135,1147,1.15,1151,1.894,1153,1.894,1155,3.05,1160,3.048,1175,2.804,1187,2.252,1188,2.881,1189,1.997,1190,2.663,1194,2.845,1199,1.802,1200,2.663,1202,2.054,1203,2.509,1206,1.341,1232,2.804,1253,2.37,1254,2.732,1255,3.05,1256,1.608,1258,1.608,1259,1.223,1260,4.432,1280,1.997,1396,1.894,1407,2.509,1439,1.926,1444,1.802,1445,2.719,1448,2.976,1449,1.802,1452,1.802,1454,1.719,1456,1.316,1464,1.608,1465,1.268,1467,2.115,1473,3.111,1479,1.76,1485,2.414,1491,2.115,1709,2.881,1711,4.151,1772,2.509,1773,2.615,1774,2.615,1786,4.312,1787,2.329,1788,3.947,1791,2.329,1792,2.509,1793,1.944,1794,2.423,1795,2.319,1797,3.808,1798,3.359,1799,4.083,1804,2.329,1806,2.329,1807,3.92,1808,2.329,1809,2.181,1817,2.181,1818,2.329,1819,2.329,1836,2.423,1838,2.181,1839,2.329,1840,1.802,1843,2.414,1867,2.414,1874,2.737,1888,2.054,1897,1.421,1898,2.329,1901,2.509,1902,2.115,1909,2.737,1912,3.481,1913,2.329,1914,2.252,1917,2.509,1918,2.509,1922,2.414,1924,2.737,1926,2.509,1930,2.737,1951,2.509,1966,2.737,1985,2.502,2088,3.247,2236,2.737,2237,2.509,2238,2.737,2239,2.181,2240,1.76,2241,2.599,2242,2.879,2243,1.944,2244,2.615,2245,3.947,2246,2.329,2247,4.469,2248,5.642,2249,2.879,2250,3.378,2251,3.975,2252,4.87,2253,5.769,2254,2.615,2255,2.054,2256,3.698,2257,2.879,2258,2.879,2259,1.997,2260,2.054,2261,2.054,2262,2.252,2263,3.772,2264,4.152,2265,2.181,2266,2.879,2267,2.737,2268,2.879,2269,2.737,2270,2.879,2271,2.509,2272,2.879,2273,2.879,2274,4.084,2275,2.879,2276,2.879,2277,4.645,2278,2.879,2279,2.879,2280,3.939,2281,2.879,2282,3.577,2283,3.947,2284,2.879,2285,4.152,2286,2.879,2287,2.879,2288,2.737,2289,2.615,2290,2.615,2291,5.33,2292,2.737,2293,4.152,2294,3.772,2295,3.772,2296,2.615,2297,2.615,2298,4.152,2299,2.879,2300,2.879,2301,2.737,2302,2.879,2303,2.879,2304,2.879,2305,2.879,2306,2.879,2307,2.879]],["title/interfaces/Model.html",[901,0.015,905,1.64]],["body/interfaces/Model.html",[3,0.106,4,0.106,9,0.095,20,0.403,21,1.03,39,0.006,41,0.466,42,1.101,60,0.753,192,0.106,619,0.006,620,0.006,901,0.024,902,1.124,905,2.954,924,1.674,2829,3.84,2831,3.84,3400,6.589,3401,7.396,3402,7.396,3403,7.396]],["title/interfaces/Paginated.html",[901,0.015,1206,1.609]],["body/interfaces/Paginated.html",[3,0.105,4,0.105,9,0.095,20,0.401,21,1.027,39,0.006,41,0.479,192,0.105,320,3.373,619,0.006,620,0.006,901,0.024,902,1.118,912,1.547,1120,2.381,1194,3.306,1206,2.889,1276,4.823,1445,3.462,3103,6.552,3404,6.552,3405,7.354,3406,7.354,3407,7.354]],["title/interfaces/PaginatedRaw.html",[901,0.015,2246,2.794]],["body/interfaces/PaginatedRaw.html",[3,0.065,4,0.065,9,0.059,20,0.248,21,0.756,33,0.88,39,0.007,41,0.446,48,1.245,53,1.324,55,2.519,57,2.277,60,0.61,64,2.603,68,3.567,70,2.35,72,1.592,75,2.265,91,3.158,112,2.416,116,2.403,123,2.416,137,2.491,138,2.281,159,4.562,172,6.676,189,0.264,190,0.417,192,0.09,193,0.39,197,3.721,205,1.024,270,4.5,272,3.359,273,2.862,280,1.324,308,2.208,320,2.69,326,2.01,394,1.836,434,3.628,619,0.004,620,0.004,716,4.364,718,6.412,723,3.966,784,2.987,788,1.919,790,2.603,809,1.525,814,7,823,3.69,828,3.126,901,0.015,902,0.692,904,1.133,905,1.562,912,1.553,924,1.161,936,1.562,1060,0.717,1079,3.035,1120,2.051,1147,1.263,1151,3.001,1153,2.163,1155,2.416,1160,2.058,1179,3.289,1188,3.164,1190,2.109,1194,2.637,1199,2.058,1200,2.926,1202,2.346,1205,2.491,1206,1.532,1209,2.987,1252,3.289,1253,2.603,1254,3.001,1255,3.351,1256,1.836,1258,1.836,1259,1.397,1260,4.386,1276,4.155,1436,2.491,1439,1.867,1444,2.058,1445,3.318,1448,3.2,1454,1.963,1456,1.504,1464,1.836,1465,1.449,1480,2.987,1485,2.757,1748,3.825,1786,4.236,1787,2.66,1793,2.221,1794,2.662,1795,2.547,1797,2.572,1798,4.236,1799,4.391,1804,2.66,1807,3.164,1817,2.491,1818,2.66,1819,2.66,1836,1.919,1838,2.491,1839,2.66,1840,2.058,1843,2.757,1867,2.757,1886,5.237,1888,2.346,1897,2.252,1898,3.69,1901,2.865,1902,2.416,1903,4.832,1913,2.66,1914,2.572,1915,3.728,1916,3.484,1917,2.865,1918,2.865,1921,6.412,1926,2.865,1928,3.728,1951,2.865,2237,2.865,2244,4.143,2246,3.69,2262,3.567,2263,4.143,2280,2.66,2289,2.987,2290,2.987,2294,2.987,2296,2.987,2799,5.237,3188,3.484,3189,3.728,3190,4.055,3191,4.055,3192,4.055,3195,4.055,3197,5.625,3199,4.055,3200,4.055,3203,4.055,3204,5.625,3205,6.412,3206,6.975,3207,4.055,3208,4.055,3209,4.055,3210,4.055,3211,4.055,3212,5.625,3213,4.055,3214,4.055,3215,4.055,3216,5.625,3217,4.055,3218,4.055,3219,4.055,3220,5.625,3221,4.055,3222,4.055,3223,4.055,3224,4.055,3225,4.055,3226,4.055,3227,4.055]],["title/interfaces/PaginatedRaw-1.html",[394,1.01,901,0.013,2246,2.331]],["body/interfaces/PaginatedRaw-1.html",[3,0.056,4,0.056,9,0.051,11,0.949,20,0.215,21,0.683,33,0.763,39,0.007,41,0.292,48,1.394,53,1.147,55,2.395,57,2.541,60,0.607,64,3.027,68,2.228,70,2.525,72,2.343,75,2.434,77,1.127,78,1.689,91,2.703,112,2.093,116,2.812,123,2.093,138,1.976,171,4.085,189,0.252,190,0.361,192,0.111,193,0.338,204,1.233,205,1.929,236,1.881,270,2.158,272,1.827,273,1.557,280,1.147,320,2.487,326,1.741,383,3.455,394,0.998,619,0.004,620,0.004,689,0.844,706,1.088,716,3.027,720,2.158,721,1.976,723,4.691,783,1.874,788,1.662,790,2.352,809,1.57,823,2.304,853,3.743,901,0.024,902,1.019,905,1.353,912,1.342,916,1.069,924,1.576,936,1.957,1060,0.621,1079,2.034,1120,2.354,1147,1.141,1151,1.874,1153,1.874,1155,3.027,1160,3.03,1175,2.782,1187,2.228,1188,2.858,1189,1.976,1190,2.643,1194,2.833,1199,1.783,1200,2.643,1202,2.033,1203,2.482,1206,1.327,1232,2.782,1253,2.352,1254,2.711,1255,3.027,1256,1.591,1258,1.591,1259,1.21,1260,4.419,1280,1.976,1396,1.874,1407,2.482,1439,1.922,1444,1.783,1445,2.703,1448,2.958,1449,1.783,1452,1.783,1454,1.701,1456,1.303,1464,1.591,1465,1.255,1467,2.093,1473,3.095,1479,1.741,1485,2.389,1491,2.093,1709,2.858,1711,4.134,1772,2.482,1773,2.588,1774,2.588,1786,4.29,1787,2.304,1788,3.917,1791,2.304,1792,2.482,1793,1.924,1794,2.405,1795,2.301,1797,3.785,1798,3.333,1799,4.059,1804,2.304,1806,2.304,1807,3.904,1808,2.304,1809,2.158,1817,2.158,1818,2.304,1819,2.304,1836,2.405,1838,2.158,1839,2.304,1840,1.783,1843,2.389,1867,2.389,1874,2.708,1888,2.033,1897,1.406,1898,2.304,1901,2.482,1902,2.093,1909,2.708,1912,3.455,1913,2.304,1914,2.228,1917,2.482,1918,2.482,1922,2.389,1924,2.708,1926,2.482,1930,2.708,1951,2.482,1966,2.708,1985,2.487,2088,3.222,2236,2.708,2237,2.482,2238,2.708,2239,2.158,2240,1.741,2241,2.579,2242,2.849,2243,1.924,2244,3.743,2245,4.602,2246,3.333,2247,5.193,2248,4.397,2249,2.849,2250,3.358,2251,3.961,2252,4.841,2253,5.75,2254,2.588,2255,2.033,2256,3.68,2257,2.849,2258,2.849,2259,1.976,2260,2.033,2261,2.033,2262,2.228,2263,3.743,2264,4.12,2265,2.158,2266,2.849,2267,2.708,2268,2.849,2269,2.708,2270,2.849,2271,2.482,2272,2.849,2273,2.849,2274,4.069,2275,2.849,2276,2.849,2277,4.622,2278,2.849,2279,2.849,2280,3.915,2281,2.849,2282,3.556,2283,3.917,2284,2.849,2285,4.12,2286,2.849,2287,2.849,2288,2.708,2289,2.588,2290,2.588,2291,5.304,2292,2.708,2293,4.12,2294,3.743,2295,3.743,2296,2.588,2297,2.588,2298,4.12,2299,2.849,2300,2.849,2301,2.708,2302,2.849,2303,2.849,2304,2.849,2305,2.849,2306,2.849,2307,2.849]],["title/interfaces/Pagination.html",[901,0.015,2248,3.137]],["body/interfaces/Pagination.html",[3,0.056,4,0.056,9,0.051,11,0.944,20,0.214,21,0.68,33,0.759,39,0.007,41,0.375,48,1.392,53,1.141,55,2.362,57,2.49,60,0.605,64,3.02,68,2.216,70,2.52,72,2.336,75,2.429,77,1.121,78,1.682,91,2.695,116,2.81,123,2.082,138,1.966,171,3.954,189,0.252,190,0.359,192,0.111,193,0.336,204,1.232,205,1.926,236,1.876,270,2.146,272,1.818,273,1.549,280,1.141,320,3.008,326,1.732,383,3.442,394,0.993,619,0.004,620,0.004,689,0.839,706,1.082,716,3.015,720,2.146,721,1.966,723,4.684,783,1.864,788,1.654,790,2.343,809,1.569,823,2.292,853,3.728,901,0.024,902,0.864,905,1.346,912,1.489,916,1.064,924,1.574,936,1.949,1060,0.618,1079,2.026,1120,2.124,1147,1.136,1151,1.864,1153,1.864,1155,3.015,1160,3.021,1175,2.772,1187,2.216,1188,2.848,1189,1.966,1190,2.633,1194,3.114,1199,1.774,1200,2.633,1202,2.022,1203,4.61,1206,1.32,1232,2.772,1253,2.343,1254,2.7,1255,3.015,1256,1.582,1258,1.582,1259,1.204,1260,4.413,1280,1.966,1396,1.864,1407,2.469,1439,1.92,1444,1.774,1445,2.695,1448,2.949,1449,1.774,1452,1.774,1454,1.692,1456,1.296,1464,1.582,1465,1.248,1467,2.082,1473,3.088,1479,1.732,1485,2.376,1491,2.082,1709,2.848,1711,4.125,1772,2.469,1773,2.574,1774,2.574,1786,4.28,1787,2.292,1788,3.902,1791,2.292,1792,2.469,1793,1.914,1794,2.395,1795,2.292,1797,3.774,1798,3.32,1799,4.046,1804,2.292,1806,2.292,1807,3.896,1808,2.292,1809,2.146,1817,2.146,1818,2.292,1819,2.292,1836,2.395,1838,2.146,1839,2.292,1840,1.774,1843,2.376,1867,2.376,1874,2.694,1888,2.022,1897,1.399,1898,2.292,1901,2.469,1902,2.082,1909,2.694,1912,3.442,1913,2.292,1914,2.216,1917,2.469,1918,2.469,1922,2.376,1924,2.694,1926,2.469,1930,2.694,1951,2.469,1966,2.694,1985,2.479,2088,3.21,2236,2.694,2237,2.469,2238,2.694,2239,2.146,2240,1.732,2241,2.569,2242,2.834,2243,1.914,2244,2.574,2245,3.902,2246,2.292,2247,4.046,2248,4.806,2249,5.291,2250,3.348,2251,3.954,2252,4.826,2253,5.741,2254,2.574,2255,2.022,2256,3.671,2257,2.834,2258,2.834,2259,1.966,2260,2.022,2261,2.022,2262,2.216,2263,3.728,2264,4.105,2265,2.146,2266,2.834,2267,2.694,2268,2.834,2269,2.694,2270,2.834,2271,2.469,2272,2.834,2273,2.834,2274,4.062,2275,2.834,2276,2.834,2277,4.61,2278,2.834,2279,2.834,2280,3.904,2281,2.834,2282,3.545,2283,3.902,2284,2.834,2285,4.105,2286,2.834,2287,2.834,2288,2.694,2289,2.574,2290,2.574,2291,5.291,2292,2.694,2293,4.105,2294,3.728,2295,3.728,2296,2.574,2297,2.574,2298,4.105,2299,2.834,2300,2.834,2301,2.694,2302,2.834,2303,2.834,2304,2.834,2305,2.834,2306,2.834,2307,2.834]],["title/pipes/PasswordVisibilityPipe.html",[1473,2.015,3408,3.454]],["body/pipes/PasswordVisibilityPipe.html",[3,0.104,4,0.104,9,0.094,11,1.745,13,2.864,25,1.379,36,1.356,38,1.403,39,0.007,40,0.941,41,0.462,42,0.851,48,1.245,60,0.663,189,0.21,190,0.664,192,0.104,193,0.621,224,3.635,338,3.538,574,2.226,619,0.006,620,0.006,809,1.224,914,2.984,1473,3.589,2374,5.24,2378,6.971,3408,6.15,3409,7.583,3410,6.461,3411,8.512,3412,8.512,3413,7.252]],["title/interfaces/Person.html",[129,2.896,901,0.015]],["body/interfaces/Person.html",[3,0.095,4,0.095,9,0.086,20,0.363,21,0.968,39,0.007,40,0.907,41,0.5,42,1.147,56,3.441,60,0.767,129,4.9,189,0.192,192,0.095,592,3.737,619,0.005,620,0.005,901,0.021,902,1.013,904,2.014,905,2.989,912,1.296,913,3.749,915,3.892,916,2.518,1655,4.371,2823,5.092,2826,5.485,2948,7.762,2949,7.762,3023,5.097,3139,5.984,3414,5.933,3415,5.455,3416,6.66,3417,6.66,3418,6.66,3419,6.66,3420,6.66,3421,6.66,3422,5.455,3423,6.66,3424,6.66,3425,6.66,3426,6.66,3427,6.66,3428,6.66,3429,6.66]],["title/components/PictureSelectableComponent.html",[0,0.989,591,1.888]],["body/components/PictureSelectableComponent.html",[0,1.201,1,1.225,2,2.01,3,0.044,4,0.044,5,1.251,6,1.369,7,3.106,8,1.369,9,0.096,11,1.147,12,2.564,13,1.225,14,3.418,15,3.158,16,1.734,18,1.77,20,0.169,21,0.571,25,0.907,27,2.878,33,0.922,36,1.682,38,1.544,39,0.007,40,0.886,41,0.428,42,0.981,44,3.275,46,2.419,48,1.436,49,3.06,53,2.617,55,2.398,57,2.161,60,0.452,64,1.966,70,2.408,75,2.697,77,2.011,78,2.083,91,2.63,98,4.757,105,1.697,112,3.734,116,1.463,152,2.057,154,1.338,166,1.966,189,0.188,190,0.284,192,0.068,193,0.266,195,2.763,196,2.763,197,1.474,198,2.241,199,2.763,200,5.174,201,2.763,202,2.541,204,0.431,205,1.467,212,2.39,213,4.477,236,0.871,273,2.574,293,1.646,309,3.53,310,2.266,311,2.39,312,3.279,320,1.151,328,4.757,343,2.626,347,2.76,348,1.953,349,1.813,352,3.002,353,2.694,355,2.395,357,2.997,370,1.646,372,1.752,375,1.374,376,3.445,378,1.555,380,2.541,381,1.437,387,2.036,392,2.036,393,2.786,398,3.129,422,1.646,434,1.437,439,2.01,442,2.036,447,2.036,448,2.13,453,2.036,479,3.279,519,4.248,529,2.105,552,1.044,553,2.105,554,1.251,555,1.369,557,1.369,558,1.251,559,1.369,560,1.251,561,1.843,562,2.105,563,1.251,564,3.279,565,1.225,566,2.105,567,1.225,568,1.369,569,1.279,570,1.085,571,1.369,572,1.251,573,2.105,574,0.952,575,1.225,576,1.338,577,1.369,578,1.251,579,1.338,580,1.151,581,1.251,582,1.251,583,2.878,584,1.251,585,1.369,586,1.151,587,1.369,588,1.251,589,1.225,590,1.369,591,2.778,592,3.785,593,1.369,594,1.251,595,1.338,596,1.225,597,1.631,598,1.369,599,1.251,600,1.251,601,1.225,602,1.369,603,1.251,604,1.225,605,1.369,606,1.199,607,1.548,608,1.199,609,1.251,610,1.225,611,1.225,612,1.369,613,1.279,614,1.338,615,1.308,616,1.225,617,1.338,618,1.369,619,0.003,620,0.003,627,1.599,642,1.308,644,1.006,660,2.564,673,4.837,689,1.394,709,2.458,710,1.813,712,2.541,713,1.646,720,2.609,723,2.609,811,1.307,817,2.541,854,2.541,914,2.324,925,3.26,936,2.236,939,2.037,941,1.844,968,1.279,988,4.248,1002,1.474,1003,2.13,1007,1.752,1014,2.694,1030,3.281,1046,2.691,1060,0.488,1156,3.649,1201,4.676,1214,2.948,1221,4.842,1235,5.685,1260,3.626,1396,2.266,1439,1.02,1616,3.649,1752,4.477,1772,3.002,2132,4.71,2138,5.339,2363,3.275,2415,3.905,2453,2.888,2525,3.905,2540,4.248,2603,2.994,2626,3.267,2907,4.248,3430,7.423,3431,6.937,3432,2.541,3433,6.54,3434,3.445,3435,4.768,3436,4.768,3437,7.035,3438,4.768,3439,4.768,3440,4.768,3441,3.905,3442,5.808,3443,4.768,3444,5.808,3445,4.768,3446,6.519,3447,5.808,3448,4.768,3449,4.768,3450,4.768,3451,4.768,3452,4.768,3453,4.768,3454,4.768,3455,3.102,3456,4.768,3457,3.102,3458,3.102,3459,3.102,3460,6.519,3461,3.102,3462,4.768,3463,4.248,3464,3.102,3465,4.768,3466,4.768,3467,3.102,3468,3.102,3469,5.808,3470,4.768,3471,3.102,3472,6.617,3473,3.102,3474,3.102,3475,4.768,3476,3.102,3477,5.808,3478,4.768,3479,3.102,3480,3.102,3481,3.102,3482,4.768,3483,3.102,3484,4.768,3485,5.808,3486,3.102,3487,6.519,3488,5.807,3489,3.102,3490,2.786,3491,4.768,3492,4.768,3493,3.102,3494,4.768,3495,3.102,3496,4.768,3497,2.763,3498,4.248,3499,4.248,3500,2.541,3501,3.102,3502,3.102,3503,3.102,3504,3.102,3505,3.102,3506,3.102,3507,4.768,3508,3.102,3509,3.102,3510,3.102,3511,3.102,3512,3.102,3513,3.102,3514,3.102,3515,3.102,3516,3.102,3517,3.102,3518,3.102,3519,3.102,3520,3.102,3521,3.102,3522,3.102,3523,3.102,3524,3.102,3525,3.102,3526,3.102,3527,3.102,3528,3.102,3529,3.102,3530,3.102,3531,3.102,3532,3.102,3533,3.102,3534,3.102,3535,3.102,3536,3.102,3537,3.102,3538,3.102,3539,3.102,3540,3.102,3541,3.102,3542,3.102,3543,3.102,3544,4.768]],["title/components/PlayButtonComponent.html",[0,0.989,594,1.928]],["body/components/PlayButtonComponent.html",[0,1.429,1,1.644,2,2.5,3,0.06,4,0.06,5,2.392,6,1.838,7,1.838,8,1.838,9,0.054,11,1.427,12,3.049,13,1.644,14,3.507,15,3.243,16,2.157,20,0.227,21,0.71,25,1.128,27,3.323,28,2.239,33,0.805,36,1.754,38,0.805,39,0.007,40,0.784,41,0.459,42,0.489,48,1.186,49,2.034,60,0.699,75,1.301,77,2.566,78,2.575,91,1.68,105,3.245,152,1.796,154,1.796,166,3.104,189,0.23,190,0.381,192,0.06,193,0.356,194,2.732,204,0.824,212,3.462,229,1.401,289,2.146,293,3.147,312,3.323,324,2.727,335,2.21,337,2.087,338,2.031,375,1.403,389,2.522,390,3.41,404,5.286,439,2.5,461,2.732,462,2.732,463,2.732,529,2.618,552,1.401,553,2.618,554,1.68,555,1.838,557,1.838,558,1.68,559,1.838,560,1.68,561,2.085,562,2.618,563,1.68,564,3.651,565,1.644,566,2.618,567,1.644,568,1.838,569,1.717,570,1.456,571,1.838,572,1.68,573,1.838,574,1.278,575,1.644,576,1.796,577,1.838,578,1.68,579,1.796,580,1.545,581,1.68,582,1.68,583,3.323,584,1.68,585,1.838,586,1.545,587,1.838,588,1.68,589,1.644,590,1.838,591,1.644,592,1.717,593,1.838,594,3.037,595,3.67,596,1.644,597,2.322,598,1.838,599,1.68,600,1.68,601,1.644,602,1.838,603,1.68,604,1.644,605,1.838,606,1.61,607,2.421,608,1.61,609,1.68,610,1.644,611,1.644,612,1.838,613,1.717,614,1.796,615,1.755,616,1.644,617,1.796,618,1.838,619,0.004,620,0.004,689,1.478,709,3.56,733,4.524,804,3.41,805,2.352,809,0.703,811,1.693,925,4.031,926,4.744,927,5.464,939,1.853,966,3.147,967,4.284,1060,0.656,1095,2.522,1241,3.057,1545,3.512,1607,2.859,1635,3.186,2437,2.621,2551,3.709,2586,3.008,2587,3.186,2588,3.186,2596,3.186,2603,3.56,2606,2.278,2611,3.779,2626,3.773,2627,2.278,2628,2.278,2632,3.008,2691,2.621,2699,3.147,2966,3.008,2967,5.286,2977,3.41,2978,3.709,2979,3.41,3271,3.709,3277,3.186,3322,3.008,3545,8.403,3546,7.725,3547,6.153,3548,7.527,3549,6.907,3550,6.907,3551,6.907,3552,6.907,3553,5.93,3554,4.163,3555,5.93,3556,4.163,3557,3.709,3558,4.163,3559,4.163,3560,4.163,3561,4.163,3562,4.163,3563,4.163,3564,3.186,3565,4.163,3566,3.41,3567,3.709,3568,3.41,3569,3.709,3570,3.41,3571,3.709,3572,3.709,3573,5.283,3574,3.709,3575,3.41,3576,3.709,3577,4.163,3578,5.93,3579,3.709,3580,3.709,3581,4.857,3582,3.709,3583,3.709,3584,3.709,3585,3.709,3586,4.163]],["title/interfaces/PlayerState.html",[901,0.015,1521,3.283]],["body/interfaces/PlayerState.html",[3,0.047,4,0.047,9,0.043,20,0.329,21,0.598,28,1.07,33,0.638,39,0.007,40,0.52,41,0.468,42,0.587,46,1.225,55,2.029,57,1.454,60,0.593,70,1.621,77,0.943,111,3.611,119,3.28,137,3.683,189,0.194,190,0.302,192,0.072,193,0.283,204,1.324,205,0.742,227,1.177,229,1.683,235,1.177,236,1.694,280,0.96,326,2.207,375,2.223,394,1.704,398,3.28,429,4.226,479,2.664,545,3.062,561,1.764,570,2.354,597,1.89,607,2.265,619,0.003,620,0.003,660,1.457,689,1.628,715,2.166,733,1.806,809,1.51,811,1.357,825,1.457,901,0.011,902,0.502,912,1.492,913,2.316,914,2.891,924,0.919,939,2.736,941,3.057,959,6.38,1046,2.316,1060,0.52,1079,2.579,1116,1.303,1126,3.611,1134,1.751,1147,1,1205,1.806,1250,1.751,1259,1.013,1311,1.751,1439,0.706,1465,1.05,1477,1.701,1518,2.266,1519,2.526,1520,2.94,1521,4.623,1524,2.703,1525,2.703,1526,2.94,1527,2.94,1529,2.526,1530,2.703,1532,2.703,1536,2.94,1537,2.94,1539,2.94,1540,2.703,1544,2.94,1545,3.984,1547,2.703,1554,2.94,1556,2.107,1559,2.94,1563,2.703,1566,2.703,1568,2.703,1569,2.94,1571,5.376,1572,2.94,1573,4.094,1577,2.703,1579,6.474,1583,2.94,1585,2.94,1586,7.253,1587,7.889,1588,2.921,1589,5.997,1590,4.453,1591,2.526,1592,6.96,1593,7.073,1594,6.233,1595,7.253,1596,7.253,1597,6.443,1598,6.78,1600,2.94,1602,2.94,1603,2.94,1604,4.453,1605,1.864,1606,2.703,1607,2.266,1608,6.443,1609,2.703,1610,4.094,1611,6.443,1612,4.417,1613,5.152,1614,4.453,1615,5.376,1616,3.826,1617,2.94,1618,2.94,1619,2.94,1620,8.159,1621,2.94,1622,5.376,1623,2.94,1624,2.94,1625,2.94,1626,2.94,1627,4.453,1628,4.453,1629,2.94,1630,2.94,1631,6.443,1632,2.94,1633,1.864,1634,2.94,1635,5.152,1636,7.043,1637,2.94,1638,2.921,1639,2.94,1640,2.266,1641,2.94,1642,4.453,1643,4.094,1644,2.94,1645,1.654,1646,4.453,1647,2.94,1648,2.94,1649,2.94,1650,4.453,1651,2.94,1652,5.376,1653,4.791,1654,4.453,1655,2.166,1656,5.376,1657,5.997,1658,2.94,1659,2.94,1660,4.453,1661,5.376,1662,5.997,1663,4.453,1664,6.443,1665,2.94,1666,2.94,1667,4.453,1668,2.94,1669,2.266,1670,2.94,1671,2.94,1672,2.703,1673,2.077,1674,2.94,1675,2.94,1676,2.94,1677,2.94,1678,2.94,1679,5.376,1680,5.376,1681,2.94,1682,4.618,1683,4.453,1684,2.94,1685,2.526,1686,2.526,1687,4.453,1688,4.453,1689,2.94,1690,2.94,1691,2.94,1692,4.453,1693,2.94,1694,2.94,1695,2.94,1696,2.94,1697,2.94,1698,2.703,1699,2.266,1700,2.703,1701,3.826,1702,3.28,1703,2.703,1704,2.94,1705,2.94,1706,2.94,1707,2.166,1708,2.94,1709,3.625]],["title/interfaces/Playlist.html",[597,1.342,901,0.015]],["body/interfaces/Playlist.html",[3,0.096,4,0.096,9,0.087,20,0.367,21,0.974,39,0.007,40,0.947,41,0.498,42,0.956,60,0.781,189,0.194,192,0.096,205,1.514,545,3.181,597,2.286,619,0.005,620,0.005,717,1.857,901,0.022,902,1.023,904,2.026,905,3.003,908,2.51,912,1.402,913,3.772,915,3.932,916,2.526,917,2.103,918,2.065,919,2.142,2952,5.509,2953,5.725,2954,5.968,3587,5.994,3588,6.57]],["title/modules/PlaylistDetailPageModule.html",[621,1.494,3589,3.659]],["body/modules/PlaylistDetailPageModule.html",[3,0.096,4,0.096,9,0.087,39,0.007,189,0.279,190,0.616,192,0.096,193,0.575,552,2.262,596,3.736,597,2.284,608,2.598,619,0.005,620,0.005,621,2.1,623,2.545,624,3.278,625,4.642,626,3.566,627,3.464,628,2.654,633,4.317,634,3.566,635,3.039,637,3.212,638,3.281,639,4.45,640,3.368,641,4.595,642,2.833,643,4.317,644,2.179,645,3.927,646,2.898,647,2.967,648,3.797,650,4.071,731,4.877,789,5.338,795,5.504,885,4.855,3589,7.485,3590,5.987,3591,5.987,3592,5.987,3593,6.835,3594,5.143,3595,6.72,3596,5.987]],["title/modules/PlaylistDetailPageRoutingModule.html",[621,1.494,3593,3.454]],["body/modules/PlaylistDetailPageRoutingModule.html",[0,1.515,3,0.105,4,0.105,9,0.095,39,0.007,189,0.262,190,0.671,191,2.664,192,0.105,193,0.627,204,1.018,596,3.38,597,2.057,608,2.832,619,0.006,620,0.006,623,2.774,628,2.892,637,2.892,638,3.454,652,4.007,653,4.547,654,4.543,655,3.088,656,4.137,885,5.291,3593,6.185,3594,5.605,3596,6.524]],["title/pipes/PlaylistDurationPipe.html",[1473,2.015,3597,3.454]],["body/pipes/PlaylistDurationPipe.html",[3,0.078,4,0.078,9,0.07,11,1.309,13,2.148,25,1.034,36,1.574,38,1.628,39,0.007,40,0.933,41,0.431,42,0.988,48,1.446,60,0.736,77,1.554,78,1.61,189,0.206,190,0.498,192,0.078,193,0.466,204,1.288,338,2.653,375,2.161,545,1.902,607,2.39,619,0.005,620,0.005,689,1.918,710,4.638,809,1.582,825,3.143,912,1.515,1134,2.886,1308,3.978,1473,3.001,1549,3.929,1699,3.735,1700,5.83,1702,5.525,1703,5.83,2374,3.929,2378,5.83,2381,6.895,2387,4.022,2469,6.477,2705,4.845,2719,3.424,3564,4.162,3597,5.143,3598,7.785,3599,4.845,3600,7.119,3601,5.439,3602,7.119,3603,5.439,3604,8.419,3605,5.439,3606,7.119,3607,5.439,3608,5.439,3609,7.119,3610,5.439,3611,7.119,3612,9.134,3613,7.936,3614,5.439,3615,5.439,3616,8.738,3617,7.481,3618,5.439,3619,5.439,3620,5.439,3621,5.439,3622,5.439,3623,7.119,3624,5.439,3625,5.439,3626,8.738,3627,7.119,3628,8.419,3629,7.119,3630,5.439,3631,5.439,3632,5.439,3633,5.439]],["title/components/PlaylistLikeButtonComponent.html",[0,0.989,599,1.928]],["body/components/PlaylistLikeButtonComponent.html",[0,1.457,1,1.704,2,2.564,3,0.062,4,0.062,5,1.741,6,1.905,7,1.905,8,1.905,9,0.056,11,1.464,12,3.11,13,1.704,14,3.516,15,3.252,16,2.212,18,2.257,20,0.235,21,0.728,25,1.157,27,3.377,28,2.713,33,1.176,36,1.691,38,1.176,39,0.007,40,0.839,41,0.36,42,0.714,46,1.601,48,1.385,49,2.416,55,1.15,60,0.628,77,2.013,78,2.085,105,3.328,154,1.861,166,1.779,189,0.221,190,0.395,192,0.062,193,0.369,204,0.6,212,3.53,227,1.539,229,2.816,235,1.539,236,1.708,289,2.224,309,2.891,312,3.377,321,2.224,324,1.704,334,2.29,335,3.228,336,2.438,337,3.53,338,4.082,339,4.655,343,2.75,347,2.051,364,2.614,374,2.105,375,1.439,381,2,406,2.29,428,3.117,435,3.991,439,2.564,479,1.905,492,2.614,499,3.117,529,2.685,545,1.509,552,1.452,553,2.685,554,1.741,555,1.905,557,1.905,558,1.741,559,1.905,560,1.741,561,2.113,562,2.685,563,1.741,564,3.694,565,1.704,566,2.685,567,1.704,568,1.905,569,1.779,570,1.509,571,1.905,572,1.741,573,1.905,574,1.324,575,1.704,576,1.861,577,1.905,578,1.741,579,1.861,580,1.601,581,1.741,582,1.741,583,3.377,584,1.741,585,1.905,586,1.601,587,1.905,588,1.741,589,1.704,590,1.905,591,1.704,592,1.779,593,1.905,594,1.741,595,1.861,596,1.704,597,2.593,598,1.905,599,3.085,600,1.741,601,1.704,602,1.905,603,1.741,604,1.704,605,1.905,606,1.668,607,1.878,608,1.668,609,1.741,610,1.704,611,1.704,612,1.905,613,1.779,614,1.861,615,1.819,616,1.704,617,1.861,618,1.905,619,0.004,620,0.004,644,1.399,689,1.935,709,3.631,711,2.438,713,2.29,809,0.728,811,1.585,925,2.818,939,2.687,941,2.352,966,3.228,1060,0.679,1116,1.704,1253,1.779,1359,2.842,1380,3.436,1613,3.302,2024,4.44,2071,2.438,2072,2.963,2073,2.832,2075,2.521,2084,2.716,2571,2.521,2603,3.631,2606,2.361,2611,3.854,2626,3.833,2627,2.361,2628,2.361,2671,3.534,2708,2.716,2712,4.655,2966,3.117,2967,5.854,2968,4.981,2970,4.981,2975,3.534,2976,3.534,2977,3.534,2979,3.534,2987,5.769,2993,2.832,3137,4.116,3262,6.275,3265,6.814,3269,5.418,3302,6.814,3319,6.275,3322,3.117,3323,5.418,3324,4.981,3325,3.844,3326,3.844,3557,3.844,3634,7.067,3635,7.562,3636,7.648,3637,4.315,3638,4.315,3639,4.315,3640,4.315,3641,4.315,3642,4.315,3643,3.844,3644,4.315,3645,4.315]],["title/components/PlaylistModalComponent.html",[0,0.989,600,1.928]],["body/components/PlaylistModalComponent.html",[0,0.871,1,0.762,2,1.37,3,0.046,4,0.028,5,0.778,6,0.851,7,0.851,8,0.851,9,0.025,13,0.762,14,3.222,15,2.972,16,1.182,18,1.206,20,0.23,21,0.389,25,0.618,28,1.365,33,0.628,36,1.343,38,0.955,39,0.007,40,0.748,41,0.402,42,0.58,44,2.891,48,0.947,49,1.115,53,1.604,55,1.593,57,1.604,60,0.429,69,2.486,70,1.053,72,1.472,75,1.987,77,0.928,78,1.882,82,1.724,105,3.653,116,0.592,142,1.506,152,1.401,154,0.832,166,3.726,171,1.585,189,0.184,190,0.177,192,0.028,193,0.165,198,1.393,204,1.073,205,0.947,224,4.203,227,1.501,229,1.663,235,1.501,236,2.243,282,1.266,284,1.579,287,6.049,288,1.168,289,3.702,290,1.266,291,2.045,292,1.214,293,3.374,294,4.209,295,1.324,300,4.046,301,3.393,302,3.041,309,3.022,310,3.414,311,4.16,312,3.956,314,3.592,315,1.324,316,3.62,317,2.661,318,1.835,321,4.322,322,3.376,323,2.347,324,3.155,328,4.046,329,4.209,330,4.689,331,3.471,332,4.631,333,3.653,334,3.374,335,3.172,336,3.592,337,3.187,338,3.102,339,1.476,340,3.983,342,3.222,343,2.875,345,1.835,347,3.022,348,3.471,349,1.898,350,2.045,351,1.476,352,2.045,353,2.791,354,2.65,355,3.119,357,3.223,364,1.168,368,2.347,369,1.401,370,3.544,371,4.041,372,1.089,374,2.916,375,2.138,377,1.089,378,3.6,380,1.579,381,2.289,383,1.168,385,3.493,386,3.902,387,3.242,388,3.471,389,2.992,392,1.266,393,1.898,394,1.251,397,2.887,398,1.266,405,2.46,406,1.023,408,1.579,410,2.347,411,4.42,416,3.78,417,2.894,418,2.132,419,2.65,422,4.45,423,2.887,424,4.045,426,2.347,427,2.891,428,3.041,429,1.898,430,3.041,431,3.618,434,3.094,435,2.762,436,1.579,439,1.37,442,1.266,447,1.266,448,1.324,450,1.898,451,2.65,453,1.266,455,1.393,459,2.132,461,4.382,462,4.382,463,4.382,464,1.266,465,2.231,475,2.231,479,2.639,481,2.347,492,1.168,497,1.324,501,1.266,503,1.266,504,1.324,505,3.787,506,3.242,507,3.242,508,1.476,511,1.324,514,4.866,529,1.434,530,3.242,534,1.393,545,0.674,552,0.649,553,1.434,554,0.778,555,0.851,557,0.851,558,0.778,559,0.851,560,0.778,561,1.445,562,1.434,563,0.778,564,2.639,565,0.762,566,1.434,567,0.762,568,0.851,569,0.795,570,0.674,571,0.851,572,0.778,573,0.851,574,0.592,575,0.762,576,0.832,577,0.851,578,0.778,579,2.997,580,0.716,581,0.778,582,0.778,583,2.181,584,0.778,585,0.851,586,0.716,587,0.851,588,0.778,589,0.762,590,0.851,591,0.762,592,0.795,593,0.851,594,0.778,595,0.832,596,0.762,597,2.581,598,0.851,599,0.778,600,1.993,601,0.762,602,0.851,603,0.778,604,0.762,605,0.851,606,0.746,607,1.122,608,0.746,609,0.778,610,0.762,611,0.762,612,0.851,613,0.795,614,0.832,615,0.813,616,0.762,617,0.832,618,0.851,619,0.002,620,0.002,642,0.813,644,0.625,661,2.378,670,2.181,688,0.941,689,1.428,706,0.897,709,0.994,710,2.887,711,1.835,713,1.724,721,1.628,809,0.548,811,1.616,814,1.476,908,2.407,914,1.073,924,0.597,925,2.946,936,1.444,939,1.015,966,2.234,968,2.037,1002,0.917,1003,1.324,1005,2.231,1006,1.968,1008,1.393,1013,1.214,1014,3.115,1015,2.891,1016,2.231,1018,4.522,1020,3.569,1021,2.894,1023,3.393,1026,2.045,1027,1.476,1028,3.11,1029,2.46,1030,2.791,1031,2.891,1032,2.234,1034,2.486,1037,2.894,1049,2.661,1054,1.214,1056,1.628,1057,0.967,1059,1.214,1060,0.304,1063,1.579,1066,4.912,1067,2.661,1075,1.476,1076,1.476,1077,1.324,1078,1.579,1079,0.688,1104,1.476,1105,2.234,1106,1.579,1108,6.58,1109,0.813,1110,1.718,1111,3.941,1112,1.579,1113,3.569,1115,3.041,1117,2.661,1118,3.041,1119,0.832,1120,1.666,1121,1.718,1122,1.718,1123,2.661,1124,2.894,1125,1.718,1126,2.347,1127,1.718,1128,1.718,1129,1.718,1130,1.718,1131,1.579,1132,2.46,1221,2.926,1222,1.324,1239,1.214,1241,2.546,1246,1.324,1253,1.34,1308,2.995,1311,1.023,1345,1.168,1386,2.234,1396,0.917,1407,2.045,1409,1.476,1477,0.994,1480,3.242,1588,1.127,1655,1.266,1669,1.324,1699,1.324,1752,1.324,1755,0.894,1763,4.382,1791,1.127,1814,1.37,1902,2.926,1911,1.476,1985,1.206,2041,1.718,2042,1.718,2121,1.324,2122,1.579,2125,1.718,2130,1.476,2131,2.661,2132,1.393,2135,3.75,2136,3.569,2137,1.579,2138,1.579,2139,3.618,2147,2.231,2150,1.579,2151,2.894,2152,2.894,2153,2.661,2156,1.718,2157,1.718,2166,1.718,2167,1.393,2168,1.393,2169,1.718,2170,1.718,2171,1.718,2172,1.579,2173,1.476,2174,1.718,2175,1.718,2176,2.661,2214,2.486,2245,1.324,2265,1.778,2387,2.378,2396,1.718,2416,1.393,2417,2.661,2418,1.476,2419,1.718,2420,2.234,2422,1.476,2423,1.476,2424,2.486,2425,1.476,2426,1.476,2427,1.476,2428,1.476,2429,1.476,2430,1.718,2431,2.486,2434,5.586,2453,1.168,2456,1.718,2464,2.661,2468,1.718,2469,3.041,2470,1.718,2471,1.579,2481,1.579,2485,1.089,2500,1.476,2574,1.718,2630,1.476,2675,1.718,2939,1.476,2952,1.168,2953,2.045,2954,2.762,3146,1.718,3205,1.579,3230,2.661,3312,3.75,3434,2.347,3634,5.653,3646,5.653,3647,3.222,3648,4.046,3649,4.866,3650,1.928,3651,1.718,3652,1.928,3653,1.718,3654,1.928,3655,1.928,3656,1.928,3657,2.894,3658,1.393,3659,1.928,3660,1.928,3661,1.928,3662,1.928,3663,1.928,3664,1.928,3665,1.928,3666,1.928,3667,1.476,3668,1.928,3669,1.928,3670,1.928,3671,1.928,3672,1.928,3673,3.249,3674,1.928,3675,1.928,3676,1.928,3677,1.928,3678,1.928,3679,1.718,3680,1.579,3681,4.046,3682,1.928,3683,5.513,3684,1.928,3685,1.928,3686,1.928,3687,1.928,3688,1.928,3689,1.928,3690,1.928,3691,1.928,3692,1.928,3693,1.928,3694,1.928,3695,1.214,3696,1.928,3697,1.928,3698,2.894,3699,1.718,3700,1.928,3701,1.476,3702,1.579,3703,1.928,3704,1.579,3705,1.928,3706,1.928,3707,1.928,3708,1.928,3709,1.928,3710,1.928,3711,1.928,3712,2.661,3713,1.928,3714,1.579,3715,1.928,3716,1.928,3717,1.928,3718,1.928,3719,1.928,3720,1.928,3721,3.249,3722,3.249,3723,2.661,3724,3.249,3725,3.249,3726,1.928,3727,1.928,3728,6.58,3729,1.928,3730,1.928,3731,1.718,3732,1.928,3733,1.928,3734,1.928,3735,1.928,3736,1.928,3737,1.928,3738,3.249,3739,1.928,3740,1.928,3741,1.928,3742,1.928,3743,3.249,3744,1.928,3745,1.928,3746,1.928,3747,1.476,3748,1.928,3749,1.928,3750,1.928,3751,1.928,3752,1.928,3753,4.209,3754,1.928,3755,3.249]],["title/injectables/PlaylistsMappingStrapi.html",[1147,0.956,3756,3.915]],["body/injectables/PlaylistsMappingStrapi.html",[3,0.041,4,0.041,9,0.037,11,0.691,20,0.157,25,0.854,36,1.406,38,1.455,39,0.007,40,0.868,41,0.385,42,0.883,48,1.493,53,1.306,55,2.627,57,2.529,60,0.487,64,2.968,70,1.456,72,2.722,75,2.717,91,1.812,112,4.131,116,2.696,122,3.607,123,2.384,142,1.331,152,3.357,171,4.638,189,0.181,190,0.263,192,0.041,193,0.246,204,0.944,205,0.646,272,1.331,273,2.681,280,0.835,320,2.053,375,1.48,545,2.188,597,2.694,619,0.003,620,0.003,715,2.947,717,0.792,721,3.607,809,1.314,908,1.526,912,1.336,916,1.5,917,0.897,918,0.881,919,0.914,924,1.383,935,2.625,936,1.541,968,1.852,1002,2.135,1041,4.519,1079,2.231,1095,3.35,1120,2.39,1147,0.898,1149,1.134,1151,3.699,1152,2.198,1153,2.135,1154,3.678,1155,2.384,1156,3.437,1157,3.678,1158,6.654,1159,5.2,1160,3.973,1161,3.245,1162,3.245,1163,3.245,1164,3.245,1165,3.245,1170,3.245,1171,3.245,1172,3.245,1174,5.895,1175,4.286,1176,6.375,1177,5.56,1178,5.895,1179,4.519,1180,5.957,1181,3.245,1183,3.678,1184,3.245,1186,3.437,1187,4.623,1188,3.135,1189,3.135,1192,2.198,1193,3.245,1194,2.469,1197,3.678,1199,2.828,1200,2.899,1201,2.827,1202,2.315,1203,2.827,1204,2.198,1205,2.457,1206,2.285,1207,3.245,1209,4.455,1210,5.123,1213,2.198,1221,3.32,1223,5.82,1224,3.678,1237,4.001,1239,3.482,1243,3.437,1244,2.558,1245,5.123,1246,3.085,1247,3.678,1248,5.123,1249,3.437,1250,2.935,1252,4.519,1253,1.852,1254,2.135,1255,1.524,1256,1.158,1258,1.158,1259,0.881,1260,4.218,1261,3.678,1276,3.603,1278,2.352,1280,3.135,1282,2.352,1308,3.607,1313,4.53,1479,1.983,1699,3.085,1709,3.77,1814,2.862,2088,4.249,2269,1.972,2295,4.105,2472,2.827,2473,1.972,2724,2.075,2726,2.947,2871,1.739,2952,4.36,2953,3.938,2954,4.105,3588,4.519,3680,2.352,3712,3.678,3756,3.678,3757,6.934,3758,2.872,3759,2.872,3760,2.558,3761,4.491,3762,2.872,3763,5.573,3764,4.491,3765,2.872,3766,2.872,3767,4.491,3768,2.558,3769,2.872,3770,2.872,3771,6.255,3772,2.872,3773,2.872,3774,2.558,3775,4.001,3776,7.429,3777,3.678,3778,3.678,3779,3.678,3780,3.245,3781,3.678,3782,3.245,3783,3.245,3784,3.678,3785,3.678,3786,3.678,3787,2.872,3788,2.558,3789,8.001,3790,2.872,3791,2.558,3792,2.872,3793,4.491,3794,2.872,3795,2.198,3796,2.558,3797,2.872,3798,2.872,3799,2.872,3800,4.491,3801,2.872,3802,4.491,3803,4.53,3804,2.872,3805,4.927,3806,4.491,3807,4.491,3808,2.872,3809,4.491,3810,5.531,3811,4.491,3812,4.491,3813,2.872,3814,2.872,3815,6.255,3816,4.491,3817,4.491,3818,2.872,3819,4.491,3820,5.531,3821,5.531,3822,4.491,3823,4.491,3824,2.872,3825,2.872,3826,4.491,3827,2.558,3828,2.872,3829,2.558,3830,2.558,3831,2.872,3832,6.788,3833,2.872,3834,2.872,3835,2.872,3836,2.872]],["title/components/PlaylistsPage.html",[0,0.989,601,1.888]],["body/components/PlaylistsPage.html",[0,1.559,1,1.436,2,2.266,3,0.052,4,0.052,5,1.467,6,1.605,7,1.605,8,1.605,9,0.047,11,1.293,12,2.823,13,1.436,14,3.469,15,3.207,16,1.955,18,1.995,20,0.198,21,0.643,25,1.022,27,3.118,28,2.775,33,1.039,36,1.688,38,1.366,39,0.007,40,0.891,41,0.445,42,0.829,48,1.355,49,2.194,77,2.255,78,2.336,82,2.852,122,3.778,154,1.568,189,0.247,190,0.333,192,0.052,193,0.311,197,3.357,204,1.135,205,1.209,224,2.694,229,2.881,236,1.795,312,3.118,314,2.054,320,2.373,375,1.272,394,1.619,439,2.266,529,2.373,545,1.272,552,1.224,553,2.373,554,1.467,555,1.605,557,1.605,558,1.467,559,1.605,560,1.467,561,1.975,562,2.373,563,1.467,564,3.483,565,1.436,566,2.373,567,1.436,568,1.605,569,1.499,570,1.272,571,1.605,572,1.467,573,1.605,574,1.116,575,1.436,576,1.568,577,1.605,578,1.467,579,1.568,580,1.349,581,1.467,582,1.467,583,3.118,584,1.467,585,1.605,586,1.349,587,1.605,588,1.467,589,1.436,590,1.605,591,1.436,592,1.499,593,1.605,594,1.467,595,1.568,596,1.436,597,2.638,598,1.605,599,1.467,600,2.85,601,2.789,602,1.605,603,1.467,604,1.436,605,1.605,606,1.406,607,1.704,608,1.406,609,1.467,610,1.436,611,1.436,612,1.605,613,1.499,614,1.568,615,1.533,616,1.436,617,1.568,618,1.605,619,0.004,620,0.004,644,1.179,646,1.568,647,1.605,661,3.612,670,3.118,687,2.782,688,1.774,689,1.831,706,2.177,717,1.483,735,3.991,767,2.978,809,0.907,811,1.209,908,1.483,912,1.264,914,1.775,917,1.68,918,1.649,919,1.711,939,1.68,1006,2.202,1014,3.036,1029,3.736,1030,3.991,1046,3.493,1060,0.573,1062,2.289,1084,3.691,1085,3.883,1088,3.883,1089,3.883,1100,3.691,1109,1.533,1116,2.122,1118,2.627,1119,1.568,1132,3.141,1194,2.326,1206,1.809,1276,3.393,1321,4.788,1325,4.893,1326,5.406,1334,4.402,1336,3.239,1345,3.256,1348,2.978,1352,5.785,1354,3.239,1357,2.978,1358,2.782,1361,5.103,1362,2.978,1377,2.978,1378,2.782,1379,2.782,1384,2.978,1386,1.929,1387,2.782,1391,1.822,1392,4.402,1439,1.368,1645,2.694,1699,2.497,2027,4.279,2090,2.782,2109,4.77,2939,2.782,2952,2.202,2953,2.289,2954,2.386,3634,2.782,3646,2.782,3649,6.247,3704,4.402,3837,3.239,3838,6.394,3839,5.374,3840,6.394,3841,5.696,3842,7.063,3843,7.063,3844,5.374,3845,5.374,3846,3.636,3847,5.374,3848,3.883,3849,3.636,3850,3.636,3851,3.636,3852,5.374,3853,3.636,3854,3.636,3855,5.374,3856,3.636,3857,3.636,3858,3.636,3859,3.636,3860,3.636,3861,5.374,3862,3.636,3863,3.239,3864,3.239,3865,3.239,3866,7.063,3867,3.636,3868,3.636,3869,5.374,3870,3.636,3871,5.374,3872,3.636,3873,5.374,3874,8.705,3875,3.636,3876,2.386,3877,2.978,3878,3.239,3879,3.239,3880,3.636,3881,3.239,3882,3.636,3883,3.636,3884,5.374,3885,5.374,3886,3.527,3887,3.527,3888,4.788]],["title/modules/PlaylistsPageModule.html",[621,1.494,3889,3.659]],["body/modules/PlaylistsPageModule.html",[3,0.097,4,0.097,9,0.088,39,0.007,122,3.403,189,0.28,190,0.622,192,0.097,193,0.581,552,2.286,601,3.745,619,0.005,620,0.005,621,2.122,623,2.572,624,3.313,625,4.663,626,3.604,627,3.5,628,2.681,633,4.344,634,3.604,635,3.07,637,3.232,638,3.302,639,4.478,640,3.403,641,4.624,642,2.863,643,4.344,644,2.201,645,3.968,646,2.929,647,2.998,648,3.836,650,4.113,731,4.888,1145,4.456,3889,7.496,3890,6.049,3891,6.049,3892,6.049,3893,6.852,3894,6.79,3895,6.049]],["title/modules/PlaylistsPageRoutingModule.html",[621,1.494,3893,3.454]],["body/modules/PlaylistsPageRoutingModule.html",[0,1.521,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,601,3.389,619,0.006,620,0.006,623,2.786,628,2.904,637,2.904,638,3.462,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155,3893,6.2,3895,6.552,3896,7.354]],["title/injectables/PlaylistsService.html",[735,2.701,1147,0.956]],["body/injectables/PlaylistsService.html",[3,0.058,4,0.058,9,0.052,11,0.969,20,0.219,25,1.101,33,1.12,36,1.72,38,1.763,39,0.007,40,0.965,41,0.466,42,1.07,48,1.565,60,0.764,122,2.901,189,0.254,190,0.369,192,0.058,193,0.345,204,1.198,236,2.421,280,1.171,308,1.408,375,1.37,545,2.025,597,2.62,607,1.543,619,0.004,620,0.004,689,1.45,706,1.597,735,3.27,809,1.624,811,1.302,904,1.441,908,2.423,912,0.645,916,1.57,924,1.503,968,2.387,1002,1.913,1025,4.741,1060,0.634,1116,3.229,1119,2.497,1135,2.901,1147,1.158,1149,1.59,1206,1.355,1258,1.624,1259,1.235,1308,2.901,1345,2.438,1427,5.427,1431,3.597,1432,3.072,1433,3.297,1436,3.167,1439,2.044,1446,4.757,1449,1.82,1450,3.081,1451,3.081,1452,1.82,1453,3.297,1454,2.497,1455,3.081,1456,1.33,1457,2.908,1460,2.274,1462,1.82,1464,2.335,1465,1.281,1469,3.081,1473,2.441,1494,3.586,1645,2.901,1794,2.441,1795,2.735,1922,4.106,1985,2.751,2001,2.765,2004,5.188,2239,2.202,2240,1.777,2277,4.267,2280,3.961,2282,4.339,2469,2.908,2708,4.267,2733,2.534,2788,3.799,2799,4.182,2871,2.438,2952,3.506,2953,4.666,2954,3.799,3042,5.657,3129,5.673,3131,4.43,3133,4.741,3134,6.039,3135,6.039,3136,5.157,3137,3.383,3138,5.157,3139,5.393,3140,5.157,3141,5.157,3588,4.182,3876,2.642,3877,6.071,3886,3.799,3887,3.799,3888,5.157,3897,3.586,3898,6.778,3899,6.778,3900,5.788,3901,4.025,3902,5.788,3903,4.025,3904,4.025,3905,4.025,3906,5.788,3907,4.025,3908,4.025,3909,5.788,3910,4.025,3911,5.788,3912,4.025,3913,4.025,3914,4.025,3915,3.297,3916,4.025,3917,4.025,3918,6.778,3919,5.355,3920,5.157,3921,5.788,3922,4.025,3923,4.025,3924,4.025,3925,4.025,3926,4.025,3927,4.025,3928,3.586,3929,3.976,3930,5.552,3931,5.788,3932,4.025,3933,4.025,3934,4.025,3935,4.025,3936,5.788,3937,5.788,3938,5.788,3939,5.788,3940,4.025,3941,3.586,3942,4.025]],["title/modules/ProfilePageModule.html",[621,1.494,3943,3.659]],["body/modules/ProfilePageModule.html",[3,0.097,4,0.097,9,0.087,39,0.007,189,0.279,190,0.62,192,0.097,193,0.58,552,2.28,580,2.513,603,3.824,619,0.005,620,0.005,621,2.116,623,2.565,624,3.304,625,4.658,626,3.594,627,3.491,628,2.674,633,4.337,634,3.594,635,3.062,637,3.227,638,3.297,639,4.471,640,3.394,641,4.617,642,2.855,643,4.337,644,2.196,645,3.958,646,2.921,647,2.99,648,3.826,650,4.102,731,4.885,789,5.363,795,5.547,1146,5.183,3943,7.493,3944,6.033,3945,6.033,3946,6.033,3947,6.848,3948,6.772]],["title/modules/ProfilePageRoutingModule.html",[621,1.494,3947,3.454]],["body/modules/ProfilePageRoutingModule.html",[0,1.521,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,603,3.462,619,0.006,620,0.006,623,2.786,628,2.904,637,2.904,638,3.462,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155,1146,5.629,3947,6.2,3949,7.354]],["title/interfaces/ProviderMetadata.html",[901,0.015,3009,2.701]],["body/interfaces/ProviderMetadata.html",[3,0.079,4,0.079,9,0.071,20,0.3,21,0.858,33,1.063,39,0.007,40,0.913,41,0.408,60,0.783,189,0.26,190,0.503,192,0.136,193,0.471,204,0.996,205,1.972,308,1.922,324,3.462,355,3.615,357,3.537,619,0.005,620,0.005,655,3.564,660,2.426,689,1.808,717,2.201,781,3.007,783,2.612,788,2.317,790,2.266,809,1.346,811,1.236,901,0.03,902,0.836,904,1.368,912,1.565,916,1.491,917,2.493,918,2.448,919,2.539,924,1.01,1032,3.241,1057,2.755,1060,0.865,1105,4.233,1111,2.755,1292,3.891,1439,1.176,1456,1.815,1462,2.485,1465,1.749,1762,2.917,1897,1.96,2050,2.426,2241,3.241,2243,2.681,2250,2.755,2251,3.891,2255,2.833,2256,2.755,2259,2.755,2260,2.833,2261,2.833,2274,2.755,2420,4.653,2829,2.317,2831,2.317,2924,3.212,2996,3.212,2997,3.105,2998,3.922,2999,3.105,3000,3.329,3001,3.329,3002,3.329,3003,3.329,3004,5.311,3005,5.311,3006,3.329,3007,2.317,3008,5.311,3009,5.173,3010,5.121,3011,5.121,3012,3.105,3013,3.329,3014,3.329,3015,3.329,3016,3.329,3017,3.329,3018,3.212,3019,3.329,3020,3.329,3021,3.329]],["title/interfaces/ReactiveEnrichedSong.html",[901,0.015,3950,3.454]],["body/interfaces/ReactiveEnrichedSong.html",[0,0.756,3,0.032,4,0.032,5,0.897,9,0.029,11,0.535,12,1.614,14,0.793,15,0.734,16,0.808,18,0.825,20,0.254,21,0.438,27,0.981,28,1.51,31,1.701,33,0.43,35,2.705,39,0.007,40,0.737,41,0.362,44,1.526,46,1.357,47,1.346,53,1.972,55,2.21,57,1.57,60,0.661,70,0.721,72,2.086,75,1.143,77,1.331,106,2.798,116,1.122,120,1.526,122,4.099,129,1.346,131,1.738,137,1.216,138,3.963,142,2.158,143,1.832,152,0.959,166,0.916,189,0.252,190,0.204,191,0.808,192,0.032,193,0.19,197,1.738,204,1.18,205,0.5,206,1.701,207,1.701,208,1.701,209,1.701,212,2.334,223,2.641,227,1.925,229,2.606,235,1.925,236,2.512,293,1.179,294,1.346,310,1.738,318,1.256,356,1.526,369,0.959,375,1.277,394,0.563,545,0.777,561,2.109,570,0.777,586,0.825,597,2.482,607,2.371,619,0.004,620,0.002,644,0.721,660,0.981,661,1.256,662,1.701,669,3.056,670,1.614,673,2.821,677,1.606,679,1.606,686,1.701,688,1.084,689,1.95,690,2.798,691,1.701,692,1.701,693,1.701,695,1.526,706,1.955,717,0.613,721,1.114,732,1.614,734,2.215,735,2.065,736,2.631,737,1.784,738,2.722,763,1.526,801,1.606,803,1.526,805,1.256,807,1.458,809,1.59,811,1.525,825,3.661,827,3.127,901,0.015,902,0.556,904,0.91,908,1.646,912,0.586,914,1.97,916,1.263,924,0.992,929,1.256,936,0.762,939,2.293,941,1.414,982,1.458,992,1.114,1002,1.056,1007,2.631,1041,1.606,1046,2.501,1055,1.346,1056,1.114,1058,1.399,1060,0.35,1095,1.346,1102,2.137,1109,2.859,1116,2.677,1120,1.923,1134,1.94,1188,1.114,1189,1.114,1200,1.03,1214,1.005,1221,1.179,1226,1.701,1232,2.633,1308,1.114,1311,2.472,1328,1.399,1359,2.177,1374,1.458,1391,2.989,1393,1.606,1439,1.45,1456,0.734,1465,1.482,1466,2.932,1467,1.179,1473,2.986,1478,3.199,1479,0.981,1496,2.302,1545,2.383,1556,0.937,1633,2.065,1638,1.299,1645,1.114,1653,2.302,1673,2.302,1707,3.914,1709,4.156,1716,1.526,1752,1.526,1757,1.216,1807,2.334,1814,1.541,1912,1.346,1963,1.701,1985,0.825,2024,2.472,2063,1.526,2074,2.631,2088,3.624,2103,2.641,2126,1.701,2128,1.606,2133,1.701,2225,3.397,2228,1.526,2230,1.526,2231,1.526,2232,1.526,2233,2.932,2239,1.216,2240,1.614,2265,2.548,2271,2.302,2282,2.864,2363,1.526,2413,1.606,2414,1.606,2437,1.399,2453,1.346,2472,2.932,2485,1.256,2547,1.606,2571,1.299,2603,1.884,2606,1.216,2607,3.056,2608,1.701,2611,1.216,2615,1.701,2624,1.606,2625,3.542,2626,1.114,2627,1.216,2628,1.216,2691,2.302,2697,2.641,2699,1.179,2701,1.606,2708,1.399,2713,1.526,2719,2.302,2726,1.458,2785,2.472,2795,1.458,2889,1.701,2895,1.701,2905,2.641,2928,2.641,2957,1.526,2961,1.056,2993,2.399,3042,2.399,3063,1.701,3280,1.701,3285,3.199,3286,1.526,3295,1.701,3298,1.526,3370,1.458,3434,1.606,3490,1.299,3647,1.701,3658,1.606,3667,1.701,3695,2.932,3701,2.798,3848,1.606,3876,2.399,3886,2.399,3887,1.458,3919,1.606,3950,4.898,3951,1.701,3952,5.553,3953,3.815,3954,1.701,3955,1.701,3956,1.82,3957,1.82,3958,3.056,3959,4.309,3960,1.82,3961,1.82,3962,1.82,3963,2.994,3964,1.701,3965,2.798,3966,1.606,3967,1.701,3968,1.82,3969,1.82,3970,1.701,3971,3.365,3972,1.82,3973,1.82,3974,1.82,3975,1.82,3976,1.82,3977,1.82,3978,4.42,3979,1.701,3980,1.701,3981,1.526,3982,1.701,3983,1.458,3984,1.701,3985,1.82,3986,1.82,3987,1.82,3988,1.82,3989,2.994,3990,1.82,3991,1.82,3992,1.82,3993,2.994,3994,2.994,3995,2.994,3996,3.815,3997,2.994,3998,2.994,3999,2.994,4000,2.994,4001,1.82,4002,1.82,4003,1.82,4004,1.606,4005,2.994,4006,2.994,4007,1.82,4008,1.606,4009,1.82,4010,1.701,4011,1.82,4012,1.82,4013,1.701,4014,1.82,4015,3.565,4016,5.616,4017,4.885,4018,3.815,4019,1.82,4020,1.82,4021,2.798,4022,1.82,4023,2.798,4024,1.82,4025,1.82,4026,1.82,4027,1.82,4028,1.82,4029,1.82,4030,1.82,4031,1.82,4032,2.994,4033,4.565,4034,3.815,4035,2.994,4036,2.994,4037,1.82,4038,1.82,4039,1.701,4040,1.82,4041,3.899,4042,1.82,4043,1.82,4044,3.565,4045,1.82,4046,2.994,4047,1.82,4048,1.82,4049,4.885,4050,1.82,4051,2.994,4052,1.82,4053,1.82,4054,3.815,4055,1.606,4056,1.701,4057,1.82,4058,1.701,4059,1.701,4060,1.82,4061,1.82,4062,1.701,4063,2.994,4064,2.798,4065,1.82,4066,1.701,4067,1.606,4068,1.701,4069,1.82,4070,4.13,4071,1.82,4072,2.994,4073,1.82,4074,1.82,4075,1.82,4076,1.701,4077,1.82,4078,1.82,4079,1.82,4080,1.82,4081,1.82,4082,2.994,4083,1.82,4084,4.42,4085,1.82,4086,1.82,4087,4.13,4088,1.82,4089,1.701,4090,1.82,4091,2.798,4092,1.701,4093,1.701,4094,1.82,4095,1.82,4096,1.82,4097,1.82,4098,2.994,4099,2.798,4100,2.798,4101,1.701,4102,1.606,4103,1.701,4104,1.701,4105,1.82,4106,1.82,4107,1.82,4108,1.82,4109,1.606,4110,1.82,4111,1.82,4112,1.82,4113,1.82,4114,1.82,4115,1.82,4116,3.815,4117,1.82,4118,1.82,4119,1.82,4120,1.82,4121,1.82,4122,1.701,4123,1.82,4124,1.701,4125,1.82,4126,1.82,4127,1.82,4128,1.82,4129,1.82,4130,1.82,4131,1.82,4132,1.701,4133,1.82,4134,1.82,4135,1.82,4136,1.701,4137,1.82,4138,1.82,4139,1.82,4140,1.82,4141,1.82,4142,1.82,4143,2.994,4144,1.82,4145,4.42,4146,1.82,4147,3.815,4148,1.82,4149,1.82,4150,1.82,4151,1.82,4152,1.82,4153,1.82,4154,1.701,4155,1.701,4156,1.82,4157,3.899,4158,2.994,4159,2.798,4160,1.82,4161,1.82,4162,1.82,4163,1.82,4164,1.701,4165,1.82,4166,1.82,4167,1.82,4168,1.82,4169,1.82,4170,1.82,4171,1.82,4172,1.82,4173,1.82,4174,3.815,4175,1.82,4176,3.899,4177,2.798,4178,1.701,4179,1.701,4180,1.82,4181,1.82,4182,1.82,4183,2.994,4184,1.82,4185,1.82,4186,1.82,4187,1.82,4188,1.82,4189,1.82,4190,1.82,4191,1.82]],["title/components/RegisterPage.html",[0,0.989,604,1.888]],["body/components/RegisterPage.html",[0,1.12,1,1.097,2,1.845,3,0.04,4,0.04,5,1.121,6,1.227,7,1.227,8,1.227,9,0.036,13,1.097,14,3.387,15,3.129,16,1.592,18,1.624,20,0.151,21,0.524,25,0.832,28,2.567,33,0.846,35,3.723,36,1.647,38,1.047,39,0.007,40,0.861,41,0.363,42,0.636,46,2.757,47,2.651,48,1.219,49,1.858,53,1.787,55,1.443,56,3.201,57,0.808,60,0.553,64,3.173,75,1.692,77,1.251,78,1.296,82,2.323,91,1.766,105,2.962,108,3.349,109,1.749,116,0.853,133,1.823,152,3.32,154,1.198,166,3.633,189,0.215,190,0.254,191,1.011,192,0.04,193,0.238,204,0.929,224,4.273,227,0.991,229,2.782,235,0.991,236,2.086,259,2.872,273,1.728,282,1.823,285,4.219,288,1.683,289,3.166,290,2.872,292,1.749,293,3.942,294,4.048,295,1.908,309,3.176,310,2.573,311,4.454,312,3.89,314,1.57,316,2.651,321,3.659,322,3.059,323,3.912,324,2.138,327,2.126,329,4.3,330,4.748,331,3.867,332,4.064,333,3.656,337,1.393,338,2.135,342,4.144,343,3.022,345,2.472,347,2.08,349,1.624,350,1.749,353,3.47,355,2.232,357,2.478,364,1.683,370,2.873,371,3.361,372,1.57,374,4.1,375,1.989,376,2.007,377,1.57,378,1.393,381,3.097,383,1.683,385,2.557,386,2.557,388,1.749,389,2.651,393,1.624,394,0.704,397,3.59,398,1.823,405,1.624,406,2.873,411,4.148,412,1.908,422,1.474,423,1.624,427,3.006,428,2.007,429,1.624,434,1.288,439,1.845,464,1.823,465,3.006,473,2.394,479,1.932,480,3.349,485,3.006,492,1.683,497,1.908,505,4.875,529,1.932,530,1.823,534,2.007,545,1.531,552,0.935,553,1.932,554,1.121,555,1.227,557,1.227,558,1.121,559,1.227,560,1.121,561,1.751,562,1.932,563,1.121,564,3.134,565,1.097,566,1.932,567,1.097,568,1.227,569,1.146,570,0.972,571,1.227,572,1.121,573,1.227,574,2.178,575,1.097,576,1.198,577,1.227,578,1.121,579,1.198,580,1.624,581,1.121,582,1.121,583,2.712,584,1.121,585,1.227,586,1.031,587,1.227,588,1.121,589,1.097,590,1.227,591,1.097,592,2.232,593,1.227,594,1.121,595,1.198,596,1.097,597,1.52,598,1.227,599,1.121,600,1.121,601,1.097,602,1.227,603,1.121,604,2.426,605,1.227,606,1.074,607,1.443,608,1.074,609,1.121,610,1.097,611,1.097,612,1.227,613,1.146,614,1.198,615,1.171,616,1.097,617,1.198,618,1.227,619,0.003,620,0.003,635,1.256,642,1.171,644,0.901,661,3.059,670,2.712,688,1.355,689,1.518,695,1.908,709,2.256,710,1.624,711,1.57,713,1.474,809,1.198,871,3.006,874,5.114,908,1.844,914,2.029,925,2.028,939,1.92,941,1.074,1006,2.651,1018,3.408,1023,4.219,1026,2.755,1027,2.126,1028,3.867,1034,3.349,1054,2.755,1056,1.393,1060,0.438,1076,2.126,1077,4.589,1078,3.584,1132,2.557,1160,1.256,1192,2.126,1199,1.979,1221,1.474,1232,2.135,1242,3.006,1359,1.766,1380,4.196,1403,5.432,1480,4.031,1787,1.624,1806,2.557,1856,3.584,1902,3.546,1957,6.323,2012,4.824,2022,5.473,2024,3.26,2025,4.144,2026,4.219,2039,2.276,2047,2.475,2048,3.349,2049,2.475,2060,2.276,2061,2.007,2071,3.47,2074,1.57,2075,2.557,2078,5.114,2083,2.872,2085,3.162,2091,3.899,2098,5.031,2103,3.162,2112,6.303,2121,1.908,2132,2.007,2136,2.007,2139,1.823,2147,3.006,2160,2.126,2167,3.162,2168,3.162,2172,2.276,2198,2.276,2225,1.749,2262,1.57,2409,2.276,2411,2.475,2433,2.276,2494,3.719,2505,4.144,2525,2.276,2604,4.701,2617,3.912,2759,2.276,2823,3.905,3057,3.899,3320,2.276,3331,4.824,3333,3.899,3334,5.473,3335,4.144,3339,3.899,3344,2.475,3349,3.584,3352,5.031,3353,3.899,3354,2.475,3359,2.475,3360,2.475,3363,2.475,3367,3.349,3370,1.823,3371,2.276,3372,3.899,3378,7.069,3379,7.222,3382,2.475,3383,2.475,3384,2.475,3385,3.584,3386,2.475,3387,3.899,3388,3.899,3391,2.475,3490,1.624,4192,2.475,4193,5.414,4194,4.376,4195,5.414,4196,6.143,4197,4.376,4198,6.143,4199,4.376,4200,2.778,4201,2.778,4202,2.778,4203,4.376,4204,2.778,4205,2.778,4206,2.778,4207,2.778,4208,2.778,4209,2.778,4210,2.778,4211,2.778,4212,2.778,4213,2.778,4214,2.778,4215,2.778,4216,2.778,4217,3.584,4218,2.778,4219,2.778,4220,2.778,4221,2.778,4222,2.778,4223,2.778,4224,2.778,4225,2.778,4226,2.778,4227,2.778,4228,2.276,4229,5.414,4230,2.778,4231,2.778,4232,2.475,4233,2.778,4234,2.778,4235,2.778,4236,2.778,4237,2.778,4238,2.778,4239,2.778,4240,2.778,4241,2.778,4242,2.778,4243,4.376,4244,4.376,4245,4.376,4246,7.098,4247,6.143,4248,4.376,4249,6.143,4250,4.376,4251,4.376,4252,4.376,4253,4.376,4254,4.376,4255,4.376,4256,2.778,4257,2.778]],["title/modules/RegisterPageModule.html",[621,1.494,4258,3.659]],["body/modules/RegisterPageModule.html",[3,0.098,4,0.098,9,0.088,39,0.007,189,0.278,190,0.626,192,0.098,193,0.585,552,2.3,604,3.751,619,0.005,620,0.005,621,2.136,623,2.589,624,3.334,625,4.676,626,3.627,627,3.523,628,2.699,633,4.361,634,3.627,635,3.09,637,3.245,638,3.315,639,4.496,640,3.425,641,4.642,642,2.881,643,4.361,644,2.216,648,3.861,731,4.896,789,5.392,874,5.231,1145,4.485,4258,7.503,4259,6.089,4260,6.089,4261,6.089,4262,6.862,4263,6.834,4264,6.089]],["title/modules/RegisterPageRoutingModule.html",[621,1.494,4262,3.454]],["body/modules/RegisterPageRoutingModule.html",[0,1.521,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,604,3.389,619,0.006,620,0.006,623,2.786,628,2.904,637,2.904,638,3.462,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155,4262,6.2,4264,6.552,4265,7.354]],["title/interfaces/SearchOperators.html",[901,0.015,3114,3.283]],["body/interfaces/SearchOperators.html",[3,0.096,4,0.096,9,0.086,20,0.365,21,0.971,39,0.007,41,0.415,42,1.066,60,0.772,189,0.262,192,0.13,597,1.88,619,0.005,620,0.005,901,0.029,902,1.018,905,2.297,912,1.455,1060,1.054,1194,2.952,1206,2.253,1258,2.701,1439,2.101,1444,3.669,1445,3.662,1448,3.583,1449,3.669,1452,3.669,1454,3.5,1793,3.959,1794,3.421,1795,3.523,1836,3.421,1840,3.027,2871,4.055,3034,4.055,3098,4.214,3114,5.998,3115,6.948,3116,5.123]],["title/interfaces/SearchParams.html",[901,0.015,1795,1.928]],["body/interfaces/SearchParams.html",[3,0.097,4,0.097,9,0.087,36,1.266,39,0.007,60,0.769,189,0.263,192,0.13,597,1.902,619,0.005,620,0.005,901,0.029,902,1.03,905,2.323,912,1.46,1060,1.066,1194,2.973,1206,2.28,1258,2.732,1439,2.104,1444,3.695,1445,3.677,1448,3.608,1449,3.695,1452,3.695,1454,3.525,1793,3.987,1794,3.445,1795,3.677,1836,3.445,1840,3.062,2871,4.102,3034,4.102,3046,5.183,3098,5.144,3114,6.028,3115,5.183,3116,6.254,4266,6.772]],["title/interfaces/SearchResult.html",[901,0.015,3958,3.137]],["body/interfaces/SearchResult.html",[0,0.753,3,0.032,4,0.032,5,0.892,9,0.029,11,0.532,12,1.607,14,0.789,15,0.73,16,0.804,18,0.821,20,0.253,21,0.436,27,0.976,28,1.505,31,1.692,33,0.428,35,2.696,39,0.007,40,0.736,41,0.386,44,1.519,46,1.351,47,1.339,53,1.968,55,2.207,57,1.565,60,0.66,70,0.717,72,2.08,75,1.138,77,1.326,106,2.786,116,1.117,120,1.519,122,4.248,129,1.339,131,1.73,137,1.21,138,3.957,142,2.151,143,1.825,152,0.954,166,0.912,189,0.252,190,0.203,191,0.804,192,0.032,193,0.189,197,1.73,204,1.178,205,0.497,206,1.692,207,1.692,208,1.692,209,1.692,212,2.326,223,2.63,227,1.919,229,2.602,235,1.919,236,2.51,293,1.173,294,1.339,310,1.73,318,1.249,356,1.519,369,0.954,375,1.273,394,0.56,545,0.773,561,2.17,570,0.773,586,0.821,597,2.51,607,2.369,619,0.004,620,0.002,644,0.717,660,0.976,661,1.249,662,1.692,669,3.046,670,1.607,673,2.811,677,1.597,679,1.597,686,1.692,688,1.079,689,1.949,690,2.786,691,1.692,692,1.692,693,1.692,695,1.519,706,1.951,717,0.61,721,1.108,732,1.607,734,2.205,735,2.057,736,2.622,737,1.776,738,2.712,763,1.519,801,1.597,803,1.519,805,1.249,807,1.451,809,1.59,811,1.522,825,3.78,827,3.413,901,0.015,902,0.553,904,0.55,908,1.641,912,0.583,914,1.533,916,1.259,924,0.989,929,1.249,936,0.759,939,2.289,941,1.408,982,1.451,992,1.108,1002,1.051,1007,2.622,1041,1.597,1046,2.493,1055,1.339,1056,1.108,1058,1.392,1060,0.348,1095,1.339,1102,2.128,1109,2.852,1116,2.671,1120,1.919,1134,1.932,1188,1.108,1189,1.108,1200,1.025,1214,1,1221,1.173,1226,1.692,1232,2.625,1308,1.108,1311,2.463,1328,1.392,1359,2.17,1374,1.451,1391,2.981,1393,1.597,1439,1.447,1456,0.73,1465,1.477,1466,2.922,1467,1.173,1473,2.98,1478,3.187,1479,0.976,1496,2.292,1545,2.049,1556,0.932,1633,2.057,1638,1.292,1645,1.108,1653,2.292,1673,2.292,1707,3.904,1709,4.15,1716,1.519,1752,1.519,1757,1.21,1807,2.326,1814,1.535,1912,1.339,1963,1.692,1985,0.821,2024,2.463,2063,1.519,2074,2.622,2088,3.615,2103,2.63,2126,1.692,2128,1.597,2133,1.692,2225,3.387,2228,1.519,2230,1.519,2231,1.519,2232,1.519,2233,2.922,2239,1.21,2240,1.607,2265,2.539,2271,2.292,2282,2.855,2363,1.519,2413,1.597,2414,1.597,2437,1.392,2453,1.339,2472,2.922,2485,1.249,2547,1.597,2571,1.292,2603,1.877,2606,1.21,2607,3.046,2608,1.692,2611,1.21,2615,1.692,2624,1.597,2625,3.531,2626,1.108,2627,1.21,2628,1.21,2691,2.292,2697,2.63,2699,1.173,2701,1.597,2708,1.392,2713,1.519,2719,2.292,2726,1.451,2785,2.463,2795,1.451,2889,1.692,2895,1.692,2905,2.63,2928,2.63,2957,1.519,2961,1.051,2993,2.389,3042,2.389,3063,1.692,3280,1.692,3285,3.187,3286,1.519,3295,1.692,3298,1.519,3370,1.451,3434,1.597,3490,1.292,3647,1.692,3658,1.597,3667,1.692,3695,2.922,3701,2.786,3848,1.597,3876,2.389,3886,2.389,3887,1.451,3919,1.597,3950,5.107,3951,1.692,3952,4.406,3953,3.801,3954,1.692,3955,1.692,3956,1.811,3957,1.811,3958,3.531,3959,4.298,3960,1.811,3961,1.811,3962,1.811,3963,2.982,3964,1.692,3965,2.786,3966,1.597,3967,1.692,3968,1.811,3969,1.811,3970,1.692,3971,3.353,3972,1.811,3973,1.811,3974,1.811,3975,1.811,3976,1.811,3977,1.811,3978,4.406,3979,1.692,3980,1.692,3981,1.519,3982,1.692,3983,1.451,3984,1.692,3985,1.811,3986,1.811,3987,1.811,3988,1.811,3989,2.982,3990,1.811,3991,1.811,3992,1.811,3993,2.982,3994,2.982,3995,2.982,3996,3.801,3997,2.982,3998,2.982,3999,2.982,4000,2.982,4001,1.811,4002,1.811,4003,1.811,4004,1.597,4005,2.982,4006,2.982,4007,1.811,4008,1.597,4009,1.811,4010,1.692,4011,1.811,4012,1.811,4013,1.692,4014,1.811,4015,3.552,4016,5.605,4017,4.872,4018,3.801,4019,1.811,4020,1.811,4021,2.786,4022,1.811,4023,2.786,4024,1.811,4025,1.811,4026,1.811,4027,1.811,4028,1.811,4029,1.811,4030,1.811,4031,1.811,4032,2.982,4033,4.552,4034,3.801,4035,2.982,4036,2.982,4037,1.811,4038,1.811,4039,1.692,4040,1.811,4041,3.887,4042,1.811,4043,1.811,4044,3.552,4045,1.811,4046,2.982,4047,1.811,4048,1.811,4049,4.872,4050,1.811,4051,2.982,4052,1.811,4053,1.811,4054,3.801,4055,1.597,4056,1.692,4057,1.811,4058,1.692,4059,1.692,4060,1.811,4061,1.811,4062,1.692,4063,2.982,4064,2.786,4065,1.811,4066,1.692,4067,1.597,4068,1.692,4069,1.811,4070,4.118,4071,1.811,4072,2.982,4073,1.811,4074,1.811,4075,1.811,4076,1.692,4077,1.811,4078,1.811,4079,1.811,4080,1.811,4081,1.811,4082,2.982,4083,1.811,4084,4.406,4085,1.811,4086,1.811,4087,4.118,4088,1.811,4089,1.692,4090,1.811,4091,2.786,4092,1.692,4093,1.692,4094,1.811,4095,1.811,4096,1.811,4097,1.811,4098,2.982,4099,2.786,4100,2.786,4101,1.692,4102,1.597,4103,1.692,4104,1.692,4105,1.811,4106,1.811,4107,1.811,4108,1.811,4109,1.597,4110,1.811,4111,1.811,4112,1.811,4113,1.811,4114,1.811,4115,1.811,4116,3.801,4117,1.811,4118,1.811,4119,1.811,4120,1.811,4121,1.811,4122,1.692,4123,1.811,4124,1.692,4125,1.811,4126,1.811,4127,1.811,4128,1.811,4129,1.811,4130,1.811,4131,1.811,4132,1.692,4133,1.811,4134,1.811,4135,1.811,4136,1.692,4137,1.811,4138,1.811,4139,1.811,4140,1.811,4141,1.811,4142,1.811,4143,2.982,4144,1.811,4145,4.406,4146,1.811,4147,3.801,4148,1.811,4149,1.811,4150,1.811,4151,1.811,4152,1.811,4153,1.811,4154,1.692,4155,1.692,4156,1.811,4157,3.887,4158,2.982,4159,2.786,4160,1.811,4161,1.811,4162,1.811,4163,1.811,4164,1.692,4165,1.811,4166,1.811,4167,1.811,4168,1.811,4169,1.811,4170,1.811,4171,1.811,4172,1.811,4173,1.811,4174,3.801,4175,1.811,4176,3.887,4177,2.786,4178,1.692,4179,1.692,4180,1.811,4181,1.811,4182,1.811,4183,2.982,4184,1.811,4185,1.811,4186,1.811,4187,1.811,4188,1.811,4189,1.811,4190,1.811,4191,1.811]],["title/interfaces/SearchResult-1.html",[394,1.01,901,0.013,3958,2.618]],["body/interfaces/SearchResult-1.html",[0,0.773,3,0.033,4,0.033,9,0.029,11,0.549,12,1.65,14,0.814,15,0.754,16,0.83,18,0.847,20,0.204,21,0.447,27,1.008,28,2.224,33,0.441,35,2.378,39,0.007,41,0.427,46,1.387,53,2.155,55,1.908,57,1.995,60,0.677,64,0.941,70,1.212,75,1.714,77,0.652,91,1.508,109,4.318,116,1.147,119,1.498,122,3.256,137,3.753,138,1.873,140,1.87,142,2.199,143,1.873,150,1.747,152,0.985,154,2.366,166,0.941,189,0.23,190,0.209,191,0.83,192,0.033,193,0.195,204,1.249,212,2.378,227,1.956,229,2.309,235,1.956,236,2.372,259,1.498,263,1.568,268,3.061,272,1.732,273,0.901,277,1.87,286,1.87,288,1.383,311,3.032,314,3.099,316,1.383,317,1.87,318,1.29,321,1.926,322,1.29,324,0.901,329,2.264,330,3.099,331,2.353,332,2.045,333,1.249,334,1.983,335,1.211,337,1.144,338,1.114,343,1.69,344,1.747,347,1.776,349,1.334,352,1.437,353,2.681,354,2.353,355,1.541,356,2.567,357,0.921,368,1.649,370,1.983,371,2.045,372,2.111,375,1.949,376,1.649,378,1.873,381,1.058,385,1.334,386,1.334,387,1.498,388,2.353,393,1.334,406,1.983,418,1.498,419,2.987,422,1.983,434,1.732,435,1.498,447,2.452,448,2.567,450,1.334,451,1.437,473,3.555,479,2.421,481,2.7,511,1.568,561,2.125,570,1.307,584,0.921,597,2.277,607,2.195,619,0.005,620,0.004,640,1.144,673,1.383,689,2.013,732,2.095,734,2.264,735,2.681,736,2.681,737,2.315,765,1.87,766,1.87,767,1.87,802,2.034,803,1.568,805,1.29,806,2.034,809,1.532,811,0.841,825,2.421,827,2.421,901,0.007,902,0.347,908,1.893,916,0.619,924,1.261,934,2.86,936,1.882,939,2.382,941,2.768,992,1.873,1007,1.29,1060,0.359,1079,1.692,1080,3.329,1090,1.498,1102,1.334,1116,0.901,1120,2.237,1134,3.211,1153,1.085,1160,1.032,1188,1.873,1214,1.69,1216,1.498,1232,1.114,1241,1.177,1347,2.034,1359,1.508,1374,1.498,1386,2.518,1393,1.649,1394,2.034,1395,3.329,1396,1.085,1409,1.747,1456,0.754,1478,1.568,1479,1.008,1483,1.87,1491,2.518,1507,1.747,1510,1.649,1556,2.551,1588,1.334,1609,1.87,1640,1.568,1645,2.378,1653,2.353,1707,2.452,1709,3.438,1755,1.058,1813,2.034,1814,1.576,1830,6.111,1894,1.87,1902,1.211,1932,1.334,2071,1.29,2074,1.29,2088,2.681,2111,1.498,2225,4.318,2240,1.008,2265,3.001,2301,1.568,2325,3.329,2326,1.87,2327,3.329,2387,1.29,2415,1.87,2416,1.649,2434,4.915,2438,1.87,2485,1.29,2500,1.747,2603,1.926,2606,1.249,2611,1.249,2626,1.144,2627,1.249,2628,1.249,2662,2.034,2663,2.034,2691,1.437,2697,1.649,2699,1.211,2701,1.649,2719,1.437,2724,1.649,2733,1.437,2784,4.227,2795,2.452,2993,1.498,3273,2.86,3285,2.567,3286,1.568,3299,1.747,3322,1.649,3370,1.498,3463,2.034,3497,2.034,3564,1.747,3643,2.034,3695,4.318,3747,2.86,3863,2.034,3876,1.498,3886,2.452,3887,2.452,3958,4.697,3964,1.747,3965,1.747,3966,1.649,3967,1.747,3970,1.747,3984,1.747,4008,1.649,4013,1.747,4015,3.632,4021,3.632,4023,1.747,4044,1.747,4055,1.649,4056,1.747,4058,1.747,4059,1.747,4062,1.747,4064,4.198,4067,1.649,4070,5.249,4091,2.86,4092,1.747,4093,1.747,4122,1.747,4132,1.747,4157,1.649,4164,1.747,4176,3.428,4177,1.747,4178,1.747,4179,1.747,4228,1.87,4267,2.034,4268,1.87,4269,2.034,4270,7.968,4271,2.283,4272,2.283,4273,2.283,4274,2.283,4275,2.283,4276,2.283,4277,2.283,4278,3.737,4279,2.283,4280,2.283,4281,2.283,4282,2.283,4283,6.601,4284,2.283,4285,2.283,4286,2.283,4287,2.283,4288,2.283,4289,3.737,4290,2.283,4291,2.283,4292,2.283,4293,2.283,4294,3.737,4295,3.737,4296,3.737,4297,3.737,4298,2.283,4299,4.745,4300,2.283,4301,3.329,4302,2.283,4303,2.283,4304,2.283,4305,2.283,4306,2.283,4307,2.283,4308,2.283,4309,2.283,4310,2.283,4311,6.05,4312,2.283,4313,2.034,4314,2.283,4315,2.283,4316,2.283,4317,2.283,4318,2.283,4319,2.283,4320,4.745,4321,2.283,4322,2.283,4323,2.283,4324,2.283,4325,2.283,4326,2.283,4327,2.283,4328,2.283,4329,2.283,4330,4.745,4331,2.283,4332,2.283,4333,2.283,4334,2.283,4335,2.283,4336,4.745,4337,4.745,4338,3.061,4339,2.283,4340,2.283,4341,2.034,4342,2.283,4343,2.283,4344,2.283,4345,2.034,4346,2.283,4347,2.283,4348,2.283,4349,3.737,4350,2.283,4351,2.283,4352,2.283,4353,2.283,4354,2.283,4355,3.737,4356,2.283,4357,2.283,4358,2.283,4359,2.283,4360,2.283,4361,3.737,4362,4.745,4363,4.745,4364,2.034,4365,2.283,4366,2.283,4367,3.737,4368,2.283,4369,7.158,4370,6.497,4371,2.283,4372,4.745,4373,6.859,4374,2.283,4375,2.283,4376,2.283,4377,6.497,4378,2.283,4379,7.807,4380,2.034,4381,2.283,4382,2.283,4383,3.737,4384,2.283,4385,5.484,4386,2.034,4387,4.745,4388,2.283,4389,2.283,4390,2.283,4391,2.283,4392,2.283,4393,5.484,4394,2.283,4395,2.283,4396,2.283,4397,3.737,4398,2.283,4399,2.283,4400,2.283,4401,2.283,4402,3.737,4403,3.737,4404,3.737,4405,6.05,4406,2.283,4407,5.484,4408,2.283,4409,2.283,4410,3.737,4411,2.283,4412,2.283,4413,3.737,4414,2.283,4415,4.745,4416,2.283,4417,4.745,4418,3.737,4419,2.283,4420,2.283,4421,2.283,4422,2.283,4423,2.283,4424,2.283,4425,2.283,4426,3.737,4427,7.158,4428,2.034,4429,2.283,4430,2.283,4431,2.283,4432,2.283,4433,6.859,4434,3.737,4435,2.283,4436,2.283,4437,2.283,4438,2.283,4439,4.745,4440,2.283,4441,2.283,4442,2.283,4443,2.283,4444,3.061,4445,2.283,4446,2.283,4447,3.737,4448,2.283,4449,3.737,4450,2.283,4451,2.283,4452,2.283,4453,2.283,4454,2.283,4455,3.737,4456,2.283,4457,2.283,4458,2.283,4459,2.283,4460,2.283,4461,2.283,4462,2.283,4463,2.283,4464,2.283,4465,2.283,4466,3.737,4467,2.283,4468,2.283,4469,2.283,4470,2.283,4471,2.283,4472,2.283,4473,2.283,4474,2.283,4475,2.283,4476,3.737,4477,2.283,4478,4.745,4479,2.034,4480,1.87,4481,2.283,4482,2.283,4483,2.283,4484,3.737,4485,2.034,4486,2.283,4487,6.05,4488,2.283,4489,2.283,4490,2.283,4491,2.283,4492,2.283,4493,2.283,4494,2.283,4495,2.283,4496,3.329,4497,2.283,4498,2.283,4499,2.283,4500,2.283,4501,2.283,4502,2.283]],["title/interfaces/SearchSuggestion.html",[901,0.015,3959,3.454]],["body/interfaces/SearchSuggestion.html",[0,0.746,3,0.031,4,0.031,5,0.882,9,0.028,11,0.526,12,1.593,14,0.78,15,0.722,16,0.796,18,0.812,20,0.251,21,0.432,27,0.966,28,1.493,31,1.674,33,0.423,35,2.679,39,0.007,40,0.802,41,0.422,42,0.627,44,1.502,46,1.339,47,1.325,53,1.958,55,2.201,57,1.554,60,0.699,70,0.709,72,2.068,75,1.128,77,1.316,106,2.761,116,1.107,120,1.502,122,4.081,129,1.325,131,1.715,137,1.197,138,3.944,142,2.134,143,1.808,152,0.943,166,0.902,189,0.251,190,0.2,191,0.796,192,0.031,193,0.187,197,1.715,204,1.175,205,0.492,206,1.674,207,1.674,208,1.674,209,1.674,212,2.308,223,2.607,227,1.906,229,2.593,235,1.906,236,2.505,293,1.161,294,1.325,310,1.715,318,1.236,356,1.502,369,0.943,375,1.265,394,0.554,545,0.765,561,2.164,570,0.765,586,0.812,597,2.505,607,2.391,619,0.004,620,0.002,644,0.709,660,0.966,661,1.236,662,1.674,669,3.022,670,1.593,673,2.79,677,1.58,679,1.58,686,1.674,688,1.067,689,1.946,690,2.761,691,1.674,692,1.674,693,1.674,695,1.502,706,1.942,717,0.604,721,1.096,732,1.593,734,2.186,735,2.038,736,2.602,737,1.76,738,2.691,763,1.502,801,1.58,803,1.502,805,1.236,807,1.435,809,1.588,811,1.515,825,3.646,827,3.107,901,0.015,902,0.549,904,0.544,908,1.942,912,0.578,914,1.521,916,1.249,924,1.238,929,1.236,936,0.75,939,2.279,941,1.395,982,1.435,992,1.096,1002,1.039,1007,2.602,1041,1.58,1046,2.477,1055,1.325,1056,1.096,1058,1.377,1060,0.344,1095,1.325,1102,2.108,1109,2.839,1116,2.659,1120,1.911,1134,1.915,1188,1.096,1189,1.096,1200,1.013,1214,0.989,1221,1.161,1226,1.674,1232,2.607,1308,1.096,1311,2.444,1328,1.377,1359,2.156,1374,1.435,1391,2.964,1393,1.58,1439,1.44,1456,0.722,1465,1.466,1466,2.899,1467,1.161,1473,2.967,1478,3.163,1479,0.966,1496,2.271,1545,2.033,1556,0.922,1633,2.038,1638,1.278,1645,1.096,1653,2.271,1673,2.271,1707,3.881,1709,4.139,1716,1.502,1752,1.502,1757,1.197,1807,2.308,1814,1.521,1912,1.325,1963,1.674,1985,0.812,2024,2.444,2063,1.502,2074,2.602,2088,3.596,2103,2.607,2126,1.674,2128,1.58,2133,1.674,2225,4.238,2228,1.502,2230,1.502,2231,1.502,2232,1.502,2233,2.899,2239,1.197,2240,1.593,2265,2.52,2271,2.271,2282,2.836,2363,1.502,2413,1.58,2414,1.58,2437,1.377,2453,1.325,2472,2.899,2485,1.236,2547,1.58,2571,1.278,2603,1.86,2606,1.197,2607,3.022,2608,1.674,2611,1.197,2615,1.674,2624,1.58,2625,3.507,2626,1.096,2627,1.197,2628,1.197,2691,2.271,2697,2.607,2699,1.161,2701,1.58,2708,1.377,2713,1.502,2719,2.271,2726,1.435,2785,2.444,2795,1.435,2889,1.674,2895,1.674,2905,2.607,2928,2.607,2957,1.502,2961,1.039,2993,2.368,3042,2.368,3063,1.674,3280,1.674,3285,3.163,3286,1.502,3295,1.674,3298,1.502,3370,1.435,3434,1.58,3490,1.278,3647,1.674,3658,1.58,3667,1.674,3695,2.899,3701,2.761,3848,1.58,3876,2.368,3886,2.368,3887,1.435,3919,1.58,3950,4.599,3951,1.674,3952,4.377,3953,3.772,3954,1.674,3955,1.674,3956,1.791,3957,1.791,3958,3.022,3959,4.599,3960,1.791,3961,1.791,3962,1.791,3963,2.955,3964,1.674,3965,2.761,3966,1.58,3967,1.674,3968,1.791,3969,1.791,3970,1.674,3971,3.327,3972,1.791,3973,1.791,3974,1.791,3975,1.791,3976,1.791,3977,1.791,3978,4.377,3979,1.674,3980,1.674,3981,1.502,3982,1.674,3983,1.435,3984,1.674,3985,1.791,3986,1.791,3987,1.791,3988,1.791,3989,2.955,3990,1.791,3991,1.791,3992,1.791,3993,2.955,3994,2.955,3995,2.955,3996,3.772,3997,2.955,3998,2.955,3999,2.955,4000,2.955,4001,1.791,4002,1.791,4003,1.791,4004,1.58,4005,2.955,4006,2.955,4007,1.791,4008,1.58,4009,1.791,4010,1.674,4011,1.791,4012,1.791,4013,1.674,4014,1.791,4015,3.525,4016,5.582,4017,4.843,4018,3.772,4019,1.791,4020,1.791,4021,2.761,4022,1.791,4023,2.761,4024,1.791,4025,1.791,4026,1.791,4027,1.791,4028,1.791,4029,1.791,4030,1.791,4031,1.791,4032,2.955,4033,4.526,4034,3.772,4035,2.955,4036,2.955,4037,1.791,4038,1.791,4039,1.674,4040,1.791,4041,3.861,4042,1.791,4043,1.791,4044,3.525,4045,1.791,4046,2.955,4047,1.791,4048,1.791,4049,4.843,4050,1.791,4051,2.955,4052,1.791,4053,1.791,4054,3.772,4055,1.58,4056,1.674,4057,1.791,4058,1.674,4059,1.674,4060,1.791,4061,1.791,4062,1.674,4063,2.955,4064,2.761,4065,1.791,4066,1.674,4067,1.58,4068,1.674,4069,1.791,4070,4.09,4071,1.791,4072,2.955,4073,1.791,4074,1.791,4075,1.791,4076,1.674,4077,1.791,4078,1.791,4079,1.791,4080,1.791,4081,1.791,4082,2.955,4083,1.791,4084,4.377,4085,1.791,4086,1.791,4087,4.09,4088,1.791,4089,1.674,4090,1.791,4091,2.761,4092,1.674,4093,1.674,4094,1.791,4095,1.791,4096,1.791,4097,1.791,4098,2.955,4099,2.761,4100,2.761,4101,1.674,4102,1.58,4103,1.674,4104,1.674,4105,1.791,4106,1.791,4107,1.791,4108,1.791,4109,1.58,4110,1.791,4111,1.791,4112,1.791,4113,1.791,4114,1.791,4115,1.791,4116,3.772,4117,1.791,4118,1.791,4119,1.791,4120,1.791,4121,1.791,4122,1.674,4123,1.791,4124,1.674,4125,1.791,4126,1.791,4127,1.791,4128,1.791,4129,1.791,4130,1.791,4131,1.791,4132,1.674,4133,1.791,4134,1.791,4135,1.791,4136,1.674,4137,1.791,4138,1.791,4139,1.791,4140,1.791,4141,1.791,4142,1.791,4143,2.955,4144,1.791,4145,4.377,4146,1.791,4147,3.772,4148,1.791,4149,1.791,4150,1.791,4151,1.791,4152,1.791,4153,1.791,4154,1.674,4155,1.674,4156,1.791,4157,3.861,4158,2.955,4159,2.761,4160,1.791,4161,1.791,4162,1.791,4163,1.791,4164,1.674,4165,1.791,4166,1.791,4167,1.791,4168,1.791,4169,1.791,4170,1.791,4171,1.791,4172,1.791,4173,1.791,4174,3.772,4175,1.791,4176,3.861,4177,2.761,4178,1.674,4179,1.674,4180,1.791,4181,1.791,4182,1.791,4183,2.955,4184,1.791,4185,1.791,4186,1.791,4187,1.791,4188,1.791,4189,1.791,4190,1.791,4191,1.791]],["title/injectables/ShareService.html",[1147,0.956,4503,3.659]],["body/injectables/ShareService.html",[3,0.089,4,0.089,9,0.08,20,0.337,25,1.47,28,2.734,33,1.196,36,1.577,38,1.631,39,0.007,40,0.878,41,0.481,42,0.99,48,1.327,49,2.652,60,0.733,89,4.47,109,5.56,189,0.244,190,0.567,192,0.089,193,0.53,194,4.06,202,5.067,204,0.86,205,1.987,224,4.427,227,2.206,228,6.887,229,2.602,235,2.206,236,2.171,238,5.067,280,1.799,432,7.234,619,0.005,620,0.005,644,2.006,689,1.804,828,5.309,913,4.093,1116,2.443,1147,1.546,1149,2.443,1259,1.899,1556,3.259,2387,3.495,2476,5.511,2724,4.47,3649,7.097,4503,5.916,4504,5.511,4505,7.73,4506,7.73,4507,6.186,4508,6.186,4509,7.73,4510,6.186,4511,7.73,4512,7.73,4513,6.186,4514,5.511,4515,6.887,4516,6.186,4517,7.73,4518,6.186,4519,7.73,4520,7.73,4521,7.73,4522,6.186,4523,6.186,4524,7.73,4525,6.186,4526,7.73,4527,6.186,4528,6.186]],["title/modules/SharedModule.html",[621,1.494,731,2.464]],["body/modules/SharedModule.html",[2,2.57,3,0.062,4,0.062,9,0.056,39,0.007,91,2.459,189,0.282,190,0.397,191,1.575,192,0.062,193,0.371,439,3.229,552,1.457,560,3.727,561,1.849,569,3.809,572,3.727,574,1.871,575,3.648,578,3.727,580,2.262,581,3.727,584,3.727,588,3.727,591,3.648,594,3.727,599,3.727,600,3.727,606,3.572,608,2.357,609,3.727,610,3.648,615,2.57,616,3.648,619,0.004,620,0.004,621,1.353,623,1.64,624,2.112,625,3.745,626,2.297,627,2.231,628,2.786,633,3.235,634,2.297,635,1.958,637,1.709,638,2.459,639,3.336,640,2.17,641,3.444,642,1.825,643,3.235,644,1.404,645,2.53,646,1.867,647,1.911,650,2.622,654,3.235,731,5.192,789,4.001,922,3.313,954,3.546,1061,3.838,1062,5.082,2011,3.313,2373,6.675,2374,4.404,2390,3.313,2965,3.546,3258,3.546,3408,6.675,3431,3.313,3546,3.546,3597,6.675,3635,3.546,3646,3.313,4268,3.546,4529,3.857,4530,3.857,4531,3.857,4532,6.096,4533,7.056,4534,4.329,4535,4.329,4536,4.329,4537,6.096,4538,4.329,4539,4.329,4540,4.329,4541,3.546,4542,6.096,4543,4.329,4544,4.329,4545,4.329,4546,4.329,4547,4.329,4548,3.857,4549,4.329,4550,4.329,4551,7.659,4552,4.329,4553,4.329,4554,4.329,4555,4.329,4556,4.329,4557,4.329,4558,4.329,4559,4.329,4560,6.096]],["title/interfaces/SignInPayload.html",[901,0.015,2746,2.215]],["body/interfaces/SignInPayload.html",[3,0.104,4,0.104,9,0.094,20,0.396,21,1.02,39,0.006,41,0.436,56,3.57,60,0.767,192,0.122,205,1.634,574,2.774,619,0.006,620,0.006,717,2.004,901,0.027,902,1.104,908,2.004,917,2.27,918,2.229,919,2.311,2746,3.948,2750,3.284,3023,5.558,3415,5.948,3422,5.948,4561,5.948,4562,7.589,4563,7.589,4564,6.47,4565,6.47,4566,6.47]],["title/interfaces/SignInPayload-1.html",[394,1.01,901,0.013,2746,1.849]],["body/interfaces/SignInPayload-1.html",[3,0.092,4,0.092,9,0.083,20,0.349,21,0.945,39,0.007,40,0.667,41,0.404,56,3.743,60,0.789,82,3.4,189,0.185,192,0.128,205,1.777,574,2.87,619,0.005,620,0.005,706,2.18,717,1.768,901,0.029,902,0.974,904,1.595,905,2.71,907,4.4,908,2.18,912,1.472,914,2.61,915,3.744,916,2.571,917,2.002,918,1.966,919,2.514,924,1.178,2140,3.744,2394,4.072,2683,3.211,2746,3.661,2750,2.897,2788,4.204,2823,3.744,2826,4.033,2961,3.045,2962,3.505,3007,2.701,4567,4.629,4568,4.903,4569,4.903,4570,3.302,4571,3.4,4572,3.619,4573,3.619,4574,3.619,4575,3.619,4576,4.629,4577,4.4,4578,4.903,4579,4.903]],["title/interfaces/SignUpPayload.html",[901,0.015,2750,2.162]],["body/interfaces/SignUpPayload.html",[3,0.097,4,0.097,9,0.087,20,0.369,21,0.977,39,0.007,40,0.913,41,0.503,42,0.959,56,3.464,60,0.783,192,0.117,205,1.522,574,2.692,619,0.005,620,0.005,706,2.421,717,1.866,901,0.026,902,1.028,908,2.514,913,3.784,917,2.114,918,2.076,919,2.153,2140,5.126,2746,3.134,2750,3.692,2823,5.126,2826,5.522,3023,5.176,3415,5.539,3422,5.539,4561,5.539,4562,7.275,4563,7.275,4564,6.026,4565,6.026,4566,6.026,4576,6.337]],["title/interfaces/SignUpPayload-1.html",[394,1.01,901,0.013,2750,1.804]],["body/interfaces/SignUpPayload-1.html",[3,0.087,4,0.087,9,0.079,20,0.332,21,0.916,39,0.007,40,0.914,41,0.485,56,3.702,60,0.791,82,3.233,189,0.176,192,0.126,205,1.722,574,2.835,619,0.005,620,0.005,706,2.498,717,1.681,901,0.028,902,0.926,904,1.517,905,2.627,907,4.184,908,2.113,912,1.45,914,2.529,915,3.56,916,2.543,917,1.904,918,1.87,919,2.437,924,1.12,2140,5.133,2394,3.947,2683,3.054,2746,2.823,2750,3.462,2788,3.998,2823,5.133,2826,5.53,2961,2.896,2962,3.334,3007,2.569,4567,4.402,4568,4.663,4569,4.663,4570,3.14,4571,3.233,4572,3.442,4573,3.442,4574,3.442,4575,3.442,4576,6.346,4577,4.184,4578,4.663,4579,4.663]],["title/interfaces/Small.html",[901,0.015,918,1.467]],["body/interfaces/Small.html",[3,0.074,4,0.074,9,0.067,20,0.284,21,0.827,33,1.006,39,0.007,40,0.955,41,0.484,60,0.783,189,0.256,190,0.476,192,0.134,193,0.445,204,0.961,205,2.064,308,1.819,324,3.623,355,3.783,357,3.702,619,0.005,620,0.005,655,3.809,660,2.296,689,1.77,717,2.142,781,2.845,783,2.472,788,2.193,790,2.144,809,1.31,811,1.17,901,0.03,902,0.791,904,1.295,912,1.58,916,1.41,917,2.426,918,2.539,919,2.471,924,0.956,1032,3.125,1057,2.606,1060,0.819,1105,4.12,1111,2.606,1292,3.787,1439,1.112,1456,1.718,1462,2.351,1465,1.655,1762,2.76,1897,1.855,2050,2.296,2241,3.125,2243,2.537,2250,2.606,2251,3.787,2255,2.68,2256,2.606,2259,2.606,2260,2.68,2261,2.68,2274,2.606,2420,4.87,2829,2.193,2831,2.193,2924,3.039,2996,3.039,2997,2.938,2998,3.782,2999,2.938,3000,3.15,3001,3.15,3002,3.15,3003,3.15,3004,5.558,3005,5.558,3006,3.15,3007,2.193,3008,5.558,3009,5.184,3010,3.15,3011,3.15,3012,2.938,3013,3.15,3014,3.15,3015,3.15,3016,3.15,3017,3.15,3018,3.039,3019,3.15,3020,3.15,3021,3.15]],["title/interfaces/Song.html",[607,1.274,901,0.015]],["body/interfaces/Song.html",[3,0.092,4,0.092,9,0.083,20,0.352,21,0.95,39,0.007,40,0.933,41,0.502,42,1.125,60,0.784,189,0.186,192,0.092,205,1.452,545,3.136,607,2.115,619,0.005,620,0.005,717,1.781,901,0.021,902,0.981,904,1.976,905,2.948,908,2.474,912,1.502,913,3.678,915,3.772,916,2.496,917,2.017,918,1.981,919,2.054,1612,5.883,2957,6.157,2958,6.861,3588,6.477,4580,5.75,4581,7.343,4582,7.987,4583,7.987]],["title/components/SongDetailModalComponent.html",[0,0.989,606,1.848]],["body/components/SongDetailModalComponent.html",[0,1.285,1,1.367,2,2.185,3,0.05,4,0.05,5,1.397,6,1.528,7,1.528,8,1.528,9,0.045,11,1.247,12,2.742,13,1.367,14,3.454,15,3.192,16,1.885,18,1.923,20,0.189,21,0.62,25,0.985,27,3.044,28,2.014,33,1.002,36,1.702,38,1.499,39,0.007,40,0.895,41,0.44,42,0.91,48,1.38,49,2.659,60,0.537,70,1.122,77,2.361,78,2.446,154,1.493,166,2.137,189,0.249,190,0.317,192,0.05,193,0.296,204,1.148,227,1.235,229,1.744,235,1.235,236,1.455,291,2.179,301,2.378,309,3.509,310,1.645,311,3.113,312,3.044,315,2.378,316,2.097,320,2.305,327,2.65,329,3.139,330,3.896,331,2.179,332,2.835,333,2.835,343,2.343,355,2.137,357,1.397,370,1.837,371,1.894,372,2.928,374,1.689,375,0.819,377,1.956,378,1.735,381,1.604,394,1.87,406,2.75,411,3.028,419,3.262,422,2.75,424,2.097,434,1.604,439,2.185,442,2.272,473,1.894,479,1.528,506,2.272,507,2.272,508,3.966,529,2.288,545,1.813,552,1.165,553,2.288,554,1.397,555,1.528,557,1.528,558,1.397,559,1.528,560,1.397,561,2.105,562,2.288,563,1.397,564,3.421,565,1.367,566,2.288,567,1.367,568,1.528,569,1.427,570,1.211,571,1.528,572,1.397,573,1.528,574,1.062,575,1.367,576,1.493,577,1.528,578,1.397,579,1.493,580,1.285,581,1.397,582,1.397,583,3.044,584,1.397,585,1.528,586,1.285,587,1.528,588,1.397,589,1.367,590,1.528,591,1.367,592,1.427,593,1.528,594,1.397,595,1.493,596,1.367,597,1.744,598,1.528,599,1.397,600,1.397,601,1.367,602,1.528,603,1.397,604,1.367,605,1.528,606,2.666,607,2.529,608,3.796,609,1.397,610,1.367,611,1.367,612,1.528,613,1.427,614,1.493,615,1.46,616,1.367,617,1.493,618,1.528,619,0.003,620,0.003,642,1.46,644,1.122,646,1.493,647,1.528,673,3.139,689,1.807,709,1.784,732,3.044,737,3.364,809,0.875,811,1.166,825,2.742,827,2.742,901,0.011,904,0.862,908,1.43,912,1.183,925,2.878,929,1.956,932,3.554,941,2.004,966,2.75,992,1.735,1002,1.645,1003,2.378,1013,2.179,1014,3.509,1015,4.266,1016,3.559,1018,2.179,1020,4.487,1028,2.179,1029,3.028,1030,3.896,1046,2.878,1054,2.179,1055,2.097,1058,2.179,1060,0.545,1061,5.772,1086,4.754,1090,2.272,1102,2.023,1109,1.46,1116,1.367,1120,0.907,1134,2.75,1194,2.259,1206,1.744,1276,1.837,1328,3.91,1358,2.65,1359,1.397,1391,1.735,1464,1.397,1496,3.91,1545,1.528,1556,2.185,1669,3.559,1763,2.272,1794,1.46,1795,2.091,1814,2.185,2027,2.097,2109,3.028,2121,2.378,2139,2.272,2147,2.378,2240,1.528,2262,1.956,2397,4.617,2578,4.341,2655,2.272,2656,2.272,2658,2.272,2659,2.501,2660,3.401,3098,2.179,3617,4.244,3653,3.084,3747,2.65,3929,2.378,3983,4.076,4055,3.744,4068,5.277,4338,2.835,4584,6.017,4585,5.533,4586,5.533,4587,5.533,4588,5.533,4589,5.182,4590,5.182,4591,5.182,4592,4.617,4593,5.182,4594,3.462,4595,3.462,4596,3.462,4597,3.966,4598,3.462,4599,3.462,4600,3.462,4601,3.462,4602,3.462,4603,4.617,4604,3.462,4605,3.462,4606,3.462,4607,3.462,4608,4.617,4609,3.462,4610,3.462,4611,3.462,4612,3.462,4613,3.084,4614,3.509,4615,2.835,4616,2.65,4617,4.617,4618,3.084,4619,2.835,4620,2.65,4621,3.084,4622,3.084,4623,3.084,4624,3.084,4625,3.084,4626,3.084,4627,3.084,4628,5.182,4629,3.462,4630,3.462,4631,3.462,4632,3.462,4633,3.462]],["title/injectables/SongEnrichmentService.html",[736,2.701,1147,0.956]],["body/injectables/SongEnrichmentService.html",[3,0.076,4,0.076,9,0.068,20,0.289,25,1.332,28,2.542,33,1.026,36,1.559,38,1.613,39,0.007,40,0.868,41,0.426,42,0.979,48,1.346,55,2.09,60,0.413,72,2.45,116,1.628,142,2.459,143,2.659,189,0.241,190,0.486,192,0.1,193,0.454,194,3.482,204,1.205,227,1.892,229,1.786,235,1.892,236,2.342,280,1.543,375,1.973,561,2.333,607,2.638,619,0.005,620,0.005,732,3.931,736,3.957,809,1.556,825,3.681,827,3.681,901,0.017,904,1.321,932,4.891,992,3.511,1059,4.936,1060,0.836,1116,2.095,1134,3.717,1147,1.401,1149,2.095,1259,1.628,1359,2.141,1386,2.816,1439,1.854,1465,1.689,1466,3.34,1474,4.346,1479,2.343,1491,3.717,1507,4.061,1515,3.644,1545,3.092,1556,2.953,1605,2.998,1645,2.659,1673,3.34,1814,3.754,2239,2.903,2282,3.717,2578,4.409,2655,4.596,2656,4.596,2658,4.596,2660,5.472,2713,5.954,2714,4.346,2715,4.727,2716,6.24,2717,4.727,2718,6.24,2719,3.34,2720,4.727,2721,4.727,2722,4.727,2723,4.727,2724,3.834,2725,4.061,2726,3.482,2727,4.727,2728,6.24,2729,6.24,2730,5.361,2731,6.24,2732,4.727,2733,3.34,4634,7.004,4635,7.004,4636,7.004,4637,4.727,4638,5.306,4639,5.306,4640,5.306,4641,5.306]],["title/components/SongGridCardComponent.html",[0,0.989,609,1.928]],["body/components/SongGridCardComponent.html",[0,1.094,1,1.058,2,1.793,3,0.061,4,0.038,5,1.081,6,1.183,7,1.183,8,1.183,9,0.035,11,1.024,12,2.335,13,1.058,14,3.365,15,3.108,16,1.547,18,1.579,20,0.288,21,0.509,25,0.809,27,2.658,28,1.715,33,0.823,36,1.686,38,0.518,39,0.007,40,0.627,41,0.357,42,0.315,46,0.995,48,1.344,49,2.607,53,0.779,55,1.605,57,1.237,70,0.869,75,0.838,77,1.997,78,2.069,91,1.081,105,2.327,109,1.687,119,3.951,152,1.156,154,1.156,166,3.57,189,0.212,190,0.245,192,0.038,193,0.229,197,1.274,204,0.591,212,2.65,224,3.018,229,0.902,236,1.485,281,2.921,285,4.135,288,3.203,289,2.192,291,3.79,293,1.422,309,3.812,310,2.022,311,3.291,312,3.541,321,3.602,322,2.403,324,2.377,326,3.456,330,3.401,332,3.294,333,2.893,334,3.709,335,3.195,336,3.401,337,3.291,338,3.409,343,2.391,345,2.403,347,2.513,348,1.687,349,4.281,350,3.79,352,2.678,353,2.403,354,1.687,355,3.02,357,3.41,364,3.978,367,2.195,368,3.073,369,1.156,370,2.806,371,2.893,372,2.403,374,2.58,375,2.026,377,2.403,378,3.018,385,3.09,386,3.09,387,2.791,388,2.678,389,1.623,392,2.791,394,0.679,397,1.566,405,3.518,406,4.033,410,1.936,411,1.566,418,1.759,419,2.678,422,3.485,423,2.486,424,2.576,425,1.759,426,3.073,427,2.921,429,1.566,430,1.936,431,3.951,434,2.451,435,2.791,439,4.122,442,1.759,449,2.387,450,2.486,451,1.687,452,2.387,455,1.936,461,2.791,462,2.791,463,2.791,464,1.759,465,1.841,475,1.841,479,2.335,481,1.936,492,1.623,499,1.936,501,1.759,502,1.936,503,1.759,504,1.841,529,1.878,545,1.85,552,0.902,553,1.878,554,1.081,555,1.183,557,1.183,558,1.081,559,1.183,560,1.081,561,2.145,562,1.878,563,1.081,564,3.085,565,1.058,566,1.878,567,1.058,568,1.183,569,1.105,570,0.937,571,1.183,572,1.081,573,1.183,574,0.822,575,1.058,576,1.156,577,1.183,578,1.081,579,2.832,580,0.995,581,1.081,582,1.081,583,2.658,584,1.081,585,1.183,586,0.995,587,1.183,588,1.081,589,1.058,590,1.183,591,1.058,592,1.105,593,1.183,594,1.081,595,2.281,596,1.058,597,1.963,598,1.183,599,1.081,600,1.081,601,1.058,602,1.183,603,1.081,604,1.058,605,1.183,606,1.036,607,2.465,608,1.036,609,2.429,610,1.058,611,1.058,612,1.183,613,1.105,614,1.156,615,1.13,616,1.058,617,1.156,618,1.183,619,0.003,620,0.003,635,1.212,689,1.832,709,3.602,711,1.514,713,2.257,717,1.174,732,3.085,733,4.008,805,1.514,809,0.452,811,1.648,827,1.878,908,1.459,925,2.451,926,4.135,927,5.031,929,1.514,932,3.385,939,2.052,941,1.036,955,2.195,956,5.364,957,3.789,958,4.711,960,5.364,961,5.364,962,5.364,963,5.364,964,4.931,966,2.257,967,3.073,968,2.482,974,2.387,975,2.387,977,2.387,979,2.387,981,2.387,982,1.759,986,3.789,989,3.632,992,1.343,995,2.387,996,2.387,997,2.195,998,2.387,999,3.789,1000,2.387,1001,2.387,1002,1.274,1003,1.841,1004,2.387,1005,1.841,1006,2.576,1007,1.514,1008,4.35,1009,4.711,1010,4.711,1011,2.387,1046,1.242,1055,1.623,1060,0.422,1095,1.623,1116,1.058,1134,2.257,1241,2.192,1318,5.364,1350,2.387,1359,1.081,1369,3.073,1477,1.381,1518,1.841,1545,2.899,1607,1.841,1612,1.759,1635,2.051,1640,2.921,1653,3.79,1702,1.759,2109,1.566,2111,1.759,2130,2.051,2154,2.195,2158,3.255,2159,3.484,2173,2.051,2210,2.195,2214,2.051,2437,1.687,2586,1.936,2587,2.051,2588,2.051,2596,2.051,2599,2.051,2603,2.726,2606,1.466,2611,2.893,2626,3.018,2627,1.466,2628,1.466,2632,1.936,2691,1.687,2699,2.257,3059,2.051,3275,2.195,3277,2.051,3298,4.135,3322,1.936,3472,2.387,3547,4.711,3566,2.195,3567,2.387,3568,2.195,3569,2.387,3570,2.195,3571,2.387,3572,2.387,3573,3.789,3574,2.387,3575,2.195,3576,2.387,3579,2.387,3580,2.387,3581,3.484,3582,2.387,3583,2.387,3584,2.387,3585,2.387,3617,3.484,4345,3.789,4428,2.387,4541,7.471,4584,5.986,4637,2.387,4642,5.288,4643,5.364,4644,4.711,4645,4.253,4646,2.68,4647,2.68,4648,2.68,4649,2.68,4650,2.68,4651,2.68,4652,2.68,4653,2.68,4654,2.68,4655,2.68,4656,2.68,4657,4.253,4658,4.253,4659,2.68,4660,2.68,4661,2.68,4662,3.789,4663,2.387,4664,2.68,4665,2.68,4666,2.68,4667,4.253,4668,2.68,4669,2.68,4670,2.68,4671,2.68,4672,2.68,4673,2.68,4674,4.253,4675,4.253,4676,4.253,4677,4.253,4678,2.387,4679,4.253,4680,2.387,4681,4.253,4682,4.253,4683,4.253,4684,2.68,4685,2.68,4686,2.68]],["title/interfaces/SongWithArtists.html",[901,0.015,4614,2.701]],["body/interfaces/SongWithArtists.html",[0,1.2,3,0.036,4,0.036,5,1.013,9,0.032,11,0.604,12,1.783,14,0.896,15,0.829,16,0.913,18,0.932,20,0.276,21,0.483,27,1.109,28,2.696,33,0.486,35,2.538,39,0.007,40,0.42,41,0.259,42,0.474,49,0.861,53,1.975,55,1.695,57,1.174,60,0.495,72,0.878,75,2.511,82,3.079,91,1.629,109,3.188,111,1.814,113,4.512,116,1.239,119,1.648,133,2.65,142,2.347,152,2.742,189,0.258,190,0.23,191,0.913,192,0.036,193,0.215,197,3.021,203,4.752,204,1.34,205,1.43,212,2.024,213,3.478,220,2.237,224,3.186,227,2.069,229,3.098,235,2.069,236,2.595,238,2.057,259,1.648,272,1.164,273,0.992,277,2.057,314,1.419,318,1.419,326,1.109,347,1.919,369,1.083,375,1.86,381,1.871,394,1.022,432,3.307,453,2.65,514,1.922,545,1.412,561,1.52,570,0.878,579,1.083,596,0.992,597,2.663,606,1.958,607,2.407,608,1.958,610,0.992,619,0.003,620,0.003,635,1.135,644,0.814,646,1.083,647,1.109,661,1.419,670,1.783,673,3.851,688,1.225,689,1.931,706,1.754,732,1.783,733,3.174,735,2.281,737,1.97,738,2.959,805,1.419,809,1.576,811,1.305,825,3.151,827,2.236,885,1.814,901,0.008,902,0.382,904,1.005,908,0.693,912,0.647,914,1.334,916,1.095,924,1.169,929,1.419,932,3.949,936,2.697,939,0.785,959,1.922,964,2.057,969,1.922,992,1.259,1006,1.521,1014,2.281,1029,1.467,1030,2.281,1044,2.237,1046,1.871,1055,1.521,1056,1.259,1058,1.581,1060,0.636,1061,2.542,1062,2.542,1079,1.44,1084,2.773,1085,2.917,1086,1.922,1088,1.814,1089,2.917,1090,1.648,1093,3.597,1095,2.446,1100,2.773,1102,3.715,1116,1.594,1120,1.058,1132,1.467,1153,1.193,1186,1.922,1190,1.871,1201,3.652,1214,1.135,1232,1.97,1239,1.581,1241,1.294,1325,1.922,1326,3.09,1328,1.581,1359,2.564,1361,1.814,1378,1.922,1379,1.922,1380,3.278,1386,4.065,1387,1.922,1396,3.021,1465,0.799,1466,1.581,1467,1.333,1473,1.059,1477,1.294,1518,1.725,1521,4.366,1529,1.922,1545,2.998,1549,2.917,1556,1.702,1594,2.057,1607,1.725,1610,2.057,1616,1.922,1633,2.861,1638,2.36,1640,1.725,1643,2.057,1672,3.307,1673,1.581,1685,1.922,1686,1.922,1701,1.922,1702,2.65,1809,1.374,1814,2.446,1815,2.237,1964,2.237,2024,2.143,2027,2.446,2071,2.861,2073,2.65,2075,2.36,2090,3.09,2109,1.467,2111,1.648,2239,1.374,2240,1.109,2267,1.725,2282,1.333,2356,2.237,2363,2.773,2379,2.237,2381,2.057,2382,2.237,2383,2.237,2384,2.237,2385,2.237,2386,2.237,2387,1.419,2388,2.237,2413,1.814,2414,1.814,2437,2.542,2452,1.922,2494,1.725,2508,2.237,2571,1.467,2578,4.673,2582,3.597,2586,1.814,2587,1.922,2588,1.922,2593,2.237,2596,4.44,2599,1.922,2603,2.081,2604,3.09,2606,1.374,2611,1.374,2617,2.917,2618,2.237,2619,2.237,2621,2.237,2624,4.191,2625,2.65,2626,1.259,2627,1.374,2628,1.374,2649,3.597,2650,2.237,2655,1.648,2656,1.648,2658,1.648,2659,1.814,2660,3.323,2691,3.188,2699,4.065,2719,2.542,2785,2.688,2840,2.057,2928,1.814,2953,2.542,3059,1.922,3133,2.057,3273,1.922,3277,1.922,3321,2.237,3335,1.922,3367,3.09,3378,2.057,3488,3.597,3490,3.39,3570,3.307,3575,2.057,3594,1.922,3657,2.237,3658,1.814,3702,2.057,3704,2.057,3714,2.057,3848,1.814,3876,2.65,3877,3.307,3878,3.597,3879,3.597,3886,4.172,3887,2.65,3919,2.917,3920,2.237,3954,1.922,3971,1.814,3979,1.922,3980,3.09,3981,3.478,3982,1.922,3983,1.648,4004,2.917,4099,1.922,4100,1.922,4101,1.922,4102,1.814,4103,1.922,4104,1.922,4124,1.922,4154,1.922,4159,1.922,4176,1.814,4341,2.237,4386,2.237,4479,2.237,4480,2.057,4485,3.597,4496,2.237,4503,3.876,4515,2.237,4570,2.081,4581,2.057,4584,2.65,4592,2.237,4597,1.922,4614,4.032,4616,1.922,4620,1.922,4644,2.237,4662,2.237,4687,2.237,4688,2.511,4689,2.511,4690,2.511,4691,2.511,4692,2.237,4693,2.237,4694,2.511,4695,2.511,4696,2.511,4697,2.511,4698,4.038,4699,2.511,4700,2.511,4701,2.511,4702,4.512,4703,4.038,4704,2.511,4705,2.511,4706,2.511,4707,2.237,4708,2.237,4709,2.511,4710,5.801,4711,4.512,4712,6.79,4713,2.511,4714,4.038,4715,4.038,4716,2.511,4717,4.038,4718,2.511,4719,2.511,4720,2.237,4721,4.038,4722,5.064,4723,2.511,4724,2.511,4725,5.064,4726,4.038,4727,2.511,4728,2.511,4729,2.511,4730,2.511,4731,2.237,4732,2.237,4733,3.597,4734,3.597,4735,2.511,4736,2.237,4737,2.511,4738,2.511,4739,2.237,4740,2.511,4741,2.511,4742,5.801,4743,2.511,4744,2.237,4745,4.038,4746,2.511,4747,2.511,4748,2.511,4749,2.511,4750,2.511,4751,2.511,4752,2.511,4753,2.511,4754,4.038,4755,4.038,4756,2.511,4757,2.511,4758,2.511,4759,2.511,4760,2.511,4761,2.511,4762,2.511,4763,2.511,4764,2.511,4765,2.511,4766,2.511,4767,2.511,4768,2.511,4769,2.511,4770,2.511,4771,2.511,4772,2.511,4773,2.237,4774,2.511,4775,4.038,4776,2.511,4777,4.038,4778,2.511,4779,2.237,4780,2.511,4781,2.511,4782,2.511,4783,2.511,4784,2.511,4785,2.511,4786,2.511,4787,2.511,4788,2.511,4789,2.511,4790,2.511,4791,2.511,4792,2.511,4793,2.511,4794,2.511,4795,2.511,4796,2.511,4797,2.511,4798,2.511,4799,2.511,4800,2.511,4801,2.511,4802,2.511,4803,2.511,4804,2.511]],["title/interfaces/SongWithArtists-1.html",[394,1.01,901,0.013,4614,2.254]],["body/interfaces/SongWithArtists-1.html",[0,1.403,3,0.048,4,0.048,9,0.043,11,0.806,12,2.231,14,1.194,15,1.106,16,1.218,18,1.243,20,0.332,21,0.605,27,1.478,28,2.652,33,0.648,39,0.007,41,0.171,42,0.593,46,2.259,53,0.974,55,1.808,57,1.47,60,0.567,70,1.086,72,1.171,75,1.58,82,2.682,119,3.995,142,3.143,152,1.444,166,2.084,189,0.257,190,0.307,192,0.048,193,0.287,197,2.893,204,1.303,212,3.051,224,2.533,227,1.803,229,3.191,235,1.803,236,2.608,268,4.14,314,1.892,320,1.243,326,3.379,347,3.459,375,1.935,381,3.373,394,2.012,473,1.832,530,3.317,545,2.546,607,2.412,610,2.404,611,1.322,619,0.003,620,0.003,644,1.086,646,1.444,647,1.478,661,1.892,670,2.231,687,2.563,688,1.634,689,1.964,714,2.983,732,2.231,733,3.331,737,2.466,766,2.743,804,2.743,805,1.892,809,1.341,811,1.37,825,3.508,827,2.688,901,0.011,902,0.509,904,1.258,912,1.226,914,2.011,929,1.892,932,4.095,936,1.149,939,1.58,989,2.3,992,1.678,1002,1.592,1006,2.029,1007,1.892,1014,3.831,1029,1.957,1030,2.855,1046,2.821,1060,0.527,1061,2.108,1062,2.108,1079,2.171,1084,3.471,1085,3.652,1088,2.419,1089,3.652,1090,3.995,1095,2.029,1100,3.471,1102,3.558,1116,2.678,1118,2.419,1119,1.444,1120,1.324,1132,2.954,1153,1.592,1194,1.218,1206,1.701,1253,2.084,1276,2.682,1308,1.678,1325,2.563,1326,3.868,1328,2.108,1334,2.743,1345,2.029,1348,2.743,1352,5.961,1357,2.743,1359,2.456,1369,2.419,1378,2.563,1379,2.563,1380,4.324,1384,2.743,1386,2.682,1387,2.563,1389,2.983,1391,1.678,1392,4.986,1439,1.081,1464,1.351,1477,1.726,1479,1.478,1496,2.108,1545,1.478,1556,1.412,1588,1.957,1633,2.855,1638,1.957,1640,3.471,1685,2.563,1686,2.563,1757,1.832,1794,2.567,1795,2.456,1801,4.14,1819,1.957,2024,2.682,2025,2.563,2026,3.471,2027,3.062,2071,4.112,2073,4.45,2074,1.892,2075,4.254,2078,4.659,2083,2.198,2090,2.563,2109,1.957,2240,1.478,2369,2.983,2370,2.983,2387,2.855,2438,2.743,2452,2.563,2453,2.029,2505,3.868,2573,2.743,2578,4.269,2586,2.419,2603,2.605,2606,1.832,2611,1.832,2625,2.198,2626,1.678,2627,1.832,2628,1.832,2632,2.419,2655,2.198,2656,2.198,2658,2.198,2659,2.419,2660,3.317,2698,2.983,2699,3.599,3059,2.563,3273,3.868,3275,4.14,3285,3.471,3286,2.3,3309,2.983,3335,2.563,3367,5.571,3490,1.957,3564,2.563,3566,2.743,3568,2.743,3581,4.986,3649,4.659,3841,2.983,3864,2.983,3865,2.983,3881,2.983,3929,2.3,3966,2.419,3983,2.198,4008,2.419,4016,2.563,4067,2.419,4157,2.419,4228,2.743,4301,4.503,4313,5.424,4480,4.14,4584,2.198,4597,2.563,4614,4.488,4615,2.743,4616,2.563,4619,2.743,4620,2.563,4643,2.983,4663,2.983,4692,2.983,4693,2.983,4702,2.983,4711,2.983,4731,2.983,4732,2.983,4733,4.503,4734,4.503,4736,2.983,4739,2.983,4744,2.983,4773,2.983,4779,4.503,4805,2.983,4806,3.349,4807,3.349,4808,3.349,4809,3.349,4810,3.349,4811,3.349,4812,3.349,4813,5.054,4814,3.349,4815,3.349,4816,3.349,4817,6.088,4818,6.781,4819,3.349,4820,3.349,4821,3.349,4822,3.349,4823,3.349,4824,5.054,4825,3.349,4826,3.349,4827,3.349,4828,3.349,4829,3.349,4830,3.349,4831,3.349,4832,3.349,4833,3.349,4834,5.054,4835,3.349,4836,3.349,4837,3.349,4838,3.349,4839,3.349,4840,3.349,4841,3.349,4842,3.349,4843,3.349,4844,3.349,4845,3.349,4846,3.349,4847,3.349,4848,3.349,4849,3.349,4850,3.349,4851,3.349,4852,3.349,4853,3.349,4854,3.349,4855,3.349,4856,5.054,4857,3.349,4858,3.349,4859,3.349,4860,3.349,4861,3.349,4862,3.349]],["title/interfaces/SongWithArtists-2.html",[369,1.721,901,0.013,4614,2.254]],["body/interfaces/SongWithArtists-2.html",[3,0.048,4,0.048,9,0.088,11,0.811,20,0.184,21,0.608,28,1.092,33,0.651,39,0.007,41,0.26,42,0.596,46,1.25,53,1.978,55,2.449,57,2.383,60,0.72,64,3.522,70,1.646,72,2.379,75,2.397,116,2.443,142,2.353,143,3.409,152,2.635,159,2.433,171,3.742,189,0.254,190,0.309,192,0.073,193,0.288,204,1.165,205,0.758,215,5.57,227,1.201,229,1.134,235,1.201,236,2.154,263,2.313,267,3.668,280,0.98,308,1.178,334,1.788,375,1.609,394,0.853,561,0.883,607,2.277,619,0.003,620,0.003,689,1.641,737,1.643,788,1.42,790,2.093,796,2.433,809,1.551,811,1.142,901,0.011,902,0.512,904,1.521,912,1.369,916,1.845,924,1.678,932,3.761,935,1.968,936,2.977,968,2.093,1002,1.601,1031,3.487,1032,2.295,1057,1.688,1060,0.53,1079,2.602,1109,1.42,1113,5.272,1115,4.414,1119,1.453,1120,1.912,1147,1.015,1159,2.433,1160,2.295,1187,3.451,1189,2.544,1190,1.561,1194,1.847,1199,1.523,1205,3.343,1206,2.056,1209,2.21,1214,2.295,1221,5.035,1222,4.196,1223,6.168,1239,3.196,1241,4.321,1242,2.313,1250,2.694,1253,2.093,1258,1.359,1259,1.034,1280,1.688,1305,2.759,1308,4.349,1311,2.694,1345,2.04,1359,1.359,1386,3.242,1396,1.601,1427,3.196,1436,1.843,1439,1.561,1456,1.113,1457,2.433,1460,1.903,1462,1.523,1464,2.048,1465,1.072,1469,2.578,1472,2.578,1473,1.42,1477,3.953,1490,2.578,1491,1.788,1510,3.668,1515,2.313,1556,1.42,1588,1.968,1605,1.903,1755,1.561,1757,2.778,1794,1.42,1795,2.048,1807,3.062,1809,1.843,1814,1.42,1888,1.736,1898,1.968,1922,2.04,1985,1.25,2001,2.313,2004,2.578,2265,1.843,2277,2.12,2280,1.968,2297,2.21,2387,1.903,2416,4.414,2418,2.578,2420,2.694,2421,2.759,2422,2.578,2423,2.578,2424,3.885,2425,2.578,2426,2.578,2427,2.578,2428,2.578,2429,2.578,2434,5.598,2461,2.759,2472,2.12,2473,4.196,2474,6.27,2478,2.759,2485,1.903,2502,2.694,2699,3.609,2708,2.12,2725,5.205,2730,2.578,2733,2.12,2931,4.158,3137,2.967,3142,3.668,3145,2.578,3150,3.668,3377,2.759,3433,2.759,3681,6.71,3695,2.12,3780,4.414,3782,3.668,3783,4.914,3795,2.578,3803,4.158,3929,2.313,3930,2.759,4444,2.759,4614,3.451,4863,2.759,4864,3.001,4865,2.578,4866,3.001,4867,3.001,4868,3.001,4869,3.001,4870,3.001,4871,3.001,4872,3.001,4873,3.001,4874,3.001,4875,3.001,4876,3.001,4877,3.001,4878,5.443,4879,3.001,4880,3.001,4881,3.001,4882,3.001,4883,3.001,4884,3.001,4885,3.001,4886,3.001,4887,4.523,4888,4.523,4889,3.001,4890,3.001,4891,3.001,4892,3.001,4893,5.205,4894,3.001,4895,5.443,4896,3.001,4897,4.158,4898,6.501,4899,3.001,4900,3.001,4901,3.001,4902,3.001,4903,3.001,4904,5.443,4905,3.001,4906,3.001,4907,2.578,4908,3.001,4909,3.001,4910,3.001,4911,3.001,4912,6.059,4913,4.523,4914,4.523,4915,3.001,4916,3.001,4917,3.001,4918,2.759,4919,3.001,4920,3.001,4921,3.001,4922,3.001,4923,3.001,4924,3.001,4925,3.001,4926,3.001,4927,3.001,4928,3.001,4929,2.759,4930,3.001,4931,2.759,4932,5.004,4933,4.523,4934,6.71,4935,2.759,4936,4.158,4937,4.523,4938,2.759,4939,3.001,4940,2.759,4941,3.001,4942,3.001,4943,3.001,4944,2.759,4945,3.001,4946,3.001,4947,2.578]],["title/interfaces/SongWithArtists-3.html",[425,2.618,901,0.013,4614,2.254]],["body/interfaces/SongWithArtists-3.html",[0,1.482,3,0.079,4,0.079,9,0.071,11,1.321,12,3.162,14,1.958,15,1.814,16,1.997,18,2.038,20,0.299,21,0.857,27,2.424,28,1.78,33,1.062,39,0.007,40,0.572,41,0.281,42,0.841,60,0.658,189,0.274,190,0.503,192,0.079,193,0.47,204,1.291,227,1.958,229,2.411,235,1.958,236,2.011,320,2.658,375,1.299,394,2.019,606,2.123,607,2.559,608,3.389,619,0.005,620,0.005,642,2.315,644,1.78,646,2.368,647,2.424,689,1.875,732,3.162,737,3.494,809,1.209,811,1.235,825,3.162,827,3.52,901,0.018,902,0.835,904,1.783,912,0.88,925,3.319,929,3.102,932,4.719,941,2.123,992,2.752,1013,3.456,1014,3.102,1015,3.771,1016,3.771,1018,3.456,1028,3.456,1029,3.208,1030,4.047,1046,3.319,1054,3.456,1055,3.326,1058,3.456,1060,0.865,1061,3.456,1086,4.202,1090,3.603,1102,3.208,1109,2.315,1116,2.168,1120,1.439,1194,1.997,1206,2.411,1276,2.914,1328,3.456,1358,4.202,1359,2.215,1391,2.752,1464,2.215,1496,3.456,1545,2.424,1556,2.315,1669,3.771,1794,2.315,1795,2.89,2027,3.326,2240,2.424,2578,5.319,2655,3.603,2656,3.603,2658,3.603,2659,3.967,2660,4.701,3098,3.456,3929,3.771,3983,3.603,4338,4.497,4584,3.603,4585,4.891,4586,4.891,4587,4.891,4588,4.891,4597,4.202,4603,4.891,4608,4.891,4613,4.891,4614,4.774,4615,4.497,4616,4.202,4617,6.381,4618,4.891,4619,4.497,4620,4.202,4621,4.891,4622,4.891,4623,4.891,4624,4.891,4625,4.891,4626,4.891,4627,4.891]],["title/injectables/SongsMappingStrapi.html",[1147,0.956,4948,3.915]],["body/injectables/SongsMappingStrapi.html",[3,0.033,4,0.033,9,0.062,11,0.558,20,0.126,25,0.72,36,1.291,38,1.336,39,0.007,40,0.776,41,0.353,42,0.811,48,1.42,53,1.101,55,2.612,57,2.466,60,0.623,64,3.358,70,1.978,72,2.606,75,2.649,91,1.527,112,3.822,116,2.571,122,1.162,123,2.009,142,3.034,143,1.162,152,3.214,171,4.608,189,0.16,190,0.212,192,0.033,193,0.199,204,1.149,205,1.473,213,3.295,263,1.593,270,1.269,272,1.075,273,2.727,280,0.675,320,1.78,326,1.024,369,1,375,1.956,394,0.587,425,1.522,434,2.566,473,2.625,485,1.593,545,1.324,561,0.608,570,1.678,607,2.463,619,0.002,620,0.002,706,0.64,715,2.485,716,2.009,717,0.64,721,3.281,809,1.324,908,0.64,912,1.358,916,2.345,917,0.725,918,0.712,919,0.738,924,1.558,933,3.929,935,2.803,936,2.556,968,1.561,1002,1.799,1031,1.593,1079,3.023,1105,2.009,1109,0.978,1120,2.319,1147,0.757,1149,0.916,1151,3.423,1152,1.775,1153,1.799,1154,3.101,1155,2.009,1156,2.898,1157,3.101,1158,6.328,1159,4.989,1160,3.789,1161,2.735,1162,2.735,1163,2.735,1164,2.735,1165,2.735,1170,2.735,1171,2.735,1172,2.735,1174,5.361,1175,4.034,1176,5.899,1177,4.997,1178,5.361,1179,4,1180,5.512,1181,2.735,1183,3.101,1184,2.735,1186,2.898,1187,4.433,1188,2.775,1189,3.461,1190,2.827,1191,3.373,1192,2.898,1193,2.735,1194,2.381,1195,4.933,1197,3.101,1199,2.504,1200,2.566,1201,2.383,1202,1.951,1203,2.383,1204,3.672,1205,2.071,1206,2.054,1207,2.735,1209,4.004,1210,4.535,1213,1.775,1214,1.712,1218,2.066,1221,3.822,1222,3.295,1223,5.99,1224,1.899,1239,3.841,1241,3.145,1242,1.593,1243,2.898,1245,4.535,1246,2.6,1247,3.101,1248,4.535,1249,2.898,1250,2.546,1252,4,1253,1.561,1254,1.799,1255,1.231,1256,0.936,1258,0.936,1259,0.712,1260,3.95,1261,3.929,1274,2.066,1275,2.066,1276,1.231,1277,2.066,1278,1.899,1280,2.404,1281,2.066,1282,1.899,1308,4.012,1311,4.248,1313,3.929,1374,1.522,1490,1.775,1510,2.735,1588,1.355,1605,1.31,1612,3.148,1702,1.522,1755,1.754,1757,2.625,1807,1.162,1814,1.596,1903,1.775,1972,2.066,2111,1.522,2139,1.522,2253,1.593,2288,1.593,2295,4.004,2431,1.775,2434,3.02,2472,3.02,2473,1.593,2474,5.865,2498,1.405,2502,1.231,2699,2.938,2733,2.383,2939,1.775,2957,2.6,2958,2.898,3588,2.735,3680,1.899,3698,4.274,3712,5.656,3723,1.899,3760,2.066,3763,4.933,3768,4.274,3774,4.274,3775,3.373,3776,6.152,3777,1.899,3778,1.899,3779,1.899,3780,3.466,3781,1.899,3782,3.466,3783,4,3784,1.899,3785,1.899,3786,1.899,3788,2.066,3791,2.066,3795,1.775,3796,2.066,3805,6.638,3827,2.066,3829,4.933,3830,4.933,3941,4.274,4039,1.775,4087,1.775,4581,4.997,4582,3.373,4583,3.373,4893,1.775,4897,1.899,4907,1.775,4918,1.899,4929,1.899,4931,4.997,4932,3.929,4934,5.361,4935,1.899,4936,3.101,4938,1.899,4940,1.899,4944,1.899,4948,3.101,4949,6.416,4950,2.319,4951,2.319,4952,2.319,4953,2.319,4954,2.319,4955,2.319,4956,2.319,4957,1.899,4958,6.101,4959,2.319,4960,2.319,4961,2.319,4962,2.319,4963,2.319,4964,2.319,4965,2.319,4966,3.786,4967,2.319,4968,2.319,4969,2.319,4970,2.319,4971,4.797,4972,2.319,4973,3.786,4974,2.319,4975,2.319,4976,2.319,4977,2.319,4978,2.319,4979,2.319,4980,3.786,4981,2.319,4982,6.101,4983,2.319,4984,2.319,4985,2.319,4986,2.319,4987,2.319,4988,2.319,4989,2.319,4990,2.319,4991,2.319,4992,2.319,4993,2.319,4994,4.797,4995,2.319,4996,3.786,4997,2.319,4998,2.319,4999,2.319,5000,2.319,5001,2.319,5002,5.537,5003,2.319,5004,3.786,5005,2.319,5006,2.319,5007,1.405,5008,2.319,5009,4.797,5010,2.319,5011,4.797,5012,2.319,5013,2.319,5014,3.786,5015,2.319,5016,4.797,5017,3.786,5018,6.546,5019,2.319,5020,3.786,5021,2.319,5022,3.786,5023,3.786,5024,2.319,5025,2.319,5026,3.786,5027,2.319,5028,2.319,5029,2.319,5030,2.319,5031,6.546,5032,5.537,5033,4.797,5034,2.319,5035,2.319,5036,2.319,5037,2.319,5038,2.319,5039,2.319]],["title/modules/SongsPageModule.html",[621,1.494,5040,3.659]],["body/modules/SongsPageModule.html",[3,0.097,4,0.097,9,0.088,39,0.007,189,0.28,190,0.622,192,0.097,193,0.581,552,2.286,611,3.745,619,0.005,620,0.005,621,2.122,623,2.572,624,3.313,625,4.663,626,3.604,627,3.5,628,2.681,633,4.344,634,3.604,635,3.07,637,3.232,638,3.302,639,4.478,640,3.403,641,4.624,642,2.863,643,4.344,644,2.201,645,3.968,646,2.929,647,2.998,648,3.836,650,4.113,731,4.888,825,2.998,1145,4.456,5040,7.496,5041,6.049,5042,6.049,5043,6.049,5044,6.852,5045,6.79,5046,6.049]],["title/modules/SongsPageRoutingModule.html",[621,1.494,5044,3.454]],["body/modules/SongsPageRoutingModule.html",[0,1.521,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,611,3.389,619,0.006,620,0.006,623,2.786,628,2.904,637,2.904,638,3.462,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155,5044,6.2,5046,6.552,5047,7.354]],["title/injectables/SongsService.html",[737,2.332,1147,0.956]],["body/injectables/SongsService.html",[3,0.041,4,0.041,9,0.087,11,0.688,20,0.156,21,0.535,25,0.851,28,1.788,33,0.865,36,1.641,38,1.66,39,0.007,40,0.893,41,0.453,42,1.007,46,1.06,48,1.474,53,1.815,55,2.381,57,2.26,60,0.745,64,3.37,70,1.451,72,2.182,75,2.245,77,1.279,78,1.325,116,2.304,142,2.073,143,3.127,152,2.378,159,2.064,171,3.504,189,0.245,190,0.262,192,0.064,193,0.245,204,1.11,205,0.643,215,5.883,227,1.019,229,0.962,235,1.019,236,2.017,263,1.963,267,3.232,280,0.831,308,0.999,320,1.06,334,1.516,375,1.476,394,1.133,561,0.749,607,2.256,619,0.003,620,0.003,689,1.858,737,2.183,788,1.205,790,2.572,796,2.064,809,1.508,811,1.006,901,0.009,904,1.373,912,1.442,913,2.073,916,1.692,924,1.693,932,2.306,935,1.67,936,2.857,968,2.572,1002,1.358,1031,4.285,1032,2.821,1057,1.432,1060,0.45,1079,2.415,1109,1.205,1113,4.893,1115,3.983,1119,2.378,1120,1.775,1135,2.242,1147,0.895,1149,1.128,1159,2.064,1160,2.023,1187,3.115,1189,2.242,1190,1.324,1194,2.269,1199,1.292,1205,3.017,1206,1.856,1209,1.875,1214,2.023,1221,4.932,1222,3.787,1223,6.028,1239,2.816,1241,4.118,1242,1.963,1250,3.311,1253,1.845,1258,1.153,1259,0.877,1280,1.432,1305,2.34,1308,4.174,1311,2.374,1345,2.71,1359,1.153,1386,2.926,1396,1.358,1427,4.892,1431,2.926,1432,2.374,1436,3.017,1439,1.858,1444,1.292,1445,2.517,1446,4.103,1447,2.34,1448,2.434,1449,1.292,1450,2.187,1451,2.187,1452,1.292,1453,2.34,1454,1.232,1455,2.187,1456,0.944,1457,2.064,1460,1.614,1462,1.292,1464,1.805,1465,0.909,1469,2.187,1472,2.187,1473,1.205,1477,3.702,1490,2.187,1491,1.516,1510,3.232,1515,1.963,1556,1.886,1588,1.67,1605,1.614,1755,1.324,1757,2.448,1794,2.325,1795,2.517,1807,2.763,1809,1.563,1814,1.205,1888,2.306,1896,2.187,1898,3.222,1922,1.731,1985,1.06,2001,1.963,2004,2.187,2265,1.563,2277,1.799,2280,1.67,2297,1.875,2387,1.614,2416,3.983,2418,2.187,2420,2.374,2421,2.34,2422,2.187,2423,2.187,2424,3.424,2425,2.187,2426,2.187,2427,2.187,2428,2.187,2429,2.187,2434,5.402,2461,2.34,2472,1.799,2473,3.787,2474,5.947,2478,2.34,2485,1.614,2502,2.374,2699,3.311,2708,1.799,2725,4.774,2730,2.187,2733,1.799,2931,5.109,3137,3.222,3142,4.507,3144,3.664,3145,3.424,3150,3.232,3377,2.34,3433,2.34,3681,6.364,3695,1.799,3780,3.983,3782,3.232,3783,4.507,3795,2.187,3803,3.664,3929,1.963,3930,2.34,4444,2.34,4614,3.115,4863,2.34,4864,2.546,4865,2.187,4866,2.546,4867,2.546,4868,2.546,4869,2.546,4870,3.986,4871,2.546,4872,2.546,4873,3.986,4874,2.546,4875,2.546,4876,2.546,4877,2.546,4878,4.912,4879,2.546,4880,2.546,4881,3.986,4882,2.546,4883,3.986,4884,2.546,4885,3.986,4886,2.546,4887,3.986,4888,3.986,4889,2.546,4890,2.546,4891,2.546,4892,2.546,4893,4.774,4894,3.986,4895,6.033,4896,2.546,4897,3.664,4898,6.033,4899,2.546,4900,2.546,4901,2.546,4902,2.546,4903,2.546,4904,4.912,4905,2.546,4906,2.546,4907,2.187,4908,2.546,4909,2.546,4910,2.546,4911,2.546,4912,5.558,4913,3.986,4914,3.986,4915,2.546,4916,2.546,4917,2.546,4918,2.34,4919,2.546,4920,2.546,4921,2.546,4922,2.546,4923,2.546,4924,3.986,4925,2.546,4926,2.546,4927,2.546,4928,3.986,4929,2.34,4930,2.546,4931,2.34,4932,4.516,4933,3.986,4934,6.364,4935,2.34,4936,3.664,4937,3.986,4938,2.34,4939,2.546,4940,2.34,4941,2.546,4942,2.546,4943,2.546,4944,2.34,4945,2.546,4946,2.546,4947,2.187,5048,4.474,5049,4.474,5050,4.474,5051,4.474,5052,4.474,5053,4.474,5054,4.474,5055,4.474,5056,2.857,5057,2.857,5058,2.857,5059,2.857,5060,2.857,5061,2.857,5062,2.857,5063,2.857,5064,2.857]],["title/components/SplashPage.html",[0,0.989,613,1.971]],["body/components/SplashPage.html",[0,0.924,1,0.827,2,1.467,3,0.03,4,0.03,5,1.802,6,0.924,7,0.924,8,0.924,9,0.027,11,0.838,12,1.972,13,0.827,14,3.261,15,3.118,16,1.266,18,1.292,20,0.34,21,0.417,25,0.662,27,2.297,33,0.673,34,1.715,35,3.123,36,1.48,38,0.673,39,0.007,40,0.601,41,0.319,42,0.731,45,3.101,46,1.658,47,2.108,48,1.187,49,2.761,53,2.087,55,2.231,57,1.68,69,3.418,70,2.02,72,1.562,75,2.427,77,0.995,78,1.03,89,1.513,93,2.851,109,3.635,111,2.515,116,1.371,123,1.847,131,2.123,133,3.414,154,0.903,157,1.866,165,1.715,166,2.569,189,0.2,190,0.192,191,0.762,192,0.03,193,0.179,197,0.995,203,2.851,204,0.723,213,2.39,214,6.945,224,3.967,226,3.101,236,1.461,240,3.101,244,3.101,270,1.146,278,1.603,279,1.715,280,0.609,281,3.573,282,1.374,283,1.866,284,1.715,285,1.438,286,1.715,287,5.663,288,2.108,289,2.682,290,1.374,291,3.635,292,2.191,293,1.111,294,3.152,295,1.438,298,1.715,299,1.866,300,3.658,301,3.966,302,1.513,303,1.866,309,1.654,310,3.286,311,3.892,312,3.77,316,3.498,318,1.966,321,3.915,322,2.523,323,1.513,324,2.73,325,1.866,329,2.108,330,2.939,331,1.318,332,3.613,333,3.16,334,4.271,335,1.111,336,1.966,337,3.892,338,4.084,340,2.515,343,2.019,344,2.664,345,1.183,347,3.517,348,3.275,349,2.034,350,2.191,351,2.664,352,3.922,353,3.262,354,4.157,355,3.412,356,2.39,357,3.247,358,1.866,359,3.101,360,3.979,361,3.101,362,1.866,363,1.866,364,5.258,366,1.866,367,4.729,368,4.172,369,0.903,370,3.065,371,3.613,372,3.906,374,3.222,375,1.873,377,4.181,378,2.608,381,3.43,382,1.715,384,5.883,385,2.034,389,1.268,390,1.715,393,2.034,394,1.751,396,1.866,397,4.773,401,1.866,402,3.979,403,3.101,404,2.664,406,1.847,409,1.715,410,2.515,411,3.041,412,1.438,414,2.851,416,1.603,422,3.307,423,2.034,424,2.705,425,1.374,429,1.224,431,2.284,433,1.715,434,2.07,436,1.715,439,1.467,450,1.224,451,1.318,459,2.284,461,2.931,462,2.931,463,2.931,464,1.374,469,1.866,474,4.729,475,1.438,479,3.052,490,2.664,492,4.347,493,3.101,494,3.101,495,3.101,496,1.866,497,1.438,499,1.513,501,1.374,502,1.513,503,3.414,504,1.438,505,3.966,506,2.284,507,2.284,508,1.603,511,1.438,512,1.866,517,3.101,521,1.715,529,1.537,540,1.866,542,1.866,543,3.101,544,3.101,552,0.705,553,1.537,554,0.845,555,0.924,557,0.924,558,0.845,559,0.924,560,0.845,561,1.513,562,1.537,563,0.845,564,2.751,565,0.827,566,1.537,567,0.827,568,0.924,569,0.863,570,0.732,571,0.924,572,0.845,573,0.924,574,0.643,575,0.827,576,0.903,577,0.924,578,0.845,579,0.903,580,0.777,581,0.845,582,0.845,583,2.297,584,0.845,585,0.924,586,0.777,587,0.924,588,0.845,589,0.827,590,0.924,591,0.827,592,0.863,593,0.924,594,0.845,595,0.903,596,0.827,597,1.254,598,0.924,599,0.845,600,0.845,601,0.827,602,0.924,603,0.845,604,0.827,605,0.924,606,0.81,607,1.191,608,0.81,609,0.845,610,0.827,611,0.827,612,0.924,613,2.145,614,3.471,615,0.883,616,0.827,617,0.903,618,0.924,619,0.002,620,0.002,635,3.579,637,1.374,639,2.444,640,1.05,643,2.37,644,0.679,646,0.903,655,1.467,661,2.523,670,2.297,688,1.022,689,1.843,695,1.438,710,1.224,721,1.05,749,6.928,809,0.353,853,2.284,871,1.438,914,0.692,934,4.769,936,1.532,939,1.088,941,3.112,989,2.39,1005,2.39,1056,1.05,1060,0.33,1116,0.827,1200,1.613,1213,1.603,1359,2.664,1400,1.603,1405,1.866,1409,2.664,1413,1.866,1477,1.794,1479,0.924,1504,3.101,1591,1.603,1593,4.261,1715,1.603,1757,3.409,1802,1.715,2083,1.374,2109,2.61,2111,2.284,2128,1.513,2136,3.227,2154,1.715,2158,3.418,2159,4.729,2160,3.418,2167,2.515,2168,2.515,2173,1.603,2198,1.715,2209,3.979,2210,1.715,2214,1.603,2225,3.275,2323,3.101,2326,2.851,2452,1.603,2464,1.715,2523,1.866,2603,2.302,2626,2.608,2630,1.603,2726,1.374,2795,1.374,2905,2.515,2930,3.658,3298,3.067,3306,3.979,3324,1.715,3371,3.658,3385,4.729,3390,1.866,3490,1.224,3695,1.318,3702,1.715,3723,1.715,3728,1.866,3731,1.866,3747,1.603,4004,1.513,4066,1.603,4076,2.664,4089,3.418,4109,2.515,4155,1.603,4283,1.866,4380,1.866,4678,1.866,4680,1.866,4707,1.866,4907,2.664,4947,1.603,4957,1.715,5065,1.866,5066,3.48,5067,4.466,5068,5.203,5069,3.48,5070,7.595,5071,4.466,5072,4.466,5073,4.466,5074,3.48,5075,5.203,5076,5.203,5077,5.203,5078,5.203,5079,5.203,5080,3.48,5081,3.48,5082,2.094,5083,3.101,5084,3.48,5085,6.914,5086,2.094,5087,3.48,5088,4.466,5089,3.48,5090,2.094,5091,2.094,5092,2.094,5093,2.094,5094,3.48,5095,3.48,5096,2.094,5097,3.48,5098,3.101,5099,3.48,5100,3.48,5101,2.094,5102,3.48,5103,2.094,5104,4.466,5105,3.48,5106,3.48,5107,4.466,5108,3.101,5109,3.48,5110,3.48,5111,3.48,5112,3.48,5113,3.48,5114,3.48,5115,3.48,5116,3.48,5117,3.48,5118,2.094,5119,2.094,5120,2.094,5121,4.466,5122,3.48,5123,4.466,5124,2.094,5125,2.094,5126,2.094,5127,2.094,5128,2.094,5129,2.094,5130,3.48,5131,3.48,5132,2.094,5133,2.094,5134,2.094,5135,3.48,5136,3.48,5137,3.48,5138,3.48,5139,3.48,5140,2.094,5141,2.094,5142,2.094,5143,3.48,5144,2.094,5145,1.715,5146,1.268,5147,2.094,5148,2.094,5149,2.094,5150,3.48,5151,2.094,5152,2.094,5153,2.094,5154,3.48,5155,2.094,5156,2.094,5157,2.094,5158,5.774,5159,2.094,5160,2.094,5161,4.466,5162,5.203,5163,3.48,5164,2.094,5165,2.094,5166,2.094,5167,2.094,5168,3.48,5169,2.094,5170,2.094,5171,2.094,5172,2.094,5173,3.48,5174,3.48,5175,2.094,5176,2.094,5177,2.094,5178,3.48,5179,5.774,5180,2.094,5181,3.48,5182,3.48,5183,2.094,5184,2.094,5185,2.094,5186,2.094,5187,2.094,5188,3.48,5189,2.094,5190,2.094,5191,2.094,5192,2.094,5193,3.48,5194,2.094,5195,4.466,5196,2.094,5197,2.094,5198,2.094,5199,2.094,5200,2.094,5201,3.48,5202,2.094,5203,2.094,5204,2.094,5205,2.094,5206,2.094,5207,2.094,5208,5.774,5209,2.094,5210,2.094,5211,2.094,5212,2.094,5213,2.094,5214,2.094,5215,2.094]],["title/modules/SplashPageRoutingModule.html",[621,1.494,5216,3.915]],["body/modules/SplashPageRoutingModule.html",[0,1.521,3,0.105,4,0.105,9,0.095,39,0.007,189,0.263,190,0.674,191,2.675,192,0.105,193,0.63,204,1.022,613,3.538,619,0.006,620,0.006,623,2.786,628,2.904,637,2.904,638,3.462,652,4.024,653,4.555,654,4.554,655,3.101,656,4.155,5216,7.029,5217,7.354,5218,7.354]],["title/injectables/StrapiAuthMappingService.html",[1147,0.956,5219,2.794]],["body/injectables/StrapiAuthMappingService.html",[3,0.063,4,0.063,9,0.057,11,1.055,20,0.239,25,1.17,36,1.517,38,1.569,39,0.007,40,0.844,41,0.415,42,0.952,48,1.393,56,3.48,60,0.764,94,3.594,116,1.345,131,2.923,189,0.223,190,0.402,192,0.116,193,0.375,204,0.855,205,1.825,280,1.275,369,1.891,375,1.99,394,1.11,574,2.364,619,0.004,620,0.004,706,2.593,717,2.238,809,1.369,811,1.384,901,0.027,908,1.961,912,0.986,914,2.544,916,1.927,917,2.535,918,2.489,919,2.582,924,1.546,939,1.922,1109,3.545,1120,2.018,1133,3.872,1147,1.23,1149,1.731,1175,3,1256,1.768,1259,1.345,1391,2.197,1719,4.036,1721,4.036,1724,3.17,1750,2.562,1751,2.139,1755,2.031,1814,1.848,1897,2.999,1932,2.562,1985,2.282,2050,3.713,2394,4.617,2498,3.725,2502,2.326,2683,3.561,2746,3.897,2750,3.802,2760,2.655,2785,4.305,2829,2.593,2831,2.593,2961,3.377,2962,3.887,3007,3.42,3070,3.872,3072,3.872,3074,3.872,3076,5.479,3077,3.872,3079,3.872,4570,4.181,4571,4.305,4572,4.014,4573,4.014,4574,4.014,4575,4.014,5007,2.655,5146,3.725,5219,3.594,5220,2.76,5221,4.384,5222,4.501,5223,4.384,5224,4.384,5225,4.304,5226,4.501,5227,4.384,5228,4.384,5229,4.304,5230,2.562,5231,3.872,5232,3.887,5233,3.872,5234,4.036,5235,4.036,5236,2.877,5237,2.877,5238,4.036,5239,4.036,5240,4.036,5241,2.877,5242,2.877,5243,4.036,5244,4.036,5245,4.036,5246,4.036,5247,4.036,5248,4.036,5249,4.036,5250,4.036,5251,4.036,5252,2.877,5253,2.877,5254,2.877,5255,2.877,5256,4.036,5257,3.872,5258,2.877,5259,2.76,5260,4.036,5261,2.877,5262,2.877,5263,2.877,5264,2.877,5265,3.872,5266,2.877,5267,2.877,5268,2.877,5269,2.877,5270,2.877,5271,2.877,5272,2.877,5273,2.877,5274,2.877,5275,2.877,5276,2.877,5277,2.877,5278,2.877,5279,2.877,5280,2.877,5281,2.877,5282,2.877]],["title/injectables/StrapiAuthenticationService.html",[1147,0.956,2030,3.659]],["body/injectables/StrapiAuthenticationService.html",[3,0.049,4,0.049,9,0.045,11,0.832,20,0.189,21,0.62,25,0.985,28,2.738,33,1.001,36,1.767,38,1.427,39,0.007,40,0.768,41,0.472,42,0.866,46,1.283,48,1.518,49,2.129,53,1.006,55,0.922,57,1.006,60,0.714,70,1.121,75,1.08,77,2.413,78,2.5,131,1.643,150,2.646,152,1.491,171,1.687,172,2.498,189,0.244,190,0.317,192,0.049,193,0.296,204,1.213,227,2.213,229,2.607,235,2.213,236,2.319,263,2.375,280,1.006,308,1.209,318,1.953,574,1.589,619,0.003,620,0.003,660,3.42,670,4.018,688,1.687,689,2.022,706,2.373,769,2.498,770,2.646,771,2.646,772,2.646,788,1.458,790,3.311,809,1.451,811,1.9,904,1.289,913,2.876,941,2.002,1046,2.876,1059,3.259,1060,0.544,1079,3.113,1109,2.905,1120,1.357,1147,1.036,1149,1.365,1180,2.646,1190,1.602,1214,2.806,1241,1.782,1242,2.375,1256,1.395,1259,1.061,1439,1.892,1446,5.356,1456,1.142,1462,1.563,1465,1.1,1467,2.748,1473,2.617,1516,3.08,1556,3.482,1710,2.646,1711,4.633,1712,4.24,1713,4.24,1714,4.24,1715,3.962,1716,5.068,1718,5.274,1719,3.397,1720,5.274,1721,3.397,1722,4.24,1724,3.552,1726,5.083,1727,2.832,1729,3.962,1731,2.646,1736,2.832,1738,4.24,1741,2.832,1743,2.832,1745,2.832,1746,2.832,1747,3.08,1750,2.02,1751,1.687,1755,1.602,1757,1.892,1758,2.832,1759,4.612,1814,1.458,1897,1.233,1902,1.835,1985,2.303,2020,3.08,2021,3.08,2030,3.962,2050,3.854,2063,3.556,2064,3.08,2084,2.176,2238,3.556,2241,2.341,2243,1.687,2250,3.111,2251,3.6,2256,4.025,2259,3.454,2274,1.733,2500,2.646,2502,1.835,2528,3.08,2742,5.274,2749,4.612,2750,1.563,2753,3.08,2754,3.08,2755,3.08,2756,3.08,2757,3.08,2758,3.08,2759,2.832,2770,3.08,2771,3.08,2778,5.529,2796,4.612,2797,4.612,2798,3.08,2801,3.08,2804,3.08,2814,3.08,2996,2.02,3018,3.025,3230,5.083,3299,2.646,3714,2.832,3981,3.556,4010,3.962,4033,4.75,4708,3.08,5098,3.08,5145,4.24,5222,2.02,5226,2.02,5230,2.02,5231,3.259,5265,3.259,5283,6.206,5284,6.206,5285,6.206,5286,5.177,5287,6.891,5288,7.379,5289,6.891,5290,3.457,5291,6.206,5292,5.529,5293,5.177,5294,5.177,5295,5.177,5296,3.457,5297,3.457,5298,3.457,5299,3.457,5300,3.457,5301,3.457,5302,3.457,5303,3.457,5304,3.457,5305,3.457,5306,3.457,5307,3.457,5308,5.177,5309,5.177,5310,3.457,5311,3.457,5312,3.457,5313,3.457,5314,3.457,5315,3.457,5316,3.457,5317,6.206,5318,3.457,5319,6.206,5320,8.599,5321,3.457,5322,5.177,5323,5.177,5324,5.177,5325,3.457,5326,3.457,5327,3.457,5328,3.457,5329,3.457,5330,6.206,5331,3.457,5332,3.457,5333,6.891,5334,3.457,5335,3.457,5336,3.457,5337,3.457,5338,3.457,5339,3.457,5340,3.457,5341,3.457,5342,3.457,5343,3.457,5344,3.457,5345,3.457,5346,3.457,5347,3.457,5348,3.457,5349,3.457,5350,3.457,5351,5.177,5352,3.457,5353,3.457,5354,3.457,5355,5.177,5356,3.457,5357,5.177,5358,5.177,5359,6.891,5360,5.177,5361,3.457,5362,3.457,5363,3.08,5364,3.457,5365,3.457,5366,3.457,5367,3.457]],["title/interfaces/StrapiMeResponse.html",[901,0.015,5230,2.794]],["body/interfaces/StrapiMeResponse.html",[3,0.064,4,0.064,9,0.057,11,1.072,20,0.243,21,0.744,39,0.007,41,0.471,42,0.73,56,3.634,60,0.775,94,4.768,116,1.367,131,2.956,189,0.224,190,0.408,192,0.117,193,0.381,204,0.865,205,1.836,280,1.296,369,1.921,375,2,394,1.128,574,2.38,619,0.004,620,0.004,706,2.54,717,2.252,809,1.377,811,1.399,901,0.027,902,0.677,908,1.978,912,1.243,913,2.882,914,2.923,916,1.944,917,2.55,918,2.504,919,2.597,924,1.653,939,1.944,1109,3.021,1120,2.032,1133,3.915,1147,1.244,1175,3.034,1256,1.797,1259,1.367,1391,2.233,1724,3.206,1750,2.603,1751,2.173,1755,2.064,1814,1.878,1897,1.589,1932,2.603,1985,2.308,2050,1.967,2394,4.786,2498,3.768,2502,2.364,2683,3.592,2746,2.882,2750,2.812,2760,2.698,2785,4.33,2829,3.44,2831,3.44,2961,3.406,2962,3.921,3007,3.731,3070,2.804,3072,2.804,3074,2.804,3077,2.804,3079,2.804,4570,4.561,4571,4.696,4572,4.049,4573,4.049,4574,4.049,4575,4.049,5007,2.698,5146,3.768,5219,2.603,5220,2.804,5222,3.635,5225,3.768,5226,3.635,5229,3.768,5230,3.635,5231,3.915,5232,3.921,5233,3.915,5234,4.082,5235,4.082,5236,2.923,5237,2.923,5238,4.082,5239,4.082,5240,4.082,5241,2.923,5242,2.923,5243,4.082,5244,4.082,5245,4.082,5246,4.082,5247,4.082,5248,4.082,5249,4.082,5250,4.082,5251,4.082,5252,2.923,5253,2.923,5254,2.923,5255,2.923,5256,4.082,5257,3.915,5258,2.923,5259,2.804,5260,4.082,5261,2.923,5262,2.923,5263,2.923,5264,2.923,5265,3.915,5266,2.923,5267,2.923,5268,2.923,5269,2.923,5270,2.923,5271,2.923,5272,2.923,5273,2.923,5274,2.923,5275,2.923,5276,2.923,5277,2.923,5278,2.923,5279,2.923,5280,2.923,5281,2.923,5282,2.923]],["title/interfaces/StrapiMedia.html",[901,0.015,2999,2.701]],["body/interfaces/StrapiMedia.html",[3,0.079,4,0.079,9,0.071,20,0.3,21,0.858,33,1.063,39,0.007,40,0.913,41,0.408,60,0.78,189,0.26,190,0.503,192,0.136,193,0.471,204,0.996,205,1.972,308,1.922,324,3.462,355,3.615,357,3.537,619,0.005,620,0.005,655,3.564,660,2.426,689,1.808,717,2.201,781,3.007,783,2.612,788,2.317,790,2.266,809,1.346,811,1.236,901,0.03,902,0.836,904,1.368,912,1.574,916,1.491,917,2.493,918,2.448,919,2.539,924,1.554,1032,3.241,1057,2.755,1060,0.865,1105,4.233,1111,2.755,1280,3.998,1292,3.891,1439,1.176,1456,1.815,1462,2.485,1465,1.749,1762,2.917,1897,1.96,2050,2.426,2241,3.241,2243,2.681,2250,2.755,2251,3.891,2255,2.833,2256,2.755,2259,2.755,2260,2.833,2261,2.833,2274,2.755,2420,4.653,2829,2.317,2831,2.317,2924,3.212,2996,3.212,2997,3.105,2998,4.625,2999,4.049,3000,3.329,3001,3.329,3002,3.329,3003,3.329,3004,5.311,3005,5.311,3006,3.329,3007,2.317,3008,5.311,3009,5.079,3010,3.329,3011,3.329,3012,3.105,3013,3.329,3014,3.329,3015,3.329,3016,3.329,3017,3.329,3018,3.212,3019,3.329,3020,3.329,3021,3.329]],["title/interfaces/StrapiMediaData.html",[901,0.015,2998,2.616]],["body/interfaces/StrapiMediaData.html",[3,0.071,4,0.071,9,0.064,20,0.271,21,0.803,33,0.963,39,0.007,40,0.946,41,0.497,60,0.784,189,0.253,190,0.456,192,0.133,193,0.426,204,0.933,205,2.044,308,1.741,324,3.588,355,3.746,357,3.666,619,0.004,620,0.004,655,3.427,660,2.197,689,1.739,717,2.095,781,2.723,783,2.366,788,2.098,790,2.052,809,1.282,811,1.12,901,0.029,902,0.757,904,1.239,912,1.58,916,1.35,917,2.373,918,2.33,919,2.417,924,1.494,1032,3.035,1057,2.495,1060,0.784,1105,4.03,1111,2.495,1292,4.433,1439,1.065,1456,1.644,1462,2.251,1465,1.584,1762,2.641,1897,1.775,2050,2.197,2241,3.035,2243,2.428,2250,2.495,2251,3.705,2255,2.565,2256,2.495,2259,2.495,2260,2.565,2261,2.565,2274,2.495,2420,4.822,2829,3.427,2831,3.427,2924,2.909,2996,2.909,2997,2.812,2998,4.155,2999,2.812,3000,3.015,3001,3.015,3002,4.923,3003,4.923,3004,5.504,3005,5.504,3006,4.923,3007,3.427,3008,5.504,3009,5.133,3010,3.015,3011,3.015,3012,2.812,3013,3.015,3014,3.015,3015,3.015,3016,3.015,3017,3.015,3018,2.909,3019,3.015,3020,3.015,3021,3.015]],["title/classes/StrapiMediaService.html",[193,0.409,3012,2.701]],["body/classes/StrapiMediaService.html",[3,0.075,4,0.075,9,0.068,20,0.286,25,1.321,33,1.344,36,1.457,38,1.344,39,0.007,40,0.942,41,0.399,42,0.816,48,1.193,60,0.78,189,0.256,190,0.48,192,0.134,193,0.449,204,0.966,205,1.942,308,1.833,324,3.41,355,3.56,357,3.483,619,0.005,620,0.005,655,3.499,660,3.441,689,1.898,717,2.151,781,2.868,783,2.491,788,2.21,790,3.56,809,1.316,811,1.179,901,0.03,904,1.73,912,1.557,916,1.422,917,2.436,918,2.392,919,2.481,924,0.964,1032,3.752,1057,2.627,1060,0.825,1105,4.136,1111,4.159,1292,3.802,1439,1.486,1446,3.175,1456,1.732,1462,2.37,1465,1.668,1761,4.293,1762,2.782,1763,4.56,1764,4.293,1897,2.78,2050,3.441,2241,3.752,2243,2.557,2250,2.627,2251,3.802,2255,2.702,2256,3.482,2259,4.159,2260,2.702,2261,3.581,2274,2.627,2420,4.582,2829,2.21,2831,2.21,2924,3.063,2996,3.063,2997,2.962,2998,3.802,2999,2.962,3000,3.175,3001,3.175,3002,3.175,3003,3.175,3004,5.23,3005,5.23,3006,3.175,3007,2.21,3008,5.23,3009,5.013,3010,3.175,3011,3.175,3012,3.925,3013,3.175,3014,4.209,3015,3.175,3016,3.175,3017,3.175,3018,3.063,3019,3.175,3020,3.175,3021,3.175,5368,5.242,5369,5.242,5370,5.242,5371,5.242]],["title/interfaces/StrapiPlaylistResponse.html",[901,0.015,5372,3.915]],["body/interfaces/StrapiPlaylistResponse.html",[3,0.1,4,0.1,9,0.09,20,0.379,21,0.994,39,0.007,40,0.724,41,0.454,60,0.765,192,0.1,205,2.114,545,2.432,619,0.005,620,0.005,717,1.919,901,0.022,902,1.057,908,1.919,912,1.114,913,3.847,917,2.173,918,2.134,919,2.213,924,1.278,1120,2.525,1205,4.542,1280,4.161,1292,3.392,2829,2.931,2831,2.931,2951,5.694,2952,4.212,2953,4.377,2954,4.563,5372,6.799,5373,5.023]],["title/injectables/StrapiRepositoryService.html",[1147,0.956,2254,3.137]],["body/injectables/StrapiRepositoryService.html",[3,0.046,4,0.046,9,0.042,11,0.779,20,0.176,25,0.937,33,0.953,36,1.468,38,1.461,39,0.007,40,0.786,41,0.386,42,0.887,48,1.497,53,1.433,55,2.433,57,2.535,60,0.706,64,3.337,68,2.783,70,2.688,72,2.508,75,2.591,77,1.408,78,1.765,91,3.047,112,4.009,116,2.898,123,2.614,138,2.469,171,4.044,189,0.24,190,0.296,192,0.103,193,0.277,204,1.175,205,1.821,236,1.674,270,2.695,272,2.283,273,1.945,280,0.941,320,2.473,326,2.175,383,3.612,394,1.247,619,0.003,620,0.003,689,1.276,706,0.893,716,3.537,720,2.695,721,1.622,723,4.96,783,1.538,788,1.365,790,2.748,809,1.518,823,3.485,853,4.373,901,0.021,902,0.492,905,1.11,912,1.377,916,1.336,924,1.653,936,2.286,968,2.031,1060,0.51,1079,2.127,1119,2.124,1120,2.058,1135,2.469,1147,0.985,1149,1.278,1151,2.834,1153,2.341,1155,3.537,1160,3.242,1175,2.909,1187,2.783,1188,2.989,1189,1.622,1190,3.088,1194,2.856,1199,2.227,1200,3.088,1202,2.539,1203,2.037,1206,1.089,1232,3.251,1253,2.748,1254,3.167,1255,2.614,1256,1.306,1258,1.306,1259,0.993,1260,4.171,1280,1.622,1396,2.341,1407,2.037,1431,2.614,1432,2.614,1439,1.996,1444,2.227,1445,3.168,1448,3.335,1449,2.227,1452,2.227,1454,2.124,1456,1.069,1464,1.306,1465,1.03,1467,1.718,1473,2.81,1479,2.175,1485,1.961,1491,1.718,1709,2.469,1711,3.806,1772,3.101,1773,3.232,1774,3.232,1786,4.729,1787,2.878,1788,4.577,1791,2.878,1792,3.101,1793,2.403,1794,2.81,1795,2.689,1797,4.267,1798,3.485,1799,4.344,1804,2.878,1806,2.878,1807,4.056,1808,2.878,1809,2.695,1817,2.695,1818,2.878,1819,2.878,1836,2.077,1838,1.771,1839,1.891,1840,1.464,1843,1.961,1867,1.961,1874,2.223,1888,2.539,1896,2.477,1897,2.127,1898,3.485,1901,3.101,1902,2.614,1909,2.223,1912,3.612,1913,1.891,1914,1.829,1917,2.037,1918,2.037,1922,1.961,1924,2.223,1926,2.037,1930,2.223,1951,3.101,1966,2.223,1985,2.213,2088,2.783,2236,5.558,2237,2.037,2238,2.223,2239,1.771,2240,1.429,2241,3.013,2242,2.338,2243,1.579,2244,2.124,2245,4.095,2246,1.891,2247,3.612,2248,3.913,2249,2.338,2250,3.594,2251,4.044,2252,5.181,2253,5.986,2254,3.232,2255,1.668,2256,4.056,2257,3.559,2258,3.559,2259,3.34,2260,1.668,2261,2.539,2262,2.783,2263,3.913,2264,3.559,2265,1.771,2266,2.338,2267,2.223,2268,2.338,2269,2.223,2270,2.338,2271,2.037,2272,2.338,2273,2.338,2274,3.786,2275,2.338,2276,2.338,2277,4.195,2278,2.338,2279,2.338,2280,3.485,2281,2.338,2282,3.164,2283,4.577,2284,3.559,2285,3.559,2286,2.338,2287,2.338,2288,2.223,2289,2.124,2290,2.124,2291,4.815,2292,3.383,2293,3.559,2294,3.232,2295,3.232,2296,2.124,2297,2.124,2298,3.559,2299,2.338,2300,2.338,2301,2.223,2302,2.338,2303,2.338,2304,2.338,2305,2.338,2306,2.338,2307,2.338,5374,3.237,5375,3.237,5376,3.237,5377,3.237,5378,3.237,5379,3.237,5380,3.237]],["title/interfaces/StrapiSignIn.html",[901,0.015,5225,2.896]],["body/interfaces/StrapiSignIn.html",[3,0.067,4,0.067,9,0.06,11,1.123,20,0.254,21,0.769,39,0.007,41,0.328,56,3.534,60,0.772,94,3.753,116,1.432,131,3.053,189,0.229,190,0.427,192,0.119,193,0.399,204,0.893,205,1.867,280,1.357,369,2.012,375,2.029,394,1.181,574,2.696,619,0.004,620,0.004,706,2.561,717,2.29,809,1.4,811,1.445,901,0.028,902,0.709,908,2.027,912,1.029,914,2.613,916,1.992,917,2.593,918,2.546,919,2.641,924,1.576,939,2.007,1109,3.096,1120,2.073,1133,4.043,1147,1.285,1175,3.133,1256,1.882,1259,1.432,1391,2.338,1724,3.31,1750,2.727,1751,2.276,1755,2.162,1814,1.967,1897,1.664,1932,2.727,1985,2.384,2050,2.06,2394,4.681,2498,3.89,2502,2.476,2683,3.681,2746,2.976,2750,2.904,2760,2.826,2785,4.403,2829,2.708,2831,2.708,2961,3.491,2962,4.018,3007,3.498,3070,2.937,3072,2.937,3074,2.937,3077,2.937,3079,2.937,4570,4.277,4571,4.403,4572,4.149,4573,4.149,4574,4.149,4575,4.149,5007,2.826,5146,3.89,5219,2.727,5220,2.937,5222,3.753,5225,4.449,5226,3.753,5229,3.89,5230,2.727,5231,4.043,5232,4.018,5233,5.223,5234,4.215,5235,4.215,5236,3.062,5237,3.062,5238,4.215,5239,4.215,5240,4.215,5241,3.062,5242,3.062,5243,4.215,5244,4.215,5245,4.215,5246,4.215,5247,4.215,5248,4.215,5249,4.215,5250,4.215,5251,4.215,5252,3.062,5253,3.062,5254,3.062,5255,3.062,5256,4.215,5257,4.043,5258,3.062,5259,2.937,5260,4.215,5261,3.062,5262,3.062,5263,3.062,5264,3.062,5265,4.043,5266,3.062,5267,3.062,5268,3.062,5269,3.062,5270,3.062,5271,3.062,5272,3.062,5273,3.062,5274,3.062,5275,3.062,5276,3.062,5277,3.062,5278,3.062,5279,3.062,5280,3.062,5281,3.062,5282,3.062]],["title/interfaces/StrapiSignInResponse.html",[901,0.015,5222,2.794]],["body/interfaces/StrapiSignInResponse.html",[3,0.067,4,0.067,9,0.06,11,1.123,20,0.254,21,0.769,39,0.007,41,0.328,56,3.534,60,0.77,94,3.753,116,1.432,131,3.053,189,0.229,190,0.427,192,0.119,193,0.399,204,0.893,205,1.867,280,1.357,369,2.012,375,2.029,394,1.181,574,2.428,619,0.004,620,0.004,706,2.617,717,2.29,809,1.4,811,1.445,901,0.028,902,0.709,908,2.027,912,1.029,914,2.613,916,1.992,917,2.593,918,2.546,919,2.641,924,1.576,939,2.007,1109,3.096,1120,2.073,1133,4.043,1147,1.285,1175,3.133,1256,1.882,1259,1.432,1391,2.338,1724,3.31,1750,2.727,1751,2.276,1755,2.162,1814,1.967,1897,1.664,1932,2.727,1985,2.384,2050,2.06,2394,4.681,2498,3.89,2502,2.476,2683,3.681,2746,2.976,2750,2.904,2760,2.826,2785,4.403,2829,2.708,2831,2.708,2961,3.491,2962,4.018,3007,3.498,3070,2.937,3072,2.937,3074,2.937,3077,2.937,3079,2.937,4570,4.277,4571,4.403,4572,4.149,4573,4.149,4574,4.149,4575,4.149,5007,2.826,5146,3.89,5219,2.727,5220,2.937,5222,4.292,5225,3.89,5226,3.753,5229,3.89,5230,2.727,5231,5.223,5232,4.54,5233,4.043,5234,4.215,5235,4.215,5236,3.062,5237,3.062,5238,4.215,5239,4.215,5240,4.215,5241,3.062,5242,3.062,5243,4.215,5244,4.215,5245,4.215,5246,4.215,5247,4.215,5248,4.215,5249,4.215,5250,4.215,5251,4.215,5252,3.062,5253,3.062,5254,3.062,5255,3.062,5256,4.215,5257,4.043,5258,3.062,5259,2.937,5260,4.215,5261,3.062,5262,3.062,5263,3.062,5264,3.062,5265,4.043,5266,3.062,5267,3.062,5268,3.062,5269,3.062,5270,3.062,5271,3.062,5272,3.062,5273,3.062,5274,3.062,5275,3.062,5276,3.062,5277,3.062,5278,3.062,5279,3.062,5280,3.062,5281,3.062,5282,3.062]],["title/interfaces/StrapiSignUp.html",[901,0.015,5229,2.896]],["body/interfaces/StrapiSignUp.html",[3,0.066,4,0.066,9,0.06,11,1.116,20,0.253,21,0.765,39,0.007,41,0.374,56,3.661,60,0.774,94,3.737,116,1.423,131,3.039,189,0.228,190,0.425,192,0.118,193,0.397,204,0.889,205,1.862,280,1.349,369,2,375,2.025,394,1.174,574,2.692,619,0.004,620,0.004,706,2.559,717,2.284,809,1.397,811,1.439,901,0.028,902,0.705,908,2.02,912,1.025,914,2.607,916,1.985,917,2.587,918,2.541,919,2.635,924,1.573,939,1.998,1109,3.086,1120,2.068,1133,4.026,1147,1.279,1175,3.12,1256,1.871,1259,1.423,1391,2.324,1724,3.296,1750,2.71,1751,2.262,1755,2.149,1814,1.955,1897,1.654,1932,2.71,1985,2.373,2050,2.047,2394,4.819,2498,3.874,2502,2.461,2683,3.669,2746,2.964,2750,2.892,2760,2.809,2785,4.393,2829,2.696,2831,2.696,2961,3.479,2962,4.005,3007,3.49,3070,2.919,3072,2.919,3074,2.919,3077,2.919,3079,2.919,4570,4.267,4571,4.393,4572,4.136,4573,4.136,4574,4.136,4575,4.136,5007,2.809,5146,3.874,5219,2.71,5220,2.919,5222,3.737,5225,3.874,5226,3.737,5229,4.434,5230,2.71,5231,4.026,5232,4.005,5233,4.026,5234,4.197,5235,4.197,5236,3.043,5237,3.043,5238,4.197,5239,4.197,5240,4.197,5241,3.043,5242,3.043,5243,4.197,5244,4.197,5245,4.197,5246,4.197,5247,4.197,5248,4.197,5249,4.197,5250,4.197,5251,4.197,5252,3.043,5253,3.043,5254,3.043,5255,3.043,5256,4.197,5257,4.026,5258,3.043,5259,2.919,5260,4.197,5261,3.043,5262,3.043,5263,3.043,5264,3.043,5265,4.026,5266,3.043,5267,3.043,5268,3.043,5269,3.043,5270,3.043,5271,3.043,5272,3.043,5273,3.043,5274,3.043,5275,3.043,5276,3.043,5277,3.043,5278,3.043,5279,3.043,5280,3.043,5281,3.043,5282,3.043]],["title/interfaces/StrapiSignUpResponse.html",[901,0.015,5226,2.794]],["body/interfaces/StrapiSignUpResponse.html",[3,0.067,4,0.067,9,0.06,11,1.123,20,0.254,21,0.769,39,0.007,41,0.328,56,3.534,60,0.77,94,3.753,116,1.432,131,3.053,189,0.229,190,0.427,192,0.119,193,0.399,204,0.893,205,1.867,280,1.357,369,2.012,375,2.029,394,1.181,574,2.428,619,0.004,620,0.004,706,2.617,717,2.29,809,1.4,811,1.445,901,0.028,902,0.709,908,2.027,912,1.029,914,2.613,916,1.992,917,2.593,918,2.546,919,2.641,924,1.576,939,2.007,1109,3.096,1120,2.073,1133,4.043,1147,1.285,1175,3.133,1256,1.882,1259,1.432,1391,2.338,1724,3.31,1750,2.727,1751,2.276,1755,2.162,1814,1.967,1897,1.664,1932,2.727,1985,2.384,2050,2.06,2394,4.681,2498,3.89,2502,2.476,2683,3.681,2746,2.976,2750,2.904,2760,2.826,2785,4.403,2829,2.708,2831,2.708,2961,3.491,2962,4.018,3007,3.498,3070,2.937,3072,2.937,3074,2.937,3077,2.937,3079,2.937,4570,4.277,4571,4.403,4572,4.149,4573,4.149,4574,4.149,4575,4.149,5007,2.826,5146,3.89,5219,2.727,5220,2.937,5222,3.753,5225,3.89,5226,4.292,5229,3.89,5230,2.727,5231,5.223,5232,4.54,5233,4.043,5234,4.215,5235,4.215,5236,3.062,5237,3.062,5238,4.215,5239,4.215,5240,4.215,5241,3.062,5242,3.062,5243,4.215,5244,4.215,5245,4.215,5246,4.215,5247,4.215,5248,4.215,5249,4.215,5250,4.215,5251,4.215,5252,3.062,5253,3.062,5254,3.062,5255,3.062,5256,4.215,5257,4.043,5258,3.062,5259,2.937,5260,4.215,5261,3.062,5262,3.062,5263,3.062,5264,3.062,5265,4.043,5266,3.062,5267,3.062,5268,3.062,5269,3.062,5270,3.062,5271,3.062,5272,3.062,5273,3.062,5274,3.062,5275,3.062,5276,3.062,5277,3.062,5278,3.062,5279,3.062,5280,3.062,5281,3.062,5282,3.062]],["title/interfaces/StrapiSongResponse.html",[901,0.015,5381,3.915]],["body/interfaces/StrapiSongResponse.html",[3,0.1,4,0.1,9,0.09,20,0.381,21,0.996,39,0.007,40,0.727,41,0.455,60,0.766,192,0.1,205,2.116,545,2.441,619,0.005,620,0.005,717,1.926,901,0.022,902,1.061,908,1.926,912,1.334,913,3.856,917,2.182,918,2.142,919,2.222,924,1.283,1120,2.501,1205,3.819,1280,4.171,1292,3.406,1612,4.581,2829,2.943,2831,2.943,2952,4.229,2956,5.717,2958,5.343,5373,5.043,5381,6.816]],["title/interfaces/StrapiUser.html",[901,0.015,5232,2.616]],["body/interfaces/StrapiUser.html",[3,0.087,4,0.087,9,0.078,20,0.331,21,0.915,39,0.007,41,0.509,56,3.466,60,0.775,122,4.399,192,0.109,205,2.035,619,0.005,620,0.005,717,1.677,901,0.025,902,0.924,908,2.422,912,1.502,913,4.392,914,3.05,917,1.9,918,1.865,919,1.935,924,1.742,1120,2.37,1280,3.832,1292,2.965,2247,3.682,2394,4.524,2683,4.399,2829,3.7,2831,3.7,2959,4.652,2961,4.171,3007,3.7,4570,4.524,4571,4.658,5232,4.576,5373,4.392,5382,4.652]],["title/interfaces/StrapiUser-1.html",[394,1.01,901,0.013,5232,2.183]],["body/interfaces/StrapiUser-1.html",[3,0.064,4,0.064,9,0.057,11,1.072,20,0.243,21,0.744,39,0.007,41,0.471,42,0.73,56,3.634,60,0.775,94,4.768,116,1.367,131,2.956,189,0.224,190,0.408,192,0.117,193,0.381,204,0.865,205,1.836,280,1.296,369,1.921,375,2,394,1.128,574,2.38,619,0.004,620,0.004,706,2.54,717,2.252,809,1.377,811,1.399,901,0.027,902,0.677,908,1.978,912,1.243,913,2.882,914,2.923,916,1.944,917,2.55,918,2.504,919,2.597,924,1.653,939,1.944,1109,3.021,1120,2.032,1133,3.915,1147,1.244,1175,3.034,1256,1.797,1259,1.367,1391,2.233,1724,3.206,1750,2.603,1751,2.173,1755,2.064,1814,1.878,1897,1.589,1932,2.603,1985,2.308,2050,1.967,2394,4.786,2498,3.768,2502,2.364,2683,3.592,2746,2.882,2750,2.812,2760,2.698,2785,4.33,2829,3.44,2831,3.44,2961,3.406,2962,3.921,3007,3.731,3070,2.804,3072,2.804,3074,2.804,3077,2.804,3079,2.804,4570,4.561,4571,4.696,4572,4.049,4573,4.049,4574,4.049,4575,4.049,5007,2.698,5146,3.768,5219,2.603,5220,2.804,5222,3.635,5225,3.768,5226,3.635,5229,3.768,5230,2.603,5231,3.915,5232,4.244,5233,3.915,5234,4.082,5235,4.082,5236,2.923,5237,2.923,5238,4.082,5239,4.082,5240,4.082,5241,2.923,5242,2.923,5243,4.082,5244,4.082,5245,4.082,5246,4.082,5247,4.082,5248,4.082,5249,4.082,5250,4.082,5251,4.082,5252,2.923,5253,2.923,5254,2.923,5255,2.923,5256,4.082,5257,3.915,5258,2.923,5259,2.804,5260,4.082,5261,2.923,5262,2.923,5263,2.923,5264,2.923,5265,3.915,5266,2.923,5267,2.923,5268,2.923,5269,2.923,5270,2.923,5271,2.923,5272,2.923,5273,2.923,5274,2.923,5275,2.923,5276,2.923,5277,2.923,5278,2.923,5279,2.923,5280,2.923,5281,2.923,5282,2.923]],["title/interfaces/StrapiUserResponse.html",[901,0.015,5382,3.659]],["body/interfaces/StrapiUserResponse.html",[3,0.096,4,0.096,9,0.086,20,0.365,21,0.97,39,0.007,41,0.464,56,2.64,60,0.761,122,3.351,192,0.116,205,2.091,619,0.005,620,0.005,717,1.845,901,0.026,902,1.016,908,1.845,912,1.49,913,3.758,914,2.678,917,2.089,918,2.052,919,2.128,924,1.709,1120,2.528,1280,4.064,1292,3.262,2247,5.497,2394,3.446,2683,3.351,2829,2.819,2831,2.819,2959,5.117,2961,3.178,3007,2.819,4570,3.446,4571,3.548,5232,4.437,5373,4.83,5382,6.206]],["title/interfaces/Task.html",[901,0.015,3158,3.659]],["body/interfaces/Task.html",[3,0.106,4,0.106,9,0.095,20,0.402,21,1.029,39,0.007,41,0.44,129,5.511,189,0.248,192,0.106,619,0.006,620,0.006,901,0.024,902,1.121,904,2.14,905,3.121,915,4.31,2830,8.502,3158,6.579,5383,6.57,5384,9.098,5385,7.375,5386,7.375,5387,7.375]],["title/interfaces/Thumbnail.html",[901,0.015,919,1.521]],["body/interfaces/Thumbnail.html",[3,0.074,4,0.074,9,0.067,20,0.284,21,0.827,33,1.006,39,0.007,40,0.955,41,0.484,60,0.783,189,0.256,190,0.476,192,0.134,193,0.445,204,0.961,205,2.064,308,1.819,324,3.623,355,3.783,357,3.702,619,0.005,620,0.005,655,3.809,660,2.296,689,1.77,717,2.142,781,2.845,783,2.472,788,2.193,790,2.144,809,1.31,811,1.17,901,0.03,902,0.791,904,1.295,912,1.58,916,1.41,917,2.426,918,2.382,919,2.633,924,0.956,1032,3.125,1057,2.606,1060,0.819,1105,4.12,1111,2.606,1292,3.787,1439,1.112,1456,1.718,1462,2.351,1465,1.655,1762,2.76,1897,1.855,2050,2.296,2241,3.125,2243,2.537,2250,2.606,2251,3.787,2255,2.68,2256,2.606,2259,2.606,2260,2.68,2261,2.68,2274,2.606,2420,4.87,2829,2.193,2831,2.193,2924,3.039,2996,3.039,2997,2.938,2998,3.782,2999,2.938,3000,3.15,3001,3.15,3002,3.15,3003,3.15,3004,5.558,3005,5.558,3006,3.15,3007,2.193,3008,5.558,3009,5.184,3010,3.15,3011,3.15,3012,2.938,3013,3.15,3014,3.15,3015,3.15,3016,3.15,3017,3.15,3018,3.039,3019,3.15,3020,3.15,3021,3.15]],["title/interfaces/User.html",[706,1.319,901,0.015]],["body/interfaces/User.html",[3,0.079,4,0.079,9,0.072,20,0.303,21,0.864,39,0.007,40,0.578,41,0.504,42,1.148,56,3.625,60,0.79,82,4.504,189,0.161,192,0.121,205,1.624,574,2.767,619,0.005,620,0.005,706,2.212,717,1.533,901,0.027,902,0.844,904,1.797,905,2.751,907,3.815,908,2.428,912,1.508,913,3.345,914,2.978,915,3.246,916,2.49,917,1.736,918,1.705,919,2.297,924,1.021,2140,3.246,2394,4.535,2683,4.254,2746,2.574,2750,2.512,2788,3.645,2823,3.246,2826,3.497,2961,4.034,2962,4.644,3007,3.578,4567,4.013,4568,6.496,4569,6.496,4570,4.375,4571,4.504,4572,4.795,4573,4.795,4574,4.795,4575,4.795,4576,4.013,4577,3.815,4578,4.251,4579,4.251]],["title/interfaces/UserDisplayData.html",[901,0.015,4577,3.283]],["body/interfaces/UserDisplayData.html",[3,0.087,4,0.087,9,0.078,20,0.331,21,0.914,39,0.007,40,0.631,41,0.492,42,0.896,56,3.698,60,0.789,82,3.218,189,0.175,192,0.126,205,1.717,574,2.564,619,0.005,620,0.005,706,2.107,717,1.673,901,0.028,902,0.922,904,1.51,905,2.619,907,6.023,908,2.494,912,1.552,913,3.538,914,2.522,915,3.544,916,2.54,917,1.895,918,1.861,919,2.43,924,1.612,2140,3.544,2394,4.659,2683,3.039,2746,2.81,2750,2.742,2788,5.755,2823,3.544,2826,3.818,2961,2.882,2962,3.318,3007,2.557,4567,4.381,4568,4.641,4569,4.641,4570,3.126,4571,3.218,4572,3.426,4573,3.426,4574,3.426,4575,3.426,4576,4.381,4577,5.243,4578,6.712,4579,6.712]],["title/injectables/UserService.html",[738,2.794,1147,0.956]],["body/injectables/UserService.html",[3,0.046,4,0.046,9,0.042,11,0.777,20,0.176,21,0.588,25,0.935,33,0.951,36,1.694,38,1.723,39,0.007,40,0.927,41,0.46,42,1.046,46,1.198,48,1.53,53,0.939,55,1.774,56,1.275,57,0.939,60,0.769,64,2.744,75,2.08,77,0.923,78,0.956,91,1.302,116,1.509,189,0.239,190,0.296,192,0.046,193,0.276,204,0.925,227,2.691,235,1.151,236,0.907,267,2.333,272,2.278,273,2.351,280,0.939,308,1.719,318,1.824,479,3.331,582,1.983,619,0.003,620,0.003,670,2.939,688,1.575,689,1.532,706,2.082,738,3.89,780,2.471,809,1.45,811,0.726,829,4.38,904,1.224,908,2.286,912,0.954,916,0.876,924,1.579,936,2.283,939,2.527,941,2.918,968,2.027,1002,2.337,1060,0.508,1063,2.644,1079,2.555,1119,2.568,1120,0.846,1135,2.464,1147,0.983,1149,1.275,1175,1.575,1187,3.364,1189,1.618,1199,1.46,1221,4.005,1222,2.217,1223,5.803,1241,3.692,1246,2.217,1250,4.005,1259,0.991,1308,3.59,1377,4.027,1386,1.713,1427,5.091,1431,3.16,1432,2.609,1436,1.767,1439,2.026,1444,1.46,1445,2.685,1446,4.339,1447,2.644,1448,2.629,1449,1.46,1450,2.471,1451,2.471,1452,2.223,1454,1.393,1455,2.471,1456,1.066,1457,2.333,1460,1.824,1462,1.46,1464,1.302,1465,1.028,1467,1.713,1472,2.471,1477,2.534,1588,1.887,1645,1.618,1751,1.575,1755,1.496,1897,1.753,1902,1.713,1911,2.471,1985,1.198,2028,4.876,2084,4.75,2111,2.119,2240,1.425,2387,1.824,2431,2.471,2434,5.607,2444,2.876,2451,6.667,2453,1.956,2460,2.471,2469,2.333,2473,2.217,2477,5.93,2485,1.824,2486,2.876,2494,2.217,2499,2.644,2571,1.887,2680,3.763,2733,2.032,2766,5.482,2783,2.876,2785,3.16,2795,4.952,2799,2.333,3137,4.41,3139,5.389,3164,5.094,3165,4.027,3166,4.027,3167,4.027,3168,4.027,3169,4.027,3170,4.027,3172,4.027,3173,6.18,3174,4.027,3176,4.027,3178,4.027,3179,4.027,3181,4.027,3183,4.027,3185,3.763,3380,2.876,3490,1.887,3679,2.876,3699,6.723,3777,4.876,3778,2.644,3779,4.027,3780,2.333,3781,4.027,3782,2.333,3783,2.333,3784,4.027,3785,2.644,3786,4.027,3928,2.876,3955,2.471,3971,2.333,3981,3.377,4041,2.333,4102,4.809,4893,2.471,4947,2.471,5007,2.978,5257,2.032,5259,2.032,5388,2.876,5389,5.954,5390,5.954,5391,3.229,5392,4.916,5393,4.916,5394,3.229,5395,3.229,5396,3.229,5397,3.229,5398,3.229,5399,3.229,5400,3.229,5401,3.229,5402,3.229,5403,4.916,5404,3.229,5405,3.229,5406,3.229,5407,3.229,5408,3.229,5409,3.229,5410,5.954,5411,8.815,5412,5.954,5413,7.546,5414,3.229,5415,3.229,5416,3.229,5417,3.229,5418,3.229,5419,3.229,5420,3.229,5421,3.229,5422,3.229,5423,3.229,5424,3.229,5425,7.163,5426,3.229,5427,7.846,5428,7.163,5429,4.38,5430,4.916,5431,3.229,5432,4.916,5433,3.229,5434,3.229,5435,3.229,5436,3.229,5437,4.916,5438,3.229,5439,3.229,5440,3.229,5441,3.229,5442,3.229,5443,3.229,5444,3.229,5445,3.229,5446,3.229,5447,3.229,5448,3.229,5449,3.229,5450,3.229,5451,3.229,5452,3.229,5453,3.229,5454,4.916,5455,3.229,5456,3.229,5457,3.229,5458,3.229,5459,3.229]],["title/coverage.html",[5460,5.818]],["body/coverage.html",[0,1.926,1,1.025,9,0.033,10,2.312,39,0.007,41,0.212,129,1.572,172,2.995,193,0.355,375,2.397,439,2.492,479,2.853,554,1.047,558,1.047,560,1.047,561,1.693,563,1.047,565,1.025,567,1.025,569,1.07,570,0.907,572,1.047,574,1.272,575,1.025,578,1.047,580,2.194,581,1.047,584,1.047,586,0.963,588,1.047,589,1.025,591,1.025,594,1.047,596,1.025,597,0.729,599,1.047,600,1.047,601,1.025,603,1.047,604,1.025,606,1.003,607,0.692,608,2.286,609,1.047,610,1.025,611,1.025,613,1.07,616,1.025,619,0.003,620,0.003,657,2.312,669,1.703,670,1.146,706,0.716,717,0.716,732,1.146,733,1.42,734,1.572,735,1.466,736,1.466,737,1.266,738,1.516,739,3.395,751,2.125,752,2.125,753,2.125,754,2.125,755,2.125,756,2.125,757,2.125,758,2.125,759,2.125,760,2.125,761,2.125,763,1.782,769,1.875,770,1.986,771,1.986,772,1.986,773,2.125,774,2.125,775,2.125,776,2.125,777,2.125,778,2.125,779,2.125,780,1.986,781,1.42,782,1.703,783,1.233,784,1.703,785,2.125,786,2.125,796,2.995,798,1.986,800,1.986,807,5.212,808,2.125,811,0.584,819,2.125,857,2.125,859,2.125,885,2.995,892,2.995,901,0.032,903,2.312,905,0.89,917,0.811,918,0.796,919,0.826,920,1.986,921,3.395,922,3.173,923,3.395,953,2.995,954,2.125,955,3.395,997,2.125,1012,1.986,1013,4.876,1032,1.173,1056,2.594,1061,3.721,1120,0.68,1143,3.173,1147,1.849,1148,2.125,1150,2.312,1151,2.81,1152,4.524,1206,0.873,1254,1.233,1292,1.266,1311,1.377,1314,2.312,1426,2.312,1427,1.633,1434,1.986,1436,2.832,1458,1.986,1461,2.125,1473,2.182,1518,2.847,1519,3.962,1521,1.782,1545,2.285,1591,3.173,1669,2.847,1710,3.962,1724,1.337,1748,1.572,1762,4.382,1766,2.125,1767,3.962,1768,2.312,1795,1.047,1836,1.748,1837,2.125,1838,1.42,1886,1.875,1887,2.312,1897,2.579,1913,1.516,1914,1.466,1931,2.125,1932,1.516,1933,2.312,1989,2.312,1999,1.572,2002,2.125,2010,2.312,2011,1.986,2030,1.986,2048,1.986,2050,3.904,2107,2.312,2140,1.516,2162,2.125,2227,1.875,2228,2.847,2229,3.962,2233,1.633,2236,4.438,2237,4.553,2241,1.173,2246,2.422,2247,1.572,2248,1.703,2254,1.703,2308,2.312,2309,2.312,2373,1.875,2375,2.312,2389,3.395,2390,3.173,2547,1.875,2599,1.986,2600,2.312,2602,3.693,2607,1.703,2713,2.847,2714,3.395,2734,2.125,2735,4.522,2736,2.312,2738,2.125,2739,3.395,2746,1.921,2750,1.874,2767,1.986,2846,2.312,2867,2.125,2868,2.125,2869,2.125,2870,2.125,2912,2.125,2913,2.312,2914,2.125,2946,2.125,2947,2.312,2950,2.125,2951,3.395,2955,2.125,2956,3.395,2959,3.962,2964,2.312,2965,2.125,2966,4.271,2997,1.466,2998,1.42,2999,1.466,3009,1.466,3012,1.466,3022,2.312,3033,2.312,3034,4.55,3065,2.312,3066,4.522,3068,2.312,3069,3.962,3087,2.312,3098,4.068,3114,1.782,3120,2.312,3129,1.986,3130,2.312,3131,1.986,3132,2.312,3142,1.875,3143,2.312,3150,1.875,3151,2.312,3152,2.312,3153,2.312,3156,2.125,3157,2.312,3158,1.986,3160,2.125,3161,3.395,3164,1.986,3185,1.986,3186,2.312,3188,1.986,3189,3.395,3228,2.312,3257,2.312,3258,2.125,3327,2.312,3400,2.312,3404,2.312,3408,1.875,3409,2.312,3410,2.312,3414,2.312,3430,3.395,3431,3.173,3432,3.395,3441,2.125,3545,2.312,3546,2.125,3587,2.312,3594,3.173,3597,1.875,3598,2.312,3599,2.312,3634,3.173,3635,2.125,3646,1.986,3648,4.842,3756,2.125,3757,2.312,3837,2.312,3897,2.312,3915,2.125,3950,1.875,3951,4.524,3958,2.72,3959,1.875,4192,2.312,4217,2.125,4267,3.693,4268,3.395,4269,3.693,4503,1.986,4504,2.312,4541,2.125,4548,2.312,4561,3.395,4567,4.271,4577,1.782,4580,2.312,4584,4.241,4614,3.34,4687,3.693,4805,3.693,4863,3.395,4865,1.986,4948,2.125,4949,2.312,5065,2.312,5219,1.516,5220,4.553,5222,1.516,5225,1.572,5226,1.516,5229,1.572,5230,1.516,5232,2.268,5233,1.633,5372,2.125,5373,4.271,5381,2.125,5382,1.986,5383,2.312,5388,2.312,5460,2.312,5461,2.595,5462,2.595,5463,7.745,5464,9.837,5465,2.312,5466,9.688,5467,2.312,5468,2.312,5469,2.595,5470,8.598,5471,7.232,5472,7.232,5473,8.688,5474,6.89,5475,5.176,5476,4.145,5477,7.232,5478,7.232,5479,6.462,5480,4.145,5481,2.595,5482,2.595,5483,4.145,5484,4.145,5485,2.312,5486,2.595,5487,2.595,5488,4.145,5489,2.595,5490,2.595,5491,2.595,5492,2.595,5493,2.595,5494,2.595,5495,6.89,5496,6.868,5497,2.125,5498,2.125,5499,8.375,5500,2.595,5501,6.462,5502,4.145,5503,2.595,5504,2.595,5505,2.312,5506,2.595,5507,5.911,5508,2.595,5509,2.595,5510,2.312,5511,3.693,5512,2.595,5513,2.595,5514,2.595,5515,2.312,5516,2.595,5517,2.595,5518,3.693,5519,2.595,5520,2.595,5521,2.595,5522,2.595,5523,2.595,5524,2.595,5525,2.595,5526,2.595,5527,2.595,5528,2.595,5529,2.595,5530,2.312,5531,2.312,5532,2.595,5533,2.595]],["title/dependencies.html",[624,2.806,5534,3.554]],["body/dependencies.html",[39,0.007,89,4.925,98,5.583,186,4.682,190,0.624,191,2.48,619,0.005,620,0.005,624,3.325,640,3.417,642,2.874,644,2.21,646,3.796,647,3.009,743,7.309,744,6.719,749,6.719,793,6.073,794,6.073,1060,1.073,1888,3.514,2158,5.217,4514,6.073,5535,6.816,5536,9.492,5537,6.816,5538,8.204,5539,6.816,5540,6.816,5541,6.816,5542,6.816,5543,8.204,5544,6.816,5545,9.134,5546,6.816,5547,6.816,5548,6.816,5549,8.204,5550,6.816,5551,6.816,5552,6.816,5553,6.816,5554,6.816,5555,6.816,5556,6.816,5557,6.816,5558,6.816,5559,6.816,5560,6.816,5561,6.816,5562,6.816,5563,6.816,5564,6.816,5565,6.816,5566,6.816,5567,6.816,5568,6.816,5569,6.816,5570,6.816]],["title/miscellaneous/functions.html",[5571,2.74,5572,5.123]],["body/miscellaneous/functions.html",[20,0.343,38,1.861,39,0.007,40,1.002,41,0.492,42,1.129,48,1.622,60,0.743,580,3.155,619,0.005,620,0.005,624,4.336,739,5.159,790,3.223,808,6.962,810,5.611,819,6.402,1013,5.596,1061,3.965,1079,2.788,1111,4.26,1126,4.551,1888,3.246,2048,5.983,2140,3.681,2251,3.814,2389,5.159,2390,4.82,2417,7.28,3648,7.816,3651,7.919,4217,6.402,4584,4.133,5083,6.964,5496,5.159,5497,6.402,5498,6.402,5510,5.611,5511,5.611,5518,5.611,5571,4.326,5572,5.611,5573,6.964,5574,7.817,5575,6.298,5576,6.298,5577,6.298,5578,6.298,5579,7.817,5580,6.298,5581,7.919,5582,7.817,5583,6.964,5584,6.298,5585,6.298,5586,8.889,5587,7.817,5588,6.298]],["title/index.html",[20,0.217,4136,3.053,5589,3.989]],["body/index.html",[23,6.608,39,0.007,110,7.683,137,4.058,146,6.075,214,6.601,223,6.231,426,5.359,478,6.608,501,4.867,502,5.359,541,6.075,597,2.083,619,0.006,620,0.006,635,3.354,706,2.047,2840,6.075,3500,6.075,5145,6.075,5590,7.417,5591,7.417,5592,7.417,5593,7.417,5594,7.417,5595,7.417,5596,7.417,5597,7.417,5598,7.417,5599,8.624]],["title/modules.html",[623,2.473]],["body/modules.html",[39,0.005,541,8.082,619,0.005,620,0.005,622,5.163,623,2.555,632,4.874,724,5.163,730,4.874,731,3.477,744,8.082,1138,5.163,1142,4.874,1417,5.163,1421,4.874,3025,5.163,3029,4.874,3392,5.163,3396,4.874,3589,5.163,3593,4.874,3889,5.163,3893,4.874,3943,5.163,3947,4.874,4258,5.163,4262,4.874,5040,5.163,5044,4.874,5108,8.791,5216,5.525,5363,8.791,5600,10.079,5601,9.867]],["title/overview.html",[5602,5.818]],["body/overview.html",[1,2.783,2,1.821,39,0.007,369,1.863,394,1.093,425,2.834,552,1.454,554,1.742,558,3.469,560,3.469,563,2.843,565,2.783,567,2.783,569,3.546,572,3.469,575,3.396,578,3.469,581,3.469,584,3.469,586,2.615,588,3.469,589,2.783,591,3.396,594,3.469,596,2.783,599,3.469,600,3.469,601,2.783,603,2.843,604,2.783,606,3.325,609,3.469,610,3.396,611,2.783,616,3.396,619,0.004,620,0.004,621,1.35,622,6.405,623,1.636,624,2.107,625,2.292,626,2.292,627,2.226,628,1.705,629,3.847,630,3.847,631,3.847,632,5.091,633,3.23,634,2.292,635,1.953,653,2.164,724,7.436,725,3.847,726,3.847,727,3.847,728,3.847,729,3.847,730,5.091,731,5.205,732,3.111,733,3.856,734,4.269,735,3.981,736,3.981,737,3.438,738,4.118,902,0.657,1138,6.72,1139,3.847,1140,3.847,1141,3.847,1142,5.091,1149,1.705,1417,6.924,1418,3.847,1419,3.847,1420,3.847,1421,5.091,1761,3.537,2162,3.537,2373,6.213,2374,3.12,3025,6.72,3026,3.847,3027,3.847,3028,3.847,3029,5.091,3392,6.72,3393,3.847,3394,3.847,3395,3.847,3396,5.091,3408,6.213,3589,6.72,3590,3.847,3591,3.847,3592,3.847,3593,5.091,3597,6.213,3889,6.72,3890,3.847,3891,3.847,3892,3.847,3893,5.091,3943,6.72,3944,3.847,3945,3.847,3946,3.847,3947,5.091,4258,6.72,4259,3.847,4260,3.847,4261,3.847,4262,5.091,4529,3.847,4530,3.847,4531,3.847,5040,6.72,5041,3.847,5042,3.847,5043,3.847,5044,5.091,5485,3.847,5505,3.847,5515,3.847,5602,3.847,5603,4.318]],["title/properties.html",[21,0.688,5534,3.554]],["body/properties.html",[21,0.919,39,0.006,99,7.839,112,4.075,414,6.289,586,2.85,619,0.006,620,0.006,2952,4.652,5604,7.679,5605,7.679,5606,7.679,5607,7.679]],["title/routes.html",[653,3.273]],["body/routes.html",[39,0.006,619,0.006,620,0.006,653,3.93]],["title/miscellaneous/typealiases.html",[5571,2.74,5608,5.751]],["body/miscellaneous/typealiases.html",[20,0.421,39,0.006,41,0.395,619,0.006,620,0.006,1762,4.685,2050,3.41,2997,4.988,2998,4.226,5571,5.305,5609,7.724,5610,7.724]],["title/miscellaneous/variables.html",[278,4.401,5571,2.74]],["body/miscellaneous/variables.html",[20,0.195,35,2.663,39,0.007,41,0.427,46,1.329,53,2.178,55,1.869,57,1.042,60,0.633,72,1.252,75,1.119,77,2.837,78,2.933,91,1.445,131,2.526,171,3.091,186,4.352,204,0.975,236,1.006,278,2.74,503,2.35,561,0.938,591,1.414,597,1.006,607,0.955,619,0.004,620,0.004,670,3.586,706,0.988,751,4.352,752,4.352,753,4.352,754,4.352,755,4.352,756,4.352,757,4.352,758,4.352,759,4.352,760,4.352,761,4.352,763,3.65,769,5.066,770,4.85,771,4.85,772,4.85,773,7.372,774,5.19,775,5.19,776,5.19,777,5.19,778,5.19,779,5.19,780,4.85,781,3.467,782,5.846,783,2.526,784,3.487,785,5.19,786,5.19,790,3.44,796,5.066,809,1.566,811,2.214,817,5.742,818,5.645,820,5.645,854,2.933,857,4.352,859,4.352,871,3.65,936,1.823,939,1.98,941,3.141,989,2.459,1002,3.012,1032,1.619,1151,3.012,1200,1.659,1201,2.254,1214,1.619,1232,1.747,1235,2.74,1398,2.933,1461,5.19,1682,4.067,1709,3.933,1719,2.35,1721,3.487,1724,1.846,1763,2.35,1782,3.839,1837,4.352,1838,2.908,1888,3.614,1897,2.501,1913,3.106,1914,3.002,1985,2.602,2002,4.352,2028,4.352,2240,2.346,2241,1.619,2282,2.82,2485,2.023,2494,3.65,2617,3.839,2742,4.067,2867,5.742,2868,5.742,2869,5.742,2870,5.742,2930,2.933,3299,2.74,3349,2.933,3352,4.352,3370,3.487,3430,2.933,3431,2.74,3432,4.352,3441,4.352,3490,2.093,3498,3.19,3499,3.19,3500,2.933,3915,5.19,4041,5.066,4109,2.587,4232,3.19,4364,3.19,4720,3.19,4865,4.85,4957,2.933,5146,2.169,5219,2.093,5292,4.734,5429,4.734,5465,3.19,5467,3.19,5468,4.734,5496,2.933,5497,5.742,5498,5.742,5499,3.19,5530,3.19,5531,3.19,5571,2.459,5573,7.839,5581,3.19,5583,4.734,5611,9.713,5612,3.581,5613,3.581,5614,3.581,5615,3.581,5616,3.581,5617,3.581,5618,3.581,5619,3.581,5620,3.581,5621,3.581,5622,3.581,5623,3.581,5624,3.581,5625,3.581,5626,3.581,5627,3.581,5628,3.581,5629,3.581,5630,3.581,5631,3.581,5632,3.581,5633,3.581,5634,3.581,5635,3.581,5636,3.581,5637,3.581,5638,3.581,5639,3.581,5640,3.581,5641,3.581,5642,3.581,5643,3.581,5644,3.581,5645,3.581,5646,3.581,5647,3.581,5648,6.337,5649,6.337,5650,3.581,5651,3.581,5652,6.337,5653,6.337,5654,3.581,5655,3.581,5656,3.581,5657,3.581,5658,5.314,5659,5.314,5660,5.314,5661,5.314,5662,5.314,5663,5.314,5664,5.314,5665,3.581,5666,3.581,5667,3.581,5668,3.581,5669,5.314,5670,3.581,5671,3.581,5672,5.314,5673,5.314,5674,3.581,5675,3.581,5676,5.314,5677,5.314,5678,5.314,5679,3.581,5680,3.581,5681,3.581,5682,3.581,5683,3.581,5684,3.581,5685,3.581,5686,3.581,5687,3.581,5688,3.581]]],"invertedIndex":[["",{"_index":39,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":375,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["0.0.1",{"_index":5604,"title":{},"body":{"properties.html":{}}}],["0.01ms",{"_index":546,"title":{},"body":{"components/AboutPage.html":{}}}],["0.02em",{"_index":5177,"title":{},"body":{"components/SplashPage.html":{}}}],["0.03",{"_index":362,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["0.05",{"_index":2156,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["0.08",{"_index":3751,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["0.1",{"_index":331,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["0.119",{"_index":998,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["0.14.2",{"_index":5570,"title":{},"body":{"dependencies.html":{}}}],["0.15",{"_index":464,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["0.16s",{"_index":5199,"title":{},"body":{"components/SplashPage.html":{}}}],["0.1em",{"_index":5184,"title":{},"body":{"components/SplashPage.html":{}}}],["0.2",{"_index":416,"title":{},"body":{"components/AboutPage.html":{},"components/FollowArtistButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["0.25",{"_index":3749,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["0.25rem",{"_index":3387,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["0.2s",{"_index":3322,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["0.3",{"_index":389,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["0.32s",{"_index":5197,"title":{},"body":{"components/SplashPage.html":{}}}],["0.3rem",{"_index":5209,"title":{},"body":{"components/SplashPage.html":{}}}],["0.3s",{"_index":336,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["0.4",{"_index":1005,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["0.4s",{"_index":449,"title":{},"body":{"components/AboutPage.html":{},"components/SongGridCardComponent.html":{}}}],["0.5",{"_index":2214,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["0.5px",{"_index":2169,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["0.5rem",{"_index":2136,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["0.5s",{"_index":2160,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["0.6",{"_index":3747,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["0.6s",{"_index":499,"title":{},"body":{"components/AboutPage.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["0.7",{"_index":398,"title":{},"body":{"components/AboutPage.html":{},"injectables/AudioPlayerService.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["0.75rem",{"_index":465,"title":{},"body":{"components/AboutPage.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{}}}],["0.8",{"_index":412,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["0.85rem",{"_index":2150,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["0.875rem",{"_index":1011,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["0.8rem",{"_index":490,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/SplashPage.html":{}}}],["0.9",{"_index":409,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/SplashPage.html":{}}}],["0.95",{"_index":3736,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["0.95rem",{"_index":3746,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["0.9rem",{"_index":459,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["0.9s",{"_index":5183,"title":{},"body":{"components/SplashPage.html":{}}}],["0/1",{"_index":5464,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":5471,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":5478,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":5476,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":5479,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":5501,"title":{},"body":{"coverage.html":{}}}],["0/16",{"_index":5507,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":5502,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":5480,"title":{},"body":{"coverage.html":{}}}],["0/19",{"_index":5503,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":5473,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":5528,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":5529,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":5508,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":5514,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":5500,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":5519,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5470,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":5520,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":5472,"title":{},"body":{"coverage.html":{}}}],["0/45",{"_index":5525,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":5474,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":5495,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":5475,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5463,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":5477,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":1408,"title":{},"body":{"components/ArtistsPage.html":{}}}],["007acc",{"_index":170,"title":{},"body":{"components/AboutPage.html":{}}}],["00:00",{"_index":2379,"title":{},"body":{"pipes/DurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["06b6d4",{"_index":177,"title":{},"body":{"components/AboutPage.html":{}}}],["0:00",{"_index":1699,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{}}}],["0a0a0a",{"_index":3735,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["0deg",{"_index":360,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["0f0c29",{"_index":4630,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["0f1419",{"_index":3727,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["0s",{"_index":4680,"title":{},"body":{"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["1",{"_index":394,"title":{"interfaces/EnrichedSong-1.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/StrapiUser-1.html":{}},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"overview.html":{}}}],["1.1rem",{"_index":325,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["1.25rem",{"_index":2176,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["1.2rem",{"_index":408,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["1.2s",{"_index":4678,"title":{},"body":{"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["1.4",{"_index":2137,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["1.4s",{"_index":5194,"title":{},"body":{"components/SplashPage.html":{}}}],["1.5",{"_index":458,"title":{},"body":{"components/AboutPage.html":{}}}],["1.5px",{"_index":3388,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["1.5rem",{"_index":340,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["1.6",{"_index":413,"title":{},"body":{"components/AboutPage.html":{}}}],["1.8.3",{"_index":5554,"title":{},"body":{"dependencies.html":{}}}],["1.8rem",{"_index":512,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["1/1",{"_index":5469,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":5491,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":5487,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1311,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"pipes/DurationPipe.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"coverage.html":{}}}],["10).topromise",{"_index":2664,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["10/41",{"_index":5506,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":479,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["100).pipe",{"_index":1495,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["1000",{"_index":2708,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/PlaylistLikeButtonComponent.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["1000).tofixed(1",{"_index":2709,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["10000",{"_index":4361,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["1000000",{"_index":2706,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["1000000).tofixed(1",{"_index":2707,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["100px",{"_index":454,"title":{},"body":{"components/AboutPage.html":{},"components/EditProfileModalComponent.html":{}}}],["100vh",{"_index":5155,"title":{},"body":{"components/SplashPage.html":{}}}],["103",{"_index":996,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["107",{"_index":2146,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["10px",{"_index":392,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["11.0.0",{"_index":5561,"title":{},"body":{"dependencies.html":{}}}],["11.1.0",{"_index":5555,"title":{},"body":{"dependencies.html":{}}}],["119eff",{"_index":181,"title":{},"body":{"components/AboutPage.html":{}}}],["12",{"_index":2107,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"coverage.html":{}}}],["12/12",{"_index":5481,"title":{},"body":{"coverage.html":{}}}],["12/17",{"_index":5527,"title":{},"body":{"coverage.html":{}}}],["1200px",{"_index":445,"title":{},"body":{"components/AboutPage.html":{}}}],["120px",{"_index":384,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["121212",{"_index":282,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["123",{"_index":4932,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["12px",{"_index":435,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["135deg",{"_index":3732,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["140px",{"_index":3755,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["14px",{"_index":4428,"title":{},"body":{"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["150px",{"_index":5208,"title":{},"body":{"components/SplashPage.html":{}}}],["15px",{"_index":474,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/SplashPage.html":{}}}],["16.0.1",{"_index":5553,"title":{},"body":{"dependencies.html":{}}}],["16.0.4",{"_index":5552,"title":{},"body":{"dependencies.html":{}}}],["160px",{"_index":3743,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["16px",{"_index":419,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["17/17",{"_index":5494,"title":{},"body":{"coverage.html":{}}}],["17/59",{"_index":5516,"title":{},"body":{"coverage.html":{}}}],["17c653",{"_index":2171,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["18.0.0",{"_index":5536,"title":{},"body":{"dependencies.html":{}}}],["18.2.13",{"_index":5538,"title":{},"body":{"dependencies.html":{}}}],["180px",{"_index":5162,"title":{},"body":{"components/SplashPage.html":{}}}],["181818",{"_index":3382,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["185",{"_index":462,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["18px",{"_index":452,"title":{},"body":{"components/AboutPage.html":{},"components/SongGridCardComponent.html":{}}}],["191414",{"_index":303,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["195",{"_index":4912,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["1:6432458357:web:08b9d178b6d3c44550da3c",{"_index":847,"title":{},"body":{"modules/AppModule.html":{}}}],["1a1a1a",{"_index":3733,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["1aa34a",{"_index":523,"title":{},"body":{"components/AboutPage.html":{}}}],["1db954",{"_index":288,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["1db95480",{"_index":4256,"title":{},"body":{"components/RegisterPage.html":{}}}],["1e1e1e",{"_index":284,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["1e3a5f",{"_index":3726,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["1ed760",{"_index":290,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["1fr",{"_index":444,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{}}}],["1px",{"_index":450,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["1rem",{"_index":411,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["1s",{"_index":5158,"title":{},"body":{"components/SplashPage.html":{}}}],["2",{"_index":369,"title":{"interfaces/EnrichedSong-2.html":{},"interfaces/SongWithArtists-2.html":{}},"body":{"components/AboutPage.html":{},"injectables/ArtistsService.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"overview.html":{}}}],["2).foreach(artist",{"_index":4061,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["2).foreach(playlist",{"_index":4058,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["2.2rem",{"_index":438,"title":{},"body":{"components/AboutPage.html":{}}}],["2.3.0",{"_index":5568,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":436,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["20",{"_index":1669,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{},"coverage.html":{}}}],["200",{"_index":356,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["2000",{"_index":2073,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["200px",{"_index":508,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["2025",{"_index":271,"title":{},"body":{"components/AboutPage.html":{}}}],["20ms",{"_index":1670,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["20px",{"_index":345,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["24",{"_index":5505,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["24243e",{"_index":4632,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["24px",{"_index":428,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["25",{"_index":1345,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/BaseService.html":{},"directives/DragDropDirective.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["250px",{"_index":510,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"components/EditProfileModalComponent.html":{}}}],["255",{"_index":330,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["25px",{"_index":486,"title":{},"body":{"components/AboutPage.html":{}}}],["26",{"_index":5603,"title":{},"body":{"overview.html":{}}}],["272727",{"_index":2123,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{}}}],["28",{"_index":5515,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["282828",{"_index":286,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["29",{"_index":520,"title":{},"body":{"components/AboutPage.html":{}}}],["2d2d2d",{"_index":3734,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["2deg",{"_index":361,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["2f2d2d",{"_index":1411,"title":{},"body":{"components/ArtistsPage.html":{}}}],["2px",{"_index":431,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["2rem",{"_index":505,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["2s",{"_index":5174,"title":{},"body":{"components/SplashPage.html":{}}}],["3",{"_index":425,"title":{"interfaces/SongWithArtists-3.html":{}},"body":{"components/AboutPage.html":{},"injectables/ArtistsService.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"overview.html":{}}}],["3).foreach(song",{"_index":4053,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["3.0.3",{"_index":5558,"title":{},"body":{"dependencies.html":{}}}],["3.11.8",{"_index":5541,"title":{},"body":{"dependencies.html":{}}}],["3.5rem",{"_index":399,"title":{},"body":{"components/AboutPage.html":{}}}],["3/15",{"_index":5526,"title":{},"body":{"coverage.html":{}}}],["3/29",{"_index":5524,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":3325,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["300",{"_index":2226,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["3000",{"_index":2083,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["300ms",{"_index":4011,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["302b63",{"_index":4631,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["30px",{"_index":382,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/SplashPage.html":{}}}],["30s",{"_index":366,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["32bd63",{"_index":525,"title":{},"body":{"components/AboutPage.html":{}}}],["32px",{"_index":2135,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["33",{"_index":2162,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"coverage.html":{},"overview.html":{}}}],["333",{"_index":3729,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["339933",{"_index":184,"title":{},"body":{"components/AboutPage.html":{}}}],["350px",{"_index":2527,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["35px",{"_index":5164,"title":{},"body":{"components/SplashPage.html":{}}}],["3600",{"_index":3628,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["36px",{"_index":2546,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["3880ff",{"_index":168,"title":{},"body":{"components/AboutPage.html":{}}}],["3b82f6",{"_index":307,"title":{},"body":{"components/AboutPage.html":{}}}],["3px",{"_index":475,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["3rem",{"_index":469,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["3s",{"_index":396,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["4).foreach(artist",{"_index":4329,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["4).foreach(song",{"_index":4332,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["40",{"_index":5207,"title":{},"body":{"components/SplashPage.html":{}}}],["400",{"_index":2198,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["401",{"_index":3356,"title":{},"body":{"components/LoginPage.html":{}}}],["404",{"_index":3358,"title":{},"body":{"components/LoginPage.html":{}}}],["404040",{"_index":2124,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["409",{"_index":4230,"title":{},"body":{"components/RegisterPage.html":{}}}],["40px",{"_index":387,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["42",{"_index":997,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{},"coverage.html":{}}}],["45",{"_index":5512,"title":{},"body":{"coverage.html":{}}}],["450px",{"_index":3384,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["480px",{"_index":511,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["48px",{"_index":427,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{}}}],["4945ff",{"_index":173,"title":{},"body":{"components/AboutPage.html":{}}}],["4deg",{"_index":363,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["4px",{"_index":405,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{}}}],["4rem",{"_index":482,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{}}}],["4s",{"_index":457,"title":{},"body":{"components/AboutPage.html":{}}}],["5",{"_index":5667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.12.2",{"_index":5560,"title":{},"body":{"dependencies.html":{}}}],["5/11",{"_index":5513,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":334,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{}}}],["500",{"_index":410,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["500px",{"_index":480,"title":{},"body":{"components/AboutPage.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["50px",{"_index":433,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/SplashPage.html":{}}}],["540px",{"_index":3730,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["56px",{"_index":2142,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["5px",{"_index":708,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistModalComponent.html":{}}}],["6",{"_index":4492,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["6.0.2",{"_index":5545,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":5543,"title":{},"body":{"dependencies.html":{}}}],["6/14",{"_index":5521,"title":{},"body":{"coverage.html":{}}}],["6/30",{"_index":5517,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":5484,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1702,"title":{},"body":{"injectables/AudioPlayerService.html":{},"pipes/DurationPipe.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{}}}],["600",{"_index":418,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["600px",{"_index":373,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{}}}],["60px",{"_index":346,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{}}}],["6432458357",{"_index":845,"title":{},"body":{"modules/AppModule.html":{}}}],["66",{"_index":2164,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["666",{"_index":2524,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["6a6a6a",{"_index":297,"title":{},"body":{"components/AboutPage.html":{}}}],["6px",{"_index":455,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["7.0.0",{"_index":5549,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":5566,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":5482,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":5490,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":5486,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1591,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["700",{"_index":323,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["70vh",{"_index":4382,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["768px",{"_index":504,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["77",{"_index":5485,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["8",{"_index":2103,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["8.4.0",{"_index":5564,"title":{},"body":{"dependencies.html":{}}}],["8.4.3",{"_index":5551,"title":{},"body":{"dependencies.html":{}}}],["8/8",{"_index":5488,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":5205,"title":{},"body":{"components/SplashPage.html":{}}}],["800",{"_index":437,"title":{},"body":{"components/AboutPage.html":{}}}],["800px",{"_index":472,"title":{},"body":{"components/AboutPage.html":{}}}],["80px",{"_index":344,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["80vh",{"_index":3543,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["84",{"_index":463,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["85",{"_index":5483,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":5489,"title":{},"body":{"coverage.html":{}}}],["888",{"_index":2544,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["8b5cf6",{"_index":305,"title":{},"body":{"components/AboutPage.html":{}}}],["8px",{"_index":406,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["9",{"_index":3280,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["90",{"_index":4381,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["900",{"_index":400,"title":{},"body":{"components/AboutPage.html":{}}}],["900px",{"_index":477,"title":{},"body":{"components/AboutPage.html":{}}}],["90vh",{"_index":2175,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["95vw",{"_index":2174,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["9af08",{"_index":841,"title":{},"body":{"modules/AppModule.html":{}}}],["9af08.firebaseapp.com",{"_index":839,"title":{},"body":{"modules/AppModule.html":{}}}],["9af08.firebasestorage.app",{"_index":843,"title":{},"body":{"modules/AppModule.html":{}}}],["_artist",{"_index":1053,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_artist.id",{"_index":1065,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_artist.image?.url",{"_index":1071,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_artist.listeners",{"_index":1070,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_artist.name",{"_index":1068,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_artist.songs_ids",{"_index":1072,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_artist.songs_ids?.length",{"_index":1073,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_artistnames",{"_index":4642,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["_artists",{"_index":1317,"title":{},"body":{"components/ArtistsPage.html":{}}}],["_authenticated",{"_index":1712,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_availablesongs",{"_index":4585,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["_basenewreleases",{"_index":3975,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["_baserecommendedsongs",{"_index":3976,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["_blank",{"_index":209,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["_currentuser",{"_index":3979,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["_items",{"_index":1942,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["_like",{"_index":3197,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["_page",{"_index":3218,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["_per_page",{"_index":3219,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["_picture",{"_index":3444,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["_playerstate",{"_index":1520,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["_playlist",{"_index":3657,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["_playlist.author",{"_index":3662,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["_playlist.duration",{"_index":3663,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["_playlist.id",{"_index":3660,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["_playlist.image?.url",{"_index":3664,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["_playlist.name",{"_index":3661,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["_playlist.song_ids",{"_index":3665,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["_playlist.users_ids",{"_index":3666,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["_playlists",{"_index":3840,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["_quickaccess",{"_index":3972,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["_ready",{"_index":1713,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["_selectedsongs",{"_index":1017,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["_songs",{"_index":4692,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["_token",{"_index":2740,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["_user",{"_index":1714,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["a.id",{"_index":1373,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/EnrichedSong-1.html":{}}}],["abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz0123456789",{"_index":1961,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["about'},{'name",{"_index":557,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["about.page",{"_index":649,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{}}}],["about.page.html",{"_index":19,"title":{},"body":{"components/AboutPage.html":{}}}],["about.page.scss",{"_index":17,"title":{},"body":{"components/AboutPage.html":{}}}],["aboutpage",{"_index":1,"title":{"components/AboutPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["aboutpagemodule",{"_index":622,"title":{"modules/AboutPageModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules.html":{},"overview.html":{}}}],["aboutpageroutingmodule",{"_index":632,"title":{"modules/AboutPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["abre",{"_index":52,"title":{},"body":{"components/AboutPage.html":{}}}],["absolute",{"_index":352,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["abstract",{"_index":1717,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{}}}],["abstractcontrol",{"_index":5586,"title":{},"body":{"miscellaneous/functions.html":{}}}],["acc",{"_index":3623,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["accent",{"_index":298,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/SplashPage.html":{}}}],["acceso",{"_index":5684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accessibility",{"_index":536,"title":{},"body":{"components/AboutPage.html":{}}}],["accessors",{"_index":1026,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["acción",{"_index":3752,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["acepta",{"_index":1484,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["aceptar",{"_index":3147,"title":{},"body":{"interfaces/ISongsRepository.html":{}}}],["acerca",{"_index":239,"title":{},"body":{"components/AboutPage.html":{}}}],["action",{"_index":426,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"index.html":{}}}],["actions",{"_index":421,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{}}}],["activa",{"_index":4724,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["activada",{"_index":4838,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["activar",{"_index":4737,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["activatedroute",{"_index":2604,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{}}}],["activatesearch",{"_index":4465,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["active",{"_index":2205,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["activo",{"_index":4757,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["actual",{"_index":1201,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"miscellaneous/variables.html":{}}}],["actual_component",{"_index":618,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["actualiza",{"_index":1817,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["actualizaciones",{"_index":3300,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["actualización",{"_index":1209,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["actualizada",{"_index":1819,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SongWithArtists-1.html":{},"injectables/StrapiRepositoryService.html":{}}}],["actualizado",{"_index":1369,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/EditProfileModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["actualizados",{"_index":1364,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/BaseRepositoryLocalStorageService.html":{}}}],["actualizando",{"_index":4896,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["actualizar",{"_index":1253,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LikeButtonComponent.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["actualmente",{"_index":4743,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["adapte",{"_index":2538,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["add",{"_index":1135,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["add(entity",{"_index":1444,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["add(playlist",{"_index":3902,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["adddoc",{"_index":1827,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["added",{"_index":2230,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["adding",{"_index":3940,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["addloadingstate(panel",{"_index":4456,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["addnoresults(panel",{"_index":4458,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["addplaceholderartistnames",{"_index":5048,"title":{},"body":{"injectables/SongsService.html":{}}}],["addplaceholderartistnames(song",{"_index":4881,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["addplaylist",{"_index":3165,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["addplaylist(userid",{"_index":3170,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["addrecentsearches(panel",{"_index":4401,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["addsearchresults(panel",{"_index":4420,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["addsearchtips(panel",{"_index":4461,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["addsong",{"_index":3133,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists.html":{}}}],["addsong(playlistid",{"_index":3136,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{}}}],["addsongtoartist",{"_index":3035,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["addsongtoartist(artistid",{"_index":3041,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["addtoqueue",{"_index":1522,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["addtoqueue(song",{"_index":1544,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["adelante",{"_index":3421,"title":{},"body":{"interfaces/Person.html":{}}}],["adicional",{"_index":1502,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["adicionales",{"_index":1406,"title":{},"body":{"components/ArtistsPage.html":{}}}],["adjustments",{"_index":516,"title":{},"body":{"components/AboutPage.html":{}}}],["advanced",{"_index":5594,"title":{},"body":{"index.html":{}}}],["again",{"_index":2838,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["age",{"_index":2948,"title":{},"body":{"interfaces/FirebasePerson.html":{},"interfaces/Person.html":{}}}],["age?:number",{"_index":3416,"title":{},"body":{"interfaces/Person.html":{}}}],["agregar",{"_index":2265,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["aizasyc5yo2rir55sl7k3nzn6ubrq8dpoflklha",{"_index":837,"title":{},"body":{"modules/AppModule.html":{}}}],["ajusta",{"_index":2526,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["ajustar",{"_index":5126,"title":{},"body":{"components/SplashPage.html":{}}}],["al",{"_index":46,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"directives/DragDropDirective.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["album",{"_index":1612,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/FirebaseSong.html":{},"interfaces/PlayerState.html":{},"interfaces/Song.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"interfaces/StrapiSongResponse.html":{}}}],["aleatoria",{"_index":4837,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["aleatorio",{"_index":1956,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["alert",{"_index":1378,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["alert.ondiddismiss",{"_index":4790,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["alert.present",{"_index":1387,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["alertcontroller",{"_index":1326,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["alertctrl",{"_index":1325,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["alguna",{"_index":260,"title":{},"body":{"components/AboutPage.html":{}}}],["alias",{"_index":5509,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":5609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":370,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["allartists",{"_index":2662,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SearchResult-1.html":{}}}],["allartists.data.filter(a",{"_index":2666,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["allplaylists",{"_index":4280,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["allsongs",{"_index":4157,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["allsongs.slice",{"_index":4161,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["allsongs.slice(0",{"_index":4160,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["almacenamiento",{"_index":1936,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["alrededor",{"_index":1405,"title":{},"body":{"components/ArtistsPage.html":{},"components/SplashPage.html":{}}}],["alta",{"_index":114,"title":{},"body":{"components/AboutPage.html":{}}}],["alternate",{"_index":5175,"title":{},"body":{"components/SplashPage.html":{}}}],["alternativetext",{"_index":3002,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["alternativos",{"_index":5190,"title":{},"body":{"components/SplashPage.html":{}}}],["alto",{"_index":2523,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/SplashPage.html":{}}}],["altura",{"_index":3740,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["ambos",{"_index":4908,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["ancho",{"_index":2522,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["angular",{"_index":98,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":5535,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":640,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"interfaces/EnrichedSong-1.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"interfaces/SearchResult-1.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":788,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["angular/compiler",{"_index":5537,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":190,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":642,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/PlaylistDetailPageModule.html":{},"components/PlaylistModalComponent.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{},"modules/SongsPageModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":743,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":191,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ArtistData.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageRoutingModule.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/EnrichedSong-1.html":{},"modules/HomePageRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"modules/SharedModule.html":{},"interfaces/SongWithArtists.html":{},"modules/SongsPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"dependencies.html":{}}}],["anillo",{"_index":5165,"title":{},"body":{"components/SplashPage.html":{}}}],["animaciones",{"_index":2173,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["animación",{"_index":5085,"title":{},"body":{"components/SplashPage.html":{}}}],["animado",{"_index":2210,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["animate",{"_index":498,"title":{},"body":{"components/AboutPage.html":{}}}],["animation",{"_index":364,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["animationcreated",{"_index":5074,"title":{},"body":{"components/SplashPage.html":{}}}],["animationcreated(animationitem",{"_index":5081,"title":{},"body":{"components/SplashPage.html":{}}}],["animationitem",{"_index":5070,"title":{},"body":{"components/SplashPage.html":{}}}],["animationoptions",{"_index":5104,"title":{},"body":{"components/SplashPage.html":{}}}],["animations",{"_index":491,"title":{},"body":{"components/AboutPage.html":{}}}],["anonymous",{"_index":2940,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["anterior",{"_index":1812,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["antes",{"_index":4947,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/UserService.html":{}}}],["any)._user.value?.id",{"_index":5458,"title":{},"body":{"injectables/UserService.html":{}}}],["any).activatesearch",{"_index":703,"title":{},"body":{"components/AppComponent.html":{}}}],["any).image",{"_index":4916,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["any).message",{"_index":4847,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["any).updatecurrentuser(updateduser",{"_index":5428,"title":{},"body":{"injectables/UserService.html":{}}}],["any).updatecurrentuser(userdata",{"_index":5459,"title":{},"body":{"injectables/UserService.html":{}}}],["anyway",{"_index":4366,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["apasionado",{"_index":86,"title":{},"body":{"components/AboutPage.html":{}}}],["apellidos",{"_index":4249,"title":{},"body":{"components/RegisterPage.html":{}}}],["api",{"_index":828,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/ShareService.html":{}}}],["api/auth/change",{"_index":5348,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["api_url_token",{"_index":1913,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikey",{"_index":836,"title":{},"body":{"modules/AppModule.html":{}}}],["apis",{"_index":1891,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["apiurl",{"_index":1898,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["apiurl:\"https://umusic",{"_index":5677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aplica",{"_index":5443,"title":{},"body":{"injectables/UserService.html":{}}}],["aplicaciones",{"_index":92,"title":{},"body":{"components/AboutPage.html":{}}}],["aplicación",{"_index":76,"title":{},"body":{"components/AboutPage.html":{}}}],["aplicar",{"_index":2489,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["apollo/client",{"_index":5540,"title":{},"body":{"dependencies.html":{}}}],["app",{"_index":15,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{}}}],["app.component",{"_index":747,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":659,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":658,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":558,"title":{"components/AppComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["appdragdrop",{"_index":617,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["appdragdropdata",{"_index":2316,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["appdragdropindex",{"_index":2317,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["appid",{"_index":846,"title":{},"body":{"modules/AppModule.html":{}}}],["application",{"_index":5590,"title":{},"body":{"index.html":{}}}],["apply",{"_index":2484,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["applying",{"_index":2490,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["appmodule",{"_index":724,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":730,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["aqu",{"_index":263,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["archivo",{"_index":4931,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["arguments",{"_index":672,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{}}}],["arr",{"_index":2418,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["arr[0].match(/:(.*?);/)![1",{"_index":3719,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["arr[0].match(/:(.*?);/)?.[1",{"_index":2421,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["arrastre",{"_index":2372,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["array",{"_index":1205,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSongResponse.html":{}}}],["array.isarray((song",{"_index":2583,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["array.isarray(artistsfollowdata.data",{"_index":1304,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["array.isarray(artistsresponse",{"_index":4308,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["array.isarray(attributes.artists_ids.data",{"_index":4967,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["array.isarray(attributes.playlistid_ids.data",{"_index":4974,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["array.isarray(attributes.song_ids",{"_index":3813,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["array.isarray(attributes.song_ids.data",{"_index":3808,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["array.isarray(attributes.users_ids",{"_index":3824,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["array.isarray(attributes.users_ids.data",{"_index":3818,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["array.isarray(attributes.users_like.data",{"_index":4997,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["array.isarray(playlist.users_ids",{"_index":3932,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["array.isarray(playlistsresponse",{"_index":4305,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["array.isarray(res",{"_index":3930,"title":{},"body":{"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["array.isarray(response",{"_index":4034,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["array.isarray(result",{"_index":4876,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["array.isarray(song.artistnames",{"_index":4342,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["array.isarray(songsdata.data",{"_index":1300,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["array.isarray(songsresponse",{"_index":4302,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["array.isarray(uploadresult",{"_index":4910,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["arreglado",{"_index":2728,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["arreglar",{"_index":4406,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["artist",{"_index":561,"title":{"interfaces/Artist.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artist(_artist",{"_index":1064,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["artist.followers_count",{"_index":1393,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["artist.id",{"_index":1374,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongsMappingStrapi.html":{}}}],["artist.id.tostring",{"_index":4970,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["artist.image?.url",{"_index":4062,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["artist.listeners",{"_index":993,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{}}}],["artist.model.ts",{"_index":2736,"title":{},"body":{"interfaces/FirebaseArtist.html":{},"coverage.html":{}}}],["artist.name",{"_index":992,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["artist.name.tolowercase",{"_index":1513,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["artist.name.tolowercase().includes(lowerquery",{"_index":4357,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["artist.name.tolowercase().includes(searchterm",{"_index":1499,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["artist.png",{"_index":4179,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["artist.songs_ids",{"_index":2639,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["artist.songs_ids.length",{"_index":2640,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["artist/:id",{"_index":890,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["artist/clickable",{"_index":922,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["artista",{"_index":1216,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/SearchResult-1.html":{}}}],["artistas",{"_index":143,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["artistclicked",{"_index":942,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["artistdata",{"_index":920,"title":{"interfaces/ArtistData.html":{}},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"coverage.html":{}}}],["artistgridcardcomponent",{"_index":560,"title":{"components/ArtistGridCardComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["artistid",{"_index":2620,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{}}}],["artistids",{"_index":933,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"injectables/SongsMappingStrapi.html":{}}}],["artistmapping",{"_index":2854,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["artistmodalcomponent",{"_index":563,"title":{"components/ArtistModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["artistname",{"_index":2971,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["artistname.tolowercase().includes(lowerquery",{"_index":4344,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["artistnames",{"_index":932,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{}}}],["artistprofilepage",{"_index":565,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["artistprofilepagemodule",{"_index":1138,"title":{"modules/ArtistProfilePageModule.html":{}},"body":{"modules/ArtistProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["artistprofilepageroutingmodule",{"_index":1142,"title":{"modules/ArtistProfilePageRoutingModule.html":{}},"body":{"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artists",{"_index":827,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["artists'},{'name",{"_index":568,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["artists.filter((artist",{"_index":1476,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["artists.find(artist",{"_index":1512,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["artists.length",{"_index":1507,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/SearchResult-1.html":{},"injectables/SongEnrichmentService.html":{}}}],["artists.map(artist",{"_index":2658,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["artists.module.ts",{"_index":1423,"title":{},"body":{"modules/ArtistsPageModule.html":{}}}],["artists.page",{"_index":1424,"title":{},"body":{"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{}}}],["artists.page.html",{"_index":1316,"title":{},"body":{"components/ArtistsPage.html":{}}}],["artists.page.scss",{"_index":1315,"title":{},"body":{"components/ArtistsPage.html":{}}}],["artists.service",{"_index":2715,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["artists.slice(0",{"_index":4328,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["artists[0",{"_index":1517,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["artists_api_url_token",{"_index":785,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artists_follow",{"_index":906,"title":{},"body":{"interfaces/Artist.html":{},"injectables/ArtistsMappingStrapi.html":{}}}],["artists_ids",{"_index":2957,"title":{},"body":{"interfaces/FirebaseSong.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{}}}],["artists_repository_mapping_token",{"_index":2870,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artists_repository_token",{"_index":1461,"title":{},"body":{"injectables/ArtistsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artists_resource_name_token",{"_index":786,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artistsdata",{"_index":943,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["artistsfollowdata",{"_index":1217,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["artistsfollowdata.data.map((user",{"_index":1306,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["artistsfollowdata?.data",{"_index":1303,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["artistsmappingfactory",{"_index":760,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artistsmappingstrapi",{"_index":1148,"title":{"injectables/ArtistsMappingStrapi.html":{}},"body":{"injectables/ArtistsMappingStrapi.html":{},"coverage.html":{}}}],["artistsongs",{"_index":2612,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["artistspage",{"_index":567,"title":{"components/ArtistsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["artistspagemodule",{"_index":1417,"title":{"modules/ArtistsPageModule.html":{}},"body":{"modules/ArtistsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["artistspageroutingmodule",{"_index":1421,"title":{"modules/ArtistsPageRoutingModule.html":{}},"body":{"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artistsrepositoryfactory",{"_index":761,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["artistsresponse",{"_index":4297,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["artistsresponse?.data",{"_index":4309,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["artistsservice",{"_index":732,"title":{"injectables/ArtistsService.html":{}},"body":{"modules/AppModule.html":{},"interfaces/ArtistData.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"coverage.html":{},"overview.html":{}}}],["artistssvc",{"_index":1328,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["asegura",{"_index":2537,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["asignado",{"_index":4917,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["asignar",{"_index":4915,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["asociadas",{"_index":3064,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["aspect",{"_index":1000,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["assets/audio/sample",{"_index":4748,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["assets/audio/sample.mp3",{"_index":1647,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["assets/default",{"_index":4176,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["assets/i18n",{"_index":813,"title":{},"body":{"modules/AppModule.html":{}}}],["assets/lotties/splash.json",{"_index":5105,"title":{},"body":{"components/SplashPage.html":{}}}],["async",{"_index":28,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["async)?.join",{"_index":4674,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["atob(arr[1",{"_index":2423,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["atrás",{"_index":4672,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["attributes",{"_index":1280,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUserResponse.html":{}}}],["attributes.album",{"_index":5005,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.artists_ids",{"_index":4965,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.artists_ids.data",{"_index":4966,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.audiourl",{"_index":4988,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.audiourl.data",{"_index":4989,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.audiourl.data.attributes",{"_index":4990,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.audiourl.data.attributes.url",{"_index":4991,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.author",{"_index":3828,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.duration",{"_index":3829,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["attributes.duration.includes",{"_index":4959,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.duration.split",{"_index":4961,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.image",{"_index":4978,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.image.data",{"_index":4979,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.image.data.attributes",{"_index":4980,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.image.data.attributes.formats?.large?.url",{"_index":3833,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.image.data.attributes.formats?.medium?.url",{"_index":3834,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.image.data.attributes.formats?.small?.url",{"_index":3835,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.image.data.attributes.formats?.thumbnail?.url",{"_index":3836,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.image.data.attributes.url",{"_index":3832,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.image?.data",{"_index":3831,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.likes_count",{"_index":3830,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["attributes.lyrics",{"_index":5006,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.name",{"_index":1282,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["attributes.playlistid_ids",{"_index":4972,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.playlistid_ids.data",{"_index":4973,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.song_ids",{"_index":3806,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.song_ids.data",{"_index":3807,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.users_ids",{"_index":3816,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.users_ids.data",{"_index":3817,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["attributes.users_like",{"_index":4995,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.users_like.data",{"_index":4996,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["attributes.verified",{"_index":1288,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["attributes:strapimediadata",{"_index":3001,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["audio",{"_index":570,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["audioid",{"_index":5033,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["audioplayercomponent",{"_index":569,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["audioplayerservice",{"_index":733,"title":{"injectables/AudioPlayerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"coverage.html":{},"overview.html":{}}}],["audiourl",{"_index":4581,"title":{},"body":{"interfaces/Song.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{}}}],["autenticación",{"_index":853,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["autenticado",{"_index":2930,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["auth",{"_index":1897,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.guard",{"_index":861,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["auth.guard.ts",{"_index":5468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_mapping_token",{"_index":769,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_me_api_url_token",{"_index":770,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_in_api_url_token",{"_index":771,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_sign_up_api_url_token",{"_index":772,"title":{},"body":{"modules/AppModule.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth_token",{"_index":784,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authdomain",{"_index":838,"title":{},"body":{"modules/AppModule.html":{}}}],["authenticated",{"_index":1715,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication",{"_index":5145,"title":{},"body":{"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"index.html":{}}}],["authentication.interface",{"_index":2243,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authentication.interface.ts",{"_index":3153,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{},"coverage.html":{}}}],["authentication.interface.ts:5",{"_index":3154,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["authentication.service",{"_index":688,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ChangePasswordModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{}}}],["authentication.service.ts",{"_index":1710,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{}}}],["authentication.service.ts:102",{"_index":5297,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:109",{"_index":5296,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:11",{"_index":1739,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:12",{"_index":1744,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:132",{"_index":5300,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:14",{"_index":1742,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:15",{"_index":1747,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:16",{"_index":5307,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:17",{"_index":5293,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:18",{"_index":1740,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:19",{"_index":1725,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:195",{"_index":2744,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:27",{"_index":1737,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:31",{"_index":1727,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:32",{"_index":1730,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:33",{"_index":1734,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:34",{"_index":1732,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["authentication.service.ts:35",{"_index":1728,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["authentication.service.ts:36",{"_index":5299,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authentication.service.ts:41",{"_index":5301,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["authenticationservicefactory",{"_index":751,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autherror",{"_index":5430,"title":{},"body":{"injectables/UserService.html":{}}}],["authguard",{"_index":857,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authmapping",{"_index":1726,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authmappingfactory",{"_index":752,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["author",{"_index":2952,"title":{},"body":{"interfaces/FirebasePlaylist.html":{},"interfaces/Playlist.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSongResponse.html":{},"properties.html":{}}}],["authorization",{"_index":2261,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["authpayload",{"_index":1731,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["authservice",{"_index":2028,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["authservice.authenticated",{"_index":5679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.authenticated$.pipe",{"_index":5665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authservice.ready$.pipe",{"_index":5661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authsvc",{"_index":661,"title":{},"body":{"components/AppComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["auto",{"_index":376,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{}}}],["automáticamente",{"_index":1941,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["autoplay",{"_index":5106,"title":{},"body":{"components/SplashPage.html":{}}}],["autorización",{"_index":2257,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["auxiliar",{"_index":2416,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["available",{"_index":5363,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"modules.html":{}}}],["availablesongs",{"_index":4586,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["avanzada",{"_index":139,"title":{},"body":{"components/AboutPage.html":{}}}],["avanzados",{"_index":118,"title":{},"body":{"components/AboutPage.html":{}}}],["avatar",{"_index":94,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["avatar.png",{"_index":4804,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["await",{"_index":229,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["ayudarte",{"_index":264,"title":{},"body":{"components/AboutPage.html":{}}}],["añade",{"_index":1397,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/IArtistsRepository.html":{}}}],["añadida",{"_index":1947,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["añadir",{"_index":1400,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/SplashPage.html":{}}}],["b3b3b3",{"_index":295,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["backdrop",{"_index":317,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["backend",{"_index":5648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend_token",{"_index":773,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":311,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["badge",{"_index":415,"title":{},"body":{"components/AboutPage.html":{}}}],["bar",{"_index":2158,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["bar1",{"_index":4679,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["bar2",{"_index":4681,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["bar3",{"_index":4682,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["bar4",{"_index":4683,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["bar::after",{"_index":5211,"title":{},"body":{"components/SplashPage.html":{}}}],["barra",{"_index":1413,"title":{},"body":{"components/ArtistsPage.html":{},"components/SplashPage.html":{}}}],["bars",{"_index":4676,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["basada",{"_index":5095,"title":{},"body":{"components/SplashPage.html":{}}}],["basado",{"_index":3061,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["base",{"_index":308,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["base.model",{"_index":915,"title":{},"body":{"interfaces/Artist.html":{},"interfaces/Group.html":{},"interfaces/Person.html":{},"interfaces/Playlist.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Song.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["base64",{"_index":3681,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["base64string",{"_index":5058,"title":{},"body":{"injectables/SongsService.html":{}}}],["base64string.split",{"_index":4925,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["base64tofile",{"_index":5049,"title":{},"body":{"injectables/SongsService.html":{}}}],["base64tofile(base64string",{"_index":4924,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["baseauthenticationservice",{"_index":670,"title":{"injectables/BaseAuthenticationService.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/BaseAuthenticationService.html":{},"components/ChangePasswordModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["baseauthenticationservice:109",{"_index":2747,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:11",{"_index":2753,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:12",{"_index":2756,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:132",{"_index":2751,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:136",{"_index":5303,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:14",{"_index":2755,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:15",{"_index":2758,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:155",{"_index":5302,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:170",{"_index":5305,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:175",{"_index":2748,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:18",{"_index":2754,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:184",{"_index":2745,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:187",{"_index":5304,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:19",{"_index":2757,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:27",{"_index":5306,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["baseauthenticationservice:81",{"_index":2752,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:87",{"_index":2743,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["baseauthenticationservice:88",{"_index":5298,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["basemediaservice",{"_index":1032,"title":{"classes/BaseMediaService.html":{}},"body":{"components/ArtistModalComponent.html":{},"classes/BaseMediaService.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["basemediaservice:116",{"_index":5371,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["basemediaservice:27",{"_index":2917,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["baserepositoryfirebaseservice",{"_index":1766,"title":{"injectables/BaseRepositoryFirebaseService.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"coverage.html":{}}}],["baserepositoryhttpservice",{"_index":1886,"title":{"injectables/BaseRepositoryHttpService.html":{}},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"coverage.html":{}}}],["baserepositoryhttpservice:49",{"_index":3202,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:52",{"_index":3196,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:80",{"_index":3201,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:83",{"_index":3194,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositoryhttpservice:98",{"_index":3198,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["baserepositorylocalstorageservice",{"_index":1931,"title":{"injectables/BaseRepositoryLocalStorageService.html":{}},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"coverage.html":{}}}],["baseservice",{"_index":1427,"title":{"injectables/BaseService.html":{}},"body":{"injectables/ArtistsService.html":{},"injectables/BaseService.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["baseservice:18",{"_index":1451,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["baseservice:203",{"_index":5397,"title":{},"body":{"injectables/UserService.html":{}}}],["baseservice:21",{"_index":3903,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["baseservice:28",{"_index":1453,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{}}}],["baseservice:32",{"_index":1447,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["baseservice:36",{"_index":1455,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["baseservice:40",{"_index":1450,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["bearer",{"_index":2250,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["before",{"_index":351,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["behavior",{"_index":528,"title":{},"body":{"components/AboutPage.html":{}}}],["behaviorsubject",{"_index":1046,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["behaviorsubject(['unknown",{"_index":4657,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["behaviorsubject(false",{"_index":1738,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["behaviorsubject(null",{"_index":3980,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["behaviorsubject(undefined",{"_index":1741,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["between",{"_index":2130,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["bg",{"_index":2122,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["bienvenido",{"_index":3375,"title":{},"body":{"components/LoginPage.html":{}}}],["bio",{"_index":85,"title":{},"body":{"components/AboutPage.html":{}}}],["birthdate",{"_index":4576,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["birthdate:string",{"_index":4564,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["black",{"_index":550,"title":{},"body":{"components/AboutPage.html":{},"components/EditProfileModalComponent.html":{}}}],["blanco",{"_index":1412,"title":{},"body":{"components/ArtistsPage.html":{}}}],["blob",{"_index":1111,"title":{},"body":{"components/ArtistModalComponent.html":{},"classes/BaseMediaService.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{}}}],["blob([u8arr",{"_index":2430,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["blob.size",{"_index":2470,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["blob.type",{"_index":2471,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/FirebaseMediaService.html":{},"components/PlaylistModalComponent.html":{}}}],["block",{"_index":380,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["blocked",{"_index":4571,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["bloqueos",{"_index":5668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blue",{"_index":306,"title":{},"body":{"components/AboutPage.html":{}}}],["blur",{"_index":4367,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["blur(10px",{"_index":417,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{}}}],["blur(20px",{"_index":319,"title":{},"body":{"components/AboutPage.html":{}}}],["bn27lhz2k9",{"_index":850,"title":{},"body":{"modules/AppModule.html":{}}}],["body",{"_index":215,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["body.data.image",{"_index":4887,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["bodytosend",{"_index":2298,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["boolean",{"_index":914,"title":{},"body":{"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"interfaces/FirebaseUser.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["bootstrap",{"_index":626,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"overview.html":{}}}],["border",{"_index":332,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["both",{"_index":5179,"title":{},"body":{"components/SplashPage.html":{}}}],["botones",{"_index":2166,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["bottom",{"_index":381,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["botón",{"_index":277,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{}}}],["bounce",{"_index":5193,"title":{},"body":{"components/SplashPage.html":{}}}],["box",{"_index":385,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["brand",{"_index":488,"title":{},"body":{"components/AboutPage.html":{}}}],["break",{"_index":2088,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiRepositoryService.html":{}}}],["brillante",{"_index":5166,"title":{},"body":{"components/SplashPage.html":{}}}],["browse",{"_index":5600,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":744,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browserlang",{"_index":3246,"title":{},"body":{"injectables/LanguageService.html":{}}}],["browsermodule",{"_index":742,"title":{},"body":{"modules/AppModule.html":{}}}],["bstr",{"_index":2422,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["bstr.charcodeat(n",{"_index":2429,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["bstr.length",{"_index":2425,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["btn",{"_index":328,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["buildartistsdata",{"_index":946,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["busca",{"_index":3062,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["buscando",{"_index":4457,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["buscar",{"_index":1478,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["button",{"_index":709,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["button'},{'name",{"_index":583,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["button.component",{"_index":4551,"title":{},"body":{"modules/SharedModule.html":{}}}],["button.component.html",{"_index":2968,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.scss",{"_index":2967,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts",{"_index":2966,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"coverage.html":{}}}],["button.component.ts:125",{"_index":3272,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["button.component.ts:13",{"_index":3638,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:14",{"_index":2974,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["button.component.ts:15",{"_index":2975,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:16",{"_index":2976,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:17",{"_index":3269,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:18",{"_index":2982,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["button.component.ts:19",{"_index":2983,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{}}}],["button.component.ts:20",{"_index":2973,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{}}}],["button.component.ts:21",{"_index":3281,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["button.component.ts:22",{"_index":3282,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["button.component.ts:23",{"_index":3639,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:25",{"_index":3268,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["button.component.ts:27",{"_index":2979,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:28",{"_index":3558,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:29",{"_index":3556,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:30",{"_index":3559,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:31",{"_index":2978,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/PlayButtonComponent.html":{}}}],["button.component.ts:32",{"_index":3557,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:33",{"_index":3554,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:35",{"_index":3271,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{}}}],["button.component.ts:36",{"_index":2977,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:38",{"_index":3563,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:39",{"_index":3553,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:43",{"_index":3561,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:44",{"_index":2981,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["button.component.ts:45",{"_index":3270,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["button.component.ts:52",{"_index":3560,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:54",{"_index":3274,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["button.component.ts:57",{"_index":3562,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["button.component.ts:59",{"_index":3640,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["button.component.ts:71",{"_index":2980,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["button.component.ts:86",{"_index":3276,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["button.picture",{"_index":3535,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["button/follow",{"_index":2965,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["button/like",{"_index":3258,"title":{},"body":{"components/LikeButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["button/play",{"_index":3546,"title":{},"body":{"components/PlayButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["button/playlist",{"_index":3635,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["button[expand=\"block",{"_index":1137,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["buttons",{"_index":1006,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["básica",{"_index":1803,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["básicas",{"_index":1889,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["búsqueda",{"_index":138,"title":{},"body":{"components/AboutPage.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiRepositoryService.html":{}}}],["búsquedas",{"_index":4403,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["cache",{"_index":4278,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["cacheloaded",{"_index":4281,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["cadena",{"_index":3209,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["calidad",{"_index":115,"title":{},"body":{"components/AboutPage.html":{}}}],["callback",{"_index":5083,"title":{},"body":{"components/SplashPage.html":{},"miscellaneous/functions.html":{}}}],["called",{"_index":2444,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/UserService.html":{}}}],["cambi",{"_index":3295,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["cambia",{"_index":988,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["cambiar",{"_index":3309,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["cambio",{"_index":1752,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["cambios",{"_index":2453,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/LikeButtonComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{},"injectables/UserService.html":{}}}],["campo",{"_index":3701,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["campos",{"_index":5007,"title":{},"body":{"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["canactivate",{"_index":864,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["canactivatefn",{"_index":5658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancel",{"_index":1132,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["cancelar",{"_index":3724,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["canciones",{"_index":142,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/IArtistsRepository.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["canción",{"_index":2699,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/IArtistsRepository.html":{},"components/PlayButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["capacitor",{"_index":178,"title":{},"body":{"components/AboutPage.html":{}}}],["capacitor/android",{"_index":5542,"title":{},"body":{"dependencies.html":{}}}],["capacitor/app",{"_index":5544,"title":{},"body":{"dependencies.html":{}}}],["capacitor/core",{"_index":5546,"title":{},"body":{"dependencies.html":{}}}],["capacitor/haptics",{"_index":5547,"title":{},"body":{"dependencies.html":{}}}],["capacitor/keyboard",{"_index":5548,"title":{},"body":{"dependencies.html":{}}}],["capacitor/share",{"_index":4514,"title":{},"body":{"injectables/ShareService.html":{},"dependencies.html":{}}}],["capacitor/status",{"_index":5550,"title":{},"body":{"dependencies.html":{}}}],["caption",{"_index":3003,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["caracteres",{"_index":1957,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"components/RegisterPage.html":{}}}],["características",{"_index":254,"title":{},"body":{"components/AboutPage.html":{}}}],["card",{"_index":285,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["card'},{'name",{"_index":562,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["card.component",{"_index":4542,"title":{},"body":{"modules/SharedModule.html":{}}}],["card.component.html",{"_index":957,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["card.component.scss",{"_index":956,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["card.component.ts",{"_index":955,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:10",{"_index":970,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["card.component.ts:107",{"_index":4653,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:11",{"_index":972,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["card.component.ts:111",{"_index":4654,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:12",{"_index":971,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["card.component.ts:13",{"_index":973,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["card.component.ts:15",{"_index":980,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["card.component.ts:16",{"_index":981,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["card.component.ts:17",{"_index":4646,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:18",{"_index":975,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["card.component.ts:19",{"_index":4647,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:20",{"_index":4648,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:22",{"_index":974,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["card.component.ts:23",{"_index":4659,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:25",{"_index":4660,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:26",{"_index":979,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["card.component.ts:27",{"_index":4645,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:30",{"_index":976,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["card.component.ts:34",{"_index":977,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["card.component.ts:38",{"_index":978,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["card.component.ts:39",{"_index":4650,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:45",{"_index":4656,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:54",{"_index":4649,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:70",{"_index":4652,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:74",{"_index":4651,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card.component.ts:79",{"_index":4655,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["card/artist",{"_index":954,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["card/song",{"_index":4541,"title":{},"body":{"modules/SharedModule.html":{},"components/SongGridCardComponent.html":{},"coverage.html":{}}}],["card:focus",{"_index":537,"title":{},"body":{"components/AboutPage.html":{}}}],["carga",{"_index":5182,"title":{},"body":{"components/SplashPage.html":{}}}],["cargando",{"_index":5150,"title":{},"body":{"components/SplashPage.html":{}}}],["cargar",{"_index":2437,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/PlayButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["carácter",{"_index":4253,"title":{},"body":{"components/RegisterPage.html":{}}}],["case",{"_index":1709,"title":{},"body":{"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["caso",{"_index":5146,"title":{},"body":{"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"miscellaneous/variables.html":{}}}],["casos",{"_index":4909,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["catch",{"_index":235,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{}}}],["catch(error",{"_index":2839,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["catcherror",{"_index":2239,"title":{},"body":{"interfaces/Data.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiRepositoryService.html":{}}}],["catcherror(err",{"_index":4159,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["catcherror(error",{"_index":2282,"title":{},"body":{"interfaces/Data.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["ccc",{"_index":551,"title":{},"body":{"components/AboutPage.html":{}}}],["cdr",{"_index":3266,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["center",{"_index":371,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["centrado",{"_index":3742,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["centrar",{"_index":3738,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["change",{"_index":573,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["change.data",{"_index":4145,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["change.doc.data",{"_index":2893,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.doc.id",{"_index":2890,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["change.id",{"_index":4147,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["change.type",{"_index":2889,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["change_password.errors.new_password_required",{"_index":2115,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["change_password.errors.old_password_required",{"_index":2114,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["change_password.errors.password_strength",{"_index":2116,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["change_password.errors.passwords_mismatch",{"_index":2117,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["change_password.submit",{"_index":2120,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["change_password.title",{"_index":2108,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["changed",{"_index":2456,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["changedata",{"_index":2888,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changedata.data",{"_index":2891,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["changedetection",{"_index":3259,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["changedetectionstrategy",{"_index":3283,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":3260,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["changedetectorref",{"_index":3267,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["changedfields",{"_index":5448,"title":{},"body":{"injectables/UserService.html":{}}}],["changelanguage",{"_index":663,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{}}}],["changelanguage(lang",{"_index":677,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["changepassword",{"_index":5286,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["changepassword(data",{"_index":5295,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["changepassworddata",{"_index":2065,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["changepasswordmodalcomponent",{"_index":572,"title":{"components/ChangePasswordModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["changepicture",{"_index":3448,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture",{"_index":3458,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changepicture(picture:string",{"_index":3512,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["changes",{"_index":2451,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["changes.email",{"_index":2458,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["changes.image",{"_index":2477,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/UserService.html":{}}}],["changes.username",{"_index":2455,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["changing",{"_index":2077,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["chars",{"_index":3676,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["check",{"_index":2840,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/SongWithArtists.html":{},"index.html":{}}}],["checkiffollowing",{"_index":2969,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["checkifliked",{"_index":3636,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["checkifmobile",{"_index":4141,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["checking",{"_index":4707,"title":{},"body":{"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["checkinterval",{"_index":4362,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["checkmark",{"_index":4235,"title":{},"body":{"components/RegisterPage.html":{}}}],["child",{"_index":719,"title":{},"body":{"components/AppComponent.html":{},"components/EditProfileModalComponent.html":{}}}],["child(1",{"_index":5196,"title":{},"body":{"components/SplashPage.html":{}}}],["child(2",{"_index":5198,"title":{},"body":{"components/SplashPage.html":{}}}],["child(3",{"_index":5200,"title":{},"body":{"components/SplashPage.html":{}}}],["chip",{"_index":180,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{}}}],["cierra",{"_index":3462,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["circular",{"_index":2530,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["clampedvolume",{"_index":1657,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["claro",{"_index":1410,"title":{},"body":{"components/ArtistsPage.html":{}}}],["clase",{"_index":1893,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["class",{"_index":193,"title":{"classes/BaseMediaService.html":{},"classes/StrapiMediaService.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["class=\"remaining",{"_index":2195,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["class=\"separator",{"_index":2194,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["classes",{"_index":1761,"title":{},"body":{"classes/BaseMediaService.html":{},"classes/StrapiMediaService.html":{},"overview.html":{}}}],["classname",{"_index":5117,"title":{},"body":{"components/SplashPage.html":{}}}],["clear",{"_index":3555,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["clearauthentication",{"_index":5287,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["clearing",{"_index":5332,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["clearinterval(volumeinterval",{"_index":1668,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["clearrecentsearches",{"_index":4500,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["clearsearch",{"_index":4094,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["clearsearchresults",{"_index":4065,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["click",{"_index":4385,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["clickable",{"_index":576,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["clickableartistnamescomponent",{"_index":575,"title":{"components/ClickableArtistNamesComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["clicks",{"_index":4077,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["cliente",{"_index":54,"title":{},"body":{"components/AboutPage.html":{}}}],["clip",{"_index":403,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["close",{"_index":2132,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["closing",{"_index":2488,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["cloudinary",{"_index":185,"title":{},"body":{"components/AboutPage.html":{}}}],["cluster_aboutpagemodule",{"_index":629,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_declarations",{"_index":630,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_aboutpagemodule_imports",{"_index":631,"title":{},"body":{"modules/AboutPageModule.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":725,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":727,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":726,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":729,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":728,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_artistprofilepagemodule",{"_index":1139,"title":{},"body":{"modules/ArtistProfilePageModule.html":{},"overview.html":{}}}],["cluster_artistprofilepagemodule_declarations",{"_index":1140,"title":{},"body":{"modules/ArtistProfilePageModule.html":{},"overview.html":{}}}],["cluster_artistprofilepagemodule_imports",{"_index":1141,"title":{},"body":{"modules/ArtistProfilePageModule.html":{},"overview.html":{}}}],["cluster_artistspagemodule",{"_index":1418,"title":{},"body":{"modules/ArtistsPageModule.html":{},"overview.html":{}}}],["cluster_artistspagemodule_declarations",{"_index":1420,"title":{},"body":{"modules/ArtistsPageModule.html":{},"overview.html":{}}}],["cluster_artistspagemodule_imports",{"_index":1419,"title":{},"body":{"modules/ArtistsPageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule",{"_index":3026,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_declarations",{"_index":3028,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_homepagemodule_imports",{"_index":3027,"title":{},"body":{"modules/HomePageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule",{"_index":3393,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_declarations",{"_index":3394,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_loginpagemodule_imports",{"_index":3395,"title":{},"body":{"modules/LoginPageModule.html":{},"overview.html":{}}}],["cluster_playlistdetailpagemodule",{"_index":3590,"title":{},"body":{"modules/PlaylistDetailPageModule.html":{},"overview.html":{}}}],["cluster_playlistdetailpagemodule_declarations",{"_index":3591,"title":{},"body":{"modules/PlaylistDetailPageModule.html":{},"overview.html":{}}}],["cluster_playlistdetailpagemodule_imports",{"_index":3592,"title":{},"body":{"modules/PlaylistDetailPageModule.html":{},"overview.html":{}}}],["cluster_playlistspagemodule",{"_index":3890,"title":{},"body":{"modules/PlaylistsPageModule.html":{},"overview.html":{}}}],["cluster_playlistspagemodule_declarations",{"_index":3891,"title":{},"body":{"modules/PlaylistsPageModule.html":{},"overview.html":{}}}],["cluster_playlistspagemodule_imports",{"_index":3892,"title":{},"body":{"modules/PlaylistsPageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule",{"_index":3944,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_declarations",{"_index":3946,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_profilepagemodule_imports",{"_index":3945,"title":{},"body":{"modules/ProfilePageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule",{"_index":4259,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_declarations",{"_index":4260,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_registerpagemodule_imports",{"_index":4261,"title":{},"body":{"modules/RegisterPageModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":4529,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_declarations",{"_index":4530,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":4531,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_songspagemodule",{"_index":5041,"title":{},"body":{"modules/SongsPageModule.html":{},"overview.html":{}}}],["cluster_songspagemodule_declarations",{"_index":5043,"title":{},"body":{"modules/SongsPageModule.html":{},"overview.html":{}}}],["cluster_songspagemodule_imports",{"_index":5042,"title":{},"body":{"modules/SongsPageModule.html":{},"overview.html":{}}}],["code",{"_index":1962,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["coinciden",{"_index":3057,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"components/RegisterPage.html":{}}}],["coincidencia",{"_index":1508,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["cola",{"_index":1672,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["colección",{"_index":1785,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["collection",{"_index":800,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["collection(this.db",{"_index":1849,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["collection_subscription_token",{"_index":763,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collectionchange",{"_index":2227,"title":{"interfaces/CollectionChange.html":{}},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"coverage.html":{}}}],["collectionname",{"_index":1780,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["collectionref",{"_index":1776,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["collectionsubscriptionservice",{"_index":5628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["collectionsubscriptionsvc",{"_index":3986,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["color",{"_index":166,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["colored",{"_index":2222,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["colores",{"_index":2221,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["column",{"_index":507,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["columns",{"_index":440,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{}}}],["combinar",{"_index":4038,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["combinelatest",{"_index":3953,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["comentar",{"_index":4424,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["comienza",{"_index":4462,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["common.cancel",{"_index":2119,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["common.security",{"_index":2110,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["commonmodule",{"_index":639,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"components/SplashPage.html":{}}}],["como",{"_index":1755,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["comparte",{"_index":74,"title":{},"body":{"components/AboutPage.html":{}}}],["compartir",{"_index":247,"title":{},"body":{"components/AboutPage.html":{}}}],["compatibilidad",{"_index":4662,"title":{},"body":{"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["compatible",{"_index":1248,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["compleja",{"_index":5414,"title":{},"body":{"injectables/UserService.html":{}}}],["completa",{"_index":4661,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["completamente",{"_index":2529,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["complete",{"_index":1758,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"components/EditProfileModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["completed",{"_index":5131,"title":{},"body":{"components/SplashPage.html":{}}}],["completo",{"_index":1911,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/UserService.html":{}}}],["completos",{"_index":1912,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiRepositoryService.html":{}}}],["component",{"_index":0,"title":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageRoutingModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"modules/HomePageRoutingModule.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"modules/SongsPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"coverage.html":{}}}],["component_template",{"_index":555,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["componente",{"_index":3433,"title":{},"body":{"components/PictureSelectableComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["componentid",{"_index":3261,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["componentprops",{"_index":1085,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"overview.html":{}}}],["components/artist",{"_index":4544,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/audio",{"_index":4547,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/change",{"_index":4536,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/clickable",{"_index":4556,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/edit",{"_index":4538,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/follow",{"_index":4554,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/global",{"_index":4558,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/like",{"_index":4555,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/picture",{"_index":4534,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/play",{"_index":4550,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/playlist",{"_index":4537,"title":{},"body":{"modules/SharedModule.html":{}}}],["components/song",{"_index":4533,"title":{},"body":{"modules/SharedModule.html":{}}}],["comportamientos",{"_index":3192,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["comprueba",{"_index":3359,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["comunidad",{"_index":4245,"title":{},"body":{"components/RegisterPage.html":{}}}],["con",{"_index":116,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["conexión",{"_index":3320,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["config",{"_index":835,"title":{},"body":{"modules/AppModule.html":{}}}],["configuración",{"_index":2128,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["configurar",{"_index":4004,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["confirm",{"_index":2090,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["confirmación",{"_index":4482,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["confirmationtoken",{"_index":4569,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["confirmed",{"_index":4570,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["confirmpassword",{"_index":2022,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/RegisterPage.html":{}}}],["conic",{"_index":359,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["consistentemente",{"_index":2432,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["console.error",{"_index":1386,"title":{},"body":{"components/ArtistsPage.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/SearchResult-1.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["console.error('audio",{"_index":1629,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["console.error('error",{"_index":1116,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"directives/DragDropDirective.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{}}}],["console.error('homepage",{"_index":4171,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["console.error('no",{"_index":3869,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["console.error('search",{"_index":4023,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["console.error('strapiauth",{"_index":5330,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["console.error('strapiauthmapping",{"_index":5256,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["console.error(`error",{"_index":2895,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["console.error(`likebutton[${this.componentid",{"_index":3305,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["console.log",{"_index":2434,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["console.log('artista",{"_index":1368,"title":{},"body":{"components/ArtistsPage.html":{}}}],["console.log('artists",{"_index":1355,"title":{},"body":{"components/ArtistsPage.html":{}}}],["console.log('artistspage",{"_index":1349,"title":{},"body":{"components/ArtistsPage.html":{}}}],["console.log('datos",{"_index":1363,"title":{},"body":{"components/ArtistsPage.html":{}}}],["console.log('error",{"_index":237,"title":{},"body":{"components/AboutPage.html":{}}}],["console.log('homepage",{"_index":4162,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["console.log('loading",{"_index":1351,"title":{},"body":{"components/ArtistsPage.html":{}}}],["console.log('performing",{"_index":4027,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["console.log('playing",{"_index":990,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["console.log('share",{"_index":4523,"title":{},"body":{"injectables/ShareService.html":{}}}],["console.log('splash",{"_index":5130,"title":{},"body":{"components/SplashPage.html":{}}}],["console.log('umusic",{"_index":5125,"title":{},"body":{"components/SplashPage.html":{}}}],["console.log('updating",{"_index":2800,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["console.log('url",{"_index":232,"title":{},"body":{"components/AboutPage.html":{}}}],["console.log('using",{"_index":4528,"title":{},"body":{"injectables/ShareService.html":{}}}],["console.log('web",{"_index":4524,"title":{},"body":{"injectables/ShareService.html":{}}}],["console.log(`likebutton[${this.componentid",{"_index":3288,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["console.log(error",{"_index":3526,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["console.warn",{"_index":2733,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchResult-1.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["console.warn('no",{"_index":1644,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["console.warn(`likebutton[${this.componentid",{"_index":3291,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["console.warn(`unexpected",{"_index":3622,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["const",{"_index":204,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":1854,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["constraints.push(startafter(lastdoc",{"_index":1859,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["constructor(artistsservice",{"_index":4637,"title":{},"body":{"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{}}}],["constructor(artistssvc",{"_index":1324,"title":{},"body":{"components/ArtistsPage.html":{}}}],["constructor(audioplayerservice",{"_index":2551,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"components/PlayButtonComponent.html":{}}}],["constructor(authmapping",{"_index":1723,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["constructor(el",{"_index":2324,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["constructor(fb",{"_index":1027,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["constructor(firebaseconfig",{"_index":1779,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["constructor(formbuilder",{"_index":2023,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{}}}],["constructor(http",{"_index":1896,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["constructor(languageservice",{"_index":668,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(modalctrl",{"_index":4594,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["constructor(picturemodal",{"_index":3455,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["constructor(platform",{"_index":4507,"title":{},"body":{"injectables/ShareService.html":{}}}],["constructor(playlistssvc",{"_index":3846,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["constructor(private",{"_index":194,"title":{},"body":{"components/AboutPage.html":{},"directives/DragDropDirective.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/LanguageService.html":{},"components/PlayButtonComponent.html":{},"injectables/ShareService.html":{},"injectables/SongEnrichmentService.html":{}}}],["constructor(repository",{"_index":1433,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseService.html":{},"injectables/PlaylistsService.html":{}}}],["constructor(resource",{"_index":1944,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["constructor(router",{"_index":34,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/SplashPage.html":{}}}],["constructor(signinurl",{"_index":5290,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["constructor(socialservice",{"_index":2972,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{}}}],["constructor(toastcontroller",{"_index":3637,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["constructor(translate",{"_index":3235,"title":{},"body":{"injectables/LanguageService.html":{}}}],["constructor(uploadurl",{"_index":5368,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["constructor(userrepository",{"_index":5391,"title":{},"body":{"injectables/UserService.html":{}}}],["construir",{"_index":3208,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["contact",{"_index":483,"title":{},"body":{"components/AboutPage.html":{}}}],["contactar",{"_index":218,"title":{},"body":{"components/AboutPage.html":{}}}],["contactarnos",{"_index":266,"title":{},"body":{"components/AboutPage.html":{}}}],["contacto",{"_index":58,"title":{},"body":{"components/AboutPage.html":{}}}],["contador",{"_index":5001,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["contain",{"_index":3542,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["container",{"_index":377,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["container::after",{"_index":5215,"title":{},"body":{"components/SplashPage.html":{}}}],["container::before",{"_index":5214,"title":{},"body":{"components/SplashPage.html":{}}}],["contenedor",{"_index":5157,"title":{},"body":{"components/SplashPage.html":{}}}],["contenido",{"_index":1407,"title":{},"body":{"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["content",{"_index":310,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["content::after",{"_index":5213,"title":{},"body":{"components/SplashPage.html":{}}}],["contenttype",{"_index":2936,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["context",{"_index":1571,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["context.type",{"_index":1708,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["contexto",{"_index":1610,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["continuar",{"_index":3377,"title":{},"body":{"components/LoginPage.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["continue",{"_index":4769,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["contraseña",{"_index":2098,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["contraseñas",{"_index":4255,"title":{},"body":{"components/RegisterPage.html":{}}}],["contrast",{"_index":521,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/SplashPage.html":{}}}],["contraste",{"_index":5210,"title":{},"body":{"components/SplashPage.html":{}}}],["control",{"_index":1126,"title":{},"body":{"components/ArtistModalComponent.html":{},"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"miscellaneous/functions.html":{}}}],["control.value",{"_index":1130,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["control?.dirty",{"_index":1128,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["controles",{"_index":117,"title":{},"body":{"components/AboutPage.html":{}}}],["controls",{"_index":3716,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["controlvalueaccessor",{"_index":3437,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["converting",{"_index":3685,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["convertir",{"_index":1239,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["converttoenrichedsongs(songs",{"_index":4747,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["convierte",{"_index":1186,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{}}}],["copiada",{"_index":233,"title":{},"body":{"components/AboutPage.html":{}}}],["copyright",{"_index":489,"title":{},"body":{"components/AboutPage.html":{}}}],["core/guards/auth.guard",{"_index":858,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/guards/no",{"_index":860,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["core/models/artist.model",{"_index":1347,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/SearchResult-1.html":{}}}],["core/models/enriched",{"_index":3565,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["core/models/paginated.model",{"_index":1348,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["core/models/playlist.model",{"_index":3863,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/SearchResult-1.html":{}}}],["core/models/song.model",{"_index":3564,"title":{},"body":{"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["core/repositories/intefaces/base",{"_index":4806,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["core/repositories/repository.factory",{"_index":762,"title":{},"body":{"modules/AppModule.html":{}}}],["core/repositories/repository.tokens",{"_index":764,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/impl/artists.service",{"_index":765,"title":{},"body":{"modules/AppModule.html":{},"components/ArtistsPage.html":{},"interfaces/SearchResult-1.html":{}}}],["core/services/impl/audio",{"_index":804,"title":{},"body":{"modules/AppModule.html":{},"components/PlayButtonComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["core/services/impl/base",{"_index":687,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["core/services/impl/enhanced",{"_index":806,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SearchResult-1.html":{}}}],["core/services/impl/playlists.service",{"_index":767,"title":{},"body":{"modules/AppModule.html":{},"components/PlaylistsPage.html":{},"interfaces/SearchResult-1.html":{}}}],["core/services/impl/social.service",{"_index":2984,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{}}}],["core/services/impl/song",{"_index":802,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SearchResult-1.html":{}}}],["core/services/impl/songs.service",{"_index":766,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["core/services/impl/user.service",{"_index":768,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/interfaces/firebase",{"_index":799,"title":{},"body":{"modules/AppModule.html":{}}}],["core/services/language.service",{"_index":686,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["correctamente",{"_index":2438,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["correcto",{"_index":3380,"title":{},"body":{"components/LoginPage.html":{},"injectables/UserService.html":{}}}],["corregido",{"_index":2431,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["corregidos",{"_index":2509,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["count",{"_index":548,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["cover",{"_index":1003,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["coverage",{"_index":5460,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":123,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["creación",{"_index":1177,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["creada",{"_index":1787,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/RegisterPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["creando",{"_index":4220,"title":{},"body":{"components/RegisterPage.html":{}}}],["crear",{"_index":1902,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["create",{"_index":1118,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["createbasemappingfactory",{"_index":5497,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbasemappingfactory(token",{"_index":5580,"title":{},"body":{"miscellaneous/functions.html":{}}}],["createbaserepositoryfactory",{"_index":5498,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createbaserepositoryfactory(token",{"_index":5584,"title":{},"body":{"miscellaneous/functions.html":{}}}],["created",{"_index":2464,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["createdat",{"_index":2829,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Model.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{}}}],["createdat:desc",{"_index":4158,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["createdat?:string",{"_index":3402,"title":{},"body":{"interfaces/Model.html":{}}}],["createoverlay",{"_index":4368,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["createresultitem(result",{"_index":4432,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["createsearchfilters",{"_index":4821,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["createtranslateloader",{"_index":819,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["createtranslateloader(http",{"_index":810,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["createuserwithemailandpassword",{"_index":2763,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["createuserwithemailandpassword(this.auth",{"_index":2816,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["creating",{"_index":1362,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/PlaylistsPage.html":{}}}],["creation",{"_index":5591,"title":{},"body":{"index.html":{}}}],["credentials",{"_index":2841,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["criterios",{"_index":2101,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["critical",{"_index":4708,"title":{},"body":{"interfaces/SongWithArtists.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["crud",{"_index":1774,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["crítico",{"_index":5674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["css",{"_index":175,"title":{},"body":{"components/AboutPage.html":{}}}],["cssclass",{"_index":2505,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["cualquier",{"_index":2532,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["cuando",{"_index":5084,"title":{},"body":{"components/SplashPage.html":{}}}],["cuenta",{"_index":2112,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["curr",{"_index":3998,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["current",{"_index":2460,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/UserService.html":{}}}],["currentartists",{"_index":1370,"title":{},"body":{"components/ArtistsPage.html":{}}}],["currentartists.findindex(a",{"_index":1372,"title":{},"body":{"components/ArtistsPage.html":{}}}],["currentartists[index",{"_index":1375,"title":{},"body":{"components/ArtistsPage.html":{}}}],["currentids",{"_index":1098,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["currentids.filter((id",{"_index":1103,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["currentindex",{"_index":1596,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["currentlang",{"_index":662,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["currentpage",{"_index":4587,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["currentpassword",{"_index":5349,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["currentplayingsong",{"_index":4810,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["currentplaylists",{"_index":4143,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["currentplaylists.findindex(p",{"_index":4149,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["currentplaylists.some(p",{"_index":4146,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["currentsearchterm",{"_index":4809,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["currentsong",{"_index":1594,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["currentsongs",{"_index":1091,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["currentsongs.find(s",{"_index":1094,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["currentstate",{"_index":1635,"title":{},"body":{"injectables/AudioPlayerService.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/SongGridCardComponent.html":{}}}],["currentstate.currentindex",{"_index":1678,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["currentstate.currentsong?.id",{"_index":3572,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["currentstate.isplaying",{"_index":3576,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["currentstate.queue",{"_index":1674,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["currentstate.queue.filter((_",{"_index":1676,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["currenttime",{"_index":1587,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["currentuser",{"_index":3981,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{}}}],["currentuser.image?.url",{"_index":5450,"title":{},"body":{"injectables/UserService.html":{}}}],["currentvolume",{"_index":1661,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["cursor",{"_index":447,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["custom",{"_index":530,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["custom_elements_schema",{"_index":741,"title":{},"body":{"modules/AppModule.html":{}}}],["customclass",{"_index":3549,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["customevent",{"_index":4068,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{}}}],["customizable",{"_index":5596,"title":{},"body":{"index.html":{}}}],["custommetadata",{"_index":2937,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["círculo",{"_index":2536,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["código",{"_index":245,"title":{},"body":{"components/AboutPage.html":{}}}],["d/.test(password",{"_index":2105,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["dado",{"_index":4993,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["danger",{"_index":1007,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/PictureSelectableComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["dark",{"_index":281,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["data",{"_index":1120,"title":{"interfaces/Data.html":{}},"body":{"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IUserMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["data.album",{"_index":5009,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.artists_ids",{"_index":5020,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.artists_ids?.map(id",{"_index":5038,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.attributes",{"_index":3802,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.audiourl",{"_index":5031,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.author",{"_index":3767,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.data",{"_index":1278,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["data.data.attributes",{"_index":3800,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.data.id",{"_index":3801,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.duration",{"_index":3768,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["data.followers_count",{"_index":1270,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["data.followers_count.tostring",{"_index":1272,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["data.followers_count?.tostring",{"_index":1263,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["data.id",{"_index":3803,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["data.id?.tostring",{"_index":3804,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.image",{"_index":3712,"title":{},"body":{"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["data.index",{"_index":2371,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["data.item",{"_index":2368,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["data.likes_count",{"_index":3774,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["data.listeners",{"_index":1267,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["data.listeners.tostring",{"_index":1269,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["data.listeners?.tostring",{"_index":1262,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["data.lyrics",{"_index":5011,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.map(d",{"_index":3797,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.name",{"_index":1261,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["data.newpassword",{"_index":5351,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["data.oldpassword",{"_index":5350,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["data.playlistid_ids",{"_index":5023,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.playlistid_ids?.map(id",{"_index":5039,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.song_ids",{"_index":3769,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.song_ids.map(id",{"_index":3770,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.users_ids",{"_index":3772,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.users_ids.map(id",{"_index":3773,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data.users_like",{"_index":5014,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.users_like?.map(id",{"_index":5037,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["data.verified",{"_index":1264,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["data:any):paginated",{"_index":3104,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["data:t",{"_index":3405,"title":{},"body":{"interfaces/Paginated.html":{}}}],["data[key",{"_index":3789,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["data[key]?.map(id",{"_index":3793,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["datastr",{"_index":2364,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dataurl",{"_index":3651,"title":{},"body":{"components/PlaylistModalComponent.html":{},"miscellaneous/functions.html":{}}}],["dataurl.split",{"_index":2419,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["dataurltoblob",{"_index":3648,"title":{},"body":{"components/PlaylistModalComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(dataurl",{"_index":2417,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"miscellaneous/functions.html":{}}}],["dataurltoblob(formvalues.image",{"_index":2463,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["date",{"_index":2830,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/Task.html":{}}}],["date()).toisostring",{"_index":1976,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["date.now()}_${math.random().tostring(36).substring(2",{"_index":2932,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["date:date",{"_index":5387,"title":{},"body":{"interfaces/Task.html":{}}}],["datos",{"_index":1160,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["db",{"_index":1777,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["dd0031",{"_index":167,"title":{},"body":{"components/AboutPage.html":{}}}],["de",{"_index":55,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["deactivatesearch",{"_index":4470,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["debe",{"_index":3378,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{}}}],["deben",{"_index":4250,"title":{},"body":{"components/RegisterPage.html":{}}}],["deberías",{"_index":5028,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["debouncetime",{"_index":3286,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["debouncetime(10",{"_index":3296,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["debouncetime(200",{"_index":4317,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["debouncetime(300",{"_index":4009,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["debouncetime(500",{"_index":4815,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["debug",{"_index":3670,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["debugging",{"_index":3287,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["declarations",{"_index":625,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"overview.html":{}}}],["decoration",{"_index":2197,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["decorators",{"_index":681,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{}}}],["default",{"_index":77,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultlang",{"_index":3229,"title":{},"body":{"injectables/LanguageService.html":{}}}],["defecto",{"_index":2726,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"components/SplashPage.html":{}}}],["defined",{"_index":36,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"components/RegisterPage.html":{},"interfaces/SearchParams.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["definitiva",{"_index":241,"title":{},"body":{"components/AboutPage.html":{}}}],["deformarse",{"_index":2539,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["dejar",{"_index":2681,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["deje",{"_index":4012,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["del",{"_index":70,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["delay",{"_index":3298,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["delegar",{"_index":2585,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["delete",{"_index":968,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["delete(id",{"_index":1449,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["deletedoc",{"_index":1829,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["deletedoc(docref",{"_index":1884,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["demo",{"_index":476,"title":{},"body":{"components/AboutPage.html":{}}}],["demonstration",{"_index":5599,"title":{},"body":{"index.html":{}}}],["dentro",{"_index":2541,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["dependencies",{"_index":624,"title":{"dependencies.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["deps",{"_index":820,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["derechos",{"_index":274,"title":{},"body":{"components/AboutPage.html":{}}}],["desarrollador",{"_index":65,"title":{},"body":{"components/AboutPage.html":{}}}],["desarrolladores",{"_index":248,"title":{},"body":{"components/AboutPage.html":{}}}],["desbordante",{"_index":2533,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["desconocido",{"_index":4846,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["description",{"_index":112,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"properties.html":{}}}],["descubre",{"_index":225,"title":{},"body":{"components/AboutPage.html":{}}}],["desde",{"_index":213,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/PictureSelectableComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{}}}],["deshabilitado",{"_index":3491,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["design",{"_index":502,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"index.html":{}}}],["después",{"_index":721,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["destroy",{"_index":2611,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["destructive",{"_index":1383,"title":{},"body":{"components/ArtistsPage.html":{}}}],["destruir",{"_index":2907,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"components/PictureSelectableComponent.html":{}}}],["detail",{"_index":608,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["detail'},{'name",{"_index":598,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["detail.module').then(m",{"_index":886,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["detail.module.ts",{"_index":3595,"title":{},"body":{"modules/PlaylistDetailPageModule.html":{}}}],["detail.page",{"_index":3596,"title":{},"body":{"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{}}}],["detail.page.html",{"_index":4689,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["detail.page.scss",{"_index":4690,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["detail.page.ts",{"_index":4687,"title":{},"body":{"interfaces/SongWithArtists.html":{},"coverage.html":{}}}],["detail/playlist",{"_index":885,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"interfaces/SongWithArtists.html":{},"coverage.html":{}}}],["details",{"_index":4684,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["detect",{"_index":4944,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["detectar",{"_index":4444,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["detected",{"_index":2487,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["developer",{"_index":446,"title":{},"body":{"components/AboutPage.html":{}}}],["developer.bio",{"_index":251,"title":{},"body":{"components/AboutPage.html":{}}}],["developer.github.replace('https://github.com",{"_index":253,"title":{},"body":{"components/AboutPage.html":{}}}],["developer.github.replace(\\'https://github.com",{"_index":556,"title":{},"body":{"components/AboutPage.html":{}}}],["developer.name",{"_index":249,"title":{},"body":{"components/AboutPage.html":{}}}],["developer.role",{"_index":250,"title":{},"body":{"components/AboutPage.html":{}}}],["developers",{"_index":22,"title":{},"body":{"components/AboutPage.html":{}}}],["devolver",{"_index":1515,"title":{},"body":{"injectables/ArtistsService.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["dialogtitle",{"_index":4515,"title":{},"body":{"injectables/ShareService.html":{},"interfaces/SongWithArtists.html":{}}}],["diferente",{"_index":3579,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["diferentes",{"_index":1224,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["directa",{"_index":1505,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["directamente",{"_index":2502,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["direction",{"_index":506,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["directive",{"_index":554,"title":{"directives/DragDropDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["directives",{"_index":615,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["directives/drag",{"_index":4545,"title":{},"body":{"modules/SharedModule.html":{}}}],["directo",{"_index":2297,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["directos",{"_index":4911,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["dirty",{"_index":2446,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["dirtyvalues",{"_index":1124,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["dirtyvalues[key",{"_index":1129,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["disable",{"_index":196,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["disabled",{"_index":2172,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["diseño",{"_index":157,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["dismiss",{"_index":1020,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{}}}],["display",{"_index":378,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["displayartists",{"_index":951,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["displayname",{"_index":2788,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseUser.html":{},"injectables/PlaylistsService.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["displayname.tolowercase",{"_index":3935,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["disponible",{"_index":149,"title":{},"body":{"components/AboutPage.html":{}}}],["disponibles",{"_index":1204,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["dispositivos",{"_index":161,"title":{},"body":{"components/AboutPage.html":{}}}],["distinctuntilchanged",{"_index":3285,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["distinctuntilchangedoperator",{"_index":3956,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["distinctuntilchangedoperator((prev",{"_index":3997,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["div.user",{"_index":3532,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["divider",{"_index":3389,"title":{},"body":{"components/LoginPage.html":{}}}],["doc",{"_index":1824,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["doc(this.db",{"_index":1870,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["doc.data",{"_index":1866,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["doc.exists",{"_index":1873,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["doc.id",{"_index":1865,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["docref",{"_index":1869,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["docref.id",{"_index":1879,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["document",{"_index":2784,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/SearchResult-1.html":{}}}],["document.queryselector('.splash",{"_index":5140,"title":{},"body":{"components/SplashPage.html":{}}}],["document.queryselector('app",{"_index":702,"title":{},"body":{"components/AppComponent.html":{}}}],["document:keydown",{"_index":667,"title":{},"body":{"components/AppComponent.html":{}}}],["document:keydown(event",{"_index":674,"title":{},"body":{"components/AppComponent.html":{}}}],["documentation",{"_index":5461,"title":{},"body":{"coverage.html":{}}}],["documentdata",{"_index":2865,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["documento",{"_index":1784,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["documentreference",{"_index":2737,"title":{},"body":{"interfaces/FirebaseArtist.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["dos",{"_index":4247,"title":{},"body":{"components/RegisterPage.html":{}}}],["dot",{"_index":5192,"title":{},"body":{"components/SplashPage.html":{}}}],["dots",{"_index":5191,"title":{},"body":{"components/SplashPage.html":{}}}],["drag",{"_index":2361,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragdropdirective",{"_index":616,"title":{"directives/DragDropDirective.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["dragend",{"_index":2319,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragevent",{"_index":2340,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["draggable",{"_index":2347,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragging",{"_index":2354,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragleave",{"_index":2320,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragover",{"_index":2321,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dragstart",{"_index":2322,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop",{"_index":2323,"title":{},"body":{"directives/DragDropDirective.html":{},"components/SplashPage.html":{}}}],["drop.directive",{"_index":4546,"title":{},"body":{"modules/SharedModule.html":{}}}],["drop.directive.ts",{"_index":2309,"title":{},"body":{"directives/DragDropDirective.html":{},"coverage.html":{}}}],["drop.directive.ts:11",{"_index":2328,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:18",{"_index":2335,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:38",{"_index":2332,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:44",{"_index":2334,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:55",{"_index":2333,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:60",{"_index":2336,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:7",{"_index":2329,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:8",{"_index":2330,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["drop.directive.ts:9",{"_index":2331,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["dudes",{"_index":265,"title":{},"body":{"components/AboutPage.html":{}}}],["duración",{"_index":3723,"title":{},"body":{"components/PlaylistModalComponent.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{}}}],["duration",{"_index":545,"title":{},"body":{"components/AboutPage.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"injectables/SongsMappingStrapi.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSongResponse.html":{}}}],["duration.pipte",{"_index":4553,"title":{},"body":{"modules/SharedModule.html":{}}}],["duration.pipte.ts",{"_index":3599,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{},"coverage.html":{}}}],["duration.pipte.ts:42",{"_index":3607,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["duration.pipte.ts:53",{"_index":3603,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["duration.pipte.ts:63",{"_index":3610,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["duration.pipte.ts:8",{"_index":3614,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["durationpipe",{"_index":2373,"title":{"pipes/DurationPipe.html":{}},"body":{"pipes/DurationPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["durationvalue",{"_index":4958,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["during",{"_index":5338,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["dynamic",{"_index":5539,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":1628,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["ease",{"_index":337,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["edición",{"_index":3703,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["edit",{"_index":579,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["edita",{"_index":124,"title":{},"body":{"components/AboutPage.html":{}}}],["editar",{"_index":3721,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["editprofilemodal",{"_index":2435,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["editprofilemodalcomponent",{"_index":578,"title":{"components/EditProfileModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["editsong(song",{"_index":4782,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["efecto",{"_index":2209,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{},"components/SplashPage.html":{}}}],["efectos",{"_index":5160,"title":{},"body":{"components/SplashPage.html":{}}}],["eficiente",{"_index":1493,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["ejecuciones",{"_index":5316,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["ejemplo",{"_index":4750,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["el",{"_index":53,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/ISongsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LikeButtonComponent.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":553,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["elemento",{"_index":723,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["elementos",{"_index":716,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["elementref",{"_index":2325,"title":{},"body":{"directives/DragDropDirective.html":{},"interfaces/SearchResult-1.html":{}}}],["elevated",{"_index":283,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["elimina",{"_index":720,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["eliminación",{"_index":1183,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["eliminada",{"_index":1792,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["eliminado",{"_index":1949,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["eliminar",{"_index":1791,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["ellipsis",{"_index":1010,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["email",{"_index":56,"title":{},"body":{"components/AboutPage.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseUser.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"components/LoginPage.html":{},"interfaces/Person.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["email:string",{"_index":4562,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["email?:string",{"_index":3417,"title":{},"body":{"interfaces/Person.html":{}}}],["emailverified",{"_index":2960,"title":{},"body":{"interfaces/FirebaseUser.html":{}}}],["emitir",{"_index":4670,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["empezando",{"_index":1951,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["empezar",{"_index":1399,"title":{},"body":{"components/ArtistsPage.html":{}}}],["empty",{"_index":200,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["en",{"_index":72,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["encontrado",{"_index":1808,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["encuentra",{"_index":140,"title":{},"body":{"components/AboutPage.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/SearchResult-1.html":{}}}],["end",{"_index":713,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{}}}],["end:0",{"_index":3538,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["endpoint",{"_index":3195,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["enhancedaudioplayer",{"_index":3984,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["enhancedaudioplayerservice",{"_index":734,"title":{"injectables/EnhancedAudioPlayerService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{},"overview.html":{}}}],["enriched",{"_index":2580,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["enrichednewsong",{"_index":4777,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["enrichedsong",{"_index":1545,"title":{"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{}},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"coverage.html":{}}}],["enrichedsong).artistnames",{"_index":2584,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["enrichedsongs",{"_index":2578,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["enrichedsongs.map(song",{"_index":4043,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["enrichedsongs.push",{"_index":2660,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["enrichedsongs.push(enriched",{"_index":2581,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["enrichedsongs.push(enrichedsong",{"_index":2659,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["enrichedsongs.push(song",{"_index":2579,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["enricheduser",{"_index":2787,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["enriching",{"_index":2723,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["enrichment.service",{"_index":803,"title":{},"body":{"modules/AppModule.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["enrichment.service.ts",{"_index":2714,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{},"coverage.html":{}}}],["enrichment.service.ts:14",{"_index":4638,"title":{},"body":{"injectables/SongEnrichmentService.html":{}}}],["enrichment.service.ts:17",{"_index":4639,"title":{},"body":{"injectables/SongEnrichmentService.html":{}}}],["enrichment.service.ts:37",{"_index":4640,"title":{},"body":{"injectables/SongEnrichmentService.html":{}}}],["enrichment.service.ts:57",{"_index":4641,"title":{},"body":{"injectables/SongEnrichmentService.html":{}}}],["enrichmentobservables",{"_index":2720,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["enrichsong",{"_index":4634,"title":{},"body":{"injectables/SongEnrichmentService.html":{}}}],["enrichsong(song",{"_index":2716,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["enrichsongs",{"_index":4635,"title":{},"body":{"injectables/SongEnrichmentService.html":{}}}],["enrichsongs(songs",{"_index":2718,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["enrichsongsasync",{"_index":4636,"title":{},"body":{"injectables/SongEnrichmentService.html":{}}}],["enrichsongsasync(songs",{"_index":2731,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["enrichsongswithartists(songs",{"_index":2654,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["enrichsongwithartists",{"_index":4589,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["enrichsongwithartists(songs",{"_index":4597,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["enriquecida",{"_index":2575,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["enriquecidos",{"_index":4872,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["entidad",{"_index":1786,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["entity",{"_index":1448,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ISongsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["entity.createdat",{"_index":1975,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["entity.id",{"_index":1973,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["entre",{"_index":715,"title":{},"body":{"components/AppComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["enviado",{"_index":3697,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["enviados",{"_index":1247,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["enviar",{"_index":267,"title":{},"body":{"components/AboutPage.html":{},"components/EditProfileModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["environment",{"_index":796,"title":{},"body":{"modules/AppModule.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.apiurl}/api",{"_index":830,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local",{"_index":831,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/auth/local/register",{"_index":832,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/songs",{"_index":4870,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["environment.apiurl}/api/upload",{"_index":834,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.apiurl}/api/users/me",{"_index":833,"title":{},"body":{"modules/AppModule.html":{}}}],["eq",{"_index":3115,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{}}}],["equipo",{"_index":219,"title":{},"body":{"components/AboutPage.html":{}}}],["err",{"_index":1361,"title":{},"body":{"components/ArtistsPage.html":{},"directives/DragDropDirective.html":{},"components/LoginPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{}}}],["err.error.message",{"_index":3362,"title":{},"body":{"components/LoginPage.html":{}}}],["err.error?.message",{"_index":3361,"title":{},"body":{"components/LoginPage.html":{}}}],["err.status",{"_index":3355,"title":{},"body":{"components/LoginPage.html":{}}}],["error",{"_index":236,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["error(\"auth",{"_index":5655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"backend",{"_index":5652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(\"id",{"_index":1986,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["error('invalid",{"_index":5258,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["error('missing",{"_index":5262,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["error('no",{"_index":2063,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["error('playlist",{"_index":3938,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["error('unknown",{"_index":2468,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["error('upload",{"_index":2480,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["error('user",{"_index":2783,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/UserService.html":{}}}],["error('usuario",{"_index":2929,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["error(`no",{"_index":2881,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["error(error.error.error.message",{"_index":5354,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["error.error.message",{"_index":4234,"title":{},"body":{"components/RegisterPage.html":{}}}],["error.error?.error?.message",{"_index":5353,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["error.error?.message",{"_index":4233,"title":{},"body":{"components/RegisterPage.html":{}}}],["error.message?.includes('incorrect",{"_index":2081,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["error.message?.includes('wrong",{"_index":2080,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["error.status",{"_index":4229,"title":{},"body":{"components/RegisterPage.html":{}}}],["errormessage",{"_index":2078,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["es",{"_index":1241,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/EditProfileModalComponent.html":{},"injectables/LanguageService.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{}}}],["escribir",{"_index":4013,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["escritorio",{"_index":163,"title":{},"body":{"components/AboutPage.html":{}}}],["escuchar",{"_index":3671,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["eslint",{"_index":195,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["eslint/no",{"_index":199,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["espacio",{"_index":1404,"title":{},"body":{"components/ArtistsPage.html":{}}}],["especial",{"_index":4254,"title":{},"body":{"components/RegisterPage.html":{}}}],["especializado",{"_index":87,"title":{},"body":{"components/AboutPage.html":{}}}],["especializados",{"_index":1895,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["específica",{"_index":2267,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiRepositoryService.html":{}}}],["específico",{"_index":1155,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["específicos",{"_index":2262,"title":{},"body":{"interfaces/Data.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["esperar",{"_index":4010,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["est",{"_index":3490,"title":{},"body":{"components/PictureSelectableComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["esta",{"_index":1801,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/SongWithArtists-1.html":{}}}],["establece",{"_index":3484,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["establecer",{"_index":1616,"title":{},"body":{"injectables/AudioPlayerService.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["estado",{"_index":989,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/LikeButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["estamos",{"_index":262,"title":{},"body":{"components/AboutPage.html":{}}}],["este",{"_index":2991,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["estilizado",{"_index":2129,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["estilizados",{"_index":2141,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["estilo",{"_index":5151,"title":{},"body":{"components/SplashPage.html":{}}}],["estilos",{"_index":327,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{}}}],["estructura",{"_index":1159,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["estructuras",{"_index":3799,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["ev",{"_index":1336,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{}}}],["ev.target.complete",{"_index":1392,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["evaluación",{"_index":2102,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["evaluar",{"_index":2096,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["event",{"_index":673,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"components/PictureSelectableComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["event.ctrlkey",{"_index":696,"title":{},"body":{"components/AppComponent.html":{}}}],["event.datatransfer?.getdata('text",{"_index":2365,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["event.datatransfer?.setdata('text",{"_index":2351,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["event.datatransfer?.setdragimage(img",{"_index":2359,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["event.detail.value",{"_index":4069,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["event.detail.value?.trim",{"_index":4819,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["event.key",{"_index":698,"title":{},"body":{"components/AppComponent.html":{}}}],["event.metakey",{"_index":697,"title":{},"body":{"components/AppComponent.html":{}}}],["event.preventdefault",{"_index":700,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{}}}],["event.sourceindex",{"_index":4854,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["event.stoppropagation",{"_index":2363,"title":{},"body":{"directives/DragDropDirective.html":{},"components/PictureSelectableComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["event.target",{"_index":4386,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{}}}],["event.target.value",{"_index":4471,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["event.targetindex",{"_index":4855,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["eventemitter",{"_index":927,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["evento",{"_index":3472,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/SongGridCardComponent.html":{}}}],["eventos",{"_index":4066,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["evita",{"_index":2531,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["evitar",{"_index":3299,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/SearchResult-1.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["exacta",{"_index":1509,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["exactmatch",{"_index":1511,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["exacto",{"_index":1503,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["excludesongids",{"_index":1086,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-3.html":{}}}],["existe",{"_index":1809,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["existen",{"_index":1964,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/SongWithArtists.html":{}}}],["existente",{"_index":1818,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["existentes",{"_index":3971,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/UserService.html":{}}}],["exitosamente",{"_index":4906,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["experiencia",{"_index":153,"title":{},"body":{"components/AboutPage.html":{}}}],["expirado",{"_index":5337,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["exponer",{"_index":4188,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["export",{"_index":192,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":628,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"overview.html":{}}}],["ext",{"_index":3005,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["extendida",{"_index":4869,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["extends",{"_index":904,"title":{},"body":{"interfaces/Artist.html":{},"injectables/ArtistsService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/Person.html":{},"interfaces/Playlist.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["extiende",{"_index":3190,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["extrae",{"_index":1229,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["extraída",{"_index":4933,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["eye",{"_index":2148,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["f15e6c",{"_index":3383,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["factories",{"_index":851,"title":{},"body":{"modules/AppModule.html":{}}}],["factoryprovider",{"_index":5583,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["fade",{"_index":5137,"title":{},"body":{"components/SplashPage.html":{}}}],["fadein",{"_index":3385,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["fadeinup",{"_index":495,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["failed",{"_index":2481,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/PlaylistModalComponent.html":{}}}],["fall",{"_index":4919,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["falla",{"_index":3318,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["fallback",{"_index":2724,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SearchResult-1.html":{},"injectables/ShareService.html":{},"injectables/SongEnrichmentService.html":{}}}],["fallbackshare",{"_index":4505,"title":{},"body":{"injectables/ShareService.html":{}}}],["fallbackshare(options",{"_index":4509,"title":{},"body":{"injectables/ShareService.html":{}}}],["false",{"_index":939,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["faltan",{"_index":3761,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["favoritos",{"_index":3319,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["fb",{"_index":1034,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["feature",{"_index":468,"title":{},"body":{"components/AboutPage.html":{}}}],["feature.description",{"_index":256,"title":{},"body":{"components/AboutPage.html":{}}}],["feature.title",{"_index":255,"title":{},"body":{"components/AboutPage.html":{}}}],["features",{"_index":23,"title":{},"body":{"components/AboutPage.html":{},"index.html":{}}}],["feedback",{"_index":3311,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["fetch(formdata.image",{"_index":1110,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["fetch(formvalues.image",{"_index":2466,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["fetched",{"_index":3689,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["fetching",{"_index":3688,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["ff6b35",{"_index":299,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["ff6b6b",{"_index":2125,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["ffa726",{"_index":2127,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["ffca28",{"_index":187,"title":{},"body":{"components/AboutPage.html":{}}}],["ffffff",{"_index":292,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["field",{"_index":2039,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["fields",{"_index":2542,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["file([u8arr",{"_index":4927,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["fileloader",{"_index":3469,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.click",{"_index":3528,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files?.length>0",{"_index":3519,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.files[0",{"_index":3520,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader.onchange",{"_index":3517,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fileloader:htmlinputelement",{"_index":3516,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["filename",{"_index":2931,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["filereader",{"_index":3522,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["fill",{"_index":404,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"components/PlayButtonComponent.html":{},"components/SplashPage.html":{}}}],["filter",{"_index":318,"title":{},"body":{"components/AboutPage.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{}}}],["filter((artist",{"_index":4968,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["filter((p",{"_index":4975,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["filter((s",{"_index":3809,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["filter((u",{"_index":3819,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["filter((user",{"_index":4998,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["filter((userdata",{"_index":5456,"title":{},"body":{"injectables/UserService.html":{}}}],["filter(id",{"_index":3941,"title":{},"body":{"injectables/PlaylistsService.html":{},"injectables/SongsMappingStrapi.html":{}}}],["filter(isready",{"_index":5662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filter(ready",{"_index":4106,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["filter(user",{"_index":4100,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["filteredartists",{"_index":4355,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["filteredartists.length",{"_index":4358,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["filteredplaylists",{"_index":4349,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["filteredplaylists.length",{"_index":4353,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["filteredsongs",{"_index":4338,"title":{},"body":{"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["filteredsongs.length",{"_index":4347,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["filters",{"_index":1794,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters).pipe",{"_index":3929,"title":{},"body":{"injectables/PlaylistsService.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{}}}],["filters[${key}][$eq]=${value",{"_index":2273,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filters['name",{"_index":4822,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["filters[users_ids][id][$eq]=${value",{"_index":2270,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["filtrado",{"_index":1906,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["filtrar",{"_index":1492,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["filtros",{"_index":1799,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["final",{"_index":2500,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["finales",{"_index":5036,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["finalimage",{"_index":5451,"title":{},"body":{"injectables/UserService.html":{}}}],["finalize",{"_index":3284,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["finally",{"_index":2084,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{}}}],["findbyexactname",{"_index":1428,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["findbyexactname(name",{"_index":1437,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["firebase",{"_index":186,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["firebase.service.ts",{"_index":1768,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"coverage.html":{}}}],["firebase.service.ts:104",{"_index":1805,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:121",{"_index":1783,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:133",{"_index":1816,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:146",{"_index":1790,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:33",{"_index":1820,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:34",{"_index":1781,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:53",{"_index":1811,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase.service.ts:74",{"_index":1796,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["firebase/app",{"_index":1822,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["firebase/auth",{"_index":2768,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["firebase/firestore",{"_index":1834,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{}}}],["firebase/storage",{"_index":2923,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["firebase_collection_token",{"_index":1837,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebase_config_token",{"_index":782,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["firebaseartist",{"_index":2734,"title":{"interfaces/FirebaseArtist.html":{}},"body":{"interfaces/FirebaseArtist.html":{},"coverage.html":{}}}],["firebaseauthenticationservice",{"_index":2738,"title":{"injectables/FirebaseAuthenticationService.html":{}},"body":{"injectables/FirebaseAuthenticationService.html":{},"coverage.html":{}}}],["firebaseauthenticationservice(firebaseconfig",{"_index":5651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebasecollectionsubscriptionservice",{"_index":798,"title":{"injectables/FirebaseCollectionSubscriptionService.html":{}},"body":{"modules/AppModule.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["firebaseconfig",{"_index":1782,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"miscellaneous/variables.html":{}}}],["firebasegroup",{"_index":2912,"title":{"interfaces/FirebaseGroup.html":{}},"body":{"interfaces/FirebaseGroup.html":{},"coverage.html":{}}}],["firebasemediaservice",{"_index":2914,"title":{"injectables/FirebaseMediaService.html":{}},"body":{"injectables/FirebaseMediaService.html":{},"coverage.html":{}}}],["firebasemediaservice(firebaseconfig",{"_index":5654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firebaseperson",{"_index":2946,"title":{"interfaces/FirebasePerson.html":{}},"body":{"interfaces/FirebasePerson.html":{},"coverage.html":{}}}],["firebaseplaylist",{"_index":2950,"title":{"interfaces/FirebasePlaylist.html":{}},"body":{"interfaces/FirebasePlaylist.html":{},"coverage.html":{}}}],["firebasesignout",{"_index":2764,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["firebasesong",{"_index":2955,"title":{"interfaces/FirebaseSong.html":{}},"body":{"interfaces/FirebaseSong.html":{},"coverage.html":{}}}],["firebaseuser",{"_index":2767,"title":{"interfaces/FirebaseUser.html":{}},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebaseUser.html":{},"coverage.html":{}}}],["firestore",{"_index":1771,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["first",{"_index":3205,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"components/PlaylistModalComponent.html":{}}}],["firstvaluefrom",{"_index":2759,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"components/RegisterPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._ready.pipe(filter(ready",{"_index":2801,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this._user",{"_index":5343,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["firstvaluefrom(this.authsvc.signup",{"_index":4221,"title":{},"body":{"components/RegisterPage.html":{}}}],["fit",{"_index":442,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["fixed",{"_index":4374,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["flex",{"_index":422,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["fn",{"_index":3477,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["foco",{"_index":4072,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["focus",{"_index":534,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["focused",{"_index":2143,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["follow",{"_index":582,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"injectables/UserService.html":{}}}],["follow(userid",{"_index":3172,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["followartistbuttoncomponent",{"_index":581,"title":{"components/FollowArtistButtonComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["followed",{"_index":2685,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["followers",{"_index":2961,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["followers_count",{"_index":907,"title":{},"body":{"interfaces/Artist.html":{},"injectables/ArtistsMappingStrapi.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["followers_fk",{"_index":4573,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["followid",{"_index":3173,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["followid).pipe",{"_index":5432,"title":{},"body":{"injectables/UserService.html":{}}}],["following",{"_index":2683,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/FirebaseUser.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["following_artists",{"_index":4575,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["following_count",{"_index":4578,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["following_ids",{"_index":4572,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["followloading",{"_index":2616,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["fondo",{"_index":1409,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["font",{"_index":321,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["footer",{"_index":487,"title":{},"body":{"components/AboutPage.html":{}}}],["forkjoin",{"_index":1466,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{}}}],["forkjoin(enrichmentobservables).pipe",{"_index":2722,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["forkjoin(songrequests",{"_index":4765,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["form",{"_index":2139,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongsMappingStrapi.html":{}}}],["forma",{"_index":5030,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["format",{"_index":2469,"title":{},"body":{"components/EditProfileModalComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsService.html":{},"injectables/UserService.html":{}}}],["formatduration(seconds",{"_index":4801,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["formatlongduration",{"_index":3601,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["formatlongduration(totalseconds",{"_index":3602,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["formatnumber(num",{"_index":2704,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["formato",{"_index":1222,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["formatos",{"_index":3775,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["formats",{"_index":1292,"title":{"interfaces/Formats.html":{}},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["formats.large?.url",{"_index":1295,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["formats.medium?.url",{"_index":1296,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["formats.small?.url",{"_index":1297,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["formats.thumbnail?.url",{"_index":1298,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["formatshortduration",{"_index":3605,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["formatshortduration(totalseconds",{"_index":3606,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["formattedminutes",{"_index":2383,"title":{},"body":{"pipes/DurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["formattedminutes}:${formattedseconds",{"_index":2388,"title":{},"body":{"pipes/DurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["formattedseconds",{"_index":2385,"title":{},"body":{"pipes/DurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["formattime",{"_index":1523,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{}}}],["formattime(seconds",{"_index":1547,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["formbuilder",{"_index":1028,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["formdata",{"_index":1105,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/SongsMappingStrapi.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formdata).subscribe",{"_index":1366,"title":{},"body":{"components/ArtistsPage.html":{}}}],["formdata.append('files",{"_index":3017,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["formdata.author",{"_index":3705,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formdata.duration",{"_index":3707,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formdata.image",{"_index":1108,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["formdata.image.startswith('blob",{"_index":3687,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formdata.image.startswith('data",{"_index":3684,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formdata.image.substring(0",{"_index":3691,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formdata.image.trim",{"_index":3682,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formdata.song_ids",{"_index":3708,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formdata.users_ids",{"_index":3709,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["formgroup",{"_index":1018,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["formgroup.get(key",{"_index":1127,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["formsmodule",{"_index":641,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{}}}],["formulario",{"_index":2138,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["formularios",{"_index":3439,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["formvalues",{"_index":2450,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["formvalues.email",{"_index":2457,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["formvalues.image",{"_index":2459,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["formvalues.image.startswith('blob",{"_index":2465,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["formvalues.image.startswith('data",{"_index":2462,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["formvalues.image.startswith('http",{"_index":2467,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["formvalues.username",{"_index":2454,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["forwardref",{"_index":3498,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["forwards",{"_index":500,"title":{},"body":{"components/AboutPage.html":{}}}],["found",{"_index":1645,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/PlayerState.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"injectables/UserService.html":{}}}],["framework",{"_index":5607,"title":{},"body":{"properties.html":{}}}],["from(adddoc(this.collectionref",{"_index":1875,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(firebasesignout(this.auth)).pipe",{"_index":2842,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(getdoc(doc(this.db",{"_index":2808,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(getdoc(docref)).pipe",{"_index":1871,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(signinwithemailandpassword(this.auth",{"_index":2805,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["from(this.auth.getcurrentuser()).pipe",{"_index":2927,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["from(this.getlastdocumentofpreviouspage(page",{"_index":1851,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(updatedoc(docref",{"_index":1880,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["from(uploadbytes(storageref",{"_index":2941,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["fuente",{"_index":246,"title":{},"body":{"components/AboutPage.html":{}}}],["fuera",{"_index":2535,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["fuerza",{"_index":2097,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["full",{"_index":83,"title":{},"body":{"components/AboutPage.html":{},"modules/AppRoutingModule.html":{}}}],["funcionalidad",{"_index":4003,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["funcione",{"_index":4410,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["función",{"_index":2415,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["function",{"_index":807,"title":{},"body":{"modules/AppModule.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["functionality",{"_index":5595,"title":{},"body":{"index.html":{}}}],["functions",{"_index":5572,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fácilmente",{"_index":141,"title":{},"body":{"components/AboutPage.html":{}}}],["g",{"_index":849,"title":{},"body":{"modules/AppModule.html":{}}}],["gap",{"_index":424,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["gender",{"_index":2826,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/Person.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["gender:string",{"_index":3422,"title":{},"body":{"interfaces/Person.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["genera",{"_index":1954,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["generado",{"_index":1789,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["generados",{"_index":1940,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["generar",{"_index":1963,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["generatesearchsuggestions(results",{"_index":4050,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["gestiona",{"_index":134,"title":{},"body":{"components/AboutPage.html":{}}}],["gestionar",{"_index":3435,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["gestión",{"_index":121,"title":{},"body":{"components/AboutPage.html":{}}}],["getadded",{"_index":1161,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getadded(data",{"_index":1172,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getadded(data:any):t",{"_index":3106,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getall",{"_index":1431,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["getall(page",{"_index":1793,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getallbyuser",{"_index":3134,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{}}}],["getallbyuser(userid",{"_index":3138,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{}}}],["getallwithartists",{"_index":5050,"title":{},"body":{"injectables/SongsService.html":{}}}],["getallwithartists(page",{"_index":4873,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["getartistsongs",{"_index":3036,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["getartistsongs(artistid",{"_index":3044,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["getauth",{"_index":2761,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getauth(app",{"_index":2773,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getbyemail",{"_index":3166,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["getbyemail(email",{"_index":3174,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["getbyid",{"_index":1432,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["getbyid(id",{"_index":1452,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["getbyids",{"_index":1429,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{}}}],["getbyids(ids",{"_index":1440,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{}}}],["getbyidwithartists",{"_index":5051,"title":{},"body":{"injectables/SongsService.html":{}}}],["getbyidwithartists(id",{"_index":4883,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["getbyname",{"_index":3037,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["getbyname(name",{"_index":3047,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["getbyplaylistid",{"_index":3144,"title":{},"body":{"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"injectables/SongsService.html":{}}}],["getbyplaylistid(playlistid",{"_index":3145,"title":{},"body":{"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["getbyplaylistid?(playlistid",{"_index":3149,"title":{},"body":{"interfaces/ISongsRepository.html":{}}}],["getbyuserdisplayname",{"_index":3898,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["getbyuserdisplayname(displayname",{"_index":3906,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["getbyuserid",{"_index":3135,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{}}}],["getbyuserid(userid",{"_index":3140,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{}}}],["getconfirmpassword",{"_index":2047,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/RegisterPage.html":{}}}],["getcurrentlang",{"_index":3232,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getcurrentsong",{"_index":1524,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["getcurrentuser",{"_index":1718,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["getcurrentuser():promise",{"_index":3097,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["getdefaultimage(type",{"_index":4175,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["getdeleted",{"_index":1162,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getdeleted(data",{"_index":1181,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getdeleted(data:any):t",{"_index":3108,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getdirtyvalues",{"_index":1021,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["getdirtyvalues(formgroup",{"_index":1037,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["getdisplayartists",{"_index":2190,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["getdoc",{"_index":1825,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["getdoc(doc(this.db",{"_index":2780,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["getdocs",{"_index":1826,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getdocs(q",{"_index":1862,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getdownloadurl",{"_index":2921,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getdownloadurl(snapshot.ref",{"_index":2944,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getemail",{"_index":2409,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["getfirestore",{"_index":1823,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["getfirestore(app",{"_index":1847,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["getfollowers",{"_index":3167,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["getfollowers(userid",{"_index":3176,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["getfollowing",{"_index":3168,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["getfollowing(userid",{"_index":3178,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["getheaders",{"_index":2259,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["getimage",{"_index":2411,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/RegisterPage.html":{}}}],["getlastdocumentofpreviouspage",{"_index":1778,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getlastdocumentofpreviouspage(page",{"_index":1810,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["getmappingforcollection",{"_index":2849,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["getmappingforcollection(collectionname",{"_index":2856,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["getname",{"_index":4210,"title":{},"body":{"components/RegisterPage.html":{}}}],["getnewpassword",{"_index":2045,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["getoldpassword",{"_index":2043,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["getone",{"_index":1163,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getone(data",{"_index":1184,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getone(data:any):t",{"_index":3105,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getpaginated",{"_index":1164,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getpaginated(page",{"_index":1193,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getpaginated(page:number",{"_index":3102,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["getpassword",{"_index":3344,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["getpasswordstrength",{"_index":2015,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["getpasswordstrengthtext",{"_index":2016,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["getplayerstate",{"_index":1525,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["getplayingfrom",{"_index":1526,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["getplaylistsongs(songids",{"_index":4133,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["getrecentitemtype(item",{"_index":4446,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["getremainingcount",{"_index":2192,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["getstorage",{"_index":2918,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstorage(app",{"_index":2926,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["getstoredlanguage",{"_index":3233,"title":{},"body":{"injectables/LanguageService.html":{}}}],["getsurname",{"_index":4212,"title":{},"body":{"components/RegisterPage.html":{}}}],["getters",{"_index":2508,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["getting",{"_index":4136,"title":{"index.html":{}},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["gettoken",{"_index":2742,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["gettoken():string",{"_index":3155,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{}}}],["gettopartists",{"_index":3038,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["gettopartists(limit",{"_index":3049,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["gettypecolor(type",{"_index":4184,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["gettypeemoji(type",{"_index":4443,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["gettypeicon(type",{"_index":4182,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["getupdated",{"_index":1165,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getupdated(data",{"_index":1207,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["getupdated(data:any):t",{"_index":3107,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["geturl",{"_index":2303,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["getusername",{"_index":2407,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["getuserplaylists",{"_index":3899,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["getuserplaylists(userid",{"_index":3909,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["github",{"_index":63,"title":{},"body":{"components/AboutPage.html":{}}}],["githuburl",{"_index":66,"title":{},"body":{"components/AboutPage.html":{}}}],["global",{"_index":154,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["globalsearchcomponent",{"_index":584,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["glow",{"_index":391,"title":{},"body":{"components/AboutPage.html":{}}}],["goback",{"_index":2702,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["gotoabout",{"_index":4180,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["gotofullsearch",{"_index":4502,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["gotofullsearchresults",{"_index":4090,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["gotohome",{"_index":26,"title":{},"body":{"components/AboutPage.html":{}}}],["gradient",{"_index":300,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["gradient(135deg",{"_index":302,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["gradient(180deg",{"_index":4629,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["gradient(45deg",{"_index":401,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["gradient(90deg",{"_index":5187,"title":{},"body":{"components/SplashPage.html":{}}}],["gradient(circle",{"_index":5172,"title":{},"body":{"components/SplashPage.html":{}}}],["gradient(from",{"_index":5167,"title":{},"body":{"components/SplashPage.html":{}}}],["gradient(var",{"_index":456,"title":{},"body":{"components/AboutPage.html":{}}}],["gradiente",{"_index":3731,"title":{},"body":{"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["grande",{"_index":2218,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["graph",{"_index":5601,"title":{},"body":{"modules.html":{}}}],["green",{"_index":287,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["grid",{"_index":439,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["grosor",{"_index":2203,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["group",{"_index":2140,"title":{"interfaces/Group.html":{}},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/Group.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["group.model.ts",{"_index":2913,"title":{},"body":{"interfaces/FirebaseGroup.html":{},"coverage.html":{}}}],["group:string",{"_index":4565,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["groupid",{"_index":2949,"title":{},"body":{"interfaces/FirebasePerson.html":{},"interfaces/Person.html":{}}}],["groupid?:string",{"_index":3428,"title":{},"body":{"interfaces/Person.html":{}}}],["guardar",{"_index":4484,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["guardia",{"_index":5682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gustaría",{"_index":217,"title":{},"body":{"components/AboutPage.html":{}}}],["h",{"_index":3632,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["h1",{"_index":2131,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["h2",{"_index":707,"title":{},"body":{"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{}}}],["h3",{"_index":484,"title":{},"body":{"components/AboutPage.html":{}}}],["ha",{"_index":5687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hace",{"_index":2292,"title":{},"body":{"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["hacemos",{"_index":2520,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["hacer",{"_index":2301,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchResult-1.html":{},"injectables/StrapiRepositoryService.html":{}}}],["hacia",{"_index":4671,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["han",{"_index":4992,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["handle",{"_index":466,"title":{},"body":{"components/AboutPage.html":{}}}],["handlekeyboardshortcut",{"_index":664,"title":{},"body":{"components/AppComponent.html":{}}}],["handlekeyboardshortcut(event",{"_index":680,"title":{},"body":{"components/AppComponent.html":{}}}],["handler",{"_index":1384,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["handlesearch",{"_index":4590,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["handlesearch(event",{"_index":4599,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["handlesongend",{"_index":1527,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["hardware",{"_index":179,"title":{},"body":{"components/AboutPage.html":{}}}],["hash",{"_index":3004,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["hasmorepages",{"_index":4588,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["hasta",{"_index":1756,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["hasvalue",{"_index":3445,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hasvalue:boolean",{"_index":3503,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["hay",{"_index":1396,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ITasksService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["header",{"_index":314,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["header.innerhtml",{"_index":4402,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["headers",{"_index":2256,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["headers).pipe",{"_index":2276,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["heartbeat",{"_index":3323,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["hecho",{"_index":269,"title":{},"body":{"components/AboutPage.html":{}}}],["height",{"_index":357,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["height:300px",{"_index":3534,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["help",{"_index":2215,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["hero",{"_index":341,"title":{},"body":{"components/AboutPage.html":{}}}],["herramientas",{"_index":1414,"title":{},"body":{"components/ArtistsPage.html":{}}}],["hidden",{"_index":350,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["hideontransparent",{"_index":5116,"title":{},"body":{"components/SplashPage.html":{}}}],["high",{"_index":540,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["highlight",{"_index":3386,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["hola",{"_index":216,"title":{},"body":{"components/AboutPage.html":{}}}],["home",{"_index":47,"title":{},"body":{"components/AboutPage.html":{},"modules/AppRoutingModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["home'},{'name",{"_index":587,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["home.page",{"_index":3031,"title":{},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{}}}],["home.page.html",{"_index":3960,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["home.page.scss",{"_index":3961,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["homepage",{"_index":586,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{},"properties.html":{}}}],["homepagemodule",{"_index":3025,"title":{"modules/HomePageModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules.html":{},"overview.html":{}}}],["homepageroutingmodule",{"_index":3029,"title":{"modules/HomePageRoutingModule.html":{}},"body":{"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["host",{"_index":2121,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{}}}],["hostlistener",{"_index":685,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{}}}],["hostlistener('document:keydown",{"_index":682,"title":{},"body":{"components/AppComponent.html":{}}}],["hostlistener('dragend",{"_index":2337,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('dragleave",{"_index":2338,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('dragover",{"_index":2341,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('dragstart",{"_index":2343,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlistener('drop",{"_index":2345,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["hostlisteners",{"_index":666,"title":{},"body":{"components/AppComponent.html":{},"directives/DragDropDirective.html":{}}}],["hours",{"_index":3626,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["hours}:${this.padnumber(minutes)}:${this.padnumber(seconds",{"_index":3630,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["hover",{"_index":289,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["hover::after",{"_index":2211,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["hover:not(:disabled",{"_index":2170,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["html",{"_index":529,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["htmlaudioelement",{"_index":1600,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["htmlelement",{"_index":4283,"title":{},"body":{"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["htmlimageelement",{"_index":4803,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["htmlinputelement",{"_index":3470,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["http",{"_index":1888,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["http.service",{"_index":3203,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["http.service.ts",{"_index":1887,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"coverage.html":{}}}],["http.service.ts:20",{"_index":1899,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:39",{"_index":1905,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:49",{"_index":1907,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:59",{"_index":1900,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:70",{"_index":1908,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["http.service.ts:80",{"_index":1904,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["httpclient",{"_index":790,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["httpclient:httpclient",{"_index":3015,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["httpheaders",{"_index":2238,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["httpheaders().set('authorization",{"_index":5319,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["https://github.com/rafamp34",{"_index":96,"title":{},"body":{"components/AboutPage.html":{}}}],["https://github.com/rafamp34.png",{"_index":95,"title":{},"body":{"components/AboutPage.html":{}}}],["https://github.com/rafamp34/proyecto",{"_index":206,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["https://ionicframework.com",{"_index":5606,"title":{},"body":{"properties.html":{}}}],["iartistsrepository",{"_index":1434,"title":{"interfaces/IArtistsRepository.html":{}},"body":{"injectables/ArtistsService.html":{},"interfaces/IArtistsRepository.html":{},"coverage.html":{}}}],["iartistsrepository).searchbyname(name",{"_index":1501,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["iartistsservice",{"_index":1458,"title":{"interfaces/IArtistsService.html":{}},"body":{"injectables/ArtistsService.html":{},"interfaces/IArtistsService.html":{},"coverage.html":{}}}],["iauthentication",{"_index":1748,"title":{"interfaces/IAuthentication.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/IAuthentication.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"coverage.html":{}}}],["iauthmapping",{"_index":1724,"title":{"interfaces/IAuthMapping.html":{}},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ibasemapping",{"_index":1254,"title":{"interfaces/IBaseMapping.html":{}},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["ibaserepository",{"_index":1836,"title":{"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/ISongsRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["ibaseservice",{"_index":1999,"title":{"interfaces/IBaseService.html":{}},"body":{"injectables/BaseService.html":{},"interfaces/IArtistsService.html":{},"interfaces/IBaseService.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsService.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserService.html":{},"coverage.html":{}}}],["icollectionsubscription",{"_index":2233,"title":{"interfaces/ICollectionSubscription.html":{}},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["icon",{"_index":105,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{}}}],["icono",{"_index":2133,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["iconslot",{"_index":3550,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["id",{"_index":924,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ISongsRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["id.tostring",{"_index":3827,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["id:number",{"_index":3000,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["id:string",{"_index":3401,"title":{},"body":{"interfaces/Model.html":{}}}],["identifier",{"_index":5233,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["idiomas",{"_index":151,"title":{},"body":{"components/AboutPage.html":{}}}],["ids",{"_index":935,"title":{},"body":{"interfaces/ArtistData.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["ids.length",{"_index":1470,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["ids.map(id",{"_index":1471,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["if(fileloader.files",{"_index":3518,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["if(obj",{"_index":3506,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["iguales",{"_index":4771,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["image",{"_index":908,"title":{},"body":{"interfaces/Artist.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Playlist.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["image.data.id",{"_index":3925,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["image.id",{"_index":3927,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["image.png",{"_index":4903,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["image/png",{"_index":4926,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["image?.data?.id",{"_index":3924,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["image?.id",{"_index":3926,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["imageattrs",{"_index":1290,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["imageattrs.formats",{"_index":1293,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["imageattrs.url",{"_index":1294,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["imagedata",{"_index":1223,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["imagedata.data",{"_index":3782,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["imagedata.data.attributes",{"_index":1291,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["imagedata.data.id",{"_index":3783,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["imagedata.id",{"_index":3780,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["imagedata.startswith('data",{"_index":4939,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["imagedata.startswith('data:image",{"_index":4943,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["imagedata.substring(0",{"_index":4930,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["imagedata.url",{"_index":3777,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["imagedata?.data?.attributes",{"_index":1289,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["imageerror",{"_index":2482,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["imagefile",{"_index":4901,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["imageid",{"_index":2474,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["imagen",{"_index":1221,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["imagetoupload",{"_index":3683,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["imagetoupload.size",{"_index":3692,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["imagetoupload.type",{"_index":3693,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["img",{"_index":453,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["img.src",{"_index":2356,"title":{},"body":{"directives/DragDropDirective.html":{},"interfaces/SongWithArtists.html":{}}}],["img.width",{"_index":2358,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["imgattrs",{"_index":4981,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["imgattrs.formats?.large?.url",{"_index":4983,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["imgattrs.formats?.medium?.url",{"_index":4984,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["imgattrs.formats?.small?.url",{"_index":4985,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["imgattrs.formats?.thumbnail?.url",{"_index":4986,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["imgattrs.url",{"_index":4982,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["impide",{"_index":5683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["impl/base",{"_index":4868,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["implement",{"_index":5656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implementa",{"_index":1772,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["implementados",{"_index":1800,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{}}}],["implementar",{"_index":1813,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/SearchResult-1.html":{}}}],["implemented",{"_index":5653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["implements",{"_index":11,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ArtistData.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["import",{"_index":189,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["import('./pages/about/about.module').then",{"_index":897,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/artist",{"_index":891,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/artists/artists.module').then(m",{"_index":888,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/home/home.module').then(m",{"_index":866,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/login/login.module').then(m",{"_index":872,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/playlist",{"_index":884,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/playlists/playlists.module').then(m",{"_index":877,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/profile/profile.module').then(m",{"_index":881,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/register/register.module').then(m",{"_index":875,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/songs/songs.module').then(m",{"_index":879,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('./pages/splash/splash.page').then(m",{"_index":869,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["important",{"_index":513,"title":{},"body":{"components/AboutPage.html":{}}}],["importante",{"_index":1753,"title":{},"body":{"injectables/BaseAuthenticationService.html":{}}}],["imports",{"_index":637,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{}}}],["imágenes",{"_index":3436,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["incluir",{"_index":2288,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["incluye",{"_index":1937,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["incluyendo",{"_index":1788,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["incorrectos",{"_index":3357,"title":{},"body":{"components/LoginPage.html":{}}}],["increment",{"_index":1663,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["independientemente",{"_index":5342,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["index",{"_index":20,"title":{"index.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":4266,"title":{},"body":{"interfaces/SearchParams.html":{}}}],["indica",{"_index":3487,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["indicador",{"_index":2154,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["indicator",{"_index":2159,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["inesperado",{"_index":3365,"title":{},"body":{"components/LoginPage.html":{}}}],["infinite",{"_index":367,"title":{},"body":{"components/AboutPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["información",{"_index":1609,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SearchResult-1.html":{}}}],["informativo",{"_index":3754,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["inherited",{"_index":1446,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/PlaylistsService.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/UserService.html":{}}}],["inicia",{"_index":3376,"title":{},"body":{"components/LoginPage.html":{}}}],["iniciado",{"_index":5688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inicial",{"_index":1590,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["inicializa",{"_index":5087,"title":{},"body":{"components/SplashPage.html":{}}}],["inicialización",{"_index":1759,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["inicializados",{"_index":5242,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["inicializar",{"_index":1754,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{}}}],["iniciando",{"_index":3348,"title":{},"body":{"components/LoginPage.html":{}}}],["iniciar",{"_index":1856,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["inicio",{"_index":4720,"title":{},"body":{"interfaces/SongWithArtists.html":{},"miscellaneous/variables.html":{}}}],["initialization",{"_index":5339,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["initializationpromise",{"_index":5283,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["initializeapp",{"_index":1821,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["initializeapp(firebaseconfig",{"_index":1845,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["initializeauthentication",{"_index":5288,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["initializeauthenticationsafely",{"_index":5289,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["initsplashtimer",{"_index":5075,"title":{},"body":{"components/SplashPage.html":{}}}],["inject",{"_index":1456,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["inject(api_url_token",{"_index":1917,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(artists_repository_mapping_token",{"_index":2875,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["inject(artists_repository_token",{"_index":1468,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["inject(auth_mapping_token",{"_index":2770,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_me_api_url_token",{"_index":5313,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_in_api_url_token",{"_index":5311,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_sign_up_api_url_token",{"_index":5312,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inject(auth_token",{"_index":1916,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["inject(baseauthenticationservice",{"_index":5659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(collection_subscription_token",{"_index":3985,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["inject(document",{"_index":4284,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["inject(firebase_collection_token",{"_index":1842,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["inject(firebase_config_token",{"_index":1841,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{}}}],["inject(playlists_repository_mapping_token",{"_index":2873,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["inject(playlists_repository_token",{"_index":3917,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["inject(repository_mapping_token",{"_index":1843,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(repository_token",{"_index":2003,"title":{},"body":{"injectables/BaseService.html":{}}}],["inject(resource_name_token",{"_index":1918,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["inject(router",{"_index":5660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(songs_repository_mapping_token",{"_index":2872,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["inject(songs_repository_token",{"_index":4871,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["inject(strapi_auth_token",{"_index":2255,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(upload_api_url_token",{"_index":3013,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["inject(users_repository_mapping_token",{"_index":2874,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["inject(users_repository_token",{"_index":5407,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":1147,"title":{"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"injectables/ShareService.html":{},"injectables/SongEnrichmentService.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"injectables/ShareService.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":1149,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"injectables/ShareService.html":{},"injectables/SongEnrichmentService.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectiontoken",{"_index":5581,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["injectiontoken('apiurl",{"_index":5617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('artistsapiurl",{"_index":5618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('artistsresourcename",{"_index":5621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authmeapiurl",{"_index":5623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsigninapiurl",{"_index":5624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('authsignupapiurl",{"_index":5625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('backend",{"_index":5627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebase_collection_token",{"_index":5629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('firebase_config_token",{"_index":5630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iartistsrepository",{"_index":5620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iauthentication",{"_index":5626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iplaylistsrepository",{"_index":5633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('isongsrepository",{"_index":5640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('istrapiauthentication",{"_index":5642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('iuserrepository",{"_index":5646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('playlistsapiurl",{"_index":5631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('playlistsresourcename",{"_index":5634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('resourcename",{"_index":5637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('songsapiurl",{"_index":5638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('songsresourcename",{"_index":5641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('uploadapiurl",{"_index":5643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('usersapiurl",{"_index":5644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('usersresourcename",{"_index":5647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iartistsrepositorymapping",{"_index":5619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iauthmapping",{"_index":5622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('ibaserepositorymapping",{"_index":5635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iplaylistsrepositorymapping",{"_index":5632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('isongsrepositorymapping",{"_index":5639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('iusersrepositorymapping",{"_index":5645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken>('repository_token",{"_index":5636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":379,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["inmediatamente",{"_index":3310,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["inner",{"_index":712,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistModalComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["input",{"_index":925,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["inputs",{"_index":966,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["inset",{"_index":1004,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["instanceof",{"_index":5026,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["intefaces/base",{"_index":1255,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["integración",{"_index":4694,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["integrarse",{"_index":3438,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["inteligente",{"_index":145,"title":{},"body":{"components/AboutPage.html":{}}}],["intenta",{"_index":4459,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["interface",{"_index":901,"title":{"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"interfaces/FirebaseGroup.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}},"body":{"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"injectables/AudioPlayerService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"interfaces/FirebaseGroup.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["interfaces",{"_index":902,"title":{},"body":{"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"interfaces/FirebaseGroup.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"overview.html":{}}}],["interfaces/artists",{"_index":1459,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["interfaces/auth",{"_index":1750,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["interfaces/authentication.interface",{"_index":1749,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{}}}],["interfaces/base",{"_index":2000,"title":{},"body":{"injectables/BaseService.html":{}}}],["interfaces/collection",{"_index":2866,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["interfaces/playlists",{"_index":3914,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["interfaces/songs",{"_index":4864,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["interfaces/strapi",{"_index":2996,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["interfaces/user",{"_index":5405,"title":{},"body":{"injectables/UserService.html":{}}}],["interfaz",{"_index":159,"title":{},"body":{"components/AboutPage.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["internet",{"_index":3360,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["interno",{"_index":5170,"title":{},"body":{"components/SplashPage.html":{}}}],["interrogación",{"_index":3420,"title":{},"body":{"interfaces/Person.html":{}}}],["interval",{"_index":1603,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["interval(1000).pipe",{"_index":1632,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["introducir",{"_index":3379,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["inténtalo",{"_index":3366,"title":{},"body":{"components/LoginPage.html":{}}}],["invalid",{"_index":3714,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["invalid.ion",{"_index":2144,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["inválido",{"_index":5336,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["inválidos",{"_index":1192,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/RegisterPage.html":{},"injectables/SongsMappingStrapi.html":{}}}],["inyectar",{"_index":4285,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["ion",{"_index":309,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["ionic",{"_index":99,"title":{},"body":{"components/AboutPage.html":{},"properties.html":{}}}],["ionic/angular",{"_index":644,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"modules/HomePageModule.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/PlaylistDetailPageModule.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"modules/SongsPageModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":643,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"components/SplashPage.html":{}}}],["ionicmodule.forroot",{"_index":815,"title":{},"body":{"modules/AppModule.html":{}}}],["ionicons",{"_index":5559,"title":{},"body":{"dependencies.html":{}}}],["ionicroutestrategy",{"_index":746,"title":{},"body":{"modules/AppModule.html":{}}}],["iplaylistsrepository",{"_index":3129,"title":{"interfaces/IPlaylistsRepository.html":{}},"body":{"interfaces/IPlaylistsRepository.html":{},"injectables/PlaylistsService.html":{},"coverage.html":{}}}],["iplaylistsservice",{"_index":3131,"title":{"interfaces/IPlaylistsService.html":{}},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{},"coverage.html":{}}}],["ir",{"_index":4089,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["isauthenticated",{"_index":4109,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["iscurrentlyplaying(song",{"_index":4744,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["iscurrentsong(song",{"_index":4746,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["iscurrentsongplaying",{"_index":3547,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["isdisabled",{"_index":3446,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["isdisabled:boolean",{"_index":3502,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["isdragging",{"_index":2310,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["isenrichedsong",{"_index":2548,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["isenrichedsong(song",{"_index":2556,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["isfollowing",{"_index":2614,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["ishovered",{"_index":958,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["isliked",{"_index":3262,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["islikedbycurrentuser",{"_index":3952,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["isloading",{"_index":1592,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/PlayerState.html":{}}}],["isloggedin",{"_index":5671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ismobile",{"_index":3647,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["isnan(audioid",{"_index":5035,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["isnan(id",{"_index":5022,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["isnan(number(imagedata",{"_index":3785,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["isnan(number(imagedata.url",{"_index":3778,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["isnan(number(song.duration",{"_index":3620,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["isnan(numid",{"_index":5019,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["isnan(parsed",{"_index":1312,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["isnan(parsedid",{"_index":4936,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["isnan(seconds",{"_index":1698,"title":{},"body":{"injectables/AudioPlayerService.html":{},"pipes/DurationPipe.html":{},"interfaces/PlayerState.html":{}}}],["isnavigating",{"_index":5071,"title":{},"body":{"components/SplashPage.html":{}}}],["isongsrepository",{"_index":3142,"title":{"interfaces/ISongsRepository.html":{}},"body":{"interfaces/ISongsRepository.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"coverage.html":{}}}],["isongsservice",{"_index":3150,"title":{"interfaces/ISongsService.html":{}},"body":{"interfaces/ISongsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"coverage.html":{}}}],["isowner",{"_index":4695,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["ispaused",{"_index":1586,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["isplaying",{"_index":959,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["isready",{"_index":5663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["issearch",{"_index":4824,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["issearchactive",{"_index":4276,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["issearching",{"_index":3967,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["isshuffleactive",{"_index":4758,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["isshuffled",{"_index":1597,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["issong(data",{"_index":4172,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["istrapiauthentication",{"_index":2241,"title":{"interfaces/IStrapiAuthentication.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["isupdating",{"_index":2741,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["isupdatinguser",{"_index":5389,"title":{},"body":{"injectables/UserService.html":{}}}],["isweb",{"_index":3841,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["itasksservice",{"_index":3156,"title":{"interfaces/ITasksService.html":{}},"body":{"interfaces/ITasksService.html":{},"coverage.html":{}}}],["item",{"_index":473,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"injectables/SongsMappingStrapi.html":{}}}],["item.attributes",{"_index":1281,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["item.data",{"_index":4450,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item.data.artistnames",{"_index":4451,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item.data.author",{"_index":4454,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item.data.duration",{"_index":4453,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item.data.name",{"_index":4452,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item.id",{"_index":1972,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/SongsMappingStrapi.html":{}}}],["item.id?.tostring",{"_index":1279,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["item.innerhtml",{"_index":4436,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item.originaltype",{"_index":4449,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item.type",{"_index":4455,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["item:focus",{"_index":538,"title":{},"body":{"components/AboutPage.html":{}}}],["item:last",{"_index":2545,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["itemdropped",{"_index":2318,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["items",{"_index":434,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/PaginatedRaw.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{}}}],["items.map(item",{"_index":1274,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["iteration",{"_index":547,"title":{},"body":{"components/AboutPage.html":{}}}],["iusermapping",{"_index":3160,"title":{"interfaces/IUserMapping.html":{}},"body":{"interfaces/IUserMapping.html":{},"coverage.html":{}}}],["iuserrepository",{"_index":3164,"title":{"interfaces/IUserRepository.html":{}},"body":{"interfaces/IUserRepository.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["iuserservice",{"_index":3185,"title":{"interfaces/IUserService.html":{}},"body":{"interfaces/IUserService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["j",{"_index":1685,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["java",{"_index":102,"title":{},"body":{"components/AboutPage.html":{}}}],["javascript",{"_index":169,"title":{},"body":{"components/AboutPage.html":{}}}],["js",{"_index":5563,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":814,"title":{},"body":{"modules/AppModule.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"components/PlaylistModalComponent.html":{}}}],["json.parse(datastr",{"_index":2366,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["json.parse(saved",{"_index":4498,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["json.stringify(curr",{"_index":4000,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["json.stringify(data",{"_index":2352,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["json.stringify(data.image",{"_index":3713,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["json.stringify(prev",{"_index":3999,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["json.stringify(this._items",{"_index":1979,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["json.stringify(this.recentsearches",{"_index":4494,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["jsonserverrepositoryservice",{"_index":3188,"title":{"injectables/JsonServerRepositoryService.html":{}},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"coverage.html":{}}}],["justify",{"_index":423,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["jwt",{"_index":5231,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["jwt_token",{"_index":5284,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["k",{"_index":699,"title":{},"body":{"components/AppComponent.html":{},"interfaces/EnrichedSong-1.html":{}}}],["keeping",{"_index":5419,"title":{},"body":{"injectables/UserService.html":{}}}],["key",{"_index":3116,"title":{},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{}}}],["keyboardevent",{"_index":675,"title":{},"body":{"components/AppComponent.html":{}}}],["keyframes",{"_index":492,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["kotlin",{"_index":101,"title":{},"body":{"components/AboutPage.html":{}}}],["k}_like=${v",{"_index":3213,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["l",{"_index":1857,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["la",{"_index":75,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":2157,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["lang",{"_index":679,"title":{},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["lang_key",{"_index":3231,"title":{},"body":{"injectables/LanguageService.html":{}}}],["language",{"_index":146,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"index.html":{}}}],["languageservice",{"_index":669,"title":{"injectables/LanguageService.html":{}},"body":{"components/AppComponent.html":{},"injectables/LanguageService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["lanzar",{"_index":4921,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["large",{"_index":917,"title":{"interfaces/Large.html":{}},"body":{"interfaces/Artist.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"interfaces/Medium.html":{},"interfaces/Playlist.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["large:string",{"_index":3424,"title":{},"body":{"interfaces/Person.html":{}}}],["las",{"_index":1232,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["last",{"_index":718,"title":{},"body":{"components/AppComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["lastdoc",{"_index":1858,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["lastvaluefrom",{"_index":1059,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-2.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["lastvaluefrom(servicecall",{"_index":3316,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["lastvaluefrom(this.artistsservice.getbyids(song.artists_ids",{"_index":2732,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["lastvaluefrom(this.httpclient.post",{"_index":5346,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["lastvaluefrom(this.mediaservice.upload(blob",{"_index":1114,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{}}}],["lastvaluefrom(this.mediaservice.upload(imagetoupload",{"_index":3694,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["lastvaluefrom(this.songsservice.getbyid(id",{"_index":1082,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["lastvaluefrom(this.translateservice.get('common.loading",{"_index":2449,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["lastvaluefrom(this.translateservice.get(messagekey",{"_index":2513,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["lastvaluefrom(this.usersvc.updateprofile(this.user.id",{"_index":2492,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["lbumes",{"_index":144,"title":{},"body":{"components/AboutPage.html":{}}}],["left",{"_index":354,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["legend",{"_index":552,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"modules/HomePageModule.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"modules/PlaylistDetailPageModule.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"modules/SongsPageModule.html":{},"components/SplashPage.html":{},"overview.html":{}}}],["letter",{"_index":2167,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["lifecycle",{"_index":201,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["light",{"_index":705,"title":{},"body":{"components/AppComponent.html":{}}}],["like/unlike",{"_index":3278,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["likebuttoncomponent",{"_index":588,"title":{"components/LikeButtonComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["liked",{"_index":1613,"title":{},"body":{"injectables/AudioPlayerService.html":{},"components/LikeButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["liked_songs",{"_index":4574,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["likedsongs",{"_index":3995,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["likedsongs.has(song.id",{"_index":3996,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["likes",{"_index":4039,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongsMappingStrapi.html":{}}}],["likes_count",{"_index":3588,"title":{},"body":{"interfaces/Playlist.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{}}}],["likescount",{"_index":5002,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["limit",{"_index":1831,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/IArtistsRepository.html":{}}}],["limit(pagesize",{"_index":1855,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["limpia",{"_index":3465,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["limpiar",{"_index":2905,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["line",{"_index":198,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["linear",{"_index":301,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["link",{"_index":4257,"title":{},"body":{"components/RegisterPage.html":{}}}],["list",{"_index":120,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["lista",{"_index":3059,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["listas",{"_index":127,"title":{},"body":{"components/AboutPage.html":{}}}],["listeners",{"_index":909,"title":{},"body":{"interfaces/Artist.html":{},"components/ArtistGridCardComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"interfaces/IArtistsRepository.html":{}}}],["listiners",{"_index":1069,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/FirebaseArtist.html":{}}}],["literal",{"_index":913,"title":{},"body":{"interfaces/Artist.html":{},"injectables/AudioPlayerService.html":{},"interfaces/Person.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"injectables/ShareService.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Song.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["llamadas",{"_index":4279,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["llamar",{"_index":5098,"title":{},"body":{"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["lo",{"_index":2478,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["load",{"_index":4323,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["loadartistdata(artistid",{"_index":2636,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["loadartists",{"_index":1318,"title":{},"body":{"components/ArtistsPage.html":{},"components/SongGridCardComponent.html":{}}}],["loadartistsongs(songids",{"_index":2645,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["loadchildren",{"_index":865,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadcomponent",{"_index":868,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loaded",{"_index":2634,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["loader",{"_index":794,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["loadfollowstatus(artistid",{"_index":2629,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["loading",{"_index":1359,"title":{},"body":{"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{}}}],["loading.dismiss",{"_index":2085,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["loading.present",{"_index":2061,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["loadingcontroller",{"_index":2026,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["loadingctrl",{"_index":2025,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["loadingprogress",{"_index":5188,"title":{},"body":{"components/SplashPage.html":{}}}],["loadmore",{"_index":4591,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["loadmore(event",{"_index":4601,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["loadplaylists",{"_index":3842,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["loadrecentsearches",{"_index":4495,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["loadrelatedartists",{"_index":2661,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["loadselectedsongs",{"_index":1022,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["loadselectedsongs(songids",{"_index":1039,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["loadsong",{"_index":1528,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["loadsong(song",{"_index":1554,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["loadsongs",{"_index":4592,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["loadsongs(issearch",{"_index":4823,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["loadsongs(page",{"_index":4603,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["loadsongs(playlist",{"_index":4760,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["loadusercontent",{"_index":4156,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["local",{"_index":1932,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/SearchResult-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["localstorage",{"_index":1935,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["localstorage.getitem('recentsearches",{"_index":4497,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["localstorage.getitem(this.lang_key",{"_index":3254,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.getitem(this.token_key",{"_index":5321,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.removeitem('recentsearches",{"_index":4501,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["localstorage.removeitem(this.token_key",{"_index":5344,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["localstorage.setitem('recentsearches",{"_index":4493,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["localstorage.setitem(this.lang_key",{"_index":3256,"title":{},"body":{"injectables/LanguageService.html":{}}}],["localstorage.setitem(this.resource",{"_index":1978,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["localstorage.setitem(this.token_key",{"_index":5360,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["location",{"_index":2605,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["logged",{"_index":2064,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["login",{"_index":871,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":590,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["login.page",{"_index":3398,"title":{},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{}}}],["login.page.html",{"_index":3329,"title":{},"body":{"components/LoginPage.html":{}}}],["login.page.scss",{"_index":3328,"title":{},"body":{"components/LoginPage.html":{}}}],["loginform",{"_index":3330,"title":{},"body":{"components/LoginPage.html":{}}}],["loginpage",{"_index":589,"title":{"components/LoginPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["loginpagemodule",{"_index":3392,"title":{"modules/LoginPageModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules.html":{},"overview.html":{}}}],["loginpageroutingmodule",{"_index":3396,"title":{"modules/LoginPageRoutingModule.html":{}},"body":{"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["logo",{"_index":165,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/SplashPage.html":{}}}],["logo/lottie",{"_index":5159,"title":{},"body":{"components/SplashPage.html":{}}}],["logout",{"_index":665,"title":{},"body":{"components/AppComponent.html":{}}}],["long",{"_index":3613,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["loop",{"_index":5107,"title":{},"body":{"components/SplashPage.html":{}}}],["los",{"_index":273,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["lottie",{"_index":749,"title":{},"body":{"modules/AppModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["lottie_options",{"_index":750,"title":{},"body":{"modules/AppModule.html":{}}}],["lottiecomponent",{"_index":5067,"title":{},"body":{"components/SplashPage.html":{}}}],["lottieoptions",{"_index":5072,"title":{},"body":{"components/SplashPage.html":{}}}],["lowerquery",{"_index":4336,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["ltimo",{"_index":722,"title":{},"body":{"components/AppComponent.html":{},"injectables/BaseRepositoryFirebaseService.html":{}}}],["lugar",{"_index":2729,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["lyrics",{"_index":4582,"title":{},"body":{"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{}}}],["línea",{"_index":714,"title":{},"body":{"components/AppComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["m",{"_index":896,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/EnrichedSong-1.html":{}}}],["m.aboutpagemodule",{"_index":898,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.artistprofilepagemodule",{"_index":894,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.artistspagemodule",{"_index":889,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.homepagemodule",{"_index":867,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.loginpagemodule",{"_index":873,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.playlistdetailpagemodule",{"_index":887,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.playlistspagemodule",{"_index":878,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.profilepagemodule",{"_index":882,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.registerpagemodule",{"_index":876,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.songspagemodule",{"_index":880,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.splashpage",{"_index":870,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["mailto:${email}?subject=${encodeuricomponent(subject)}&body=${encodeuricomponent(body",{"_index":221,"title":{},"body":{"components/AboutPage.html":{}}}],["management",{"_index":5592,"title":{},"body":{"index.html":{}}}],["maneja",{"_index":1156,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["manejando",{"_index":1236,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["manejar",{"_index":2472,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["maneje",{"_index":4922,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["manejo",{"_index":3680,"title":{},"body":{"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mantener",{"_index":2111,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/UserService.html":{}}}],["mantiene",{"_index":2540,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{}}}],["manualmente",{"_index":4730,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["map",{"_index":1465,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Small.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["map(([k",{"_index":3211,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["map(([songs",{"_index":3994,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["map((artist",{"_index":4969,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["map((p",{"_index":4976,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["map((result",{"_index":4875,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["map((s",{"_index":3811,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["map((u",{"_index":3822,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["map((user",{"_index":4999,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["map(artists",{"_index":1474,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["map(doc",{"_index":1872,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(docref",{"_index":1877,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(entity",{"_index":1883,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(getresponse",{"_index":2305,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["map(id",{"_index":5016,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["map(isauthenticated",{"_index":5680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(isloggedin",{"_index":5670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["map(lastdoc",{"_index":1853,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(likedsongs",{"_index":4042,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["map(paginated",{"_index":1488,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["map(res",{"_index":2277,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["map(response",{"_index":4033,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["map(snapshot",{"_index":1863,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["map(song",{"_index":4884,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["map(songs",{"_index":4766,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["map(state",{"_index":4755,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["map(url",{"_index":2945,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["map(user",{"_index":2844,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["map(userdoc",{"_index":2810,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["mapartistsfollow",{"_index":1166,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["mapartistsfollow(artistsfollowdata",{"_index":1211,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["mapea",{"_index":1174,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mapeada",{"_index":1903,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mapeadas",{"_index":3763,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mapeado",{"_index":1180,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["mapeados",{"_index":1198,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["mapear",{"_index":3805,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mapeo",{"_index":1154,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mapimage",{"_index":1167,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["mapimage(imagedata",{"_index":1219,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["mapimagefield",{"_index":3900,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["mapimagefield(image",{"_index":3911,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["mapped",{"_index":5331,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mappeddata",{"_index":2295,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["mappeddata.album",{"_index":5010,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.artists_ids",{"_index":5021,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.audiourl",{"_index":5032,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.author",{"_index":3790,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["mappeddata.data",{"_index":2299,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["mappeddata.duration",{"_index":3791,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.image",{"_index":3776,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.likes_count",{"_index":3796,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.lyrics",{"_index":5012,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.name",{"_index":3788,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.playlistid_ids",{"_index":5024,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mappeddata.song_ids",{"_index":3792,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["mappeddata.users_ids",{"_index":3794,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["mappeddata.users_like",{"_index":5015,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mappedpayload",{"_index":5355,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mappedplaylist",{"_index":3826,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["mappedresult",{"_index":2291,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["mappedsong",{"_index":5004,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mappeduser",{"_index":5265,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["mappeduser.email",{"_index":5328,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mappeduser.id",{"_index":5327,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mapping",{"_index":1151,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mapping.getone",{"_index":2892,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["mapping.interface",{"_index":1256,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["mapping.interface.ts",{"_index":3069,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"coverage.html":{}}}],["mapping.interface.ts:10",{"_index":3071,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{}}}],["mapping.interface.ts:11",{"_index":3099,"title":{},"body":{"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{}}}],["mapping.interface.ts:12",{"_index":3100,"title":{},"body":{"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{}}}],["mapping.interface.ts:13",{"_index":3101,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["mapping.interface.ts:6",{"_index":3075,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IUserMapping.html":{}}}],["mapping.interface.ts:7",{"_index":3080,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{}}}],["mapping.interface.ts:8",{"_index":3073,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{}}}],["mapping.interface.ts:9",{"_index":3078,"title":{},"body":{"interfaces/IAuthMapping.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{}}}],["mapping.service",{"_index":5310,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mapping.service.ts",{"_index":5220,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["mapping.service.ts:108",{"_index":5227,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:133",{"_index":5221,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:67",{"_index":5224,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:74",{"_index":5228,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapping.service.ts:82",{"_index":5223,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{}}}],["mapsongsids",{"_index":1168,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["mapsongsids(songsdata",{"_index":1227,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["marcar",{"_index":5341,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["margin",{"_index":374,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["margin:0",{"_index":3536,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["matching",{"_index":620,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.ceil(this._items.length",{"_index":1967,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["math.ceil(totalitems",{"_index":1277,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["math.floor((totalseconds",{"_index":3629,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["math.floor(math.random",{"_index":1686,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["math.floor(seconds",{"_index":1701,"title":{},"body":{"injectables/AudioPlayerService.html":{},"pipes/DurationPipe.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["math.floor(totalseconds",{"_index":3627,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["math.max(0",{"_index":1658,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["math.min",{"_index":1969,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["math.min(1",{"_index":1659,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["math.random().tostring(36).substr(2",{"_index":3279,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["max",{"_index":372,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["maxartists",{"_index":937,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["maxwait",{"_index":4360,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["mayúscula",{"_index":4251,"title":{},"body":{"components/RegisterPage.html":{}}}],["me():observable",{"_index":3096,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["me(response",{"_index":3070,"title":{},"body":{"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["me(response:any):user",{"_index":3086,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["measurementid",{"_index":848,"title":{},"body":{"modules/AppModule.html":{}}}],["media",{"_index":503,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["media.service",{"_index":1057,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["media.service.ts",{"_index":1762,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["media.service.ts:109",{"_index":5370,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["media.service.ts:18",{"_index":2916,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["media.service.ts:4",{"_index":1765,"title":{},"body":{"classes/BaseMediaService.html":{}}}],["media.service.ts:99",{"_index":5369,"title":{},"body":{"classes/StrapiMediaService.html":{}}}],["mediaservice",{"_index":1031,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["mediaservicefactory",{"_index":753,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["medium",{"_index":717,"title":{"interfaces/Medium.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Artist.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"interfaces/Medium.html":{},"interfaces/Playlist.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["medium:string",{"_index":3425,"title":{},"body":{"interfaces/Person.html":{}}}],["meet",{"_index":5114,"title":{},"body":{"components/SplashPage.html":{}}}],["mejor",{"_index":226,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["mejorado",{"_index":1588,"title":{},"body":{"injectables/AudioPlayerService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["mejorar",{"_index":4473,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["menos",{"_index":1403,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"components/EditProfileModalComponent.html":{},"components/RegisterPage.html":{}}}],["mensaje",{"_index":268,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["mensajes",{"_index":2149,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["menu",{"_index":704,"title":{},"body":{"components/AppComponent.html":{}}}],["mergemap",{"_index":1835,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["mergemap(q",{"_index":1861,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["message",{"_index":1380,"title":{},"body":{"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["messagekey",{"_index":2404,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["messagingsenderid",{"_index":844,"title":{},"body":{"modules/AppModule.html":{}}}],["meta",{"_index":2247,"title":{"interfaces/Meta.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUserResponse.html":{},"coverage.html":{}}}],["metadata",{"_index":13,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["metadata)).pipe",{"_index":2942,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["method",{"_index":202,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{},"injectables/ShareService.html":{}}}],["methods",{"_index":25,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"components/RegisterPage.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["meurl",{"_index":5292,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["meurlwithpopulate",{"_index":5322,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["mezclada",{"_index":4726,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["mezcladas",{"_index":4735,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["mezclar",{"_index":4729,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["mezclarlo",{"_index":2496,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["middleware",{"_index":5557,"title":{},"body":{"dependencies.html":{}}}],["mime",{"_index":2420,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["min",{"_index":710,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["minmax(140px",{"_index":471,"title":{},"body":{"components/AboutPage.html":{}}}],["minmax(250px",{"_index":1401,"title":{},"body":{"components/ArtistsPage.html":{}}}],["minmax(280px",{"_index":467,"title":{},"body":{"components/AboutPage.html":{}}}],["minmax(350px",{"_index":443,"title":{},"body":{"components/AboutPage.html":{}}}],["mins",{"_index":1700,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{}}}],["mins}:${secs.tostring().padstart(2",{"_index":1704,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["minutes",{"_index":2381,"title":{},"body":{"pipes/DurationPipe.html":{},"pipes/PlaylistDurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["minutes.tostring().padstart(2",{"_index":2384,"title":{},"body":{"pipes/DurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["minutes}:${this.padnumber(seconds",{"_index":3631,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["minúscula",{"_index":4252,"title":{},"body":{"components/RegisterPage.html":{}}}],["miscellaneous",{"_index":5571,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["misma",{"_index":3574,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["missing",{"_index":5261,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["mm:ss",{"_index":4956,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["mockup",{"_index":1939,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["mockuplist",{"_index":1965,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["modal",{"_index":1014,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["modal'},{'name",{"_index":564,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["modal.auto",{"_index":3541,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["modal.component",{"_index":1062,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/SharedModule.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["modal.component.html",{"_index":1016,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["modal.component.scss",{"_index":1015,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["modal.component.ts",{"_index":1013,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["modal.component.ts:108",{"_index":2038,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:110",{"_index":4606,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:114",{"_index":4596,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:122",{"_index":2031,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:126",{"_index":2044,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:130",{"_index":2046,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:134",{"_index":1038,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:138",{"_index":2036,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:145",{"_index":1036,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:15",{"_index":3655,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:16",{"_index":2041,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:166",{"_index":2034,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:17",{"_index":2042,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:172",{"_index":3650,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:18",{"_index":1048,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:186",{"_index":2401,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1049,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:197",{"_index":3652,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:20",{"_index":1047,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:201",{"_index":2408,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:205",{"_index":2410,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:209",{"_index":2412,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1051,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:213",{"_index":2406,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:22",{"_index":4595,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:223",{"_index":2403,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:23",{"_index":1035,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:233",{"_index":2398,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:24",{"_index":4607,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:25",{"_index":4609,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:27",{"_index":4612,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:28",{"_index":4610,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:29",{"_index":4611,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:30",{"_index":2397,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:31",{"_index":2396,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:37",{"_index":1033,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:38",{"_index":4604,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:42",{"_index":4598,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:44",{"_index":2040,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:50",{"_index":2399,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:53",{"_index":1040,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:56",{"_index":2035,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["modal.component.ts:60",{"_index":1043,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:68",{"_index":3653,"title":{},"body":{"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:69",{"_index":2400,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.component.ts:79",{"_index":3654,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["modal.component.ts:87",{"_index":1045,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:93",{"_index":4600,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component.ts:98",{"_index":1042,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["modal.component.ts:99",{"_index":4602,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["modal.component/artist",{"_index":1012,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"coverage.html":{}}}],["modal.ondiddismiss",{"_index":2506,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["modal.ondiddismiss().then((result",{"_index":1088,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["modal.ondiddismiss().then(async",{"_index":4773,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["modal.present",{"_index":1100,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["modal/change",{"_index":2011,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modal/edit",{"_index":2390,"title":{},"body":{"components/EditProfileModalComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["modal/playlist",{"_index":3646,"title":{},"body":{"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["modal/song",{"_index":1061,"title":{},"body":{"components/ArtistModalComponent.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["modalcontroller",{"_index":1030,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["modalctrl",{"_index":1029,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["modals",{"_index":4560,"title":{},"body":{"modules/SharedModule.html":{}}}],["mode",{"_index":514,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["model",{"_index":905,"title":{"interfaces/Model.html":{}},"body":{"interfaces/Artist.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/Group.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"interfaces/Playlist.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Song.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Task.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["modelo",{"_index":1158,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["models/artist.model",{"_index":1257,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{}}}],["models/auth.model",{"_index":2760,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["models/base.model",{"_index":1840,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/enriched",{"_index":1606,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["models/paginated.model",{"_index":1258,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/IUserMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["models/person.model",{"_index":3081,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["models/playlist.model",{"_index":2871,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{}}}],["models/song.model",{"_index":1605,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/PlayerState.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["models/task.model",{"_index":3159,"title":{},"body":{"interfaces/ITasksService.html":{}}}],["models/user.model",{"_index":1751,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["modeltype",{"_index":5582,"title":{},"body":{"miscellaneous/functions.html":{}}}],["modern",{"_index":313,"title":{},"body":{"components/AboutPage.html":{}}}],["modernas",{"_index":90,"title":{},"body":{"components/AboutPage.html":{}}}],["moderno",{"_index":5152,"title":{},"body":{"components/SplashPage.html":{}}}],["modes",{"_index":1690,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["modes.indexof(state.repeatmode",{"_index":1691,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["modes.length",{"_index":1694,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["modes[(currentindex",{"_index":1693,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["modificar",{"_index":5420,"title":{},"body":{"injectables/UserService.html":{}}}],["modified",{"_index":2231,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["modo",{"_index":3702,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["module",{"_index":621,"title":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"overview.html":{}}}],["modules",{"_index":623,"title":{"modules.html":{}},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["moncayo",{"_index":80,"title":{},"body":{"components/AboutPage.html":{}}}],["more",{"_index":1389,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["mostrar",{"_index":3273,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["motion",{"_index":543,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["mouseenter",{"_index":4440,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["mouseleave",{"_index":4441,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["movedsong",{"_index":4856,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["multi",{"_index":3500,"title":{},"body":{"components/PictureSelectableComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["multiidioma",{"_index":148,"title":{},"body":{"components/AboutPage.html":{}}}],["mundo",{"_index":240,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["music",{"_index":223,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"index.html":{}}}],["musical",{"_index":106,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["musicales",{"_index":136,"title":{},"body":{"components/AboutPage.html":{}}}],["muted",{"_index":296,"title":{},"body":{"components/AboutPage.html":{}}}],["más",{"_index":1655,"title":{},"body":{"injectables/AudioPlayerService.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/Person.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{}}}],["método",{"_index":1477,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/ISongsRepository.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/UserService.html":{}}}],["métodos",{"_index":1638,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ITasksService.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["mínima",{"_index":3741,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["móviles",{"_index":93,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/SplashPage.html":{}}}],["múltiples",{"_index":150,"title":{},"body":{"components/AboutPage.html":{},"components/LikeButtonComponent.html":{},"interfaces/SearchResult-1.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["música",{"_index":111,"title":{},"body":{"components/AboutPage.html":{},"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["n",{"_index":2424,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["nada",{"_index":4709,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["name.tolowercase",{"_index":1514,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["name.tolowercase().trim",{"_index":1497,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["name.trim",{"_index":1487,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["name.trim().length",{"_index":1481,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["name:string",{"_index":3023,"title":{},"body":{"interfaces/Group.html":{},"interfaces/Person.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["names",{"_index":824,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["names'},{'name",{"_index":577,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["names.component",{"_index":4557,"title":{},"body":{"modules/SharedModule.html":{}}}],["names.component.html",{"_index":930,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["names.component.scss",{"_index":931,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts",{"_index":923,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"coverage.html":{}}}],["names.component.ts:17",{"_index":2181,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:18",{"_index":2180,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:19",{"_index":2182,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:20",{"_index":2184,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:21",{"_index":2183,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:23",{"_index":2185,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:25",{"_index":2179,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:32",{"_index":2187,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:36",{"_index":2186,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:43",{"_index":2191,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:50",{"_index":2193,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["names.component.ts:57",{"_index":2189,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["native",{"_index":3539,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["navega",{"_index":45,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["navegación",{"_index":1504,"title":{},"body":{"injectables/ArtistsService.html":{},"components/SplashPage.html":{}}}],["navegar",{"_index":5138,"title":{},"body":{"components/SplashPage.html":{}}}],["navigatetohome",{"_index":5076,"title":{},"body":{"components/SplashPage.html":{}}}],["navigationsubscription",{"_index":5073,"title":{},"body":{"components/SplashPage.html":{}}}],["navigator.clipboard.writetext(sharedata.url",{"_index":231,"title":{},"body":{"components/AboutPage.html":{}}}],["navigator.share",{"_index":228,"title":{},"body":{"components/AboutPage.html":{},"injectables/ShareService.html":{}}}],["navigator.share(sharedata",{"_index":230,"title":{},"body":{"components/AboutPage.html":{}}}],["necesaria",{"_index":4486,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["necesarios",{"_index":5444,"title":{},"body":{"injectables/UserService.html":{}}}],["necesita",{"_index":2574,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"components/PlaylistModalComponent.html":{}}}],["necesitamos",{"_index":2495,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["necesitarías",{"_index":5025,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["necesitas",{"_index":1490,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["negro",{"_index":1416,"title":{},"body":{"components/ArtistsPage.html":{}}}],["nete",{"_index":4243,"title":{},"body":{"components/RegisterPage.html":{}}}],["new",{"_index":811,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newid",{"_index":1943,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["newindex",{"_index":1677,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["newpassword",{"_index":2021,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["newplaylist",{"_index":3870,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["newqueue",{"_index":1675,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["newreleases",{"_index":3977,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["newsong",{"_index":1093,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["newsong.id",{"_index":1096,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["newvolume",{"_index":1667,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["next",{"_index":197,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/PaginatedRaw.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["nextindex",{"_index":1680,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["nextmode",{"_index":1692,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["ng",{"_index":5161,"title":{},"body":{"components/SplashPage.html":{}}}],["ng_value_accessor",{"_index":3499,"title":{},"body":{"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":638,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["ngonchanges",{"_index":944,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["ngondestroy",{"_index":2626,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["ngoninit",{"_index":27,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{}}}],["ngx",{"_index":646,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"modules/PlaylistDetailPageModule.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"modules/SongsPageModule.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["nico",{"_index":1955,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"components/LikeButtonComponent.html":{}}}],["noauthguard",{"_index":859,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":182,"title":{},"body":{"components/AboutPage.html":{}}}],["nodejs",{"_index":183,"title":{},"body":{"components/AboutPage.html":{}}}],["nombre",{"_index":1480,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["nombres",{"_index":2725,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["none",{"_index":429,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["normal",{"_index":2461,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["note",{"_index":4183,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["notes",{"_index":107,"title":{},"body":{"components/AboutPage.html":{}}}],["nowrap",{"_index":1009,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["nth",{"_index":5195,"title":{},"body":{"components/SplashPage.html":{}}}],["nuestra",{"_index":4244,"title":{},"body":{"components/RegisterPage.html":{}}}],["nueva",{"_index":44,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["nuevo",{"_index":326,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["nuevos",{"_index":4832,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["null",{"_index":1079,"title":{},"body":{"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IStrapiAuthentication.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["nulos",{"_index":1238,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["num",{"_index":2705,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"pipes/PlaylistDurationPipe.html":{}}}],["num.tostring",{"_index":2710,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["num.tostring().padstart(2",{"_index":3633,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["number",{"_index":912,"title":{},"body":{"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/FirebaseArtist.html":{},"interfaces/FirebasePerson.html":{},"interfaces/Formats.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/IUserMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"pipes/PlaylistDurationPipe.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["number(data.audiourl",{"_index":5034,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["number(id",{"_index":3771,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["number(imagedata",{"_index":3786,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["number(imagedata.data.id",{"_index":3784,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["number(imagedata.id",{"_index":3781,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["number(imagedata.url",{"_index":3779,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["number(song.duration",{"_index":3621,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["number(uploadresult[0",{"_index":2475,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["numid",{"_index":5017,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["numérico",{"_index":2473,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["numéricos",{"_index":5013,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["número",{"_index":1199,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["o",{"_index":1190,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["obj",{"_index":3485,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["object",{"_index":1002,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["object.data.id",{"_index":5415,"title":{},"body":{"injectables/UserService.html":{}}}],["object.entries(filters",{"_index":3210,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["object.entries(filters).foreach(([key",{"_index":2268,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["object.id",{"_index":5416,"title":{},"body":{"injectables/UserService.html":{}}}],["object.keys(changes).length",{"_index":2486,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/UserService.html":{}}}],["object.keys(currentuser).length",{"_index":5447,"title":{},"body":{"injectables/UserService.html":{}}}],["object.keys(data).foreach(key",{"_index":3787,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["object.keys(formgroup.controls).foreach(key",{"_index":1125,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["object.url",{"_index":5417,"title":{},"body":{"injectables/UserService.html":{}}}],["objeto",{"_index":1187,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["objetos",{"_index":1305,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["obligatorio",{"_index":3722,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["observable",{"_index":1439,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Small.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["observable(observer",{"_index":2815,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observables",{"_index":3989,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["observer.complete",{"_index":2834,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.error('error",{"_index":2836,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["observer.next(this.authmapping.signup(enricheduser",{"_index":2833,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["obtener",{"_index":1807,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["obtiene",{"_index":1797,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["of(false",{"_index":5669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["of(null",{"_index":2624,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["of(songs.map(song",{"_index":2727,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["of(this.auth.currentuser).pipe",{"_index":2843,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["of(this.mapping.getadded(entity",{"_index":1980,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["of(this.mapping.getdeleted(entity",{"_index":1988,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["of(this.mapping.getone(this._items.find(item",{"_index":1971,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["of(this.mapping.getupdated(this._items[index",{"_index":1984,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["of(true).pipe",{"_index":5367,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["offset",{"_index":539,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["ok",{"_index":3881,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["old",{"_index":2086,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["oldpassword",{"_index":2020,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["onaddartist",{"_index":1319,"title":{},"body":{"components/ArtistsPage.html":{}}}],["onaddplaylist",{"_index":3843,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["onaddsong",{"_index":4840,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["onartistclick",{"_index":2177,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["onartistclick(artist",{"_index":2188,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["onauthstatechanged",{"_index":2765,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onauthstatechanged(this.auth",{"_index":2774,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["onback",{"_index":4796,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["once",{"_index":1650,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["onchangepicture",{"_index":3449,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event",{"_index":3468,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchangepicture(event:event",{"_index":3515,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["onchanges",{"_index":928,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["ondelete",{"_index":960,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["ondeleteartist",{"_index":1320,"title":{},"body":{"components/ArtistsPage.html":{}}}],["ondeleteartist(artist",{"_index":1332,"title":{},"body":{"components/ArtistsPage.html":{}}}],["ondeletepicture",{"_index":3450,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event",{"_index":3473,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeletepicture(event:event",{"_index":3529,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["ondeleteplaylist",{"_index":3844,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["ondeleteplaylist(playlist",{"_index":3852,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["ondeletesong(song",{"_index":4848,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["ondestroy",{"_index":2603,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["ondragend",{"_index":2311,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragleave",{"_index":2312,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragover",{"_index":2313,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragover(event",{"_index":2339,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragstart",{"_index":2314,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondragstart(event",{"_index":2342,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondrop",{"_index":2315,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["ondrop(event",{"_index":2344,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["one",{"_index":1608,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["onedit",{"_index":961,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["onimageerror(event",{"_index":4802,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["oninit",{"_index":12,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{}}}],["onioninfinite",{"_index":1321,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{}}}],["onioninfinite(ev",{"_index":1334,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["onlogin",{"_index":4196,"title":{},"body":{"components/RegisterPage.html":{}}}],["onmouseenter",{"_index":962,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["onmouseleave",{"_index":963,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["onplay",{"_index":964,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["onplayall",{"_index":2688,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["onplaysong(song",{"_index":2698,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["onregister",{"_index":3332,"title":{},"body":{"components/LoginPage.html":{}}}],["onrelatedartistclick(artist",{"_index":2700,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["onsearchblur",{"_index":4078,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["onsearchchange(event",{"_index":4067,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["onsearchfocus",{"_index":4073,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["onselect",{"_index":965,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["onselectartist",{"_index":1322,"title":{},"body":{"components/ArtistsPage.html":{}}}],["onselectartist(artist",{"_index":1337,"title":{},"body":{"components/ArtistsPage.html":{}}}],["onshuffle",{"_index":4727,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["onsnapshot",{"_index":2863,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["onsongreorder(event",{"_index":4853,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["onsubmit",{"_index":1023,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["onupdateartist",{"_index":1323,"title":{},"body":{"components/ArtistsPage.html":{}}}],["onupdateartist(artist",{"_index":1339,"title":{},"body":{"components/ArtistsPage.html":{}}}],["onupdateplaylist",{"_index":3845,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["onupdateplaylist(playlist",{"_index":3855,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["onupdatesong(song",{"_index":4842,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["opacity",{"_index":397,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["opcional",{"_index":934,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["opcionales",{"_index":3148,"title":{},"body":{"interfaces/ISongsRepository.html":{}}}],["opción",{"_index":1482,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["openchangepasswordmodal",{"_index":2391,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["openemail",{"_index":29,"title":{},"body":{"components/AboutPage.html":{}}}],["opengithubprofile",{"_index":30,"title":{},"body":{"components/AboutPage.html":{}}}],["opengithubprofile(githuburl",{"_index":59,"title":{},"body":{"components/AboutPage.html":{}}}],["openplaylist(playlist",{"_index":4121,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["openrepository",{"_index":31,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["opensong(song",{"_index":4131,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["opensongselector",{"_index":1024,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["operaciones",{"_index":1773,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["operación",{"_index":1176,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["operationinprogress",{"_index":3263,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["optimizada",{"_index":160,"title":{},"body":{"components/AboutPage.html":{}}}],["optional",{"_index":42,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Model.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"components/RegisterPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/SignUpPayload.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":4511,"title":{},"body":{"injectables/ShareService.html":{}}}],["options.dialogtitle",{"_index":4522,"title":{},"body":{"injectables/ShareService.html":{}}}],["options.text",{"_index":4520,"title":{},"body":{"injectables/ShareService.html":{}}}],["options.title",{"_index":4519,"title":{},"body":{"injectables/ShareService.html":{}}}],["options.url",{"_index":4521,"title":{},"body":{"injectables/ShareService.html":{}}}],["organiza",{"_index":125,"title":{},"body":{"components/AboutPage.html":{}}}],["original",{"_index":4407,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["originales",{"_index":4886,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["originalimage",{"_index":5449,"title":{},"body":{"injectables/UserService.html":{}}}],["originalmime",{"_index":3720,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["originalresult",{"_index":4411,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["originalresult.type",{"_index":4417,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["originaltype",{"_index":4447,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["oscuras",{"_index":2220,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["oscuro",{"_index":3748,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["otra",{"_index":5029,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["otros",{"_index":1894,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/SearchResult-1.html":{}}}],["out",{"_index":635,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"modules/SongsPageModule.html":{},"components/SplashPage.html":{},"index.html":{},"overview.html":{}}}],["outline",{"_index":108,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["output",{"_index":926,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["outputs",{"_index":967,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["over",{"_index":2362,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["overflow",{"_index":349,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["overlay",{"_index":481,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["overlayelement",{"_index":4282,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["override",{"_index":2799,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlaylistsService.html":{},"injectables/UserService.html":{}}}],["overview",{"_index":5602,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":5384,"title":{},"body":{"interfaces/Task.html":{}}}],["owner:person",{"_index":5386,"title":{},"body":{"interfaces/Task.html":{}}}],["ownership",{"_index":4703,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["oyentes",{"_index":994,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"interfaces/IArtistsRepository.html":{}}}],["p",{"_index":485,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"injectables/SongsMappingStrapi.html":{}}}],["p.id",{"_index":4087,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongsMappingStrapi.html":{}}}],["p.id.tostring",{"_index":4977,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["package",{"_index":5534,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":343,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["padding:0!important",{"_index":3540,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["padnumber",{"_index":3608,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["padnumber(num",{"_index":3609,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["padre",{"_index":3496,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["page",{"_index":320,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/IUserMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["page:number",{"_index":3406,"title":{},"body":{"interfaces/Paginated.html":{}}}],["pagecount",{"_index":2249,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pages",{"_index":1276,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{}}}],["pages:number",{"_index":3103,"title":{},"body":{"interfaces/IBaseMapping.html":{},"interfaces/Paginated.html":{}}}],["pagesize",{"_index":1194,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/IUserMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["pagesize)).pipe",{"_index":1852,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["pagesize:number",{"_index":3407,"title":{},"body":{"interfaces/Paginated.html":{}}}],["paginación",{"_index":1798,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["paginada",{"_index":3217,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["paginadas",{"_index":3204,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["paginado",{"_index":1197,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["paginados",{"_index":1804,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["paginated",{"_index":1206,"title":{"interfaces/Paginated.html":{}},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/IUserMapping.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["paginated.data",{"_index":1489,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["paginated.data.filter(artist",{"_index":1498,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["paginatedraw",{"_index":2246,"title":{"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{}},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["paginatedresponse",{"_index":4827,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["paginatedresponse.pages",{"_index":4829,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["pagination",{"_index":2248,"title":{"interfaces/Pagination.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["pagination[page]=${page}&pagination[pagesize]=${pagesize",{"_index":2266,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["palette",{"_index":176,"title":{},"body":{"components/AboutPage.html":{}}}],["panel",{"_index":4377,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["panel.innerhtml",{"_index":4393,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["pantallas",{"_index":2207,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["para",{"_index":57,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ISongsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["param",{"_index":1260,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["parameters",{"_index":38,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"components/RegisterPage.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["params['id",{"_index":2621,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SongWithArtists.html":{}}}],["parcial",{"_index":3200,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["parciales",{"_index":1252,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["parece",{"_index":5421,"title":{},"body":{"injectables/UserService.html":{}}}],["parseada",{"_index":4937,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["parseado",{"_index":1240,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["parsed",{"_index":1309,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["parsedid",{"_index":4934,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["parseint(attributes.duration",{"_index":4964,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["parseint(attributes.likes_count",{"_index":5003,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["parseint(id",{"_index":5018,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["parseint(imagedata",{"_index":4940,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["parseint(imagedata.data.id",{"_index":4935,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["parseint(parts[0",{"_index":4962,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["parseint(parts[1",{"_index":4963,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["parseint(value",{"_index":1310,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"pipes/DurationPipe.html":{}}}],["parsenumber",{"_index":1169,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["parsenumber(value",{"_index":1233,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["partial",{"_index":1250,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/AudioPlayerService.html":{},"components/EditProfileModalComponent.html":{},"interfaces/ISongsRepository.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["partialstate",{"_index":1585,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["parts",{"_index":4960,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["partículas",{"_index":5153,"title":{},"body":{"components/SplashPage.html":{}}}],["parámetros",{"_index":1485,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["paso",{"_index":4696,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["pasos",{"_index":1671,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["password",{"_index":574,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["password)).pipe",{"_index":2806,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["password.length",{"_index":2099,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["password:string",{"_index":4563,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["passwordconfirmation",{"_index":5352,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["passwordsdonotmatch",{"_index":2017,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["passwordsmatch",{"_index":2057,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["passwordsmatchvalidator",{"_index":4217,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordsmatchvalidator(group",{"_index":5585,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordsmismatch",{"_index":2059,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["passwordvalidator",{"_index":2048,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/RegisterPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordvalidator(control",{"_index":5588,"title":{},"body":{"miscellaneous/functions.html":{}}}],["passwordvisibility",{"_index":3411,"title":{},"body":{"pipes/PasswordVisibilityPipe.html":{}}}],["passwordvisibilitypipe",{"_index":3408,"title":{"pipes/PasswordVisibilityPipe.html":{}},"body":{"pipes/PasswordVisibilityPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["patch",{"_index":3199,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["patched",{"_index":2442,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["path",{"_index":655,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"interfaces/Formats.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/Large.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/Small.html":{},"modules/SongsPageRoutingModule.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pathmatch",{"_index":863,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pausa/resume",{"_index":5102,"title":{},"body":{"components/SplashPage.html":{}}}],["pausada",{"_index":4717,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["pausar",{"_index":4713,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["pause",{"_index":1529,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["payload",{"_index":3076,"title":{},"body":{"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{}}}],["payload.email",{"_index":5234,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["payload.name",{"_index":5236,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["payload.password",{"_index":5235,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["payload.surname",{"_index":5237,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["people",{"_index":5308,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["pequeño",{"_index":3297,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["pequeños",{"_index":2224,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["perfil",{"_index":62,"title":{},"body":{"components/AboutPage.html":{},"interfaces/EnrichedSong-1.html":{}}}],["perfiles",{"_index":130,"title":{},"body":{"components/AboutPage.html":{}}}],["performing",{"_index":4334,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["performnavigation",{"_index":5077,"title":{},"body":{"components/SplashPage.html":{}}}],["performsearch(query",{"_index":4321,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["performsearch(term",{"_index":4025,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["permanecen",{"_index":4770,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["permitir",{"_index":4076,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["pero",{"_index":4716,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["person",{"_index":129,"title":{"interfaces/Person.html":{}},"body":{"components/AboutPage.html":{},"interfaces/IAuthMapping.html":{},"interfaces/Person.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["person.model",{"_index":5385,"title":{},"body":{"interfaces/Task.html":{}}}],["person.model.ts",{"_index":2947,"title":{},"body":{"interfaces/FirebasePerson.html":{},"coverage.html":{}}}],["personaliza",{"_index":132,"title":{},"body":{"components/AboutPage.html":{}}}],["personalizada",{"_index":5186,"title":{},"body":{"components/SplashPage.html":{}}}],["personalizadas",{"_index":128,"title":{},"body":{"components/AboutPage.html":{}}}],["personalizados",{"_index":3745,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["personalizar",{"_index":3191,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["phone",{"_index":155,"title":{},"body":{"components/AboutPage.html":{}}}],["picture",{"_index":592,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/FirebasePerson.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Group.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["picture?:string",{"_index":3024,"title":{},"body":{"interfaces/Group.html":{}}}],["picture_selectable_value_accessor",{"_index":3441,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["picturemodal",{"_index":3457,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["picturemodal:modalcontroller",{"_index":3504,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["pictureselectablecomponent",{"_index":591,"title":{"components/PictureSelectableComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":1473,"title":{"pipes/DurationPipe.html":{},"pipes/PasswordVisibilityPipe.html":{},"pipes/PlaylistDurationPipe.html":{}},"body":{"injectables/ArtistsService.html":{},"interfaces/Data.html":{},"pipes/DurationPipe.html":{},"components/LikeButtonComponent.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"pipes/PlaylistDurationPipe.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["pipe(map((response:strapiuploadresponse",{"_index":3020,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pipe(map(res",{"_index":1921,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["pipe(takeuntil(this.destroy",{"_index":2632,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["pipe/duration.pipe",{"_index":4543,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipe/password",{"_index":4539,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipe/playlist",{"_index":4552,"title":{},"body":{"modules/SharedModule.html":{}}}],["pipes",{"_index":2374,"title":{},"body":{"pipes/DurationPipe.html":{},"pipes/PasswordVisibilityPipe.html":{},"pipes/PlaylistDurationPipe.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["pipetransform",{"_index":2378,"title":{},"body":{"pipes/DurationPipe.html":{},"pipes/PasswordVisibilityPipe.html":{},"pipes/PlaylistDurationPipe.html":{}}}],["placeholder",{"_index":2147,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{}}}],["platform",{"_index":3649,"title":{},"body":{"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/ShareService.html":{},"interfaces/SongWithArtists-1.html":{}}}],["play",{"_index":595,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["play(song",{"_index":1559,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["play/pause",{"_index":3575,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["playallsongs",{"_index":4833,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["playbuttoncomponent",{"_index":594,"title":{"components/PlayButtonComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["playenrichedsong",{"_index":2549,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["playenrichedsong(song",{"_index":2560,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player",{"_index":748,"title":{},"body":{"modules/AppModule.html":{}}}],["player'},{'name",{"_index":571,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["player.component",{"_index":4549,"title":{},"body":{"modules/SharedModule.html":{}}}],["player.component.ts",{"_index":5523,"title":{},"body":{"coverage.html":{}}}],["player.service",{"_index":805,"title":{},"body":{"modules/AppModule.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"components/PlayButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["player.service.ts",{"_index":1519,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{},"coverage.html":{}}}],["player.service.ts:102",{"_index":2563,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:107",{"_index":1576,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:124",{"_index":1584,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:13",{"_index":2552,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:130",{"_index":1570,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:137",{"_index":1555,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:158",{"_index":1560,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:171",{"_index":1558,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:175",{"_index":1565,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:179",{"_index":1580,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:19",{"_index":2561,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:190",{"_index":1567,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:195",{"_index":1578,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:217",{"_index":1574,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:224",{"_index":1546,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:231",{"_index":1564,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:248",{"_index":1557,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:264",{"_index":1562,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:282",{"_index":1582,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:297",{"_index":1581,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:306",{"_index":1553,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:318",{"_index":1548,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:32",{"_index":1601,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:326",{"_index":1550,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:33",{"_index":1599,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:330",{"_index":1551,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:334",{"_index":1552,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:48",{"_index":1543,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:49",{"_index":2557,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:54",{"_index":2570,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:57",{"_index":1575,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["player.service.ts:58",{"_index":2559,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:62",{"_index":2564,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:66",{"_index":2558,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:70",{"_index":2562,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:74",{"_index":2565,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:78",{"_index":2567,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:82",{"_index":2569,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:86",{"_index":2568,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:90",{"_index":2553,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:94",{"_index":2555,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player.service.ts:98",{"_index":2554,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["player/audio",{"_index":4548,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{}}}],["playerfactory",{"_index":808,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["playerstate",{"_index":1521,"title":{"interfaces/PlayerState.html":{}},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{},"coverage.html":{}}}],["playerstate.currentsong",{"_index":4714,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playerstate.currentsong?.id",{"_index":4745,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playerstate.ispaused",{"_index":4719,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playerstate.isplaying",{"_index":4715,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playerstate.isshuffled",{"_index":4738,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playing",{"_index":1653,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{}}}],["playingfrom",{"_index":1611,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["playlist",{"_index":597,"title":{"interfaces/Playlist.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["playlist(_playlist",{"_index":3659,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["playlist.add_button",{"_index":3885,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["playlist.author",{"_index":3887,"title":{},"body":{"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["playlist.author.tolowercase().includes(lowerquery",{"_index":4352,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["playlist.author?.tolowercase",{"_index":3934,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["playlist.duration",{"_index":3888,"title":{},"body":{"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{}}}],["playlist.id",{"_index":3876,"title":{},"body":{"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["playlist.image?.url",{"_index":4059,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["playlist.model.ts",{"_index":2951,"title":{},"body":{"interfaces/FirebasePlaylist.html":{},"interfaces/StrapiPlaylistResponse.html":{},"coverage.html":{}}}],["playlist.name",{"_index":3886,"title":{},"body":{"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["playlist.name.tolowercase().includes(lowerquery",{"_index":4351,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["playlist.png",{"_index":4178,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["playlist.song_ids",{"_index":3919,"title":{},"body":{"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["playlist.song_ids.filter(id",{"_index":4792,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playlist.song_ids.length",{"_index":4124,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["playlist.song_ids.map(id",{"_index":4763,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playlist.song_ids?.length",{"_index":4761,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playlist.title",{"_index":3884,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["playlist.users_ids",{"_index":3920,"title":{},"body":{"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists.html":{}}}],["playlist.users_ids.includes(currentuser.id",{"_index":4706,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playlist.users_ids.includes(userid",{"_index":3933,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["playlist.users_ids.length",{"_index":4704,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["playlist/:id",{"_index":883,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["playlistdata",{"_index":3918,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["playlistdetailpage",{"_index":596,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["playlistdetailpagemodule",{"_index":3589,"title":{"modules/PlaylistDetailPageModule.html":{}},"body":{"modules/PlaylistDetailPageModule.html":{},"modules.html":{},"overview.html":{}}}],["playlistdetailpageroutingmodule",{"_index":3593,"title":{"modules/PlaylistDetailPageRoutingModule.html":{}},"body":{"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["playlistduration",{"_index":3600,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["playlistdurationpipe",{"_index":3597,"title":{"pipes/PlaylistDurationPipe.html":{}},"body":{"pipes/PlaylistDurationPipe.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{}}}],["playlistid",{"_index":3137,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"components/PlaylistLikeButtonComponent.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["playlistid).pipe",{"_index":5437,"title":{},"body":{"injectables/UserService.html":{}}}],["playlistid_ids",{"_index":2958,"title":{},"body":{"interfaces/FirebaseSong.html":{},"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{},"interfaces/StrapiSongResponse.html":{}}}],["playlistids",{"_index":4971,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["playlistlikebuttoncomponent",{"_index":599,"title":{"components/PlaylistLikeButtonComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["playlistmapping",{"_index":2852,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["playlistmodalcomponent",{"_index":600,"title":{"components/PlaylistModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["playlists",{"_index":122,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongsMappingStrapi.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUserResponse.html":{}}}],["playlists'},{'name",{"_index":602,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["playlists.filter(playlist",{"_index":3931,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["playlists.length",{"_index":4164,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["playlists.page",{"_index":3895,"title":{},"body":{"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{}}}],["playlists.page.html",{"_index":3839,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["playlists.page.scss",{"_index":3838,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["playlists.slice(0",{"_index":4333,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["playlists_api_url_token",{"_index":775,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playlists_count",{"_index":4579,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["playlists_ids",{"_index":2962,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["playlists_repository_mapping_token",{"_index":2868,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playlists_repository_token",{"_index":3915,"title":{},"body":{"injectables/PlaylistsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playlists_resource_name_token",{"_index":778,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playlistscount",{"_index":4163,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["playlistsmappingfactory",{"_index":755,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playlistsmappingstrapi",{"_index":3756,"title":{"injectables/PlaylistsMappingStrapi.html":{}},"body":{"injectables/PlaylistsMappingStrapi.html":{},"coverage.html":{}}}],["playlistspage",{"_index":601,"title":{"components/PlaylistsPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["playlistspagemodule",{"_index":3889,"title":{"modules/PlaylistsPageModule.html":{}},"body":{"modules/PlaylistsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["playlistspageroutingmodule",{"_index":3893,"title":{"modules/PlaylistsPageRoutingModule.html":{}},"body":{"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["playlistsrepositoryfactory",{"_index":758,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["playlistsresponse",{"_index":4296,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["playlistsresponse?.data",{"_index":4306,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["playlistsservice",{"_index":735,"title":{"injectables/PlaylistsService.html":{}},"body":{"modules/AppModule.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"coverage.html":{},"overview.html":{}}}],["playlistssvc",{"_index":3848,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["playpaused",{"_index":3551,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["playplaylist(playlist",{"_index":4123,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["playsong",{"_index":4644,"title":{},"body":{"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["playsong(song",{"_index":4479,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{}}}],["playspecificsong(song",{"_index":4839,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["playstarted",{"_index":3552,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["please",{"_index":2837,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["pobladas",{"_index":2284,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["podcasts",{"_index":3963,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["podemos",{"_index":4941,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["podrás",{"_index":3725,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["podrías",{"_index":4481,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["pointer",{"_index":448,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["populares",{"_index":3060,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["populate",{"_index":2252,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["popup",{"_index":2521,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["por",{"_index":1479,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["porque",{"_index":2497,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["portal",{"_index":4372,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["portapapeles",{"_index":234,"title":{},"body":{"components/AboutPage.html":{}}}],["portrait",{"_index":156,"title":{},"body":{"components/AboutPage.html":{}}}],["posible",{"_index":4892,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["position",{"_index":347,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["post",{"_index":1179,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["precargar",{"_index":4290,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["preferencias",{"_index":135,"title":{},"body":{"components/AboutPage.html":{}}}],["prefers",{"_index":517,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["pregunta",{"_index":261,"title":{},"body":{"components/AboutPage.html":{}}}],["preloadallmodules",{"_index":856,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["preloaddata",{"_index":4293,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["preloaded",{"_index":4312,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["preloading",{"_index":4294,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["preloadingstrategy",{"_index":900,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["prepara",{"_index":1245,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["presenterrortoast",{"_index":3333,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["presenterrortoast(message",{"_index":3339,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["presentsuccesstoast",{"_index":4197,"title":{},"body":{"components/RegisterPage.html":{}}}],["presentsuccesstoast(message",{"_index":4203,"title":{},"body":{"components/RegisterPage.html":{}}}],["preserva",{"_index":5442,"title":{},"body":{"injectables/UserService.html":{}}}],["preservando",{"_index":5441,"title":{},"body":{"injectables/UserService.html":{}}}],["preserveaspectratio",{"_index":5112,"title":{},"body":{"components/SplashPage.html":{}}}],["preserved",{"_index":5445,"title":{},"body":{"injectables/UserService.html":{}}}],["preservedfields",{"_index":5446,"title":{},"body":{"injectables/UserService.html":{}}}],["prev",{"_index":3206,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["preview",{"_index":4633,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["previewurl",{"_index":3006,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["previndex",{"_index":1683,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["previous",{"_index":1530,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["previousstate",{"_index":3301,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["primary",{"_index":293,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["primer",{"_index":1398,"title":{},"body":{"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"miscellaneous/variables.html":{}}}],["primera",{"_index":1815,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/SongWithArtists.html":{}}}],["primero",{"_index":1510,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["principal",{"_index":69,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["principales",{"_index":4421,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["print",{"_index":549,"title":{},"body":{"components/AboutPage.html":{}}}],["private",{"_index":689,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["proceeding",{"_index":4365,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["procesados",{"_index":4890,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["procesando",{"_index":4929,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["procesar",{"_index":1189,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["procesarla",{"_index":4942,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["process",{"_index":3700,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["processed",{"_index":3699,"title":{},"body":{"components/PlaylistModalComponent.html":{},"injectables/UserService.html":{}}}],["processedchanges",{"_index":5412,"title":{},"body":{"injectables/UserService.html":{}}}],["processedchanges.image",{"_index":5413,"title":{},"body":{"injectables/UserService.html":{}}}],["processedimage",{"_index":4888,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["processimageforstrapi",{"_index":5052,"title":{},"body":{"injectables/SongsService.html":{}}}],["processimageforstrapi(imagedata",{"_index":4928,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["processing",{"_index":3679,"title":{},"body":{"components/PlaylistModalComponent.html":{},"injectables/UserService.html":{}}}],["production",{"_index":5676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["profile",{"_index":580,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/ProfilePageModule.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["profile'},{'name",{"_index":566,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["profile.change_password",{"_index":2518,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["profile.details_title",{"_index":2514,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["profile.module').then",{"_index":895,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.module').then(m",{"_index":893,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["profile.module.ts",{"_index":1144,"title":{},"body":{"modules/ArtistProfilePageModule.html":{}}}],["profile.page",{"_index":1146,"title":{},"body":{"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{}}}],["profile.page.html",{"_index":2609,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["profile.page.scss",{"_index":2610,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["profile.page.ts",{"_index":2602,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"coverage.html":{}}}],["profile.save",{"_index":2519,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["profile/artist",{"_index":892,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"interfaces/EnrichedSong-1.html":{},"coverage.html":{}}}],["profilepage",{"_index":603,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["profilepagemodule",{"_index":3943,"title":{"modules/ProfilePageModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules.html":{},"overview.html":{}}}],["profilepageroutingmodule",{"_index":3947,"title":{"modules/ProfilePageRoutingModule.html":{}},"body":{"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["profiles",{"_index":5593,"title":{},"body":{"index.html":{}}}],["progreso",{"_index":5185,"title":{},"body":{"components/SplashPage.html":{}}}],["progress",{"_index":1593,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"components/SplashPage.html":{}}}],["progressiveload",{"_index":5111,"title":{},"body":{"components/SplashPage.html":{}}}],["project",{"_index":5605,"title":{},"body":{"properties.html":{}}}],["projectid",{"_index":840,"title":{},"body":{"modules/AppModule.html":{}}}],["promesa",{"_index":5315,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["promise",{"_index":1556,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["promise((resolve",{"_index":1641,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["promise(resolve",{"_index":3642,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["promise.all",{"_index":1080,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["promise.all(songpromises",{"_index":2648,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["propaga",{"_index":3460,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["propagatechange",{"_index":3447,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["properties",{"_index":21,"title":{"properties.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["propiedades",{"_index":3965,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["proporcionado",{"_index":3058,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["proporción",{"_index":5115,"title":{},"body":{"components/SplashPage.html":{}}}],["protected",{"_index":1711,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["provide",{"_index":817,"title":{},"body":{"modules/AppModule.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["provided",{"_index":3292,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["providedin",{"_index":1259,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"injectables/ShareService.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["providehttpclient",{"_index":787,"title":{},"body":{"modules/AppModule.html":{},"modules/HomePageModule.html":{}}}],["provider",{"_index":3007,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["provider_metadata",{"_index":3008,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["providermetadata",{"_index":3009,"title":{"interfaces/ProviderMetadata.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["providers",{"_index":627,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"components/PictureSelectableComponent.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"overview.html":{}}}],["providers:[picture_selectable_value_accessor",{"_index":3501,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["proxy",{"_index":5556,"title":{},"body":{"dependencies.html":{}}}],["proyecto",{"_index":71,"title":{},"body":{"components/AboutPage.html":{}}}],["prueba",{"_index":1938,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["public",{"_index":660,"title":{},"body":{"components/AppComponent.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["public_id",{"_index":3010,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["pudieron",{"_index":4130,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["pudo",{"_index":4918,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["puede",{"_index":4907,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{}}}],["pulse",{"_index":5173,"title":{},"body":{"components/SplashPage.html":{}}}],["puntos",{"_index":5189,"title":{},"body":{"components/SplashPage.html":{}}}],["purple",{"_index":304,"title":{},"body":{"components/AboutPage.html":{}}}],["pusher",{"_index":5562,"title":{},"body":{"dependencies.html":{}}}],["put",{"_index":1909,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["put/patch",{"_index":1210,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["python",{"_index":103,"title":{},"body":{"components/AboutPage.html":{}}}],["p}${v",{"_index":3215,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["página",{"_index":1200,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["páginas",{"_index":3764,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["pérdida",{"_index":4075,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["pérez",{"_index":81,"title":{},"body":{"components/AboutPage.html":{}}}],["público",{"_index":3494,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["públicos",{"_index":1639,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["q",{"_index":4093,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["que",{"_index":1214,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/EditProfileModalComponent.html":{},"interfaces/IArtistsRepository.html":{},"components/PictureSelectableComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":1830,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/SearchResult-1.html":{}}}],["query(this.collectionref",{"_index":1860,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["query.length",{"_index":4319,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["query.tolowercase().trim",{"_index":4337,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["queryconstraint",{"_index":1833,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["queryparams",{"_index":3370,"title":{},"body":{"components/LoginPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"miscellaneous/variables.html":{}}}],["querysnapshot",{"_index":2864,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["queue",{"_index":1595,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["quick",{"_index":420,"title":{},"body":{"components/AboutPage.html":{}}}],["quickaccess",{"_index":3973,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["quiere",{"_index":5099,"title":{},"body":{"components/SplashPage.html":{}}}],["quitar",{"_index":3419,"title":{},"body":{"interfaces/Person.html":{}}}],["r.id",{"_index":4489,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["radial",{"_index":5171,"title":{},"body":{"components/SplashPage.html":{}}}],["radius",{"_index":333,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["rafael",{"_index":79,"title":{},"body":{"components/AboutPage.html":{}}}],["rafaelmoncayop37@gmail.com",{"_index":211,"title":{},"body":{"components/AboutPage.html":{}}}],["ratio",{"_index":1001,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["rc2",{"_index":5565,"title":{},"body":{"dependencies.html":{}}}],["re",{"_index":4920,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["rea",{"_index":2216,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["reactiveenrichedsong",{"_index":3950,"title":{"interfaces/ReactiveEnrichedSong.html":{}},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["reactiveformsmodule",{"_index":789,"title":{},"body":{"modules/AppModule.html":{},"modules/ArtistsPageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{}}}],["reactivos",{"_index":3440,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader",{"_index":3521,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onerror",{"_index":3525,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.onload",{"_index":3523,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["reader.readasdataurl(file",{"_index":3527,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["readonly",{"_index":3230,"title":{},"body":{"injectables/LanguageService.html":{},"components/PlaylistModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["ready",{"_index":1716,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["real",{"_index":4006,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["realiza",{"_index":5094,"title":{},"body":{"components/SplashPage.html":{}}}],["realizar",{"_index":4024,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["realmente",{"_index":3303,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["reanudar",{"_index":4718,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["recargar",{"_index":4845,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["recent",{"_index":4270,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recent.data",{"_index":4414,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recent.data.artistnames",{"_index":4416,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recent.data.author",{"_index":4418,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recent.data.name",{"_index":4415,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recent.data?.type",{"_index":4412,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recent.type",{"_index":4413,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recentsearches",{"_index":4277,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["reciente",{"_index":4445,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recientes",{"_index":4404,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["recommendedcount",{"_index":4166,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["recommendedsongs",{"_index":3978,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["recommendedsongs.length",{"_index":4167,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["recurso",{"_index":1901,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["recursos",{"_index":3466,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["redirectto",{"_index":862,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["redirige",{"_index":5686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirigir",{"_index":5675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce",{"_index":544,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["reduce((p",{"_index":3214,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["reduced",{"_index":542,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["reemplaza",{"_index":4740,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["reemplazo",{"_index":1910,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["ref",{"_index":2919,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["ref(this.storage",{"_index":2934,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["referencia",{"_index":1844,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["register",{"_index":874,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{}}}],["register'},{'name",{"_index":605,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["register.page",{"_index":4264,"title":{},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{}}}],["register.page.html",{"_index":4194,"title":{},"body":{"components/RegisterPage.html":{}}}],["register.page.scss",{"_index":4193,"title":{},"body":{"components/RegisterPage.html":{}}}],["registerform",{"_index":4195,"title":{},"body":{"components/RegisterPage.html":{}}}],["registeronchange",{"_index":3451,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registeronchange(fn",{"_index":3475,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registerontouched",{"_index":3452,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registerontouched(fn",{"_index":3478,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["registerpage",{"_index":604,"title":{"components/RegisterPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["registerpagemodule",{"_index":4258,"title":{"modules/RegisterPageModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpageroutingmodule",{"_index":4262,"title":{"modules/RegisterPageRoutingModule.html":{}},"body":{"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["registerpayload",{"_index":1735,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["registrado",{"_index":4231,"title":{},"body":{"components/RegisterPage.html":{}}}],["registro",{"_index":4232,"title":{},"body":{"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["regístrate",{"_index":3381,"title":{},"body":{"components/LoginPage.html":{}}}],["reject",{"_index":1642,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["relacionadas",{"_index":1231,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["relacionado",{"_index":4987,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["relaciones",{"_index":2253,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["relación",{"_index":3698,"title":{},"body":{"components/PlaylistModalComponent.html":{},"injectables/SongsMappingStrapi.html":{}}}],["related",{"_index":2668,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["relatedartists",{"_index":2613,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["relative",{"_index":348,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["remaining",{"_index":2213,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["remainingcount",{"_index":2178,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["remainingseconds",{"_index":2382,"title":{},"body":{"pipes/DurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["remainingseconds.tostring().padstart(2",{"_index":2386,"title":{},"body":{"pipes/DurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["removal",{"_index":5422,"title":{},"body":{"injectables/UserService.html":{}}}],["removed",{"_index":2232,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["removefromqueue",{"_index":1531,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{}}}],["removefromqueue(index",{"_index":1563,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["removeoverlay",{"_index":4463,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["removeplaylist",{"_index":3169,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["removeplaylist(userid",{"_index":3179,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["remover",{"_index":3795,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["removesong",{"_index":1025,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{}}}],["removesong(playlistid",{"_index":3141,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"injectables/PlaylistsService.html":{}}}],["removesong(song",{"_index":1044,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["removesongfromartist",{"_index":3039,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["removesongfromartist(artistid",{"_index":3051,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["removido",{"_index":4376,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["removing",{"_index":3942,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["renderer",{"_index":2326,"title":{},"body":{"directives/DragDropDirective.html":{},"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["renderer2",{"_index":2327,"title":{},"body":{"directives/DragDropDirective.html":{},"interfaces/SearchResult-1.html":{}}}],["renderersettings",{"_index":5110,"title":{},"body":{"components/SplashPage.html":{}}}],["rendimiento",{"_index":5109,"title":{},"body":{"components/SplashPage.html":{}}}],["reordenando",{"_index":4862,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["repeat(2",{"_index":509,"title":{},"body":{"components/AboutPage.html":{}}}],["repeat(auto",{"_index":441,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{}}}],["repeating",{"_index":358,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["repeatmode",{"_index":1598,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["replaceurl",{"_index":3371,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["repositories/intefaces/artists",{"_index":1463,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["repositories/intefaces/base",{"_index":2001,"title":{},"body":{"injectables/BaseService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseService.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["repositories/intefaces/playlists",{"_index":3916,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["repositories/intefaces/songs",{"_index":4866,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["repositories/intefaces/user",{"_index":5406,"title":{},"body":{"injectables/UserService.html":{}}}],["repositories/repository.tokens",{"_index":1462,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{}}}],["repositorio",{"_index":68,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["repositorios",{"_index":1769,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{}}}],["repository",{"_index":1436,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["repository.interface",{"_index":1464,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IBaseService.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/ISongsRepository.html":{},"interfaces/IUserRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["repository.interface.ts",{"_index":3034,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/ISongsRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"coverage.html":{}}}],["repository.interface.ts:10",{"_index":3177,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:11",{"_index":3046,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/ISongsRepository.html":{},"interfaces/IUserRepository.html":{},"interfaces/SearchParams.html":{}}}],["repository.interface.ts:12",{"_index":3171,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:13",{"_index":3180,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:14",{"_index":3050,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["repository.interface.ts:16",{"_index":3112,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:17",{"_index":3054,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:18",{"_index":3111,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:19",{"_index":3113,"title":{},"body":{"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:20",{"_index":3045,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/IBaseRepository.html":{}}}],["repository.interface.ts:23",{"_index":3043,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/IBaseRepository-1.html":{}}}],["repository.interface.ts:24",{"_index":3119,"title":{},"body":{"interfaces/IBaseRepository-1.html":{}}}],["repository.interface.ts:25",{"_index":3117,"title":{},"body":{"interfaces/IBaseRepository-1.html":{}}}],["repository.interface.ts:26",{"_index":3052,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/IBaseRepository-1.html":{}}}],["repository.interface.ts:27",{"_index":3118,"title":{},"body":{"interfaces/IBaseRepository-1.html":{}}}],["repository.interface.ts:29",{"_index":3056,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["repository.interface.ts:6",{"_index":3175,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:7",{"_index":3184,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:8",{"_index":3048,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/ISongsRepository.html":{},"interfaces/IUserRepository.html":{}}}],["repository.interface.ts:9",{"_index":3182,"title":{},"body":{"interfaces/IUserRepository.html":{}}}],["repository.service.ts",{"_index":2237,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["repository.service.ts:124",{"_index":5378,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:149",{"_index":5375,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:171",{"_index":5380,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:203",{"_index":5376,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:33",{"_index":3193,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{}}}],["repository.service.ts:43",{"_index":5374,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:57",{"_index":5379,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.service.ts:77",{"_index":5377,"title":{},"body":{"injectables/StrapiRepositoryService.html":{}}}],["repository.tokens",{"_index":1839,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["repository_mapping_token",{"_index":1838,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository_token",{"_index":2002,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["representa",{"_index":4938,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["reproducción",{"_index":119,"title":{},"body":{"components/AboutPage.html":{},"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["reproduce",{"_index":113,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SongWithArtists.html":{}}}],["reproduciendo",{"_index":4480,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["reproducir",{"_index":2691,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/PlayButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["reproduciéndose",{"_index":4710,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["reproductor",{"_index":1640,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["required",{"_index":1133,"title":{},"body":{"components/ArtistModalComponent.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["res",{"_index":1922,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data",{"_index":2280,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.data.length",{"_index":2279,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.id",{"_index":2287,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.map((elem",{"_index":3224,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["res.meta.pagination.total",{"_index":2281,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.meta?.pagination",{"_index":2278,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["res.pages",{"_index":3222,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["reservados",{"_index":275,"title":{},"body":{"components/AboutPage.html":{}}}],["reset",{"_index":634,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"overview.html":{}}}],["resetpasswordtoken",{"_index":4568,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["resolve",{"_index":1649,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["resource",{"_index":823,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["resource_name_token",{"_index":1914,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resource_type",{"_index":3011,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["resp",{"_index":3351,"title":{},"body":{"components/LoginPage.html":{}}}],["resplandor",{"_index":5169,"title":{},"body":{"components/SplashPage.html":{}}}],["response",{"_index":1109,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/EditProfileModalComponent.html":{},"interfaces/IAuthMapping.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.blob",{"_index":1112,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["response.data",{"_index":1391,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.jwt",{"_index":5359,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["response.map(media=>media.id",{"_index":3021,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["response.pages",{"_index":1358,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["response.user.avatar",{"_index":5246,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.avatar.large",{"_index":5248,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.avatar.medium",{"_index":5249,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.avatar.small",{"_index":5250,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.avatar.thumbnail",{"_index":5251,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.avatar.url",{"_index":5247,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.blocked",{"_index":5245,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.confirmed",{"_index":5244,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.email",{"_index":5240,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.id.tostring",{"_index":5238,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.provider",{"_index":5243,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response.user.username",{"_index":5239,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response?.data",{"_index":5252,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response?.email",{"_index":5255,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response?.id",{"_index":5254,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["response?.jwt",{"_index":5358,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["responsive",{"_index":501,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"index.html":{}}}],["responsivo",{"_index":158,"title":{},"body":{"components/AboutPage.html":{}}}],["respuesta",{"_index":1175,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["respuestas",{"_index":2244,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["restaurar",{"_index":4409,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["restful",{"_index":1890,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["resto",{"_index":4154,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["result",{"_index":2387,"title":{},"body":{"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"injectables/ShareService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["result.data",{"_index":1090,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["result.data.id",{"_index":4774,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["result.data.image",{"_index":3873,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["result.data.image.url",{"_index":3874,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["result.data.map((song",{"_index":4879,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["result.data.name",{"_index":3871,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["result.id",{"_index":4478,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["result.image",{"_index":2493,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["result.map((song",{"_index":4877,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["result.pages",{"_index":4831,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["result.role",{"_index":1089,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["result.subtitle",{"_index":4438,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["result.title",{"_index":4437,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["result.type",{"_index":4476,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["result[0",{"_index":3696,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["resultado",{"_index":1516,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["resultados",{"_index":4064,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["results",{"_index":619,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.artists.slice(0",{"_index":4060,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["results.playlists.slice(0",{"_index":4057,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["results.push",{"_index":4330,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["results.songs.slice(0",{"_index":4052,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["resume",{"_index":1532,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["retorno",{"_index":5418,"title":{},"body":{"injectables/UserService.html":{}}}],["return",{"_index":809,"title":{},"body":{"modules/AppModule.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":48,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"components/RegisterPage.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["returnurl",{"_index":3352,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["revertir",{"_index":3317,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["rgb",{"_index":519,"title":{},"body":{"components/AboutPage.html":{},"components/PictureSelectableComponent.html":{}}}],["rgb(255",{"_index":999,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["rgba(0",{"_index":388,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["rgba(255",{"_index":329,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["rgba(29",{"_index":461,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["rgba(71",{"_index":995,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["rgba(var",{"_index":3544,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["right",{"_index":393,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["ripple",{"_index":3586,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["role",{"_index":82,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["root",{"_index":280,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/PlayerState.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"injectables/ShareService.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["root'},{'name",{"_index":559,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["rotate",{"_index":365,"title":{},"body":{"components/AboutPage.html":{}}}],["rotate(0deg",{"_index":493,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["rotate(360deg",{"_index":494,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["rotatebackground",{"_index":5154,"title":{},"body":{"components/SplashPage.html":{}}}],["rotateborder",{"_index":5168,"title":{},"body":{"components/SplashPage.html":{}}}],["route",{"_index":2617,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":35,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistsPage.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/LoginPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/home",{"_index":5681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":5672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routereusestrategy",{"_index":745,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule",{"_index":654,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":656,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":899,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerpublic",{"_index":4190,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["routes",{"_index":653,"title":{"routes.html":{}},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":648,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SongsPageModule.html":{}}}],["routing.module.ts",{"_index":652,"title":{},"body":{"modules/AboutPageRoutingModule.html":{},"modules/AppRoutingModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"modules/HomePageRoutingModule.html":{},"modules/LoginPageRoutingModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"modules/ProfilePageRoutingModule.html":{},"modules/RegisterPageRoutingModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules/SplashPageRoutingModule.html":{}}}],["rtfn.onrender.com",{"_index":5678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruta",{"_index":4425,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["rutas",{"_index":5685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rxjs",{"_index":1060,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":2571,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/UserService.html":{}}}],["s",{"_index":3810,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["s.id",{"_index":1095,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlayButtonComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["s.id.tostring",{"_index":3812,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["s.tostring",{"_index":3814,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["safe",{"_index":5439,"title":{},"body":{"injectables/UserService.html":{}}}],["saltar",{"_index":5097,"title":{},"body":{"components/SplashPage.html":{}}}],["save",{"_index":2543,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["saved",{"_index":4496,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{}}}],["savetorecentsearches(result",{"_index":4483,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["scale(0",{"_index":5206,"title":{},"body":{"components/SplashPage.html":{}}}],["scale(0.8",{"_index":5203,"title":{},"body":{"components/SplashPage.html":{}}}],["scale(0.98",{"_index":2206,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["scale(1",{"_index":3324,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/SplashPage.html":{}}}],["scale(1.02",{"_index":3744,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["scale(1.05",{"_index":390,"title":{},"body":{"components/AboutPage.html":{},"components/PlayButtonComponent.html":{},"components/SplashPage.html":{}}}],["scale(1.1",{"_index":339,"title":{},"body":{"components/AboutPage.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["scale(1.2",{"_index":5204,"title":{},"body":{"components/SplashPage.html":{}}}],["scale(1.3",{"_index":3326,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["scaley(0.3",{"_index":4685,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["scaley(1",{"_index":4686,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["schemas",{"_index":740,"title":{},"body":{"modules/AppModule.html":{}}}],["scheme",{"_index":518,"title":{},"body":{"components/AboutPage.html":{}}}],["score",{"_index":2100,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["screen",{"_index":5089,"title":{},"body":{"components/SplashPage.html":{}}}],["scroll",{"_index":527,"title":{},"body":{"components/AboutPage.html":{}}}],["scrollbar",{"_index":531,"title":{},"body":{"components/AboutPage.html":{}}}],["se",{"_index":1757,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/EditProfileModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["sea",{"_index":2528,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["search",{"_index":137,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"index.html":{}}}],["search'},{'name",{"_index":585,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["search.component",{"_index":4559,"title":{},"body":{"modules/SharedModule.html":{}}}],["search.component.html",{"_index":4271,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["search.component.scss",{"_index":4272,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["search.component.ts",{"_index":4269,"title":{},"body":{"interfaces/SearchResult-1.html":{},"coverage.html":{}}}],["search/global",{"_index":4268,"title":{},"body":{"interfaces/SearchResult-1.html":{},"modules/SharedModule.html":{},"coverage.html":{}}}],["searchartists(term",{"_index":4047,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["searchartistslocal(query",{"_index":4354,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["searchbyname",{"_index":1430,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/IArtistsRepository.html":{}}}],["searchbyname(name",{"_index":1442,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["searchbyname(searchterm",{"_index":3053,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["searchcomponent",{"_index":701,"title":{},"body":{"components/AppComponent.html":{}}}],["searchenabled",{"_index":940,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["searches",{"_index":4499,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["searching",{"_index":4044,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["searchinput",{"_index":4275,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["searchoperators",{"_index":3114,"title":{"interfaces/SearchOperators.html":{}},"body":{"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"coverage.html":{}}}],["searchparams",{"_index":1795,"title":{"interfaces/SearchParams.html":{}},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["searchplaylists(term",{"_index":4045,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["searchplaylistslocal(query",{"_index":4348,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["searchquery",{"_index":3964,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["searchresult",{"_index":3958,"title":{"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{}},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["searchresults",{"_index":3970,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["searchsongs(term",{"_index":4031,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["searchsongslocal(query",{"_index":4335,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["searchsubject",{"_index":3966,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["searchsuggestion",{"_index":3959,"title":{"interfaces/SearchSuggestion.html":{}},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["searchsuggestions",{"_index":3969,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["searchterm",{"_index":1496,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["sección",{"_index":3737,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["secondary",{"_index":294,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["seconds",{"_index":1549,"title":{},"body":{"injectables/AudioPlayerService.html":{},"pipes/DurationPipe.html":{},"injectables/EnhancedAudioPlayerService.html":{},"pipes/PlaylistDurationPipe.html":{},"interfaces/SongWithArtists.html":{}}}],["secs",{"_index":1703,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{}}}],["section",{"_index":342,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["secure",{"_index":5598,"title":{},"body":{"index.html":{}}}],["security",{"_index":2134,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["seekto",{"_index":1533,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{}}}],["seekto(time",{"_index":1566,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["seguidores",{"_index":1394,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/SearchResult-1.html":{}}}],["seguimiento",{"_index":2687,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["seguir",{"_index":2682,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["segundos",{"_index":4957,"title":{},"body":{"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["segura",{"_index":2113,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["seguridad",{"_index":2118,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["según",{"_index":4174,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["seleccionada",{"_index":3488,"title":{},"body":{"components/PictureSelectableComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["seleccionar",{"_index":3434,"title":{},"body":{"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["selección",{"_index":3463,"title":{},"body":{"components/PictureSelectableComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["select",{"_index":969,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["selectable",{"_index":2525,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PictureSelectableComponent.html":{},"components/RegisterPage.html":{}}}],["selectable'},{'name",{"_index":593,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["selectable.component",{"_index":4535,"title":{},"body":{"modules/SharedModule.html":{}}}],["selectable.component.html",{"_index":3443,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.scss",{"_index":3442,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts",{"_index":3432,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectable.component.ts:107",{"_index":3474,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:113",{"_index":3461,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:25",{"_index":3486,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:27",{"_index":3493,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:29",{"_index":3489,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:31",{"_index":3456,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:37",{"_index":3464,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:42",{"_index":3467,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:45",{"_index":3495,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:52",{"_index":3483,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:59",{"_index":3476,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:63",{"_index":3479,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:66",{"_index":3481,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:74",{"_index":3459,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable.component.ts:85",{"_index":3471,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["selectable/picture",{"_index":3431,"title":{},"body":{"components/PictureSelectableComponent.html":{},"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":1136,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["selectedlanguage",{"_index":3242,"title":{},"body":{"injectables/LanguageService.html":{}}}],["selectedsongs",{"_index":1019,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["selectedtab",{"_index":2615,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["selector",{"_index":14,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{}}}],["selectresult(result",{"_index":4474,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["selectsearchsuggestion(suggestion",{"_index":4080,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["selectsong",{"_index":4593,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["selectsong(song",{"_index":4605,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["selecttab(tab",{"_index":4118,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["semitransparente",{"_index":4375,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["sensibles",{"_index":5212,"title":{},"body":{"components/SplashPage.html":{}}}],["separación",{"_index":2204,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["separator",{"_index":2212,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["ser",{"_index":1246,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/EnhancedAudioPlayerService.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/UserService.html":{}}}],["server",{"_index":172,"title":{},"body":{"components/AboutPage.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{}}}],["service",{"_index":5429,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["service.interface",{"_index":1460,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseService.html":{},"interfaces/IArtistsService.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsService.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserService.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["service.interface.ts",{"_index":3066,"title":{},"body":{"interfaces/IArtistsService.html":{},"interfaces/IBaseService.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsService.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserService.html":{},"coverage.html":{}}}],["service.interface.ts:10",{"_index":3125,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:11",{"_index":3121,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:12",{"_index":3126,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:13",{"_index":3122,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:14",{"_index":3187,"title":{},"body":{"interfaces/IUserService.html":{}}}],["service.interface.ts:7",{"_index":3067,"title":{},"body":{"interfaces/IArtistsService.html":{},"interfaces/IBaseService.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:8",{"_index":3123,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/IUserService.html":{}}}],["service.interface.ts:9",{"_index":3124,"title":{},"body":{"interfaces/IBaseService.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/IUserService.html":{}}}],["service.service",{"_index":1457,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["service.service.ts",{"_index":1989,"title":{},"body":{"injectables/BaseService.html":{},"coverage.html":{}}}],["service.service.ts:13",{"_index":1990,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:18",{"_index":1993,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:19",{"_index":1994,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:20",{"_index":1995,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:21",{"_index":1996,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:28",{"_index":1997,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:32",{"_index":1991,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:36",{"_index":1998,"title":{},"body":{"injectables/BaseService.html":{}}}],["service.service.ts:40",{"_index":1992,"title":{},"body":{"injectables/BaseService.html":{}}}],["servicecall",{"_index":3313,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["services/interfaces/authentication.interface",{"_index":1915,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["services/interfaces/strapi",{"_index":2242,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["servicio",{"_index":1153,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["servicios",{"_index":852,"title":{},"body":{"modules/AppModule.html":{},"injectables/BaseRepositoryHttpService.html":{}}}],["sesión",{"_index":3349,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"miscellaneous/variables.html":{}}}],["set",{"_index":1063,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/UserService.html":{}}}],["setadd",{"_index":1170,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["setadd(data",{"_index":1243,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["setadd(data:t):any",{"_index":3109,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["setadd(user",{"_index":3162,"title":{},"body":{"interfaces/IUserMapping.html":{}}}],["setartist(_artist",{"_index":1052,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["setdisabledstate",{"_index":3453,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdisabledstate(isdisabled",{"_index":3480,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdisabledstate?(isdisabled",{"_index":3510,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["setdoc",{"_index":2769,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["setdoc(userref",{"_index":2832,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["setenrichedqueue",{"_index":2550,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["setenrichedqueue(songs",{"_index":2566,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["setinterval",{"_index":1666,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["setplayingcontext",{"_index":1534,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["setplayingcontext(context",{"_index":1569,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["setplaylist(_playlist",{"_index":3656,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["setqueue",{"_index":1535,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["setqueue(songs",{"_index":1572,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["settimeout",{"_index":2795,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{},"injectables/UserService.html":{}}}],["settimeout(resolve",{"_index":3643,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["setting",{"_index":2479,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["setupaudioevents",{"_index":1536,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["setupdate",{"_index":1171,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IUserMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["setupdate(data",{"_index":1249,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/IBaseMapping.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["setupdate(data:any):any",{"_index":3110,"title":{},"body":{"interfaces/IBaseMapping.html":{}}}],["setupdate(user",{"_index":3163,"title":{},"body":{"interfaces/IUserMapping.html":{}}}],["setupprogresstracking",{"_index":1537,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["setupreactiveobservables",{"_index":3990,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["setupsearch",{"_index":4814,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["setupsearchobservable",{"_index":4316,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["setupsearchobservables",{"_index":4007,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["setvolume",{"_index":1538,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{}}}],["setvolume(volume",{"_index":1577,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["shade",{"_index":522,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{}}}],["shadow",{"_index":386,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["shadow(0",{"_index":5163,"title":{},"body":{"components/SplashPage.html":{}}}],["share",{"_index":432,"title":{},"body":{"components/AboutPage.html":{},"injectables/ShareService.html":{},"interfaces/SongWithArtists.html":{}}}],["share.share",{"_index":4518,"title":{},"body":{"injectables/ShareService.html":{}}}],["shareapp",{"_index":32,"title":{},"body":{"components/AboutPage.html":{}}}],["shared/shared.module",{"_index":795,"title":{},"body":{"modules/AppModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/ProfilePageModule.html":{}}}],["sharedata",{"_index":222,"title":{},"body":{"components/AboutPage.html":{}}}],["sharedmodule",{"_index":731,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["shareitem",{"_index":4506,"title":{},"body":{"injectables/ShareService.html":{}}}],["shareitem(options",{"_index":4512,"title":{},"body":{"injectables/ShareService.html":{}}}],["shareplaylist",{"_index":4799,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["shareret",{"_index":4517,"title":{},"body":{"injectables/ShareService.html":{}}}],["shareservice",{"_index":4503,"title":{"injectables/ShareService.html":{}},"body":{"injectables/ShareService.html":{},"interfaces/SongWithArtists.html":{},"coverage.html":{}}}],["sharing",{"_index":238,"title":{},"body":{"components/AboutPage.html":{},"injectables/ShareService.html":{},"interfaces/SongWithArtists.html":{}}}],["short",{"_index":3612,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["shouldshowpause",{"_index":4753,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["shouldupdateauth",{"_index":5454,"title":{},"body":{"injectables/UserService.html":{}}}],["showallrecommended",{"_index":4139,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["showallsongs",{"_index":4137,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["showconfirmpassword",{"_index":2012,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/RegisterPage.html":{}}}],["showconfirmremovedialog",{"_index":4785,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["showcount",{"_index":938,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LikeButtonComponent.html":{}}}],["showerror(message",{"_index":2711,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["showerrortoast",{"_index":2392,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["showerrortoast(messagekey",{"_index":2402,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["showing",{"_index":3321,"title":{},"body":{"components/LikeButtonComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["shownewpassword",{"_index":2013,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["showoldpassword",{"_index":2014,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["showpassword",{"_index":3331,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["showsearch",{"_index":3962,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["showsearchresults",{"_index":3968,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["showsuccesstoast",{"_index":2393,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["showsuccesstoast(messagekey",{"_index":2405,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["showtoast",{"_index":2970,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["showtoast(message",{"_index":2712,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["showtoast(translationkey",{"_index":4797,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["shrink",{"_index":2152,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["shuffle",{"_index":4725,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["shuffleandplay",{"_index":4836,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["shuffled",{"_index":4728,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["shuffledqueue",{"_index":1689,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["shuffledqueue[i",{"_index":1687,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["shuffledqueue[j",{"_index":1688,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["shuffledsongs",{"_index":4731,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["shuffledsongs.length",{"_index":4732,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["shuffledsongs[i",{"_index":4733,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["shuffledsongs[j",{"_index":4734,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["si",{"_index":936,"title":{},"body":{"interfaces/ArtistData.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/ITasksService.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LikeButtonComponent.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["siempre",{"_index":5340,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["signin",{"_index":1719,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["signin(authpayload",{"_index":1729,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signin(authpayload:any):observable",{"_index":3093,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signin(response",{"_index":3072,"title":{},"body":{"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["signin(response:any):user",{"_index":3084,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signinpayload",{"_index":2746,"title":{"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{}},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["signinpayload(payload",{"_index":3074,"title":{},"body":{"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["signinpayload(payload:signinpayload):any",{"_index":3082,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signinurl",{"_index":5294,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["signinwithemailandpassword",{"_index":2762,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signout",{"_index":1720,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signout():observable",{"_index":3095,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup",{"_index":1721,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"miscellaneous/variables.html":{}}}],["signup(registerpayload",{"_index":1733,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"interfaces/IAuthentication.html":{}}}],["signup(registerpayload:any):observable",{"_index":3094,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["signup(response",{"_index":3077,"title":{},"body":{"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["signup(response:any):user",{"_index":3085,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signup(signuppayload",{"_index":2749,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["signuppayload",{"_index":2750,"title":{"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{}},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["signuppayload(payload",{"_index":3079,"title":{},"body":{"interfaces/IAuthMapping.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["signuppayload(payload:signuppayload):any",{"_index":3083,"title":{},"body":{"interfaces/IAuthMapping.html":{}}}],["signuppayload.email",{"_index":2825,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.gender",{"_index":2827,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.image",{"_index":2828,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.name",{"_index":2822,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signuppayload.surname",{"_index":2824,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["signupurl",{"_index":5291,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["siguen",{"_index":1215,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["sigues",{"_index":2678,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["siguiendo",{"_index":2994,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["simples",{"_index":5008,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["sin",{"_index":1188,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["sintaxis",{"_index":2263,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["sirve",{"_index":1892,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["size",{"_index":324,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/Small.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["sizing",{"_index":5156,"title":{},"body":{"components/SplashPage.html":{}}}],["skill",{"_index":252,"title":{},"body":{"components/AboutPage.html":{}}}],["skills",{"_index":97,"title":{},"body":{"components/AboutPage.html":{}}}],["skip",{"_index":5100,"title":{},"body":{"components/SplashPage.html":{}}}],["skipping",{"_index":3690,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["skipsplash",{"_index":5078,"title":{},"body":{"components/SplashPage.html":{}}}],["slidein",{"_index":2151,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["slideinfromleft",{"_index":5178,"title":{},"body":{"components/SplashPage.html":{}}}],["slideinfromright",{"_index":5181,"title":{},"body":{"components/SplashPage.html":{}}}],["small",{"_index":918,"title":{"interfaces/Small.html":{}},"body":{"interfaces/Artist.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"interfaces/Medium.html":{},"interfaces/Playlist.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["small:string",{"_index":3426,"title":{},"body":{"interfaces/Person.html":{}}}],["smooth",{"_index":526,"title":{},"body":{"components/AboutPage.html":{}}}],["snapshot",{"_index":2886,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docchanges().foreach(change",{"_index":2887,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["snapshot.docs.map(doc",{"_index":1864,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["snapshot.size",{"_index":1868,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["sobrescribir",{"_index":3146,"title":{},"body":{"interfaces/ISongsRepository.html":{},"components/PlaylistModalComponent.html":{}}}],["sociales",{"_index":5241,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["socialservice",{"_index":2607,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["sola",{"_index":4291,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["solicitud",{"_index":3216,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["solid",{"_index":451,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["solo",{"_index":2485,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["solución",{"_index":4945,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["son",{"_index":1191,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["song",{"_index":607,"title":{"interfaces/Song.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["song.album",{"_index":4345,"title":{},"body":{"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{}}}],["song.album.tolowercase().includes(lowerquery",{"_index":4346,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["song.artistnames",{"_index":4341,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{}}}],["song.artistnames.some((artistname",{"_index":4343,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["song.artistnames?.join",{"_index":4055,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{}}}],["song.artists_ids",{"_index":2655,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["song.artists_ids.length",{"_index":2656,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["song.artists_ids?.length",{"_index":4882,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["song.audiourl",{"_index":1643,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{},"interfaces/SongWithArtists.html":{}}}],["song.duration",{"_index":3617,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["song.id",{"_index":1102,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["song.id?.tostring()).filter(boolean",{"_index":1302,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["song.id}.mp3",{"_index":4749,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["song.image?.url",{"_index":4056,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["song.interface",{"_index":1607,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["song.interface.ts",{"_index":2600,"title":{},"body":{"interfaces/EnrichedSong.html":{},"coverage.html":{}}}],["song.model",{"_index":2601,"title":{},"body":{"interfaces/EnrichedSong.html":{}}}],["song.model.ts",{"_index":2956,"title":{},"body":{"interfaces/FirebaseSong.html":{},"interfaces/StrapiSongResponse.html":{},"coverage.html":{}}}],["song.name",{"_index":1134,"title":{},"body":{"components/ArtistModalComponent.html":{},"injectables/AudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{}}}],["song.name.tolowercase().includes(lowerquery",{"_index":4340,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["song.png",{"_index":4177,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["song.select",{"_index":4628,"title":{},"body":{"components/SongDetailModalComponent.html":{}}}],["song_ids",{"_index":2953,"title":{},"body":{"interfaces/FirebasePlaylist.html":{},"interfaces/Playlist.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/StrapiPlaylistResponse.html":{}}}],["songdata",{"_index":4895,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["songdata.image",{"_index":4898,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["songdetailmodalcomponent",{"_index":606,"title":{"components/SongDetailModalComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["songduration",{"_index":3616,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["songenrichmentservice",{"_index":736,"title":{"injectables/SongEnrichmentService.html":{}},"body":{"modules/AppModule.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"coverage.html":{},"overview.html":{}}}],["songgridcardcomponent",{"_index":609,"title":{"components/SongGridCardComponent.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["songid",{"_index":3042,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"components/LikeButtonComponent.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["songids",{"_index":1041,"title":{},"body":{"components/ArtistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["songids.map(id",{"_index":1081,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/EnrichedSong-1.html":{}}}],["songindex",{"_index":3581,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["songmapping",{"_index":2851,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["songmodalcomponent",{"_index":610,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["songpromises",{"_index":2646,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["songrequests",{"_index":4762,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["songs",{"_index":825,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ArtistModalComponent.html":{},"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/PlayerState.html":{},"pipes/PlaylistDurationPipe.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"modules/SongsPageModule.html":{}}}],["songs'},{'name",{"_index":612,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["songs.filter((song",{"_index":2650,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SongWithArtists.html":{}}}],["songs.filter(song",{"_index":4621,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["songs.length",{"_index":2719,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"pipes/PlaylistDurationPipe.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{}}}],["songs.map(song",{"_index":1673,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{}}}],["songs.page",{"_index":5046,"title":{},"body":{"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{}}}],["songs.page.html",{"_index":4807,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["songs.page.scss",{"_index":4808,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["songs.push(song",{"_index":4135,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["songs.reduce((acc",{"_index":3615,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["songs.slice(0",{"_index":4331,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["songs.splice(event.sourceindex",{"_index":4858,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["songs.splice(event.targetindex",{"_index":4859,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["songs[event.sourceindex",{"_index":4857,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["songs_api_url_token",{"_index":774,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["songs_ids",{"_index":910,"title":{},"body":{"interfaces/Artist.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"interfaces/FirebaseArtist.html":{}}}],["songs_repository_mapping_token",{"_index":2867,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["songs_repository_token",{"_index":4865,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["songs_resource_name_token",{"_index":777,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["songscount",{"_index":4165,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["songsdata",{"_index":1230,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["songsdata.data.map((song",{"_index":1301,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["songsdata?.data",{"_index":1299,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["songsmappingfactory",{"_index":754,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["songsmappingstrapi",{"_index":4948,"title":{"injectables/SongsMappingStrapi.html":{}},"body":{"injectables/SongsMappingStrapi.html":{},"coverage.html":{}}}],["songspage",{"_index":611,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"components/SplashPage.html":{},"coverage.html":{},"overview.html":{}}}],["songspagemodule",{"_index":5040,"title":{"modules/SongsPageModule.html":{}},"body":{"modules/SongsPageModule.html":{},"modules.html":{},"overview.html":{}}}],["songspageroutingmodule",{"_index":5044,"title":{"modules/SongsPageRoutingModule.html":{}},"body":{"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["songsrepositoryfactory",{"_index":757,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["songsresponse",{"_index":4295,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["songsresponse?.data",{"_index":4303,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["songsservice",{"_index":737,"title":{"injectables/SongsService.html":{}},"body":{"modules/AppModule.html":{},"components/ArtistModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"coverage.html":{},"overview.html":{}}}],["songssvc",{"_index":3983,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["songwithartists",{"_index":4614,"title":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{}},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"coverage.html":{}}}],["soporte",{"_index":147,"title":{},"body":{"components/AboutPage.html":{}}}],["sort",{"_index":2271,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/StrapiRepositoryService.html":{}}}],["sort[0]=${value",{"_index":2272,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["sound",{"_index":4675,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["soundbars",{"_index":4677,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutPage.html":{},"modules/AboutPageModule.html":{},"modules/AboutPageRoutingModule.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"modules/ArtistsPageRoutingModule.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"modules/HomePageModule.html":{},"modules/HomePageRoutingModule.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsRepository.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/ITasksService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"modules/LoginPageModule.html":{},"modules/LoginPageRoutingModule.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/PlaylistsPageRoutingModule.html":{},"injectables/PlaylistsService.html":{},"modules/ProfilePageModule.html":{},"modules/ProfilePageRoutingModule.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"modules/RegisterPageModule.html":{},"modules/RegisterPageRoutingModule.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"modules/SharedModule.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"modules/SongsPageModule.html":{},"modules/SongsPageRoutingModule.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["sourceindex",{"_index":2370,"title":{},"body":{"directives/DragDropDirective.html":{},"interfaces/SongWithArtists-1.html":{}}}],["space",{"_index":1008,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["spacing",{"_index":2168,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["span",{"_index":2153,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{}}}],["specific",{"_index":515,"title":{},"body":{"components/AboutPage.html":{}}}],["specifically",{"_index":3711,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["spin",{"_index":395,"title":{},"body":{"components/AboutPage.html":{}}}],["spinner",{"_index":2995,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{}}}],["splash",{"_index":614,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["splash.page",{"_index":5218,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["splash.page.html",{"_index":5069,"title":{},"body":{"components/SplashPage.html":{}}}],["splash.page.scss",{"_index":5068,"title":{},"body":{"components/SplashPage.html":{}}}],["splashcontainer",{"_index":5139,"title":{},"body":{"components/SplashPage.html":{}}}],["splashcontainer.style.opacity",{"_index":5142,"title":{},"body":{"components/SplashPage.html":{}}}],["splashcontainer.style.transition",{"_index":5141,"title":{},"body":{"components/SplashPage.html":{}}}],["splashduration",{"_index":5133,"title":{},"body":{"components/SplashPage.html":{}}}],["splashpage",{"_index":613,"title":{"components/SplashPage.html":{}},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"modules/SplashPageRoutingModule.html":{},"coverage.html":{}}}],["splashpageroutingmodule",{"_index":5216,"title":{"modules/SplashPageRoutingModule.html":{}},"body":{"modules/SplashPageRoutingModule.html":{},"modules.html":{}}}],["spotify",{"_index":3728,"title":{},"body":{"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["src/.../app.module.ts",{"_index":5574,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../auth.guard.ts",{"_index":5612,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../blob.ts",{"_index":5575,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../edit",{"_index":5577,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../environment.prod.ts",{"_index":5613,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":5614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../no",{"_index":5615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../picture",{"_index":5616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../profile.page.ts",{"_index":5576,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../repository.factory.ts",{"_index":5573,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../repository.tokens.ts",{"_index":5611,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../song",{"_index":5578,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../strapi",{"_index":5610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../validators.ts",{"_index":5579,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":855,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":657,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":671,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:16",{"_index":684,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":678,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":683,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:35",{"_index":676,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":739,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/guards/auth.guard.ts",{"_index":5465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/guards/no",{"_index":5467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/models/artist.model",{"_index":982,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{}}}],["src/app/core/models/artist.model.ts",{"_index":903,"title":{},"body":{"interfaces/Artist.html":{},"coverage.html":{}}}],["src/app/core/models/auth.model.ts",{"_index":4561,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{},"coverage.html":{}}}],["src/app/core/models/base.model.ts",{"_index":3400,"title":{},"body":{"interfaces/Model.html":{},"coverage.html":{}}}],["src/app/core/models/enriched",{"_index":2599,"title":{},"body":{"interfaces/EnrichedSong.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"coverage.html":{}}}],["src/app/core/models/firebase/firebase",{"_index":2735,"title":{},"body":{"interfaces/FirebaseArtist.html":{},"interfaces/FirebaseGroup.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"coverage.html":{}}}],["src/app/core/models/group.model.ts",{"_index":3022,"title":{},"body":{"interfaces/Group.html":{},"coverage.html":{}}}],["src/app/core/models/paginated.model",{"_index":4613,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["src/app/core/models/paginated.model.ts",{"_index":3404,"title":{},"body":{"interfaces/Paginated.html":{},"coverage.html":{}}}],["src/app/core/models/person.model.ts",{"_index":3414,"title":{},"body":{"interfaces/Person.html":{},"coverage.html":{}}}],["src/app/core/models/playlist.model",{"_index":3658,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["src/app/core/models/playlist.model.ts",{"_index":3587,"title":{},"body":{"interfaces/Playlist.html":{},"coverage.html":{}}}],["src/app/core/models/song.model",{"_index":1055,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-3.html":{}}}],["src/app/core/models/song.model.ts",{"_index":4580,"title":{},"body":{"interfaces/Song.html":{},"coverage.html":{}}}],["src/app/core/models/strapi/strapi",{"_index":5373,"title":{},"body":{"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUserResponse.html":{},"coverage.html":{}}}],["src/app/core/models/task.model.ts",{"_index":5383,"title":{},"body":{"interfaces/Task.html":{},"coverage.html":{}}}],["src/app/core/models/user.model",{"_index":2413,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["src/app/core/models/user.model.ts",{"_index":4567,"title":{},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/artists",{"_index":1150,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/base",{"_index":1767,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/json",{"_index":3189,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/playlists",{"_index":3757,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/songs",{"_index":4949,"title":{},"body":{"injectables/SongsMappingStrapi.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/strapi",{"_index":2236,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["src/app/core/repositories/impl/users",{"_index":5492,"title":{},"body":{"coverage.html":{}}}],["src/app/core/repositories/intefaces/artists",{"_index":3033,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/base",{"_index":3098,"title":{},"body":{"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/playlists",{"_index":3130,"title":{},"body":{"interfaces/IPlaylistsRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/songs",{"_index":3143,"title":{},"body":{"interfaces/ISongsRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/intefaces/user",{"_index":3161,"title":{},"body":{"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"coverage.html":{}}}],["src/app/core/repositories/repository.factory.ts",{"_index":5496,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/repositories/repository.tokens",{"_index":3957,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["src/app/core/repositories/repository.tokens.ts",{"_index":5499,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/core/services/impl/artists.service",{"_index":929,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["src/app/core/services/impl/artists.service.ts",{"_index":1426,"title":{},"body":{"injectables/ArtistsService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/artists.service.ts:13",{"_index":1435,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["src/app/core/services/impl/artists.service.ts:20",{"_index":1441,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["src/app/core/services/impl/artists.service.ts:38",{"_index":1443,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["src/app/core/services/impl/artists.service.ts:67",{"_index":1438,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["src/app/core/services/impl/audio",{"_index":1518,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/PlayerState.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"coverage.html":{}}}],["src/app/core/services/impl/base",{"_index":1056,"title":{},"body":{"components/ArtistModalComponent.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{},"coverage.html":{}}}],["src/app/core/services/impl/enhanced",{"_index":2547,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["src/app/core/services/impl/firebase",{"_index":2739,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/playlists.service",{"_index":3954,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["src/app/core/services/impl/playlists.service.ts",{"_index":3897,"title":{},"body":{"injectables/PlaylistsService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/playlists.service.ts:110",{"_index":3910,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/playlists.service.ts:120",{"_index":3904,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/playlists.service.ts:137",{"_index":3913,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/playlists.service.ts:14",{"_index":3901,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/playlists.service.ts:50",{"_index":3912,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/playlists.service.ts:67",{"_index":3905,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/playlists.service.ts:78",{"_index":3908,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/playlists.service.ts:94",{"_index":3907,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["src/app/core/services/impl/share.service",{"_index":4688,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["src/app/core/services/impl/share.service.ts",{"_index":4504,"title":{},"body":{"injectables/ShareService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/share.service.ts:12",{"_index":4513,"title":{},"body":{"injectables/ShareService.html":{}}}],["src/app/core/services/impl/share.service.ts:46",{"_index":4510,"title":{},"body":{"injectables/ShareService.html":{}}}],["src/app/core/services/impl/share.service.ts:8",{"_index":4508,"title":{},"body":{"injectables/ShareService.html":{}}}],["src/app/core/services/impl/social.service",{"_index":2608,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["src/app/core/services/impl/social.service.ts",{"_index":5504,"title":{},"body":{"coverage.html":{}}}],["src/app/core/services/impl/song",{"_index":2713,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/SongEnrichmentService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/songs.service",{"_index":1058,"title":{},"body":{"components/ArtistModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-3.html":{}}}],["src/app/core/services/impl/songs.service.ts",{"_index":4863,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/songs.service.ts:147",{"_index":5057,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:162",{"_index":5062,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:23",{"_index":5055,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:33",{"_index":5061,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:40",{"_index":5059,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:56",{"_index":5056,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:64",{"_index":5060,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:70",{"_index":5063,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/songs.service.ts:85",{"_index":5064,"title":{},"body":{"injectables/SongsService.html":{}}}],["src/app/core/services/impl/strapi",{"_index":2050,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/core/services/impl/user.service",{"_index":2414,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["src/app/core/services/impl/user.service.ts",{"_index":5388,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/app/core/services/impl/user.service.ts:101",{"_index":5395,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:117",{"_index":5401,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:133",{"_index":5398,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:137",{"_index":5399,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:141",{"_index":5394,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:15",{"_index":5392,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:157",{"_index":5400,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:174",{"_index":5404,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:24",{"_index":5396,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/impl/user.service.ts:29",{"_index":5402,"title":{},"body":{"injectables/UserService.html":{}}}],["src/app/core/services/interfaces/artists",{"_index":3065,"title":{},"body":{"interfaces/IArtistsService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/auth",{"_index":3068,"title":{},"body":{"interfaces/IAuthMapping.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts",{"_index":3087,"title":{},"body":{"interfaces/IAuthentication.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:4",{"_index":3090,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:5",{"_index":3092,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:6",{"_index":3091,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:7",{"_index":3089,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/authentication.interface.ts:8",{"_index":3088,"title":{},"body":{"interfaces/IAuthentication.html":{}}}],["src/app/core/services/interfaces/base",{"_index":3120,"title":{},"body":{"interfaces/IBaseService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/collection",{"_index":2228,"title":{},"body":{"interfaces/CollectionChange.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/firebase",{"_index":2846,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/playlists",{"_index":3132,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/songs",{"_index":3151,"title":{},"body":{"interfaces/ISongsService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/strapi",{"_index":3152,"title":{},"body":{"interfaces/IStrapiAuthentication.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/tasks",{"_index":3157,"title":{},"body":{"interfaces/ITasksService.html":{},"coverage.html":{}}}],["src/app/core/services/interfaces/user",{"_index":3186,"title":{},"body":{"interfaces/IUserService.html":{},"coverage.html":{}}}],["src/app/core/services/language.service.ts",{"_index":3228,"title":{},"body":{"injectables/LanguageService.html":{},"coverage.html":{}}}],["src/app/core/services/language.service.ts:22",{"_index":3237,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:26",{"_index":3238,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:30",{"_index":3239,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:34",{"_index":3241,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:8",{"_index":3243,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/services/language.service.ts:9",{"_index":3236,"title":{},"body":{"injectables/LanguageService.html":{}}}],["src/app/core/utils/blob.ts",{"_index":5510,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/core/utils/validators",{"_index":2049,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/RegisterPage.html":{}}}],["src/app/core/utils/validators.ts",{"_index":5511,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/pages/about/about",{"_index":651,"title":{},"body":{"modules/AboutPageRoutingModule.html":{}}}],["src/app/pages/about/about.module.ts",{"_index":636,"title":{},"body":{"modules/AboutPageModule.html":{}}}],["src/app/pages/about/about.page.scss",{"_index":276,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts",{"_index":10,"title":{},"body":{"components/AboutPage.html":{},"coverage.html":{}}}],["src/app/pages/about/about.page.ts:109",{"_index":73,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:12",{"_index":104,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:23",{"_index":164,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:56",{"_index":188,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:65",{"_index":37,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:70",{"_index":50,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:76",{"_index":43,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:83",{"_index":67,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:91",{"_index":61,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/about/about.page.ts:98",{"_index":51,"title":{},"body":{"components/AboutPage.html":{}}}],["src/app/pages/artist",{"_index":1143,"title":{},"body":{"modules/ArtistProfilePageModule.html":{},"modules/ArtistProfilePageRoutingModule.html":{},"interfaces/EnrichedSong-1.html":{},"coverage.html":{}}}],["src/app/pages/artists/artists",{"_index":1425,"title":{},"body":{"modules/ArtistsPageRoutingModule.html":{}}}],["src/app/pages/artists/artists.module.ts",{"_index":1422,"title":{},"body":{"modules/ArtistsPageModule.html":{}}}],["src/app/pages/artists/artists.page.ts",{"_index":1314,"title":{},"body":{"components/ArtistsPage.html":{},"coverage.html":{}}}],["src/app/pages/artists/artists.page.ts:107",{"_index":1333,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:132",{"_index":1338,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:136",{"_index":1335,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:16",{"_index":1341,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:17",{"_index":1343,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:19",{"_index":1344,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:20",{"_index":1346,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:21",{"_index":1327,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:30",{"_index":1330,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:35",{"_index":1329,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:51",{"_index":1331,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/artists/artists.page.ts:73",{"_index":1340,"title":{},"body":{"components/ArtistsPage.html":{}}}],["src/app/pages/home/home",{"_index":3032,"title":{},"body":{"modules/HomePageRoutingModule.html":{}}}],["src/app/pages/home/home.module.ts",{"_index":3030,"title":{},"body":{"modules/HomePageModule.html":{}}}],["src/app/pages/home/home.page.ts",{"_index":3951,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"coverage.html":{}}}],["src/app/pages/login/login",{"_index":3399,"title":{},"body":{"modules/LoginPageRoutingModule.html":{}}}],["src/app/pages/login/login.module.ts",{"_index":3397,"title":{},"body":{"modules/LoginPageModule.html":{}}}],["src/app/pages/login/login.page.ts",{"_index":3327,"title":{},"body":{"components/LoginPage.html":{},"coverage.html":{}}}],["src/app/pages/login/login.page.ts:102",{"_index":3345,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:13",{"_index":3342,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:14",{"_index":3336,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:30",{"_index":3338,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:69",{"_index":3340,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:85",{"_index":3337,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:94",{"_index":3341,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/login/login.page.ts:98",{"_index":3343,"title":{},"body":{"components/LoginPage.html":{}}}],["src/app/pages/playlist",{"_index":3594,"title":{},"body":{"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistDetailPageRoutingModule.html":{},"interfaces/SongWithArtists.html":{},"coverage.html":{}}}],["src/app/pages/playlists/playlists",{"_index":3896,"title":{},"body":{"modules/PlaylistsPageRoutingModule.html":{}}}],["src/app/pages/playlists/playlists.module.ts",{"_index":3894,"title":{},"body":{"modules/PlaylistsPageModule.html":{}}}],["src/app/pages/playlists/playlists.page.ts",{"_index":3837,"title":{},"body":{"components/PlaylistsPage.html":{},"coverage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:141",{"_index":3853,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:165",{"_index":3854,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:17",{"_index":3857,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:18",{"_index":3862,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:20",{"_index":3858,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:21",{"_index":3859,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:22",{"_index":3860,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:23",{"_index":3847,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:36",{"_index":3850,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:40",{"_index":3849,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:51",{"_index":3851,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/playlists/playlists.page.ts:97",{"_index":3856,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["src/app/pages/profile/profile",{"_index":3949,"title":{},"body":{"modules/ProfilePageRoutingModule.html":{}}}],["src/app/pages/profile/profile.module.ts",{"_index":3948,"title":{},"body":{"modules/ProfilePageModule.html":{}}}],["src/app/pages/profile/profile.page.ts",{"_index":5518,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/pages/register/register",{"_index":4265,"title":{},"body":{"modules/RegisterPageRoutingModule.html":{}}}],["src/app/pages/register/register.module.ts",{"_index":4263,"title":{},"body":{"modules/RegisterPageModule.html":{}}}],["src/app/pages/register/register.page.ts",{"_index":4192,"title":{},"body":{"components/RegisterPage.html":{},"coverage.html":{}}}],["src/app/pages/register/register.page.ts:111",{"_index":4200,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:120",{"_index":4206,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:124",{"_index":4205,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:128",{"_index":4209,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:132",{"_index":4211,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:136",{"_index":4213,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:140",{"_index":4214,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:144",{"_index":4215,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:148",{"_index":4216,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:15",{"_index":4207,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:16",{"_index":4208,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:17",{"_index":4199,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:38",{"_index":4201,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:79",{"_index":4202,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/register/register.page.ts:95",{"_index":4204,"title":{},"body":{"components/RegisterPage.html":{}}}],["src/app/pages/songs/songs",{"_index":5047,"title":{},"body":{"modules/SongsPageRoutingModule.html":{}}}],["src/app/pages/songs/songs.module.ts",{"_index":5045,"title":{},"body":{"modules/SongsPageModule.html":{}}}],["src/app/pages/songs/songs.page.ts",{"_index":4805,"title":{},"body":{"interfaces/SongWithArtists-1.html":{},"coverage.html":{}}}],["src/app/pages/splash/splash",{"_index":5217,"title":{},"body":{"modules/SplashPageRoutingModule.html":{}}}],["src/app/pages/splash/splash.page.ts",{"_index":5065,"title":{},"body":{"components/SplashPage.html":{},"coverage.html":{}}}],["src/app/pages/splash/splash.page.ts:118",{"_index":5093,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:148",{"_index":5096,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:159",{"_index":5101,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:20",{"_index":5118,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:33",{"_index":5103,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:34",{"_index":5119,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:35",{"_index":5080,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:42",{"_index":5092,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:46",{"_index":5091,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:61",{"_index":5082,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:81",{"_index":5086,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/pages/splash/splash.page.ts:93",{"_index":5090,"title":{},"body":{"components/SplashPage.html":{}}}],["src/app/shared/components/artist",{"_index":953,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"modules/ArtistsPageModule.html":{},"coverage.html":{}}}],["src/app/shared/components/audio",{"_index":5522,"title":{},"body":{"coverage.html":{}}}],["src/app/shared/components/change",{"_index":2010,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/clickable",{"_index":921,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/edit",{"_index":2389,"title":{},"body":{"components/EditProfileModalComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/components/follow",{"_index":2964,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/global",{"_index":4267,"title":{},"body":{"interfaces/SearchResult-1.html":{},"coverage.html":{}}}],["src/app/shared/components/like",{"_index":3257,"title":{},"body":{"components/LikeButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/picture",{"_index":3430,"title":{},"body":{"components/PictureSelectableComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/shared/components/play",{"_index":3545,"title":{},"body":{"components/PlayButtonComponent.html":{},"coverage.html":{}}}],["src/app/shared/components/playlist",{"_index":3634,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"coverage.html":{}}}],["src/app/shared/components/song",{"_index":4584,"title":{},"body":{"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/app/shared/directives/drag",{"_index":2308,"title":{},"body":{"directives/DragDropDirective.html":{},"coverage.html":{}}}],["src/app/shared/pipe/duration.pipe.ts",{"_index":2375,"title":{},"body":{"pipes/DurationPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipe/duration.pipe.ts:7",{"_index":2377,"title":{},"body":{"pipes/DurationPipe.html":{}}}],["src/app/shared/pipe/password",{"_index":3409,"title":{},"body":{"pipes/PasswordVisibilityPipe.html":{},"coverage.html":{}}}],["src/app/shared/pipe/playlist",{"_index":3598,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{},"coverage.html":{}}}],["src/app/shared/shared.module",{"_index":1145,"title":{},"body":{"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SongsPageModule.html":{}}}],["src/app/shared/shared.module.ts",{"_index":4532,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/environments/environment",{"_index":797,"title":{},"body":{"modules/AppModule.html":{}}}],["src/environments/environment.prod",{"_index":4867,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["src/environments/environment.prod.ts",{"_index":5530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":5531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":84,"title":{},"body":{"components/AboutPage.html":{}}}],["standalone",{"_index":5066,"title":{},"body":{"components/SplashPage.html":{}}}],["start",{"_index":711,"title":{},"body":{"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongGridCardComponent.html":{}}}],["start:0",{"_index":3537,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["startafter",{"_index":1832,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["started",{"_index":5589,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":1573,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["starts",{"_index":3673,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["state",{"_index":1682,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/PlayerState.html":{},"miscellaneous/variables.html":{}}}],["state.currentindex",{"_index":1684,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["state.currentsong",{"_index":4756,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["state.currentsong?.id",{"_index":3568,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["state.isplaying",{"_index":3570,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["state.isshuffled",{"_index":4759,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["state.queue.length",{"_index":1679,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["state.repeatmode",{"_index":1695,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["state.url",{"_index":5673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":5462,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":535,"title":{},"body":{"components/AboutPage.html":{}}}],["static",{"_index":4274,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["status",{"_index":2630,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SplashPage.html":{}}}],["step",{"_index":1664,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["steps",{"_index":1662,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["stop",{"_index":1539,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["storage",{"_index":2915,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storage.service.ts",{"_index":1933,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"coverage.html":{}}}],["storage.service.ts:102",{"_index":1946,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storage.service.ts:117",{"_index":1958,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storage.service.ts:133",{"_index":1948,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storage.service.ts:19",{"_index":1959,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storage.service.ts:25",{"_index":1953,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storage.service.ts:33",{"_index":1945,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storage.service.ts:71",{"_index":1950,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storage.service.ts:93",{"_index":1952,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["storagebucket",{"_index":842,"title":{},"body":{"modules/AppModule.html":{}}}],["storageref",{"_index":2933,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storagereference",{"_index":2922,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["storedlang",{"_index":3249,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage",{"_index":3234,"title":{},"body":{"injectables/LanguageService.html":{}}}],["storelanguage(lang",{"_index":3240,"title":{},"body":{"injectables/LanguageService.html":{}}}],["strapi",{"_index":171,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"miscellaneous/variables.html":{}}}],["strapi.service.ts",{"_index":1152,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"coverage.html":{}}}],["strapi.service.ts:113",{"_index":1220,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:125",{"_index":3762,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["strapi.service.ts:139",{"_index":3760,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["strapi.service.ts:141",{"_index":1228,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:154",{"_index":1212,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:168",{"_index":1234,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:184",{"_index":1173,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:193",{"_index":1208,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:202",{"_index":1182,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:21",{"_index":1244,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{}}}],["strapi.service.ts:220",{"_index":3758,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["strapi.service.ts:229",{"_index":3765,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["strapi.service.ts:238",{"_index":3759,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["strapi.service.ts:24",{"_index":4953,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["strapi.service.ts:253",{"_index":4955,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["strapi.service.ts:297",{"_index":4950,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["strapi.service.ts:306",{"_index":4954,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["strapi.service.ts:315",{"_index":4951,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["strapi.service.ts:37",{"_index":1251,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:38",{"_index":4952,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["strapi.service.ts:62",{"_index":3766,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["strapi.service.ts:69",{"_index":1196,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi.service.ts:83",{"_index":1185,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["strapi_auth_token",{"_index":783,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strapiauthenticationservice",{"_index":2030,"title":{"injectables/StrapiAuthenticationService.html":{}},"body":{"components/ChangePasswordModalComponent.html":{},"injectables/StrapiAuthenticationService.html":{},"coverage.html":{}}}],["strapiauthenticationservice(signin",{"_index":5650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapiauthmappingservice",{"_index":5219,"title":{"injectables/StrapiAuthMappingService.html":{}},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["strapimedia",{"_index":2999,"title":{"interfaces/StrapiMedia.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapimediadata",{"_index":2998,"title":{"interfaces/StrapiMediaData.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapimediaservice",{"_index":3012,"title":{"classes/StrapiMediaService.html":{}},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{}}}],["strapimediaservice(upload",{"_index":5657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strapimeresponse",{"_index":5230,"title":{"interfaces/StrapiMeResponse.html":{}},"body":{"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["strapiplaylistresponse",{"_index":5372,"title":{"interfaces/StrapiPlaylistResponse.html":{}},"body":{"interfaces/StrapiPlaylistResponse.html":{},"coverage.html":{}}}],["strapirepositoryservice",{"_index":2254,"title":{"injectables/StrapiRepositoryService.html":{}},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{},"coverage.html":{}}}],["strapisignin",{"_index":5225,"title":{"interfaces/StrapiSignIn.html":{}},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["strapisigninresponse",{"_index":5222,"title":{"interfaces/StrapiSignInResponse.html":{}},"body":{"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["strapisignup",{"_index":5229,"title":{"interfaces/StrapiSignUp.html":{}},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["strapisignupresponse",{"_index":5226,"title":{"interfaces/StrapiSignUpResponse.html":{}},"body":{"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"coverage.html":{}}}],["strapisongresponse",{"_index":5381,"title":{"interfaces/StrapiSongResponse.html":{}},"body":{"interfaces/StrapiSongResponse.html":{},"coverage.html":{}}}],["strapisvc",{"_index":2029,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["strapiuploadresponse",{"_index":2997,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["strapiuser",{"_index":5232,"title":{"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{}},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"coverage.html":{}}}],["strapiuserresponse",{"_index":5382,"title":{"interfaces/StrapiUserResponse.html":{}},"body":{"interfaces/StrapiUser.html":{},"interfaces/StrapiUserResponse.html":{},"coverage.html":{}}}],["streaming",{"_index":110,"title":{},"body":{"components/AboutPage.html":{},"index.html":{}}}],["strength",{"_index":2155,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["strength=\"medium",{"_index":2163,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["strength=\"strong",{"_index":2165,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["strength=\"weak",{"_index":2161,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["string",{"_index":60,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IStrapiAuthentication.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["string).includes",{"_index":3618,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["string).split(':').map(number",{"_index":3619,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["string).startswith('data:image",{"_index":4899,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["strings",{"_index":1218,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["strong",{"_index":2033,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["structure",{"_index":5257,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["styleurls",{"_index":16,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{}}}],["su",{"_index":1806,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/RegisterPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["suave",{"_index":1656,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["subida",{"_index":4893,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["subiendo",{"_index":4900,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["subir",{"_index":4904,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["subirla",{"_index":4897,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{}}}],["subirlo",{"_index":5027,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["subject",{"_index":212,"title":{},"body":{"components/AboutPage.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["subject.asobservable",{"_index":2899,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.complete",{"_index":2903,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.error(error",{"_index":2897,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subject.next(changedata",{"_index":2894,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["submit",{"_index":1123,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["subrayado",{"_index":2200,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["subscribe",{"_index":1633,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"components/LikeButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["subscribe(collectionname",{"_index":2234,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["subscribe(isauthenticated",{"_index":4108,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["subscribe(isfollowing",{"_index":2633,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["subscribe(result",{"_index":4624,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["subscribe(state",{"_index":3566,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["subscribe(term",{"_index":4816,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["subscribetolikestatus",{"_index":3264,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["subscribetoplayerstate",{"_index":4643,"title":{},"body":{"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["subscribing",{"_index":3293,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["subscripciones",{"_index":4155,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["subscription",{"_index":3306,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/SplashPage.html":{}}}],["subscription.interface",{"_index":801,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["subscription.interface.ts",{"_index":2229,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{},"coverage.html":{}}}],["subscription.interface.ts:10",{"_index":3128,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscription.interface.ts:110",{"_index":2858,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:31",{"_index":2861,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:32",{"_index":2862,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:33",{"_index":2855,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:46",{"_index":2857,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:57",{"_index":2859,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscription.interface.ts:9",{"_index":3127,"title":{},"body":{"interfaces/ICollectionSubscription.html":{}}}],["subscription.interface.ts:96",{"_index":2860,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subscriptions",{"_index":2847,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["subtitle",{"_index":2225,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["subtítulo",{"_index":5180,"title":{},"body":{"components/SplashPage.html":{}}}],["subtítulos",{"_index":2223,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["success",{"_index":2074,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["successful",{"_index":2476,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/ShareService.html":{}}}],["successfully",{"_index":2675,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/PlaylistModalComponent.html":{}}}],["successmessage",{"_index":2069,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["sugerencia",{"_index":4079,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["sugerencias",{"_index":4049,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["suggestion",{"_index":4187,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["suggestion.id",{"_index":4084,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["suggestion.name",{"_index":4081,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["suggestion.type",{"_index":4082,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["suggestions",{"_index":4051,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["suggestions.push",{"_index":4054,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["super",{"_index":2924,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["super(authmapping",{"_index":2771,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["super(http",{"_index":3207,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["super(repository",{"_index":1469,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["super(userrepository",{"_index":5408,"title":{},"body":{"injectables/UserService.html":{}}}],["super.add(playlistdata",{"_index":3922,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["super.update(id",{"_index":3923,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["support",{"_index":541,"title":{},"body":{"components/AboutPage.html":{},"index.html":{},"modules.html":{}}}],["supported",{"_index":4527,"title":{},"body":{"injectables/ShareService.html":{}}}],["sure",{"_index":1381,"title":{},"body":{"components/ArtistsPage.html":{}}}],["surname",{"_index":2823,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebaseUser.html":{},"interfaces/Person.html":{},"components/RegisterPage.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["surname:string",{"_index":3415,"title":{},"body":{"interfaces/Person.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["sus",{"_index":4248,"title":{},"body":{"components/RegisterPage.html":{}}}],["suscribirse",{"_index":3275,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["suscripciones",{"_index":2906,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["suscripción",{"_index":2896,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["svg",{"_index":5108,"title":{},"body":{"components/SplashPage.html":{},"modules.html":{}}}],["switch",{"_index":1707,"title":{},"body":{"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["switch(backend",{"_index":5649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["switch(collectionname",{"_index":2876,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["switch(key",{"_index":2269,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["switchmap",{"_index":2240,"title":{},"body":{"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["switchmap(async",{"_index":4620,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["switchmap(currentuser",{"_index":5440,"title":{},"body":{"injectables/UserService.html":{}}}],["switchmap(enrichedsongs",{"_index":4037,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["switchmap(params",{"_index":2619,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SongWithArtists.html":{}}}],["switchmap(playlist",{"_index":3937,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["switchmap(query",{"_index":4318,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["switchmap(snapshot",{"_index":2943,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["switchmap(songs",{"_index":4035,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["switchmap(term",{"_index":4019,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["switchmap(updateresponse",{"_index":2302,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["switchmap(user",{"_index":2928,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["switchmap(usercredential",{"_index":2807,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["t",{"_index":1445,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["tab",{"_index":4120,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["table",{"_index":5533,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5532,"title":{},"body":{"coverage.html":{}}}],["tablets",{"_index":162,"title":{},"body":{"components/AboutPage.html":{}}}],["tagline",{"_index":407,"title":{},"body":{"components/AboutPage.html":{}}}],["tailwind",{"_index":174,"title":{},"body":{"components/AboutPage.html":{}}}],["take",{"_index":3955,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/UserService.html":{}}}],["take(1",{"_index":4041,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["takeuntil",{"_index":2606,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["takeuntil(this.destroy",{"_index":2625,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/LikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["takewhile",{"_index":1604,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["tamaño",{"_index":1202,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["tamaños",{"_index":1225,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["tap",{"_index":1467,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["tap(response",{"_index":5357,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["tap(term",{"_index":4014,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["tap(updateduser",{"_index":5425,"title":{},"body":{"injectables/UserService.html":{}}}],["tap(userdata",{"_index":5457,"title":{},"body":{"injectables/UserService.html":{}}}],["targetindex",{"_index":2369,"title":{},"body":{"directives/DragDropDirective.html":{},"interfaces/SongWithArtists-1.html":{}}}],["tarjetas",{"_index":1402,"title":{},"body":{"components/ArtistsPage.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["task",{"_index":3158,"title":{"interfaces/Task.html":{}},"body":{"interfaces/ITasksService.html":{},"interfaces/Task.html":{},"coverage.html":{}}}],["tech",{"_index":470,"title":{},"body":{"components/AboutPage.html":{}}}],["tech.name",{"_index":258,"title":{},"body":{"components/AboutPage.html":{}}}],["technologies",{"_index":24,"title":{},"body":{"components/AboutPage.html":{}}}],["tecnología",{"_index":242,"title":{},"body":{"components/AboutPage.html":{}}}],["tecnologías",{"_index":88,"title":{},"body":{"components/AboutPage.html":{}}}],["tecnológico",{"_index":257,"title":{},"body":{"components/AboutPage.html":{}}}],["tema",{"_index":279,"title":{},"body":{"components/AboutPage.html":{},"components/ClickableArtistNamesComponent.html":{},"components/SplashPage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{}}}],["temporales",{"_index":4880,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["tener",{"_index":4246,"title":{},"body":{"components/RegisterPage.html":{}}}],["term",{"_index":4016,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["term.length",{"_index":4020,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["term.tolowercase().trim",{"_index":4026,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["test(password",{"_index":2106,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["text",{"_index":224,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"injectables/ShareService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["texto",{"_index":1415,"title":{},"body":{"components/ArtistsPage.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["themes",{"_index":5597,"title":{},"body":{"index.html":{}}}],["then(async",{"_index":2817,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["thickness",{"_index":2202,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["this._artistnames.asobservable",{"_index":4658,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this._artistnames.next(['unknown",{"_index":4667,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this._artistnames.next(artists.map(artist",{"_index":4666,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this._artists.asobservable",{"_index":1342,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this._artists.next([...currentartists",{"_index":1376,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this._artists.next([...response.data",{"_index":1356,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this._artists.next([...this._artists.value",{"_index":1390,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this._artists.value",{"_index":1371,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this._authenticated.asobservable",{"_index":1743,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(false",{"_index":2796,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._authenticated.next(true",{"_index":2778,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._availablesongs.asobservable",{"_index":4608,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this._availablesongs.next([...this._availablesongs.value",{"_index":4626,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this._availablesongs.next(result.data",{"_index":4625,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this._basenewreleases.asobservable",{"_index":3992,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._basenewreleases.next(songs",{"_index":4169,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._baserecommendedsongs.asobservable",{"_index":4002,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._baserecommendedsongs.next(recommendedsongs",{"_index":4170,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._currentuser.asobservable",{"_index":3982,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["this._currentuser.next(updateduser",{"_index":4104,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["this._items.findindex(item",{"_index":1982,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["this._items.length",{"_index":1970,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["this._items.push(entity",{"_index":1977,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["this._items.slice",{"_index":1968,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["this._items.splice(index",{"_index":1987,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["this._items[index",{"_index":1983,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["this._picture.asobservable",{"_index":3492,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.complete",{"_index":3505,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(obj",{"_index":3508,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._picture.next(picture",{"_index":3513,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this._playerstate.asobservable",{"_index":1602,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this._playerstate.next",{"_index":1637,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this._playerstate.value",{"_index":1636,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this._playerstate.value.currentsong",{"_index":1705,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this._playerstate.value.playingfrom",{"_index":1706,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this._playlist.asobservable",{"_index":4691,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this._playlist.next(playlist",{"_index":4700,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this._playlist.next(updatedplaylist",{"_index":4775,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this._playlist.value",{"_index":4712,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this._playlists.asobservable",{"_index":3861,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this._playlists.next([...response.data",{"_index":3868,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this._playlists.next([...this._playlists.value",{"_index":3883,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this._quickaccess.asobservable",{"_index":3974,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._quickaccess.next([...currentplaylists",{"_index":4148,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._quickaccess.next(currentplaylists.filter(p",{"_index":4153,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._quickaccess.next(playlists",{"_index":4168,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._quickaccess.next(updatedplaylists",{"_index":4152,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._quickaccess.value",{"_index":4144,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this._ready.asobservable",{"_index":1745,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._ready.next(true",{"_index":2798,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._selectedsongs.asobservable",{"_index":1050,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this._selectedsongs.next([...currentsongs",{"_index":1097,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this._selectedsongs.next(currentsongs.filter(s",{"_index":1101,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this._selectedsongs.next(songs.filter((song",{"_index":1083,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this._selectedsongs.value",{"_index":1092,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this._songs.asobservable",{"_index":4693,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this._songs.next",{"_index":4702,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this._songs.next([...result.data",{"_index":4830,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this._songs.next([...songs",{"_index":4860,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this._songs.next([...this._songs.value",{"_index":4779,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this._songs.next(songs",{"_index":4768,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this._songs.next(this._songs.value.filter(s",{"_index":4793,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this._songs.value",{"_index":4711,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this._songs.value.map(s",{"_index":4772,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this._token",{"_index":2776,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.asobservable",{"_index":1746,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(mappeduser",{"_index":5334,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(this.authmapping.me(enricheduser",{"_index":2793,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.next(this.authmapping.me(user",{"_index":2794,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this._user.next(this.authmapping.signin(response",{"_index":5361,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(this.authmapping.signup(response",{"_index":5365,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(undefined",{"_index":2797,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this._user.next(user",{"_index":1760,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{}}}],["this.addloadingstate(panel",{"_index":4396,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.addnoresults(panel",{"_index":4399,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.addplaceholderartistnames(song",{"_index":4878,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.addrecentsearches(panel",{"_index":4395,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.addsearchresults(panel",{"_index":4398,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.addsearchtips(panel",{"_index":4400,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.alertctrl.create",{"_index":1379,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.allartists",{"_index":4307,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.allartists.filter(artist",{"_index":4356,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.allartists.length",{"_index":4315,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.allplaylists",{"_index":4304,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.allplaylists.filter(playlist",{"_index":4350,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.allplaylists.length",{"_index":4314,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.allsongs",{"_index":4301,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.allsongs.filter(song",{"_index":4339,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.allsongs.findindex(s",{"_index":4851,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.allsongs.length",{"_index":4313,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.animationitem",{"_index":5123,"title":{},"body":{"components/SplashPage.html":{}}}],["this.animationitem.addeventlistener('complete",{"_index":5129,"title":{},"body":{"components/SplashPage.html":{}}}],["this.animationitem.addeventlistener('loopcomplete",{"_index":5132,"title":{},"body":{"components/SplashPage.html":{}}}],["this.animationitem.destroy",{"_index":5124,"title":{},"body":{"components/SplashPage.html":{}}}],["this.animationitem.ispaused",{"_index":5147,"title":{},"body":{"components/SplashPage.html":{}}}],["this.animationitem.pause",{"_index":5149,"title":{},"body":{"components/SplashPage.html":{}}}],["this.animationitem.play",{"_index":5148,"title":{},"body":{"components/SplashPage.html":{}}}],["this.animationitem.setspeed(1.2",{"_index":5128,"title":{},"body":{"components/SplashPage.html":{}}}],["this.apiurl",{"_index":1919,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.apiurl}/${this.resource",{"_index":3226,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.apiurl}/${this.resource}/${id",{"_index":2294,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/${id}?populate",{"_index":2285,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.apiurl}/${this.resource}/?_page=${page}&_per_page=${pagesize}&${search",{"_index":3221,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.apiurl}/${this.resource}?&${search",{"_index":3223,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.apiurl}/${this.resource}?populate",{"_index":2264,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.appdragdropdata",{"_index":2349,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.appdragdropdata.image.url",{"_index":2357,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.appdragdropdata?.image?.url",{"_index":2355,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.appdragdropindex",{"_index":2350,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.artist",{"_index":991,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"interfaces/EnrichedSong-1.html":{}}}],["this.artist.id",{"_index":2672,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artist.name",{"_index":2679,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artist?.id",{"_index":2667,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artist?.name",{"_index":2692,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artistids",{"_index":949,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["this.artistids[index",{"_index":950,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["this.artistmapping",{"_index":2880,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.artistname",{"_index":2990,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["this.artistnames.map((name",{"_index":948,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["this.artistsdata",{"_index":947,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["this.artistsongs",{"_index":2652,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artistsongs.length",{"_index":2689,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artistsservice.getall(1",{"_index":2663,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SearchResult-1.html":{}}}],["this.artistsservice.getbyid(artistid).topromise",{"_index":2638,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artistsservice.getbyids(song.artists_ids).pipe",{"_index":2717,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["this.artistsservice.getbyids(song.artists_ids).topromise",{"_index":2657,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.artistsservice.getbyids(this.song.artists_ids).subscribe",{"_index":4665,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this.artistssvc.add(result.data).subscribe",{"_index":1360,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this.artistssvc.delete(artist.id).subscribe",{"_index":1385,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this.artistssvc.getall(1",{"_index":4048,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.artistssvc.getall(this.page",{"_index":1353,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this.artistssvc.getbyids(song.artists_ids).topromise",{"_index":4616,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.artistssvc.update(artist.id",{"_index":1365,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this.audio",{"_index":1614,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('ended",{"_index":1625,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('error",{"_index":1627,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('loadeddata",{"_index":1648,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('loadedmetadata",{"_index":1621,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('loadstart",{"_index":1619,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('pause",{"_index":1624,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('play",{"_index":1623,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.addeventlistener('timeupdate",{"_index":1630,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.currenttime",{"_index":1631,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.duration",{"_index":1622,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.pause",{"_index":1654,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.paused",{"_index":1634,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.play",{"_index":1652,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.src",{"_index":1646,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audio.volume",{"_index":1615,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.audioplayerservice.formattime(seconds",{"_index":2595,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.getcurrentsong",{"_index":2597,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.getplayerstate",{"_index":2596,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.getplayerstate().currentsong",{"_index":4752,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.next",{"_index":2589,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.pause",{"_index":2587,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.play",{"_index":2695,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.audioplayerservice.play(enrichedsong",{"_index":2577,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.play(enrichedsongs[0",{"_index":4723,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.play(enrichedsongs[index",{"_index":4741,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.play(shuffledsongs[0",{"_index":4739,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.audioplayerservice.play(song",{"_index":2573,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.audioplayerservice.play(this.allsongs[0",{"_index":4835,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.audioplayerservice.play(this.artistsongs[0",{"_index":2696,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.audioplayerservice.play(this.song",{"_index":3585,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.audioplayerservice.playerstate",{"_index":2586,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.audioplayerservice.previous",{"_index":2590,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.removefromqueue(index",{"_index":2598,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.resume",{"_index":2588,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.seekto(time",{"_index":2591,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.setplayingcontext",{"_index":4721,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.setqueue",{"_index":2693,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.audioplayerservice.setqueue([this.song",{"_index":3584,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.audioplayerservice.setqueue(enrichedsongs",{"_index":2582,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"interfaces/SongWithArtists.html":{}}}],["this.audioplayerservice.setqueue(shuffledsongs",{"_index":4736,"title":{},"body":{"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.audioplayerservice.setqueue(this.allsongs",{"_index":4834,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.audioplayerservice.setqueue(this.artistsongs",{"_index":2694,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.audioplayerservice.setqueue(this.playlist",{"_index":3583,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.audioplayerservice.setvolume(volume",{"_index":2592,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.togglerepeat",{"_index":2594,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.audioplayerservice.toggleshuffle",{"_index":2593,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{},"interfaces/SongWithArtists.html":{}}}],["this.auth",{"_index":2772,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.auth.currentuser",{"_index":2802,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.auth.gettoken",{"_index":2260,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["this.authmapping.me(enricheduser",{"_index":2803,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.me(response",{"_index":5325,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.me(user",{"_index":2845,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signin(enricheduser",{"_index":2813,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.authmapping.signin(response",{"_index":5362,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signinpayload(authpayload",{"_index":2804,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signup(response",{"_index":5366,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.authmapping.signuppayload(signuppayload",{"_index":2814,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["this.authservice",{"_index":5427,"title":{},"body":{"injectables/UserService.html":{}}}],["this.authservice.getcurrentuser",{"_index":2062,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.authsvc.authenticated",{"_index":4107,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.authsvc.authenticated$.subscribe",{"_index":5144,"title":{},"body":{"components/SplashPage.html":{}}}],["this.authsvc.getcurrentuser",{"_index":3704,"title":{},"body":{"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{}}}],["this.authsvc.ready$.pipe",{"_index":4105,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.authsvc.signin(this.loginform.value).subscribe",{"_index":3350,"title":{},"body":{"components/LoginPage.html":{}}}],["this.authsvc.signout().subscribe",{"_index":694,"title":{},"body":{"components/AppComponent.html":{}}}],["this.authsvc.user$.pipe",{"_index":4099,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["this.authsvc.user$.subscribe(user",{"_index":3678,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.base64tofile(songdata.image",{"_index":4902,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.buildartistsdata",{"_index":945,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["this.cacheloaded",{"_index":4311,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.cdr.markforcheck",{"_index":3304,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["this.changelanguage(storedlang",{"_index":3251,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.changepicture",{"_index":3530,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.changepicture(reader.result",{"_index":3524,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.checkiffollowing",{"_index":2985,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["this.checkifliked",{"_index":3641,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["this.checkifmobile",{"_index":4096,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.checkifmobile.bind(this",{"_index":4098,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.clearauthentication",{"_index":5333,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.clearsearch",{"_index":4117,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.clearsearchresults",{"_index":4018,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.collectionname",{"_index":1850,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.collectionref",{"_index":1848,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.collectionsubscriptionsvc.unsubscribe('playlists",{"_index":4112,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.collectionsubscriptionsvc.unsubscribe('songs",{"_index":4113,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.converttoenrichedsongs(songs",{"_index":4722,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.createoverlay",{"_index":4467,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.createresultitem(originalresult",{"_index":4419,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.createresultitem(result",{"_index":4423,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.createsearchfilters",{"_index":4825,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.currentlang",{"_index":690,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.currentplayingsong",{"_index":4813,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.currentsearchterm",{"_index":4817,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.dataurltoblob(formdata.image",{"_index":3686,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.db",{"_index":1846,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.deactivatesearch",{"_index":4387,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.defaultlang",{"_index":3255,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.delete.emit(this.artist",{"_index":984,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["this.delete.emit(this.song",{"_index":4669,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this.destroy$.complete",{"_index":2628,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.destroy$.next",{"_index":2627,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.edit.emit(this.artist",{"_index":983,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["this.edit.emit(this.song",{"_index":4668,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this.enhancedaudioplayer.playenrichedsong(song",{"_index":4132,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.enhancedaudioplayer.playenrichedsong(songs[0",{"_index":4128,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.enhancedaudioplayer.setenrichedqueue(songs",{"_index":4127,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.enrichsong(song",{"_index":2721,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{}}}],["this.enrichsongswithartists(validsongs",{"_index":2653,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.enrichsongwithartists([newsong",{"_index":4778,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.enrichsongwithartists(filteredsongs",{"_index":4623,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.enrichsongwithartists(paginatedresponse.data",{"_index":4828,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.enrichsongwithartists(songs",{"_index":4767,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.excludesongids.includes(song.id",{"_index":4622,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.fallbackshare(options",{"_index":4526,"title":{},"body":{"injectables/ShareService.html":{}}}],["this.fb.group",{"_index":1076,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["this.followloading",{"_index":2670,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.formatlongduration(totalseconds",{"_index":3625,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["this.formatshortduration(totalseconds",{"_index":3624,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["this.formbuilder.group",{"_index":2051,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{}}}],["this.formgroup",{"_index":1075,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.formgroup.controls['email",{"_index":2511,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.formgroup.controls['image",{"_index":2512,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.formgroup.controls['username",{"_index":2510,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.formgroup.dirty",{"_index":2447,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.formgroup.errors",{"_index":3715,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.formgroup.get('confirmpassword",{"_index":2095,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('confirmpassword')?.seterrors",{"_index":2058,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('confirmpassword')?.value",{"_index":2056,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('confirmpassword')?.valuechanges.subscribe",{"_index":2052,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('image')?.dirty",{"_index":1107,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this.formgroup.get('image')?.status",{"_index":3718,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.formgroup.get('image')?.valuechanges.subscribe(value",{"_index":3672,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.formgroup.get('name')?.status",{"_index":3717,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.formgroup.get('newpassword",{"_index":2094,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('newpassword')?.value",{"_index":2055,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('newpassword')?.valuechanges.subscribe",{"_index":2054,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('oldpassword",{"_index":2093,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.get('songs_ids')?.value",{"_index":1087,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this.formgroup.markasdirty",{"_index":1099,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this.formgroup.patchvalue",{"_index":1067,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.formgroup.valid",{"_index":1104,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.formgroup.value",{"_index":1106,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.formgroup.value.newpassword",{"_index":2067,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.formgroup.value.oldpassword",{"_index":2066,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.generatesearchsuggestions(results",{"_index":4022,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.getall(1",{"_index":1494,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/PlaylistsService.html":{}}}],["this.getall(page",{"_index":4874,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.getbyid(id).pipe",{"_index":1472,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["this.getbyid(playlistid).pipe",{"_index":3936,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["this.getcurrentuser",{"_index":5345,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.getdirtyvalues(this.formgroup",{"_index":1121,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.getheaders",{"_index":2274,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{}}}],["this.getmappingforcollection(collectionname",{"_index":2885,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.getone",{"_index":1275,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["this.getone(d",{"_index":3798,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["this.getone(data",{"_index":1313,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["this.getplaylistsongs(playlist.song_ids",{"_index":4126,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.getstoredlanguage",{"_index":3250,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.gettypeemoji(result.type",{"_index":4435,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.gotofullsearch",{"_index":4431,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.handlesongend",{"_index":1626,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.hasmorepages",{"_index":4627,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.hasvalue",{"_index":3507,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.http.delete",{"_index":2307,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.delete(`${this.apiurl}/${this.resource}/${id",{"_index":1929,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get",{"_index":3220,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource",{"_index":1920,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get(`${this.apiurl}/${this.resource}/${id",{"_index":1923,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.get(geturl",{"_index":2304,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.get(url",{"_index":2286,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.get>(url",{"_index":2275,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.patch",{"_index":3227,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.http.post",{"_index":2289,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.post(`${this.apiurl}/${this.resource",{"_index":1925,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.http.put",{"_index":2300,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.http.put(`${this.apiurl}/${id",{"_index":4891,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.http.put(`${this.apiurl}/${this.resource}/${id",{"_index":1927,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{}}}],["this.httpclient.get(meurlwithpopulate",{"_index":5324,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.httpclient.post",{"_index":3018,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.initializationpromise",{"_index":5317,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.initializeauthentication",{"_index":5318,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.initializeauthenticationsafely",{"_index":5314,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.initsplashtimer",{"_index":5120,"title":{},"body":{"components/SplashPage.html":{}}}],["this.iscurrentsongplaying",{"_index":3567,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.isdisabled",{"_index":3511,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.isdragging",{"_index":2348,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.isenrichedsong(song",{"_index":2572,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.isfollowing",{"_index":2635,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["this.ishovered",{"_index":986,"title":{},"body":{"components/ArtistGridCardComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.isliked",{"_index":3302,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["this.isloading",{"_index":2644,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.ismobile",{"_index":3667,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.isnavigating",{"_index":5136,"title":{},"body":{"components/SplashPage.html":{}}}],["this.isowner",{"_index":4705,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.isplaying",{"_index":987,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["this.issearchactive",{"_index":4466,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.issearching",{"_index":4015,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.isupdating",{"_index":2775,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["this.isupdatinguser",{"_index":5411,"title":{},"body":{"injectables/UserService.html":{}}}],["this.isweb",{"_index":3864,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.itemdropped.emit",{"_index":2367,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.jwt_token",{"_index":5320,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.languageservice.changelanguage(lang",{"_index":692,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.languageservice.getstoredlanguage",{"_index":691,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.languageservice.storelanguage(lang",{"_index":693,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.loadartistdata(artistid",{"_index":2623,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.loadartists",{"_index":1350,"title":{},"body":{"components/ArtistsPage.html":{},"components/SongGridCardComponent.html":{}}}],["this.loadartistsongs(artist.songs_ids",{"_index":2641,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.loadfollowstatus(artistid",{"_index":2622,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.loading",{"_index":2987,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["this.loadingcontroller.create",{"_index":2448,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{}}}],["this.loadingctrl.create",{"_index":2060,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.loadplaylists",{"_index":3866,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this.loadrecentsearches",{"_index":4286,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.loadrelatedartists",{"_index":2642,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.loadselectedsongs(_artist.songs_ids",{"_index":1074,"title":{},"body":{"components/ArtistModalComponent.html":{}}}],["this.loadsong(song",{"_index":1651,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.loadsongs",{"_index":4615,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.loadsongs(playlist",{"_index":4701,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.loadsongs(this._playlist.value",{"_index":4783,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.loadsongs(true",{"_index":4818,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.loadusercontent",{"_index":4110,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.location.back",{"_index":2703,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.loginform",{"_index":3346,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['email",{"_index":3373,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.controls['password",{"_index":3374,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.reset",{"_index":3368,"title":{},"body":{"components/LoginPage.html":{}}}],["this.loginform.valid",{"_index":3347,"title":{},"body":{"components/LoginPage.html":{}}}],["this.mapartistsfollow(attributes.artists_follow",{"_index":1287,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["this.mapimage(attributes.image",{"_index":1285,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["this.mapimagefield(playlist.image",{"_index":3921,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["this.mapping.getadded",{"_index":1878,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.getadded(res",{"_index":1926,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getdeleted(entity",{"_index":1885,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.getdeleted(res",{"_index":1930,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getone",{"_index":1874,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getone(elem",{"_index":3225,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.mapping.getone(res",{"_index":1924,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getpaginated",{"_index":1966,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getpaginated(page",{"_index":1867,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getupdated",{"_index":1882,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.getupdated(getresponse",{"_index":2306,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.getupdated(res",{"_index":1928,"title":{},"body":{"injectables/BaseRepositoryHttpService.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["this.mapping.setadd(entity",{"_index":2290,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setadd(entity))).pipe",{"_index":1876,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapping.setupdate(entity",{"_index":2296,"title":{},"body":{"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["this.mapping.setupdate(entity))).pipe",{"_index":1881,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["this.mapsongsids(attributes.songs_ids",{"_index":1286,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["this.maxartists",{"_index":952,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{}}}],["this.mediaservice.upload(imagefile).topromise",{"_index":4905,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.meurl.replace('/api/users/me",{"_index":5347,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.meurl}?populate",{"_index":5323,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.modalctrl.create",{"_index":1084,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.modalctrl.dismiss",{"_index":2092,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.modalctrl.dismiss(data",{"_index":1122,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.modalctrl.dismiss(null",{"_index":1131,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.modalctrl.dismiss(result",{"_index":2503,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.modalctrl.dismiss(true",{"_index":2076,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.mode",{"_index":1066,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["this.navigatetohome",{"_index":5135,"title":{},"body":{"components/SplashPage.html":{}}}],["this.navigationsubscription",{"_index":5121,"title":{},"body":{"components/SplashPage.html":{}}}],["this.navigationsubscription.unsubscribe",{"_index":5122,"title":{},"body":{"components/SplashPage.html":{}}}],["this.newid",{"_index":1974,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["this.newreleases",{"_index":3991,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.next",{"_index":1696,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.openplaylist(playlist",{"_index":4088,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.opensong(song",{"_index":4085,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.operationinprogress",{"_index":3307,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["this.overlayelement",{"_index":4369,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.overlayelement.queryselector('.search",{"_index":4391,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.page",{"_index":1352,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.pages",{"_index":1357,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.pagesize",{"_index":4619,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.pagesize).subscribe",{"_index":1354,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{}}}],["this.parsenumber(attributes.followers_count",{"_index":1284,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["this.parsenumber(attributes.listeners",{"_index":1283,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["this.performnavigation",{"_index":5143,"title":{},"body":{"components/SplashPage.html":{}}}],["this.picturemodal?.dismiss",{"_index":3531,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.platform.is('android",{"_index":3669,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.platform.is('capacitor",{"_index":4516,"title":{},"body":{"injectables/ShareService.html":{}}}],["this.platform.is('desktop",{"_index":3865,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.platform.is('ios",{"_index":3668,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["this.play(state.queue[nextindex",{"_index":1681,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.playerstate$.pipe",{"_index":4754,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.playerstate$.pipe(map(state",{"_index":4751,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.playlist.findindex(s",{"_index":3582,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.playlist.length",{"_index":3580,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.playlistmapping",{"_index":2878,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.playlistsservice.getall(1",{"_index":4300,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.playlistssvc.add(newplaylist).subscribe",{"_index":3875,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this.playlistssvc.delete(playlist.id).subscribe",{"_index":3882,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this.playlistssvc.getall(1",{"_index":4046,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.playlistssvc.getall(this.page",{"_index":3867,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this.playlistssvc.getbyid(params['id']).pipe",{"_index":4697,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.playlistssvc.update(playlist.id",{"_index":3878,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{}}}],["this.playpaused.emit(this.song",{"_index":3577,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["this.playsong(result.data",{"_index":4477,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.playsong.emit(this.song",{"_index":4673,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this.playspecificsong(song",{"_index":4852,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.playstarted.emit(this.song",{"_index":3578,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["this.preloaddata",{"_index":4288,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.presenterrortoast('error",{"_index":3364,"title":{},"body":{"components/LoginPage.html":{}}}],["this.presenterrortoast(errormessage",{"_index":3363,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.presentsuccesstoast('¡cuenta",{"_index":4227,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.processimageforstrapi(body.data.image",{"_index":4889,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.propagatechange",{"_index":3509,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.propagatechange(picture",{"_index":3514,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["this.recentsearches",{"_index":4487,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.recentsearches.filter(r",{"_index":4488,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.recentsearches.foreach(recent",{"_index":4408,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.recentsearches.length",{"_index":4394,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.recentsearches.slice(0",{"_index":4491,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.recentsearches.unshift(recent",{"_index":4490,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.recommendedsongs",{"_index":4001,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.registerform",{"_index":4218,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['confirmpassword",{"_index":4242,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['email",{"_index":4240,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['image",{"_index":4237,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['name",{"_index":4238,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['password",{"_index":4241,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.controls['surname",{"_index":4239,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.reset",{"_index":4236,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.valid",{"_index":4219,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.email",{"_index":4224,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.image",{"_index":4226,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.name",{"_index":4222,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.password",{"_index":4225,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.registerform.value.surname",{"_index":4223,"title":{},"body":{"components/RegisterPage.html":{}}}],["this.relatedartists",{"_index":2665,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.removeoverlay",{"_index":4289,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.addclass(panel",{"_index":4378,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.addclass(this.el.nativeelement",{"_index":2353,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.renderer.addclass(this.overlayelement",{"_index":4371,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.appendchild(panel",{"_index":4405,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.appendchild(this.document.body",{"_index":4389,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.appendchild(this.overlayelement",{"_index":4388,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.createelement('div",{"_index":4370,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.listen(item",{"_index":4439,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.listen(this.overlayelement",{"_index":4384,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.listen(viewallbutton",{"_index":4430,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.removechild(this.document.body",{"_index":4464,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.removeclass(this.el.nativeelement",{"_index":2360,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.renderer.setattribute(this.el.nativeelement",{"_index":2346,"title":{},"body":{"directives/DragDropDirective.html":{}}}],["this.renderer.setstyle(item",{"_index":4433,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.setstyle(panel",{"_index":4379,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.setstyle(this.overlayelement",{"_index":4373,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.renderer.setstyle(viewallbutton",{"_index":4427,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.repository",{"_index":1500,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["this.repository.add(entity",{"_index":2007,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.delete(id",{"_index":2009,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.getall(1",{"_index":2004,"title":{},"body":{"injectables/BaseService.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.repository.getall(page",{"_index":2005,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.getbyid(id",{"_index":2006,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.repository.update(id",{"_index":2008,"title":{},"body":{"injectables/BaseService.html":{}}}],["this.route.params.pipe",{"_index":2618,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SongWithArtists.html":{}}}],["this.route.snapshot.queryparams['returnurl",{"_index":3353,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.router",{"_index":4191,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.router.navigate(['/about",{"_index":4181,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.router.navigate(['/artist",{"_index":2701,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.router.navigate(['/artists",{"_index":1388,"title":{},"body":{"components/ArtistsPage.html":{}}}],["this.router.navigate(['/home",{"_index":203,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["this.router.navigate(['/login",{"_index":695,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{}}}],["this.router.navigate(['/playlist",{"_index":4122,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.router.navigate(['/recommended",{"_index":4140,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.router.navigate(['/register",{"_index":3369,"title":{},"body":{"components/LoginPage.html":{}}}],["this.router.navigate(['/search",{"_index":4092,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.router.navigate(['/songs",{"_index":4138,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.router.navigatebyurl(returnurl",{"_index":3354,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.savetorecentsearches(result",{"_index":4475,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.search",{"_index":1486,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["this.searchartists(searchterm",{"_index":4030,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchartistslocal(query",{"_index":4327,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchbyname(name).pipe",{"_index":1506,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["this.searchinput",{"_index":4468,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchinput.nativeelement.focus",{"_index":4469,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchplaylists(searchterm",{"_index":4029,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchplaylistslocal(query",{"_index":4326,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchquery",{"_index":4070,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchquery.length",{"_index":4074,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchquery.trim",{"_index":4091,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchresults",{"_index":4021,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchresults.foreach(result",{"_index":4422,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchresults.length",{"_index":4397,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchresults.playlists.find(p",{"_index":4086,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchresults.songs.find(s",{"_index":4083,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchsongs(searchterm",{"_index":4028,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchsongslocal(query",{"_index":4325,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchsubject.next",{"_index":4095,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchsubject.next(query",{"_index":4472,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.searchsubject.next(searchterm",{"_index":4820,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.searchsubject.next(term",{"_index":4071,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchsubject.pipe",{"_index":4008,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.searchsuggestions",{"_index":4063,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.searchterm",{"_index":4617,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.select.emit(this.artist",{"_index":985,"title":{},"body":{"components/ArtistGridCardComponent.html":{}}}],["this.selectedtab",{"_index":4119,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.selectresult(result",{"_index":4442,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.setupaudioevents",{"_index":1617,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.setupcollectionsubscriptions",{"_index":4111,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.setupprogresstracking",{"_index":1618,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.setupreactiveobservables",{"_index":3987,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.setupsearch",{"_index":4811,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.setupsearchobservable",{"_index":4287,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.setupsearchobservables",{"_index":3988,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.shareservice.shareitem",{"_index":4800,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showconfirmpassword",{"_index":2091,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/RegisterPage.html":{}}}],["this.showconfirmremovedialog",{"_index":4791,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showerror('error",{"_index":2643,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.showerror('no",{"_index":2690,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.showerrortoast('common.error.save",{"_index":2504,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.showerrortoast('common.error.upload",{"_index":2483,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.shownewpassword",{"_index":2089,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.showoldpassword",{"_index":2087,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.showpassword",{"_index":3372,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["this.showsearch",{"_index":4116,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.showsearchresults",{"_index":4017,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.showsuccesstoast('change_password.success",{"_index":2507,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.showsuccesstoast('common.success.save",{"_index":2501,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.showtoast('añadido",{"_index":3645,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["this.showtoast('eliminado",{"_index":3644,"title":{},"body":{"components/PlaylistLikeButtonComponent.html":{}}}],["this.showtoast('error",{"_index":2993,"title":{},"body":{"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.showtoast('la",{"_index":4125,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.showtoast('no",{"_index":4129,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.showtoast('playlist.errors.invalid_data",{"_index":4699,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showtoast('playlist.errors.load",{"_index":4698,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showtoast('playlist.errors.song_add",{"_index":4781,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showtoast('playlist.errors.song_remove",{"_index":4795,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showtoast('playlist.success.song_added",{"_index":4780,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showtoast('playlist.success.song_removed",{"_index":4794,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showtoast('playlist.success.song_updated",{"_index":4784,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.showtoast(`ahora",{"_index":2686,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["this.showtoast(`dejaste",{"_index":2989,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["this.showtoast(`reproduciendo",{"_index":2697,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.showtoast(`ya",{"_index":2677,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.signinurl",{"_index":5356,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.signupurl",{"_index":5364,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["this.socialservice.followartist(this.artist.id).topromise",{"_index":2684,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.socialservice.followartist(this.artistid).topromise",{"_index":2992,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["this.socialservice.isartistfollowed(artistid",{"_index":2631,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.socialservice.isartistfollowed(this.artistid",{"_index":2986,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["this.socialservice.issongliked(this.songid",{"_index":3294,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["this.socialservice.likedsongs",{"_index":3993,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.socialservice.likedsongs$.pipe",{"_index":4040,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.socialservice.likesong(this.songid",{"_index":3315,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["this.socialservice.unfollowartist(this.artist.id).topromise",{"_index":2674,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.socialservice.unfollowartist(this.artistid).topromise",{"_index":2988,"title":{},"body":{"components/FollowArtistButtonComponent.html":{}}}],["this.socialservice.unlikesong(this.songid",{"_index":3314,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["this.song",{"_index":3571,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.song.artists_ids?.length",{"_index":4664,"title":{},"body":{"components/SongGridCardComponent.html":{}}}],["this.song.id",{"_index":3573,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.song?.id",{"_index":3569,"title":{},"body":{"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{}}}],["this.songenrichmentservice.enrichsong(song).topromise",{"_index":2576,"title":{},"body":{"injectables/EnhancedAudioPlayerService.html":{}}}],["this.songenrichmentservice.enrichsongs(songs",{"_index":4036,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.songenrichmentservice.enrichsongsasync(this.allsongs",{"_index":4310,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.songid",{"_index":3289,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["this.songmapping",{"_index":2877,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.songs$.pipe(takeuntil(this.destroy$)).subscribe(songs",{"_index":4812,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.songsservice.getall(1",{"_index":4298,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.songsservice.getbyid(id).topromise",{"_index":2647,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.songssvc.add(result.data).subscribe",{"_index":4841,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.songssvc.delete(song.id).subscribe",{"_index":4850,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.songssvc.getall(1",{"_index":4032,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.songssvc.getall(page",{"_index":4618,"title":{},"body":{"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["this.songssvc.getall(this.page",{"_index":4826,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.songssvc.getbyid(id).pipe",{"_index":4764,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.songssvc.getbyid(result.data.id).subscribe(async",{"_index":4776,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.songssvc.getbyid(songid).topromise",{"_index":4134,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["this.songssvc.updatesongs(song.id",{"_index":4843,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.songssvc.updatesongwithimage(song.id",{"_index":4844,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.storage",{"_index":2925,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["this.strapisvc.changepassword(changepassworddata",{"_index":2068,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.subscribetolikestatus",{"_index":3290,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["this.subscribetoplayerstate",{"_index":4663,"title":{},"body":{"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.subscriptions.clear",{"_index":2911,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.delete(collectionname",{"_index":2904,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.foreach(subject",{"_index":2909,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname",{"_index":2902,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.get(collectionname)!.asobservable",{"_index":2883,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.has(collectionname",{"_index":2882,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.subscriptions.set(collectionname",{"_index":2884,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.toastcontroller.create",{"_index":2072,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["this.toastctrl.create",{"_index":3367,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["this.translate.currentlang",{"_index":3253,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translate.get('common.cancel').topromise",{"_index":4788,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.translate.get('common.delete').topromise",{"_index":4789,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.translate.get('playlist.messages.delete_confirm').topromise",{"_index":3880,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["this.translate.get('playlist.remove_song.header').topromise",{"_index":4786,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.translate.get('playlist.remove_song.message').topromise",{"_index":4787,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.translate.get('song.messages.delete_confirm').topromise",{"_index":4849,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.translate.get('song.reordering').topromise",{"_index":4861,"title":{},"body":{"interfaces/SongWithArtists-1.html":{}}}],["this.translate.get(translationkey).topromise",{"_index":4798,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["this.translate.instant('common.loading",{"_index":2637,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["this.translate.use(lang",{"_index":3252,"title":{},"body":{"injectables/LanguageService.html":{}}}],["this.translateservice.get('change_password.error",{"_index":2079,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.translateservice.get('change_password.errors.old_password_wrong",{"_index":2082,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.translateservice.get('change_password.success",{"_index":2070,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.unsubscribefunctions.clear",{"_index":2910,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.delete(collectionname",{"_index":2901,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.foreach(unsubscribe",{"_index":2908,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.get(collectionname",{"_index":2900,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.unsubscribefunctions.set(collectionname",{"_index":2898,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.update(id",{"_index":5423,"title":{},"body":{"injectables/UserService.html":{}}}],["this.update(playlistid",{"_index":3939,"title":{},"body":{"injectables/PlaylistsService.html":{}}}],["this.updateoverlaycontent",{"_index":4320,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.updatepanelcontent(panel",{"_index":4383,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["this.updateprofile(id",{"_index":5453,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updatesongs(id",{"_index":4923,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["this.updatestate",{"_index":1620,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["this.uploadurl",{"_index":3019,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["this.user",{"_index":2436,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.user.email",{"_index":2440,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.user.id",{"_index":2491,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.user.image?.url",{"_index":2441,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.user.username",{"_index":2439,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["this.usermapping",{"_index":2879,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["this.userrepository.addplaylist(userid",{"_index":5436,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.follow(userid",{"_index":5431,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.getbyemail(email",{"_index":5409,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.getbyid(id).pipe",{"_index":5455,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.getfollowers(userid",{"_index":5434,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.getfollowing(userid",{"_index":5435,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.removeplaylist(userid",{"_index":5438,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userrepository.unfollow(userid",{"_index":5433,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.getbyid(user.id",{"_index":4101,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["this.validatepasswordmatch",{"_index":2053,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["this.waitforcache",{"_index":4324,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["throw",{"_index":1985,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["throwerror",{"_index":5309,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["throws",{"_index":1981,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["thumb",{"_index":533,"title":{},"body":{"components/AboutPage.html":{}}}],["thumbnail",{"_index":919,"title":{"interfaces/Thumbnail.html":{}},"body":{"interfaces/Artist.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Playlist.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["thumbnail:string",{"_index":3427,"title":{},"body":{"interfaces/Person.html":{}}}],["tiempo",{"_index":4005,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["tiene",{"_index":1483,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/SearchResult-1.html":{}}}],["tienes",{"_index":259,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ArtistData.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{}}}],["time",{"_index":1568,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["timeout",{"_index":4364,"title":{},"body":{"interfaces/SearchResult-1.html":{},"miscellaneous/variables.html":{}}}],["timeout(5000",{"_index":5666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["timer",{"_index":5088,"title":{},"body":{"components/SplashPage.html":{}}}],["timer(splashduration).subscribe",{"_index":5134,"title":{},"body":{"components/SplashPage.html":{}}}],["tint",{"_index":524,"title":{},"body":{"components/AboutPage.html":{}}}],["tip",{"_index":3753,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["tipo",{"_index":3695,"title":{},"body":{"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{}}}],["title",{"_index":109,"title":{},"body":{"components/AboutPage.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"injectables/ShareService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["title]=\"remainingcount",{"_index":2196,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["toast",{"_index":2071,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["toast.present",{"_index":2075,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["toastcontroller",{"_index":2024,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["toastctrl",{"_index":3335,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{}}}],["toda",{"_index":4485,"title":{},"body":{"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{}}}],["todas",{"_index":2283,"title":{},"body":{"interfaces/Data.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["todo",{"_index":3418,"title":{},"body":{"interfaces/Person.html":{}}}],["todos",{"_index":272,"title":{},"body":{"components/AboutPage.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["toggle",{"_index":3277,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{}}}],["toggleanimation",{"_index":5079,"title":{},"body":{"components/SplashPage.html":{}}}],["toggleconfirmpassword",{"_index":4198,"title":{},"body":{"components/RegisterPage.html":{}}}],["togglefollow",{"_index":2669,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{}}}],["togglelike",{"_index":3265,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["togglepassword",{"_index":3334,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["togglepasswordvisibility",{"_index":2018,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["togglepasswordvisibility(field",{"_index":2037,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["toggleplay",{"_index":3548,"title":{},"body":{"components/PlayButtonComponent.html":{}}}],["togglerepeat",{"_index":1540,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["togglesearch",{"_index":4115,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["toggleshuffle",{"_index":1541,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{}}}],["toggling",{"_index":2671,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"components/FollowArtistButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{}}}],["token",{"_index":2251,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/Thumbnail.html":{},"miscellaneous/functions.html":{}}}],["token_key",{"_index":5285,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["tomar",{"_index":5664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar",{"_index":315,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{}}}],["top",{"_index":353,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["topromise",{"_index":2730,"title":{},"body":{"interfaces/EnrichedSong-2.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["topromise().catch",{"_index":4299,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["toque",{"_index":2217,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["total",{"_index":1203,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{}}}],["totalitems",{"_index":1195,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["totalseconds",{"_index":3604,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["touched",{"_index":2145,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["track",{"_index":532,"title":{},"body":{"components/AboutPage.html":{}}}],["trackby",{"_index":4185,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["trackbysongid(index",{"_index":4173,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["trackbysuggestionid(index",{"_index":4186,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["transform",{"_index":338,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"pipes/DurationPipe.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"pipes/PasswordVisibilityPipe.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["transform(songs",{"_index":3611,"title":{},"body":{"pipes/PlaylistDurationPipe.html":{}}}],["transform(type",{"_index":3412,"title":{},"body":{"pipes/PasswordVisibilityPipe.html":{}}}],["transform(value",{"_index":2376,"title":{},"body":{"pipes/DurationPipe.html":{}}}],["transformación",{"_index":1157,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["transición",{"_index":1660,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["transition",{"_index":335,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["translate",{"_index":2109,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/LanguageService.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["translate.addlangs(['es",{"_index":3244,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.getbrowserlang",{"_index":3247,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.setdefaultlang('es",{"_index":3245,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate.use(browserlang?.match(/es|en",{"_index":3248,"title":{},"body":{"injectables/LanguageService.html":{}}}],["translate/core",{"_index":647,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"modules/HomePageModule.html":{},"injectables/LanguageService.html":{},"modules/PlaylistDetailPageModule.html":{},"components/PlaylistsPage.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/SharedModule.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{},"modules/SongsPageModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":793,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":792,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":812,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":791,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":645,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{}}}],["translatemodule.forchild",{"_index":650,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{}}}],["translatemodule.forroot",{"_index":816,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":2027,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/LanguageService.html":{},"components/PlaylistsPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-3.html":{}}}],["translatex",{"_index":4380,"title":{},"body":{"interfaces/SearchResult-1.html":{},"components/SplashPage.html":{}}}],["translatex(0",{"_index":5201,"title":{},"body":{"components/SplashPage.html":{}}}],["translatex(50px",{"_index":5202,"title":{},"body":{"components/SplashPage.html":{}}}],["translatey",{"_index":430,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongGridCardComponent.html":{}}}],["translatey(0",{"_index":497,"title":{},"body":{"components/AboutPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SplashPage.html":{}}}],["translatey(10px",{"_index":3391,"title":{},"body":{"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["translatey(30px",{"_index":496,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["transparent",{"_index":316,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongDetailModalComponent.html":{},"components/SplashPage.html":{}}}],["tras",{"_index":1178,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["true",{"_index":941,"title":{},"body":{"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"directives/DragDropDirective.html":{},"interfaces/EnrichedSong-1.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists-3.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":227,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistModalComponent.html":{},"injectables/AudioPlayerService.html":{},"components/ChangePasswordModalComponent.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"injectables/FirebaseAuthenticationService.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/PlayerState.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/UserService.html":{}}}],["tslib",{"_index":5567,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":133,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsService.html":{},"components/ChangePasswordModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{}}}],["tus",{"_index":126,"title":{},"body":{"components/AboutPage.html":{}}}],["type",{"_index":41,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"classes/BaseMediaService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong.html":{},"interfaces/EnrichedSong-1.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/FirebaseArtist.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/FirebaseGroup.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/FirebasePlaylist.html":{},"interfaces/FirebaseSong.html":{},"interfaces/FirebaseUser.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/Formats.html":{},"interfaces/Group.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IArtistsService.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IAuthentication.html":{},"interfaces/IBaseMapping.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ICollectionSubscription.html":{},"interfaces/IPlaylistsService.html":{},"interfaces/ISongsRepository.html":{},"interfaces/ISongsService.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"interfaces/Large.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/Model.html":{},"interfaces/Paginated.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"pipes/PasswordVisibilityPipe.html":{},"interfaces/Person.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"interfaces/SongWithArtists-3.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Task.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":5608,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeemoji",{"_index":4434,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["typeof",{"_index":1308,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"pipes/DurationPipe.html":{},"interfaces/EnrichedSong-1.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/UserService.html":{}}}],["typescript",{"_index":100,"title":{},"body":{"components/AboutPage.html":{}}}],["táctiles",{"_index":2208,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["término",{"_index":3063,"title":{},"body":{"interfaces/IArtistsRepository.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["términos",{"_index":4460,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["título",{"_index":5176,"title":{},"body":{"components/SplashPage.html":{}}}],["u",{"_index":3820,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["u.id",{"_index":3821,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["u.id.tostring",{"_index":3823,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["u.tostring",{"_index":3825,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["u8arr",{"_index":2426,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["u8arr[n",{"_index":2428,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["uid",{"_index":2963,"title":{},"body":{"interfaces/FirebaseUser.html":{}}}],["uint8array(n",{"_index":2427,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["umusic",{"_index":214,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"components/SplashPage.html":{},"index.html":{}}}],["umusicweb",{"_index":207,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["un",{"_index":64,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["una",{"_index":152,"title":{},"body":{"components/AboutPage.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/EditProfileModalComponent.html":{},"interfaces/IArtistsRepository.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["undefined",{"_index":916,"title":{},"body":{"interfaces/Artist.html":{},"interfaces/ArtistData.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/BaseService.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"injectables/FirebaseAuthenticationService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/Person.html":{},"interfaces/Playlist.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/PlaylistsService.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{}}}],["underline",{"_index":2199,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["unfollow",{"_index":2680,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["unfollow(userid",{"_index":3181,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["unfollowed",{"_index":2676,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["unfollowing",{"_index":2673,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["unknown",{"_index":1814,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"interfaces/EnrichedSong-2.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SearchSuggestion.html":{},"components/SongDetailModalComponent.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["unknown@example.com",{"_index":5329,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["unrecognized",{"_index":3928,"title":{},"body":{"injectables/PlaylistsService.html":{},"injectables/UserService.html":{}}}],["unsubscribe",{"_index":2850,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribe(collectionname",{"_index":2235,"title":{},"body":{"interfaces/CollectionChange.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"interfaces/ICollectionSubscription.html":{}}}],["unsubscribefunctions",{"_index":2848,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["update",{"_index":1119,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"components/EditProfileModalComponent.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ISongsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists-1.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["update(id",{"_index":1454,"title":{},"body":{"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"injectables/BaseService.html":{},"interfaces/Data.html":{},"interfaces/IBaseRepository.html":{},"interfaces/IBaseRepository-1.html":{},"interfaces/IBaseService.html":{},"interfaces/ISongsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/PlaylistsService.html":{},"interfaces/SearchOperators.html":{},"interfaces/SearchParams.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{}}}],["updatecurrentuser",{"_index":1722,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["updatecurrentuser(user",{"_index":1736,"title":{},"body":{"injectables/BaseAuthenticationService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["updated",{"_index":2499,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/LikeButtonComponent.html":{},"injectables/UserService.html":{}}}],["updatedartist",{"_index":1367,"title":{},"body":{"components/ArtistsPage.html":{}}}],["updatedat",{"_index":2831,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Model.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{}}}],["updatedat?:string",{"_index":3403,"title":{},"body":{"interfaces/Model.html":{}}}],["updatedata",{"_index":1265,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["updatedata.followers_count",{"_index":1271,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["updatedata.listeners",{"_index":1268,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["updatedata.name",{"_index":1266,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["updatedata.verified",{"_index":1273,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["updatedoc",{"_index":1828,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{}}}],["updatedplaylist",{"_index":3877,"title":{},"body":{"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/SongWithArtists.html":{}}}],["updatedplaylist).subscribe",{"_index":3879,"title":{},"body":{"components/PlaylistsPage.html":{},"interfaces/SongWithArtists.html":{}}}],["updatedplaylists",{"_index":4150,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["updatedplaylists[index",{"_index":4151,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["updateduser",{"_index":4102,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/UserService.html":{}}}],["updateduser.id",{"_index":5426,"title":{},"body":{"injectables/UserService.html":{}}}],["updateduser.image?.url",{"_index":5452,"title":{},"body":{"injectables/UserService.html":{}}}],["updatelisteners",{"_index":3040,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["updatelisteners(artistid",{"_index":3055,"title":{},"body":{"interfaces/IArtistsRepository.html":{}}}],["updateoverlaycontent",{"_index":4390,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["updatepanelcontent(panel",{"_index":4392,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["updateprofile",{"_index":2766,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["updateprofile(id",{"_index":3183,"title":{},"body":{"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"injectables/UserService.html":{}}}],["updateprofile(usercredential.user",{"_index":2819,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["updatesafely",{"_index":5390,"title":{},"body":{"injectables/UserService.html":{}}}],["updatesafely(id",{"_index":5403,"title":{},"body":{"injectables/UserService.html":{}}}],["updatesongs",{"_index":5053,"title":{},"body":{"injectables/SongsService.html":{}}}],["updatesongs(id",{"_index":4885,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["updatesongwithimage",{"_index":5054,"title":{},"body":{"injectables/SongsService.html":{}}}],["updatesongwithimage(id",{"_index":4894,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["updatestate",{"_index":1542,"title":{},"body":{"injectables/AudioPlayerService.html":{}}}],["updatestate(partialstate",{"_index":1583,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["updateurl",{"_index":2293,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["updating",{"_index":1377,"title":{},"body":{"components/ArtistsPage.html":{},"components/PlaylistsPage.html":{},"injectables/UserService.html":{}}}],["upload",{"_index":1763,"title":{},"body":{"classes/BaseMediaService.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseMediaService.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"classes/StrapiMediaService.html":{},"miscellaneous/variables.html":{}}}],["upload(blob",{"_index":1764,"title":{},"body":{"classes/BaseMediaService.html":{},"injectables/FirebaseMediaService.html":{},"classes/StrapiMediaService.html":{}}}],["upload(blob:blob):observable",{"_index":3016,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["upload_api_url_token",{"_index":781,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadbytes",{"_index":2920,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploaded",{"_index":2938,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploading",{"_index":1117,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["uploadresult",{"_index":1113,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["uploadresult.id",{"_index":4914,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["uploadresult[0",{"_index":1115,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["uploadresult[0].id",{"_index":4913,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["uploads/${filename",{"_index":2935,"title":{},"body":{"injectables/FirebaseMediaService.html":{}}}],["uploadurl",{"_index":3014,"title":{},"body":{"interfaces/Formats.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/Small.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["uppercase",{"_index":3390,"title":{},"body":{"components/LoginPage.html":{},"components/SplashPage.html":{}}}],["url",{"_index":205,"title":{},"body":{"components/AboutPage.html":{},"interfaces/Artist.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/Formats.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Large.html":{},"interfaces/Medium.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"interfaces/PlayerState.html":{},"interfaces/Playlist.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"interfaces/ProviderMetadata.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"injectables/ShareService.html":{},"interfaces/SignInPayload.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/Small.html":{},"interfaces/Song.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/StrapiPlaylistResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiSongResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/Thumbnail.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["url:string",{"_index":3423,"title":{},"body":{"interfaces/Person.html":{}}}],["urls",{"_index":829,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{}}}],["usa",{"_index":4946,"title":{},"body":{"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{}}}],["usando",{"_index":270,"title":{},"body":{"components/AboutPage.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"interfaces/IArtistsRepository.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["usar",{"_index":1491,"title":{},"body":{"injectables/ArtistsService.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/EnrichedSong-2.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"interfaces/SearchResult-1.html":{},"injectables/SongEnrichmentService.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsService.html":{},"injectables/StrapiRepositoryService.html":{}}}],["usarlo",{"_index":4448,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["useclass",{"_index":821,"title":{},"body":{"modules/AppModule.html":{}}}],["useexisting",{"_index":854,"title":{},"body":{"modules/AppModule.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":818,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["user",{"_index":706,"title":{"interfaces/User.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseAuthenticationService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"components/EditProfileModalComponent.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"injectables/FirebaseMediaService.html":{},"interfaces/FirebasePerson.html":{},"interfaces/IAuthMapping.html":{},"interfaces/IUserMapping.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"injectables/StrapiRepositoryService.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"injectables/UserService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["user).pipe",{"_index":5424,"title":{},"body":{"injectables/UserService.html":{}}}],["user.displayname",{"_index":2792,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.errors.email_invalid",{"_index":2517,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["user.errors.email_required",{"_index":2516,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["user.errors.username_required",{"_index":2515,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["user.getidtoken",{"_index":2777,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.id",{"_index":2939,"title":{},"body":{"injectables/FirebaseMediaService.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"injectables/SongsMappingStrapi.html":{}}}],["user.id.tostring",{"_index":5000,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["user.id?.tostring()).filter(boolean",{"_index":1307,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{}}}],["user.model.ts",{"_index":2959,"title":{},"body":{"interfaces/FirebaseUser.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUserResponse.html":{},"coverage.html":{}}}],["user.uid",{"_index":2781,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["user.username",{"_index":3872,"title":{},"body":{"components/PlaylistsPage.html":{}}}],["user:string",{"_index":4566,"title":{},"body":{"interfaces/SignInPayload.html":{},"interfaces/SignUpPayload.html":{}}}],["user?.id",{"_index":3710,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["user?.username",{"_index":3706,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["usercredential",{"_index":2818,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user",{"_index":2811,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.delete",{"_index":2835,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.displayname",{"_index":2812,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.uid",{"_index":2821,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["usercredential.user.uid))).pipe",{"_index":2809,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata",{"_index":2785,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["userdata.avatar",{"_index":5277,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.avatar.large",{"_index":5279,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.avatar.medium",{"_index":5280,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.avatar.small",{"_index":5281,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.avatar.thumbnail",{"_index":5282,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.avatar.url",{"_index":5278,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.blocked",{"_index":5276,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.confirmed",{"_index":5275,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.email",{"_index":5260,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.email?.split('@')[0",{"_index":5264,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.followers",{"_index":5267,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.followers_fk",{"_index":5270,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.following",{"_index":5268,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.following_artists",{"_index":5272,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.following_ids",{"_index":5269,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.id",{"_index":5259,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"injectables/UserService.html":{}}}],["userdata.id.tostring",{"_index":5266,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.image",{"_index":4103,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{}}}],["userdata.liked_songs",{"_index":5271,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.playlists_ids",{"_index":5273,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.provider",{"_index":5274,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata.username",{"_index":5263,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["userdata?.['name",{"_index":2789,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['name",{"_index":2790,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdata['surname",{"_index":2791,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdisplaydata",{"_index":4577,"title":{"interfaces/UserDisplayData.html":{}},"body":{"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{},"coverage.html":{}}}],["userdoc",{"_index":2779,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdoc.data",{"_index":2786,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userdoc.exists",{"_index":2782,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userid",{"_index":3139,"title":{},"body":{"interfaces/IPlaylistsService.html":{},"interfaces/IUserRepository.html":{},"interfaces/IUserService.html":{},"interfaces/Person.html":{},"injectables/PlaylistsService.html":{},"injectables/UserService.html":{}}}],["userid?:string",{"_index":3429,"title":{},"body":{"interfaces/Person.html":{}}}],["userids",{"_index":3815,"title":{},"body":{"injectables/PlaylistsMappingStrapi.html":{}}}],["usermapping",{"_index":2853,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["usermappingstrapiservice",{"_index":5493,"title":{},"body":{"coverage.html":{}}}],["username",{"_index":2394,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SignInPayload-1.html":{},"interfaces/SignUpPayload-1.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser.html":{},"interfaces/StrapiUser-1.html":{},"interfaces/StrapiUserResponse.html":{},"interfaces/User.html":{},"interfaces/UserDisplayData.html":{}}}],["userref",{"_index":2820,"title":{},"body":{"injectables/FirebaseAuthenticationService.html":{}}}],["userrepository",{"_index":5393,"title":{},"body":{"injectables/UserService.html":{}}}],["users",{"_index":826,"title":{},"body":{"modules/AppModule.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{}}}],["users_api_url_token",{"_index":776,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users_ids",{"_index":2954,"title":{},"body":{"interfaces/FirebasePlaylist.html":{},"interfaces/Playlist.html":{},"components/PlaylistModalComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/PlaylistsPage.html":{},"injectables/PlaylistsService.html":{},"interfaces/StrapiPlaylistResponse.html":{}}}],["users_like",{"_index":4583,"title":{},"body":{"interfaces/Song.html":{},"injectables/SongsMappingStrapi.html":{}}}],["users_repository_mapping_token",{"_index":2869,"title":{},"body":{"injectables/FirebaseCollectionSubscriptionService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users_repository_token",{"_index":780,"title":{},"body":{"modules/AppModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["users_resource_name_token",{"_index":779,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userservice",{"_index":738,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/EditProfileModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"interfaces/SongWithArtists.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["userservice.updateprofile",{"_index":5410,"title":{},"body":{"injectables/UserService.html":{}}}],["userslike",{"_index":4994,"title":{},"body":{"injectables/SongsMappingStrapi.html":{}}}],["usersmappingfactory",{"_index":756,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersrepositoryfactory",{"_index":759,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usersvc",{"_index":2395,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["usevalue",{"_index":822,"title":{},"body":{"modules/AppModule.html":{}}}],["uso",{"_index":4189,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["usuario",{"_index":131,"title":{},"body":{"components/AboutPage.html":{},"injectables/BaseAuthenticationService.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthMappingService.html":{},"injectables/StrapiAuthenticationService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{},"miscellaneous/variables.html":{}}}],["usuarios",{"_index":1213,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{},"injectables/SongsMappingStrapi.html":{},"components/SplashPage.html":{}}}],["utilidad",{"_index":1697,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["utiliza",{"_index":1934,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["utilizan",{"_index":1770,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{}}}],["utilizando",{"_index":1775,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{}}}],["v",{"_index":3212,"title":{},"body":{"injectables/JsonServerRepositoryService.html":{},"interfaces/PaginatedRaw.html":{}}}],["v1.0.0",{"_index":244,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["v4",{"_index":2245,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"injectables/StrapiRepositoryService.html":{}}}],["vacía",{"_index":1226,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["vacío",{"_index":2258,"title":{},"body":{"interfaces/Data.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"injectables/StrapiRepositoryService.html":{}}}],["valid",{"_index":2445,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["validar",{"_index":5326,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["validartists",{"_index":1475,"title":{},"body":{"injectables/ArtistsService.html":{}}}],["validatepasswordmatch",{"_index":2019,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["validationerrors",{"_index":5587,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1054,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"interfaces/SongWithArtists-3.html":{}}}],["validators.email",{"_index":2433,"title":{},"body":{"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/RegisterPage.html":{}}}],["validators.minlength(2",{"_index":1078,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["validators.required",{"_index":1077,"title":{},"body":{"components/ArtistModalComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{}}}],["validchars",{"_index":1960,"title":{},"body":{"injectables/BaseRepositoryLocalStorageService.html":{}}}],["validsongs",{"_index":2649,"title":{},"body":{"interfaces/EnrichedSong-1.html":{},"interfaces/SongWithArtists.html":{}}}],["validsongs.length",{"_index":2651,"title":{},"body":{"interfaces/EnrichedSong-1.html":{}}}],["valor",{"_index":1235,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/LikeButtonComponent.html":{},"components/PictureSelectableComponent.html":{},"miscellaneous/variables.html":{}}}],["valores",{"_index":1237,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"injectables/PlaylistsMappingStrapi.html":{}}}],["value",{"_index":78,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"injectables/ArtistsMappingStrapi.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/Data.html":{},"directives/DragDropDirective.html":{},"pipes/DurationPipe.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"injectables/JsonServerRepositoryService.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"pipes/PlaylistDurationPipe.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"injectables/SongsService.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["value.includes",{"_index":2380,"title":{},"body":{"pipes/DurationPipe.html":{}}}],["value?.startswith?.('blob",{"_index":3675,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["value?.startswith?.('data",{"_index":3674,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["value?.substring(0",{"_index":3677,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["values",{"_index":2443,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["vanguardia",{"_index":243,"title":{},"body":{"components/AboutPage.html":{}}}],["var",{"_index":312,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"components/FollowArtistButtonComponent.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["variable",{"_index":5466,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":278,"title":{"miscellaneous/variables.html":{}},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{},"miscellaneous/variables.html":{}}}],["variantes",{"_index":2219,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["vea",{"_index":2534,"title":{},"body":{"components/EditProfileModalComponent.html":{}}}],["velocidad",{"_index":5127,"title":{},"body":{"components/SplashPage.html":{}}}],["ver",{"_index":1395,"title":{},"body":{"components/ArtistsPage.html":{},"interfaces/SearchResult-1.html":{}}}],["verifica",{"_index":4742,"title":{},"body":{"interfaces/SongWithArtists.html":{}}}],["verificar",{"_index":2452,"title":{},"body":{"components/EditProfileModalComponent.html":{},"interfaces/SongWithArtists.html":{},"interfaces/SongWithArtists-1.html":{},"components/SplashPage.html":{}}}],["verified",{"_index":911,"title":{},"body":{"interfaces/Artist.html":{},"injectables/ArtistsMappingStrapi.html":{}}}],["verifying",{"_index":5335,"title":{},"body":{"injectables/StrapiAuthenticationService.html":{}}}],["version",{"_index":414,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{},"properties.html":{}}}],["versión",{"_index":1802,"title":{},"body":{"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryLocalStorageService.html":{},"components/SplashPage.html":{}}}],["verticalmente",{"_index":3739,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["vez",{"_index":4292,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["via",{"_index":4525,"title":{},"body":{"injectables/ShareService.html":{}}}],["video",{"_index":478,"title":{},"body":{"components/AboutPage.html":{},"index.html":{}}}],["viene",{"_index":2498,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["viewallbutton",{"_index":4426,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["viewallbutton.innerhtml",{"_index":4429,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["viewchild",{"_index":3497,"title":{},"body":{"components/PictureSelectableComponent.html":{},"interfaces/SearchResult-1.html":{}}}],["viewchild('searchinput",{"_index":4273,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["visibility.pipe",{"_index":4540,"title":{},"body":{"modules/SharedModule.html":{}}}],["visibility.pipe.ts",{"_index":3410,"title":{},"body":{"pipes/PasswordVisibilityPipe.html":{},"coverage.html":{}}}],["visibility.pipe.ts:7",{"_index":3413,"title":{},"body":{"pipes/PasswordVisibilityPipe.html":{}}}],["visible",{"_index":2201,"title":{},"body":{"components/ClickableArtistNamesComponent.html":{}}}],["visual",{"_index":3312,"title":{},"body":{"components/LikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{}}}],["void",{"_index":49,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ArtistModalComponent.html":{},"components/ArtistsPage.html":{},"injectables/AudioPlayerService.html":{},"injectables/BaseAuthenticationService.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"interfaces/CollectionChange.html":{},"directives/DragDropDirective.html":{},"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"injectables/FirebaseAuthenticationService.html":{},"injectables/FirebaseCollectionSubscriptionService.html":{},"components/FollowArtistButtonComponent.html":{},"interfaces/ICollectionSubscription.html":{},"injectables/LanguageService.html":{},"components/LikeButtonComponent.html":{},"components/LoginPage.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"components/PlaylistLikeButtonComponent.html":{},"components/PlaylistModalComponent.html":{},"components/PlaylistsPage.html":{},"components/RegisterPage.html":{},"injectables/ShareService.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"components/SplashPage.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["volume",{"_index":1579,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/EnhancedAudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["volumeinterval",{"_index":1665,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["volumen",{"_index":1589,"title":{},"body":{"injectables/AudioPlayerService.html":{},"interfaces/PlayerState.html":{}}}],["válido",{"_index":1242,"title":{},"body":{"injectables/ArtistsMappingStrapi.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists-2.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/SongsService.html":{},"injectables/StrapiAuthenticationService.html":{}}}],["waited",{"_index":4363,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["waitforcache",{"_index":4359,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["waiting",{"_index":4322,"title":{},"body":{"interfaces/SearchResult-1.html":{}}}],["want",{"_index":1382,"title":{},"body":{"components/ArtistsPage.html":{}}}],["warning",{"_index":2126,"title":{},"body":{"components/ChangePasswordModalComponent.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["wasliked",{"_index":3308,"title":{},"body":{"components/LikeButtonComponent.html":{}}}],["weak",{"_index":2032,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["web",{"_index":89,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"injectables/ShareService.html":{},"components/SplashPage.html":{},"dependencies.html":{}}}],["webkit",{"_index":402,"title":{},"body":{"components/AboutPage.html":{},"components/SplashPage.html":{}}}],["weight",{"_index":322,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/LoginPage.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["white",{"_index":291,"title":{},"body":{"components/AboutPage.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/EditProfileModalComponent.html":{},"components/PlaylistModalComponent.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["width",{"_index":355,"title":{},"body":{"components/AboutPage.html":{},"components/AppComponent.html":{},"components/ArtistGridCardComponent.html":{},"components/ChangePasswordModalComponent.html":{},"components/ClickableArtistNamesComponent.html":{},"components/EditProfileModalComponent.html":{},"interfaces/Formats.html":{},"interfaces/Large.html":{},"components/LoginPage.html":{},"interfaces/Medium.html":{},"components/PictureSelectableComponent.html":{},"components/PlaylistModalComponent.html":{},"interfaces/ProviderMetadata.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/Small.html":{},"components/SongDetailModalComponent.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{},"interfaces/StrapiMedia.html":{},"interfaces/StrapiMediaData.html":{},"classes/StrapiMediaService.html":{},"interfaces/Thumbnail.html":{}}}],["width:300px",{"_index":3533,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["window.addeventlistener('resize",{"_index":4097,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["window.innerwidth",{"_index":4142,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["window.location.href",{"_index":220,"title":{},"body":{"components/AboutPage.html":{},"interfaces/SongWithArtists.html":{}}}],["window.open(githuburl",{"_index":210,"title":{},"body":{"components/AboutPage.html":{}}}],["window.open(url",{"_index":208,"title":{},"body":{"components/AboutPage.html":{},"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["window.removeeventlistener('resize",{"_index":4114,"title":{},"body":{"interfaces/ReactiveEnrichedSong.html":{},"interfaces/SearchResult.html":{},"interfaces/SearchSuggestion.html":{}}}],["within",{"_index":3750,"title":{},"body":{"components/PlaylistModalComponent.html":{}}}],["wrap",{"_index":460,"title":{},"body":{"components/AboutPage.html":{}}}],["wrapped",{"_index":5253,"title":{},"body":{"injectables/StrapiAuthMappingService.html":{},"interfaces/StrapiMeResponse.html":{},"interfaces/StrapiSignIn.html":{},"interfaces/StrapiSignInResponse.html":{},"interfaces/StrapiSignUp.html":{},"interfaces/StrapiSignUpResponse.html":{},"interfaces/StrapiUser-1.html":{}}}],["wrapper",{"_index":383,"title":{},"body":{"components/AboutPage.html":{},"interfaces/Data.html":{},"components/LoginPage.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PlaylistModalComponent.html":{},"components/RegisterPage.html":{},"injectables/StrapiRepositoryService.html":{}}}],["writevalue",{"_index":3454,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["writevalue(obj",{"_index":3482,"title":{},"body":{"components/PictureSelectableComponent.html":{}}}],["xito",{"_index":4228,"title":{},"body":{"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"interfaces/SongWithArtists-1.html":{}}}],["xmidymid",{"_index":5113,"title":{},"body":{"components/SplashPage.html":{}}}],["y",{"_index":91,"title":{},"body":{"components/AboutPage.html":{},"modules/AppModule.html":{},"injectables/ArtistsMappingStrapi.html":{},"injectables/ArtistsService.html":{},"injectables/BaseRepositoryFirebaseService.html":{},"injectables/BaseRepositoryHttpService.html":{},"interfaces/Data.html":{},"injectables/JsonServerRepositoryService.html":{},"interfaces/Meta.html":{},"interfaces/PaginatedRaw.html":{},"interfaces/PaginatedRaw-1.html":{},"interfaces/Pagination.html":{},"components/PictureSelectableComponent.html":{},"components/PlayButtonComponent.html":{},"injectables/PlaylistsMappingStrapi.html":{},"components/RegisterPage.html":{},"interfaces/SearchResult-1.html":{},"modules/SharedModule.html":{},"components/SongGridCardComponent.html":{},"interfaces/SongWithArtists.html":{},"injectables/SongsMappingStrapi.html":{},"injectables/StrapiRepositoryService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ya",{"_index":2494,"title":{},"body":{"components/EditProfileModalComponent.html":{},"injectables/EnhancedAudioPlayerService.html":{},"components/RegisterPage.html":{},"interfaces/SongWithArtists.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["yes",{"_index":1561,"title":{},"body":{"injectables/AudioPlayerService.html":{},"injectables/BaseService.html":{},"interfaces/IArtistsRepository.html":{},"interfaces/IBaseService.html":{}}}],["z",{"_index":368,"title":{},"body":{"components/AboutPage.html":{},"components/PlaylistModalComponent.html":{},"interfaces/SearchResult-1.html":{},"components/SongGridCardComponent.html":{},"components/SplashPage.html":{}}}],["z]/.test(password",{"_index":2104,"title":{},"body":{"components/ChangePasswordModalComponent.html":{}}}],["zone.js",{"_index":5569,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":633,"title":{},"body":{"modules/AboutPageModule.html":{},"modules/AppModule.html":{},"modules/ArtistProfilePageModule.html":{},"modules/ArtistsPageModule.html":{},"modules/HomePageModule.html":{},"modules/LoginPageModule.html":{},"modules/PlaylistDetailPageModule.html":{},"modules/PlaylistsPageModule.html":{},"modules/ProfilePageModule.html":{},"modules/RegisterPageModule.html":{},"modules/SharedModule.html":{},"modules/SongsPageModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutPage.html":{"url":"components/AboutPage.html","title":"component - AboutPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/about/about.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./about.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                developers\n                            \n                            \n                                features\n                            \n                            \n                                technologies\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goToHome\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                openEmail\n                            \n                            \n                                    Async\n                                openGithubProfile\n                            \n                            \n                                    Async\n                                openRepository\n                            \n                            \n                                    Async\n                                shareApp\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/about/about.page.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        goToHome\n                        \n                    \n                \n            \n            \n                \ngoToHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:76\n                        \n                    \n\n\n            \n                \n                        ✅ NUEVA: Navega al Home\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    openEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:98\n                        \n                    \n\n\n            \n                \n                        Abre el cliente de email para contacto\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openGithubProfile\n                        \n                    \n                \n            \n            \n                \n                        \n                    openGithubProfile(githubUrl: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:91\n                        \n                    \n\n\n            \n                \n                        Abre el perfil de GitHub de un desarrollador\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                githubUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openRepository\n                        \n                    \n                \n            \n            \n                \n                        \n                    openRepository()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:83\n                        \n                    \n\n\n            \n                \n                        Abre el repositorio principal del proyecto en GitHub\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        shareApp\n                        \n                    \n                \n            \n            \n                \n                        \n                    shareApp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/about/about.page.ts:109\n                        \n                    \n\n\n            \n                \n                        Comparte la aplicación\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        developers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      name: 'Rafael Moncayo Pérez',\n      role: 'Desarrollador Full Stack',\n      bio: 'Apasionado desarrollador especializado en tecnologías web modernas y aplicaciones móviles.',\n      avatar: 'https://github.com/Rafamp34.png',\n      github: 'https://github.com/Rafamp34',\n      skills: ['Angular', 'Ionic', 'TypeScript', 'Kotlin', 'Java', 'Python'],\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/about/about.page.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        features\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      icon: 'musical-notes-outline',\n      title: 'Streaming de Música',\n      description: 'Reproduce música de alta calidad con controles avanzados de reproducción.'\n    },\n    {\n      icon: 'list-outline',\n      title: 'Gestión de Playlists',\n      description: 'Crea, edita y organiza tus listas de reproducción personalizadas.'\n    },\n    {\n      icon: 'person-outline',\n      title: 'Perfiles de Usuario',\n      description: 'Personaliza tu perfil y gestiona tus preferencias musicales.'\n    },\n    {\n      icon: 'search-outline',\n      title: 'Búsqueda Avanzada',\n      description: 'Encuentra fácilmente canciones, artistas y álbumes con búsqueda inteligente.'\n    },\n    {\n      icon: 'language-outline',\n      title: 'Soporte Multiidioma',\n      description: 'Aplicación disponible en múltiples idiomas para una experiencia global.'\n    },\n    {\n      icon: 'phone-portrait-outline',\n      title: 'Diseño Responsivo',\n      description: 'Interfaz optimizada para dispositivos móviles, tablets y escritorio.'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/about/about.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        technologies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { name: 'Angular', icon: 'logo-angular', color: '#dd0031' },\n    { name: 'Ionic', icon: 'logo-ionic', color: '#3880ff' },\n    { name: 'TypeScript', icon: 'logo-javascript', color: '#007acc' },\n    { name: 'Strapi', icon: 'server-outline', color: '#4945ff' },\n    { name: 'Tailwind CSS', icon: 'color-palette-outline', color: '#06b6d4' },\n    { name: 'Capacitor', icon: 'hardware-chip-outline', color: '#119eff' },\n    { name: 'Node.js', icon: 'logo-nodejs', color: '#339933' },\n    { name: 'Cloudinary', icon: 'logo-firebase', color: '#ffca28' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/about/about.page.ts:56\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.page.html',\n  styleUrls: ['./about.page.scss'],\n})\nexport class AboutPage implements OnInit {\n\n  developers = [\n    {\n      name: 'Rafael Moncayo Pérez',\n      role: 'Desarrollador Full Stack',\n      bio: 'Apasionado desarrollador especializado en tecnologías web modernas y aplicaciones móviles.',\n      avatar: 'https://github.com/Rafamp34.png',\n      github: 'https://github.com/Rafamp34',\n      skills: ['Angular', 'Ionic', 'TypeScript', 'Kotlin', 'Java', 'Python'],\n    }\n  ];\n\n  features = [\n    {\n      icon: 'musical-notes-outline',\n      title: 'Streaming de Música',\n      description: 'Reproduce música de alta calidad con controles avanzados de reproducción.'\n    },\n    {\n      icon: 'list-outline',\n      title: 'Gestión de Playlists',\n      description: 'Crea, edita y organiza tus listas de reproducción personalizadas.'\n    },\n    {\n      icon: 'person-outline',\n      title: 'Perfiles de Usuario',\n      description: 'Personaliza tu perfil y gestiona tus preferencias musicales.'\n    },\n    {\n      icon: 'search-outline',\n      title: 'Búsqueda Avanzada',\n      description: 'Encuentra fácilmente canciones, artistas y álbumes con búsqueda inteligente.'\n    },\n    {\n      icon: 'language-outline',\n      title: 'Soporte Multiidioma',\n      description: 'Aplicación disponible en múltiples idiomas para una experiencia global.'\n    },\n    {\n      icon: 'phone-portrait-outline',\n      title: 'Diseño Responsivo',\n      description: 'Interfaz optimizada para dispositivos móviles, tablets y escritorio.'\n    }\n  ];\n\n  technologies = [\n    { name: 'Angular', icon: 'logo-angular', color: '#dd0031' },\n    { name: 'Ionic', icon: 'logo-ionic', color: '#3880ff' },\n    { name: 'TypeScript', icon: 'logo-javascript', color: '#007acc' },\n    { name: 'Strapi', icon: 'server-outline', color: '#4945ff' },\n    { name: 'Tailwind CSS', icon: 'color-palette-outline', color: '#06b6d4' },\n    { name: 'Capacitor', icon: 'hardware-chip-outline', color: '#119eff' },\n    { name: 'Node.js', icon: 'logo-nodejs', color: '#339933' },\n    { name: 'Cloudinary', icon: 'logo-firebase', color: '#ffca28' },\n  ];\n\n  constructor(private router: Router) { }\n\n  // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\n  ngOnInit() {\n  }\n\n  /**\n   * ✅ NUEVA: Navega al Home\n   */\n  goToHome() {\n    this.router.navigate(['/home']);\n  }\n\n  /**\n   * Abre el repositorio principal del proyecto en GitHub\n   */\n  async openRepository() {\n    const url = 'https://github.com/Rafamp34/Proyecto-UMusicWeb';\n    window.open(url, '_blank');\n  }\n\n  /**\n   * Abre el perfil de GitHub de un desarrollador\n   */\n  async openGithubProfile(githubUrl: string) {\n    window.open(githubUrl, '_blank');\n  }\n\n  /**\n   * Abre el cliente de email para contacto\n   */\n  async openEmail() {\n    const email = 'rafaelmoncayop37@gmail.com';\n    const subject = 'Contacto desde UMusic App';\n    const body = 'Hola, me gustaría contactar con el equipo de UMusic...';\n    \n    window.location.href = `mailto:${email}?subject=${encodeURIComponent(subject)}&body=${encodeURIComponent(body)}`;\n  }\n\n  /**\n   * Comparte la aplicación\n   */\n  async shareApp() {\n    const shareData = {\n      title: 'UMusic - Music Streaming App',\n      text: 'Descubre UMusic, la mejor app de streaming de música',\n      url: 'https://github.com/Rafamp34/Proyecto-UMusicWeb',\n    };\n\n    try {\n      if (navigator.share) {\n        await navigator.share(shareData);\n      } else {\n        await navigator.clipboard.writeText(shareData.url);\n        console.log('URL copiada al portapapeles');\n      }\n    } catch (error) {\n      console.log('Error sharing', error);\n    }\n  }\n}\n    \n\n    \n        \n\n  \n    \n      \n    \n    Acerca de UMusic\n    \n    \n      \n        \n      \n    \n  \n\n\n\n  \n    \n      Acerca de UMusic\n    \n  \n\n  \n  \n    \n      \n        \n          \n          \n        \n      \n      UMusic\n      Tu música, tu mundo\n      \n        La experiencia definitiva de streaming musical con tecnología de vanguardia\n      \n      \n        v1.0.0\n      \n    \n  \n\n  \n  \n    \n      \n      Código Fuente\n    \n    \n      \n      Compartir\n    \n  \n\n  \n  \n    \n      \n        \n        Desarrolladores\n      \n    \n    \n    \n      \n        \n        \n        \n          \n            \n              \n              \n            \n          \n          \n          \n            {{ developer.name }}\n            {{ developer.role }}\n            {{ developer.bio }}\n            \n            \n              \n                {{ skill }}\n              \n            \n            \n            \n              \n              {{ developer.github.replace('https://github.com/', '') }}\n            \n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n        Características\n      \n    \n    \n    \n      \n        \n        \n          \n        \n        \n          {{ feature.title }}\n          {{ feature.description }}\n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n        Stack Tecnológico\n      \n    \n    \n    \n      \n        \n        \n          \n        \n        {{ tech.name }}\n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n        Contacto\n      \n    \n    \n    \n      \n        \n          ¿Tienes alguna pregunta?\n          Estamos aquí para ayudarte. No dudes en contactarnos.\n          \n          \n            \n            Enviar mensaje\n          \n        \n      \n    \n  \n\n  \n  \n    \n      \n        \n        UMusic\n      \n      \n        Hecho con ❤️ usando Angular & Ionic\n      \n      \n        © 2025 UMusic. Todos los derechos reservados.\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./about.page.scss\n                \n                // src/app/pages/about/about.page.scss - Con botón Home\n// Variables del tema UMusic\n:root {\n  --umusic-dark: #121212;\n  --umusic-dark-elevated: #1e1e1e;\n  --umusic-dark-card: #282828;\n  --umusic-green: #1DB954;\n  --umusic-green-hover: #1ed760;\n  --umusic-white: #ffffff;\n  --umusic-text-primary: #ffffff;\n  --umusic-text-secondary: #b3b3b3;\n  --umusic-text-muted: #6a6a6a;\n  --umusic-accent: #ff6b35;\n  --umusic-gradient: linear-gradient(135deg, #1DB954, #191414);\n  --umusic-purple: #8b5cf6;\n  --umusic-blue: #3b82f6;\n}\n\n// Base styles\nion-content {\n  --background: var(--umusic-dark);\n  --color: var(--umusic-text-primary);\n}\n\n.modern-header {\n  ion-toolbar {\n    --background: transparent;\n    --color: var(--umusic-white);\n    backdrop-filter: blur(20px);\n    \n    .page-title {\n      font-weight: 700;\n      font-size: 1.1rem;\n    }\n    \n    // ✅ NUEVO: Estilos para el botón Home\n    .home-btn {\n      --color: var(--umusic-white);\n      --background-hover: rgba(255, 255, 255, 0.1);\n      --border-radius: 50%;\n      transition: all 0.3s ease;\n      \n      &:hover {\n        transform: scale(1.1);\n        --color: var(--umusic-green);\n      }\n      \n      ion-icon {\n        font-size: 1.5rem;\n      }\n    }\n  }\n}\n\n.dark-content {\n  --background: var(--umusic-dark);\n}\n\n// Hero Section\n.hero-section {\n  background: var(--umusic-gradient);\n  padding: 80px 20px 60px;\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: -50%;\n    left: -50%;\n    width: 200%;\n    height: 200%;\n    background: repeating-conic-gradient(\n      from 0deg,\n      transparent 0deg 2deg,\n      rgba(255, 255, 255, 0.03) 2deg 4deg\n    );\n    animation: rotate 30s linear infinite;\n  }\n  \n  .hero-content {\n    position: relative;\n    z-index: 2;\n    text-align: center;\n    max-width: 600px;\n    margin: 0 auto;\n  }\n  \n  .app-logo-container {\n    position: relative;\n    display: inline-block;\n    margin-bottom: 30px;\n    \n    .logo-wrapper {\n      position: relative;\n      \n      .app-logo {\n        width: 120px;\n        height: 120px;\n        border-radius: 30px;\n        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n        transition: transform 0.3s ease;\n        \n        &:hover {\n          transform: scale(1.05);\n        }\n      }\n      \n      .logo-glow {\n        position: absolute;\n        top: -10px;\n        left: -10px;\n        right: -10px;\n        bottom: -10px;\n        background: conic-gradient(\n          from 0deg,\n          var(--umusic-green),\n          var(--umusic-purple),\n          var(--umusic-blue),\n          var(--umusic-green)\n        );\n        border-radius: 40px;\n        z-index: -1;\n        animation: spin 3s linear infinite;\n        opacity: 0.7;\n      }\n    }\n  }\n  \n  .app-title {\n    font-size: 3.5rem;\n    font-weight: 900;\n    margin: 0 0 10px;\n    background: linear-gradient(45deg, #ffffff, #b3b3b3);\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    text-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n  }\n  \n  .app-tagline {\n    font-size: 1.2rem;\n    color: rgba(255, 255, 255, 0.9);\n    margin: 0 0 20px;\n    font-weight: 500;\n  }\n  \n  .app-description {\n    font-size: 1rem;\n    color: rgba(255, 255, 255, 0.8);\n    line-height: 1.6;\n    margin: 0 0 30px;\n  }\n  \n  .version-badge {\n    ion-badge {\n      --background: rgba(255, 255, 255, 0.2);\n      --color: white;\n      backdrop-filter: blur(10px);\n      font-weight: 600;\n      padding: 8px 16px;\n      border-radius: 20px;\n    }\n  }\n}\n\n// Quick Actions\n.quick-actions {\n  display: flex;\n  justify-content: center;\n  gap: 16px;\n  padding: 0 20px 40px;\n  margin-top: -20px;\n  position: relative;\n  z-index: 3;\n  \n  .action-btn {\n    height: 48px;\n    border-radius: 24px;\n    font-weight: 600;\n    text-transform: none;\n    transition: all 0.3s ease;\n    \n    &.github-btn {\n      --color: var(--umusic-text-primary);\n      --border-color: rgba(255, 255, 255, 0.3);\n      backdrop-filter: blur(10px);\n      \n      &:hover {\n        --background: rgba(255, 255, 255, 0.1);\n        transform: translateY(-2px);\n      }\n    }\n    \n    &.share-btn {\n      --background: var(--umusic-green);\n      --color: white;\n      \n      &:hover {\n        --background: var(--umusic-green-hover);\n        transform: translateY(-2px);\n      }\n    }\n  }\n}\n\n// Section base styles\n.section {\n  padding: 60px 20px;\n  \n  .section-header {\n    text-align: center;\n    margin-bottom: 50px;\n    \n    .section-title {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 12px;\n      font-size: 2.5rem;\n      font-weight: 800;\n      color: var(--umusic-text-primary);\n      margin: 0;\n      \n      .section-icon {\n        font-size: 2.2rem;\n        color: var(--umusic-green);\n      }\n    }\n  }\n}\n\n// Developers Section\n.developers-section {\n  background: var(--umusic-dark-elevated);\n  \n  .developers-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    gap: 30px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  .developer-card {\n    position: relative;\n    background: var(--umusic-dark-card);\n    border-radius: 20px;\n    overflow: hidden;\n    cursor: pointer;\n    transition: all 0.4s ease;\n    border: 1px solid transparent;\n    \n    &:hover {\n      transform: translateY(-8px);\n      border-color: var(--umusic-green);\n      \n      .card-glow {\n        opacity: 1;\n      }\n    }\n    \n    .card-glow {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      background: linear-gradient(135deg, var(--umusic-green), var(--umusic-purple));\n      opacity: 0;\n      transition: opacity 0.4s ease;\n      z-index: 1;\n      \n      &::before {\n        content: '';\n        position: absolute;\n        top: 2px;\n        left: 2px;\n        right: 2px;\n        bottom: 2px;\n        background: var(--umusic-dark-card);\n        border-radius: 18px;\n      }\n    }\n    \n    .developer-content {\n      position: relative;\n      z-index: 2;\n      padding: 30px;\n      \n      .developer-avatar-section {\n        display: flex;\n        justify-content: center;\n        margin-bottom: 20px;\n        \n        .avatar-container {\n          position: relative;\n          \n          .avatar-img {\n            width: 100px;\n            height: 100px;\n            border-radius: 50%;\n            border: 4px solid var(--umusic-green);\n            transition: transform 0.3s ease;\n          }\n          \n          .avatar-border {\n            position: absolute;\n            top: -6px;\n            left: -6px;\n            right: -6px;\n            bottom: -6px;\n            border: 2px solid transparent;\n            border-radius: 50%;\n            background: conic-gradient(var(--umusic-green), var(--umusic-purple), var(--umusic-green));\n            z-index: -1;\n            animation: spin 4s linear infinite;\n          }\n        }\n      }\n      \n      .developer-info {\n        text-align: center;\n        \n        .developer-name {\n          font-size: 1.5rem;\n          font-weight: 700;\n          color: var(--umusic-text-primary);\n          margin: 0 0 8px;\n        }\n        \n        .developer-role {\n          color: var(--umusic-green);\n          font-weight: 600;\n          font-size: 1rem;\n          margin: 0 0 12px;\n        }\n        \n        .developer-bio {\n          color: var(--umusic-text-secondary);\n          line-height: 1.5;\n          margin: 0 0 20px;\n          font-size: 0.9rem;\n        }\n        \n        .skills-container {\n          display: flex;\n          flex-wrap: wrap;\n          gap: 8px;\n          justify-content: center;\n          margin-bottom: 20px;\n          \n          .skill-chip {\n            --background: rgba(29, 185, 84, 0.15);\n            --color: var(--umusic-green);\n            border: 1px solid rgba(29, 185, 84, 0.3);\n            font-size: 0.75rem;\n            font-weight: 500;\n          }\n        }\n        \n        .github-handle {\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          gap: 8px;\n          color: var(--umusic-text-muted);\n          font-size: 0.9rem;\n          \n          ion-icon {\n            font-size: 18px;\n          }\n        }\n      }\n    }\n  }\n}\n\n// Features Section\n.features-section {\n  .features-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n    gap: 20px;\n    max-width: 1200px;\n    margin: 0 auto;\n  }\n  \n  .feature-card {\n    background: var(--umusic-dark-card);\n    border-radius: 16px;\n    padding: 30px 20px;\n    text-align: center;\n    transition: all 0.3s ease;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    \n    &:hover {\n      transform: translateY(-4px);\n      border-color: var(--umusic-green);\n      box-shadow: 0 10px 30px rgba(29, 185, 84, 0.2);\n    }\n    \n    .feature-icon {\n      margin-bottom: 20px;\n      \n      ion-icon {\n        font-size: 3rem;\n        color: var(--umusic-green);\n      }\n    }\n    \n    .feature-content {\n      .feature-title {\n        font-size: 1.2rem;\n        font-weight: 600;\n        color: var(--umusic-text-primary);\n        margin: 0 0 12px;\n      }\n      \n      .feature-description {\n        color: var(--umusic-text-secondary);\n        line-height: 1.5;\n        margin: 0;\n        font-size: 0.9rem;\n      }\n    }\n  }\n}\n\n// Tech Section\n.tech-section {\n  background: var(--umusic-dark-elevated);\n  \n  .tech-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));\n    gap: 20px;\n    max-width: 800px;\n    margin: 0 auto;\n  }\n  \n  .tech-item {\n    position: relative;\n    background: var(--umusic-dark-card);\n    border-radius: 16px;\n    padding: 30px 20px;\n    text-align: center;\n    transition: all 0.3s ease;\n    overflow: hidden;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    \n    &:hover {\n      transform: translateY(-4px);\n      \n      .tech-glow {\n        opacity: 1;\n      }\n    }\n    \n    .tech-icon {\n      margin-bottom: 15px;\n      \n      ion-icon {\n        font-size: 2.5rem;\n        transition: transform 0.3s ease;\n      }\n    }\n    \n    .tech-name {\n      color: var(--umusic-text-primary);\n      font-weight: 600;\n      font-size: 0.9rem;\n    }\n    \n    .tech-glow {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      height: 3px;\n      opacity: 0;\n      transition: opacity 0.3s ease;\n    }\n  }\n}\n\n// Demo Section\n.demo-section {\n  .demo-container {\n    max-width: 900px;\n    margin: 0 auto;\n    \n    .video-wrapper {\n      position: relative;\n      border-radius: 20px;\n      overflow: hidden;\n      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);\n      \n      .demo-video {\n        width: 100%;\n        height: 500px;\n        border: none;\n      }\n      \n      .video-overlay {\n        position: absolute;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background: rgba(0, 0, 0, 0.3);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        opacity: 0;\n        transition: opacity 0.3s ease;\n        \n        ion-icon {\n          font-size: 4rem;\n          color: white;\n        }\n        \n        &:hover {\n          opacity: 1;\n        }\n      }\n    }\n  }\n}\n\n// Contact Section\n.contact-section {\n  background: var(--umusic-dark-elevated);\n  \n  .contact-container {\n    max-width: 600px;\n    margin: 0 auto;\n    \n    .contact-card {\n      background: var(--umusic-dark-card);\n      border-radius: 20px;\n      padding: 40px;\n      text-align: center;\n      border: 1px solid rgba(255, 255, 255, 0.1);\n      \n      .contact-content {\n        h3 {\n          font-size: 1.5rem;\n          font-weight: 700;\n          color: var(--umusic-text-primary);\n          margin: 0 0 15px;\n        }\n        \n        p {\n          color: var(--umusic-text-secondary);\n          line-height: 1.6;\n          margin: 0 0 30px;\n        }\n        \n        .contact-btn {\n          --background: var(--umusic-green);\n          --color: white;\n          --border-radius: 25px;\n          height: 50px;\n          font-weight: 600;\n          text-transform: none;\n          \n          &:hover {\n            --background: var(--umusic-green-hover);\n            transform: translateY(-2px);\n          }\n        }\n      }\n    }\n  }\n}\n\n// Footer Section\n.footer-section {\n  background: var(--umusic-dark);\n  padding: 40px 20px 20px;\n  border-top: 1px solid rgba(255, 255, 255, 0.1);\n  \n  .footer-content {\n    text-align: center;\n    max-width: 600px;\n    margin: 0 auto;\n    \n    .footer-logo {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      gap: 12px;\n      margin-bottom: 20px;\n      \n      .footer-logo-img {\n        width: 40px;\n        height: 40px;\n        border-radius: 8px;\n      }\n      \n      .footer-brand {\n        font-size: 1.5rem;\n        font-weight: 700;\n        color: var(--umusic-text-primary);\n      }\n    }\n    \n    .footer-text {\n      color: var(--umusic-text-secondary);\n      margin: 0 0 10px;\n      font-size: 0.9rem;\n    }\n    \n    .footer-copyright {\n      color: var(--umusic-text-muted);\n      font-size: 0.8rem;\n      margin: 0;\n    }\n  }\n}\n\n// Animations\n@keyframes rotate {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.animate-in {\n  animation: fadeInUp 0.6s ease forwards;\n}\n\n// Responsive Design\n@media (max-width: 768px) {\n  .hero-section {\n    padding: 60px 15px 40px;\n    \n    .app-title {\n      font-size: 2.5rem;\n    }\n    \n    .app-logo-container .logo-wrapper .app-logo {\n      width: 100px;\n      height: 100px;\n    }\n  }\n  \n  .section {\n    padding: 40px 15px;\n    \n    .section-header .section-title {\n      font-size: 2rem;\n      flex-direction: column;\n      gap: 8px;\n    }\n  }\n  \n  .quick-actions {\n    flex-direction: column;\n    align-items: center;\n    \n    .action-btn {\n      width: 200px;\n    }\n  }\n  \n  .developers-container {\n    grid-template-columns: 1fr;\n  }\n  \n  .features-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .tech-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  \n  .demo-container .video-wrapper .demo-video {\n    height: 250px;\n  }\n  \n  .contact-container .contact-card {\n    padding: 30px 20px;\n  }\n}\n\n@media (max-width: 480px) {\n  .hero-section {\n    padding: 50px 10px 30px;\n    \n    .app-title {\n      font-size: 2rem;\n    }\n    \n    .app-tagline {\n      font-size: 1rem;\n    }\n    \n    .app-description {\n      font-size: 0.9rem;\n    }\n  }\n  \n  .section-header .section-title {\n    font-size: 1.8rem;\n  }\n  \n  .developer-card .developer-content {\n    padding: 20px;\n  }\n  \n  .feature-card {\n    padding: 25px 15px;\n  }\n  \n  .tech-item {\n    padding: 25px 15px;\n  }\n  \n  .contact-card {\n    padding: 25px 15px !important;\n  }\n}\n\n// Dark mode specific adjustments\n@media (prefers-color-scheme: dark) {\n  :root {\n    --ion-color-primary: var(--umusic-green);\n    --ion-color-primary-rgb: 29, 185, 84;\n    --ion-color-primary-contrast: #ffffff;\n    --ion-color-primary-contrast-rgb: 255, 255, 255;\n    --ion-color-primary-shade: #1aa34a;\n    --ion-color-primary-tint: #32bd63;\n  }\n}\n\n// Smooth scroll behavior\nhtml {\n  scroll-behavior: smooth;\n}\n\n// Custom scrollbar\n::-webkit-scrollbar {\n  width: 8px;\n}\n\n::-webkit-scrollbar-track {\n  background: var(--umusic-dark);\n}\n\n::-webkit-scrollbar-thumb {\n  background: var(--umusic-green);\n  border-radius: 4px;\n  \n  &:hover {\n    background: var(--umusic-green-hover);\n  }\n}\n\n// Focus states for accessibility\n.developer-card:focus,\n.feature-card:focus,\n.tech-item:focus {\n  outline: 2px solid var(--umusic-green);\n  outline-offset: 2px;\n}\n\n// High contrast mode support\n@media (prefers-contrast: high) {\n  .section {\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n  }\n  \n  .developer-card,\n  .feature-card,\n  .tech-item {\n    border: 2px solid rgba(255, 255, 255, 0.3);\n  }\n}\n\n// Reduced motion support\n@media (prefers-reduced-motion: reduce) {\n  * {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n  }\n  \n  .logo-glow {\n    animation: none;\n  }\n  \n  .avatar-border {\n    animation: none;\n  }\n}\n\n// Print styles\n@media print {\n  .hero-section {\n    background: white !important;\n    color: black !important;\n  }\n  \n  .section {\n    background: white !important;\n    color: black !important;\n  }\n  \n  .developer-card,\n  .feature-card,\n  .tech-item {\n    border: 1px solid #ccc !important;\n    background: white !important;\n    color: black !important;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Acerca de UMusic                                              Acerca de UMusic                                                                    UMusic      Tu música, tu mundo              La experiencia definitiva de streaming musical con tecnología de vanguardia                    v1.0.0                                Código Fuente                    Compartir                                    Desarrolladores                                                                                                                                                        {{ developer.name }}            {{ developer.role }}            {{ developer.bio }}                                                      {{ skill }}                                                                              {{ developer.github.replace(\\'https://github.com/\\', \\'\\') }}                                                                        Características                                                                            {{ feature.title }}          {{ feature.description }}                                                  Stack Tecnológico                                                                  {{ tech.name }}                                                  Contacto                                          ¿Tienes alguna pregunta?          Estamos aquí para ayudarte. No dudes en contactarnos.                                            Enviar mensaje                                                            UMusic                    Hecho con ❤️ usando Angular & Ionic                    © 2025 UMusic. Todos los derechos reservados.            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'AboutPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageModule.html":{"url":"modules/AboutPageModule.html","title":"module - AboutPageModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AboutPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AboutPageRoutingModule } from './about-routing.module';\nimport { AboutPage } from './about.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AboutPageRoutingModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [AboutPage]\n})\nexport class AboutPageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AboutPageRoutingModule.html":{"url":"modules/AboutPageRoutingModule.html","title":"module - AboutPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AboutPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/about/about-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AboutPage } from './about.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AboutPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AboutPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                authSvc\n                            \n                            \n                                currentLang\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                    \n                                handleKeyboardShortcut\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(languageService: LanguageService, authSvc: BaseAuthenticationService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        languageService\n                                                  \n                                                        \n                                                                        LanguageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        document:keydown\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \ndocument:keydown(event: KeyboardEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:35\n                        \n                    \n\n\n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        handleKeyboardShortcut\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleKeyboardShortcut(event: KeyboardEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('document:keydown', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/app.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        KeyboardEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authSvc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BaseAuthenticationService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, HostListener } from '@angular/core';\nimport { LanguageService } from './core/services/language.service';\nimport { BaseAuthenticationService } from './core/services/impl/base-authentication.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  currentLang: string;\n\n  constructor(\n    private languageService: LanguageService,\n    public authSvc: BaseAuthenticationService,\n    private router: Router\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  logout() {\n    this.authSvc.signOut().subscribe(() => {\n      this.router.navigate(['/login']);\n    });\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  handleKeyboardShortcut(event: KeyboardEvent) {\n    if ((event.ctrlKey || event.metaKey) && event.key === 'k') {\n      event.preventDefault();\n      const searchComponent = document.querySelector('app-global-search');\n      if (searchComponent) {\n        (searchComponent as any).activateSearch();\n      }\n    }\n  }\n}\n    \n\n    \n        \n  \n  \n  \n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                ion-menu {\n  --background: var(--ion-color-light);\n\n  .menu-header {\n    background: linear-gradient(135deg, var(--ion-color-primary), var(--ion-color-primary-shade));\n    color: var(--ion-color-primary-contrast);\n    padding: 20px;\n    margin-bottom: 10px;\n\n    .menu-header-content {\n      display: flex;\n      flex-direction: column;\n      gap: 15px;\n    }\n\n    .user-profile {\n      display: flex;\n      align-items: center;\n      gap: 15px;\n\n      ion-avatar {\n        width: 60px;\n        height: 60px;\n\n        img {\n          border-radius: 50%;\n          border: 3px solid var(--ion-color-primary-contrast);\n        }\n      }\n\n      .user-info {\n        h2 {\n          margin: 0;\n          font-size: 1.2rem;\n          font-weight: 600;\n        }\n\n        p {\n          margin: 5px 0 0;\n          font-size: 0.9rem;\n          opacity: 0.8;\n        }\n      }\n    }\n\n    .language-selector {\n      display: flex;\n      justify-content: center;\n      gap: 10px;\n\n      ion-button {\n        --border-radius: 20px;\n        min-width: 50px;\n      }\n    }\n  }\n\n  .menu-content {\n    ion-list {\n      display: flex;\n      flex-direction: column;\n      padding: 0;\n\n      ion-menu-item {\n        cursor: pointer;\n        --background: transparent;\n        --color: var(--ion-color-dark);\n        --padding-start: 15px;\n        --inner-padding-end: 15px;\n        border-radius: 10px;\n        transition: background-color 0.3s ease;\n        border-bottom: 1px solid var(--ion-color-light); /* Línea entre los elementos */\n        padding-bottom: 10px;\n        margin-bottom: 10px;\n\n        &:hover {\n          --background: var(--ion-color-light-shade);\n        }\n\n        ion-icon {\n          margin-right: 15px;\n          color: var(--ion-color-medium);\n        }\n\n        &:last-child {\n          border-bottom: none; /* Elimina la línea después del último elemento */\n        }\n      }\n    }\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nArtistsService\n\nArtistsService\n\nAppModule -->\n\nArtistsService->AppModule\n\n\n\n\n\nAudioPlayerService\n\nAudioPlayerService\n\nAppModule -->\n\nAudioPlayerService->AppModule\n\n\n\n\n\nEnhancedAudioPlayerService\n\nEnhancedAudioPlayerService\n\nAppModule -->\n\nEnhancedAudioPlayerService->AppModule\n\n\n\n\n\nPlaylistsService\n\nPlaylistsService\n\nAppModule -->\n\nPlaylistsService->AppModule\n\n\n\n\n\nSongEnrichmentService\n\nSongEnrichmentService\n\nAppModule -->\n\nSongEnrichmentService->AppModule\n\n\n\n\n\nSongsService\n\nSongsService\n\nAppModule -->\n\nSongsService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ArtistsService\n                        \n                        \n                            AudioPlayerService\n                        \n                        \n                            EnhancedAudioPlayerService\n                        \n                        \n                            PlaylistsService\n                        \n                        \n                            SongEnrichmentService\n                        \n                        \n                            SongsService\n                        \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { RouteReuseStrategy } from '@angular/router';\nimport { IonicModule, IonicRouteStrategy } from '@ionic/angular';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport player from 'lottie-web';\nimport { ɵLOTTIE_OPTIONS as LOTTIE_OPTIONS } from 'ngx-lottie';\n\n\nimport { \n  AuthenticationServiceFactory, \n  AuthMappingFactory, \n  MediaServiceFactory, \n  SongsMappingFactory,\n  PlaylistsMappingFactory,\n  UsersMappingFactory,\n  SongsRepositoryFactory,\n  PlaylistsRepositoryFactory,\n  UsersRepositoryFactory,\n  ArtistsMappingFactory,\n  ArtistsRepositoryFactory\n} from './core/repositories/repository.factory';\nimport { \n  COLLECTION_SUBSCRIPTION_TOKEN \n} from './core/repositories/repository.tokens';\nimport { ArtistsService } from './core/services/impl/artists.service';\nimport { SongsService } from './core/services/impl/songs.service';\nimport { PlaylistsService } from './core/services/impl/playlists.service';\nimport { UserService } from './core/services/impl/user.service';\nimport { \n  AUTH_MAPPING_TOKEN, \n  AUTH_ME_API_URL_TOKEN, \n  AUTH_SIGN_IN_API_URL_TOKEN, \n  AUTH_SIGN_UP_API_URL_TOKEN, \n  BACKEND_TOKEN, \n  SONGS_API_URL_TOKEN,\n  PLAYLISTS_API_URL_TOKEN,\n  USERS_API_URL_TOKEN,\n  SONGS_RESOURCE_NAME_TOKEN,\n  PLAYLISTS_RESOURCE_NAME_TOKEN,\n  USERS_RESOURCE_NAME_TOKEN,\n  USERS_REPOSITORY_TOKEN,\n  UPLOAD_API_URL_TOKEN, \n  FIREBASE_CONFIG_TOKEN,\n  STRAPI_AUTH_TOKEN,\n  AUTH_TOKEN,\n  ARTISTS_API_URL_TOKEN,\n  ARTISTS_RESOURCE_NAME_TOKEN\n} from './core/repositories/repository.tokens';\nimport { provideHttpClient } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { BaseAuthenticationService } from './core/services/impl/base-authentication.service';\nimport { HttpClient } from '@angular/common/http';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport { SharedModule } from './shared/shared.module';\nimport { environment } from 'src/environments/environment';\nimport { FirebaseCollectionSubscriptionService } from './core/services/interfaces/firebase-collection-subscription.interface';\nimport { SongEnrichmentService } from './core/services/impl/song-enrichment.service';\nimport { AudioPlayerService } from './core/services/impl/audio-player.service';\nimport { EnhancedAudioPlayerService } from './core/services/impl/enhanced-audio-player.service';\n\nexport function playerFactory() {\n  return player;\n}\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    IonicModule.forRoot(),\n    AppRoutingModule,\n    ReactiveFormsModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient]\n      }\n    }),\n    SharedModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [\n\n    {\n      provide: COLLECTION_SUBSCRIPTION_TOKEN,\n      useClass: FirebaseCollectionSubscriptionService\n    },\n\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    provideHttpClient(),\n    { provide: BACKEND_TOKEN, useValue: 'strapi' },\n    \n    // Resource Names\n    { provide: SONGS_RESOURCE_NAME_TOKEN, useValue: 'songs' },\n    { provide: PLAYLISTS_RESOURCE_NAME_TOKEN, useValue: 'playlists' },\n    { provide: USERS_RESOURCE_NAME_TOKEN, useValue: 'users' },\n    { provide: ARTISTS_RESOURCE_NAME_TOKEN, useValue: 'artists' },\n    \n    // API URLs\n    { provide: SONGS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: PLAYLISTS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: USERS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    { provide: AUTH_SIGN_IN_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/auth/local` },\n    { provide: AUTH_SIGN_UP_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/auth/local/register` },\n    { provide: AUTH_ME_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/users/me` },\n    { provide: UPLOAD_API_URL_TOKEN, useValue: `${environment.apiUrl}/api/upload` },\n    { provide: ARTISTS_API_URL_TOKEN, useValue: `${environment.apiUrl}/api` },\n    \n    // Firebase Config\n    { provide: FIREBASE_CONFIG_TOKEN, useValue: {\n      apiKey: \"AIzaSyC5YO2riR55SL7k3nzN6ubRQ8dPoflkLHA\",\n      authDomain: \"umusic-9af08.firebaseapp.com\",\n      projectId: \"umusic-9af08\",\n      storageBucket: \"umusic-9af08.firebasestorage.app\",\n      messagingSenderId: \"6432458357\",\n      appId: \"1:6432458357:web:08b9d178b6d3c44550da3c\",\n      measurementId: \"G-BN27LHZ2K9\"\n    }},\n    \n    // Factories y Servicios\n    ArtistsMappingFactory, \n    SongsMappingFactory,\n    PlaylistsMappingFactory,\n    UsersMappingFactory,\n    AuthMappingFactory,\n    ArtistsRepositoryFactory,\n    SongsRepositoryFactory,\n    PlaylistsRepositoryFactory,\n    UsersRepositoryFactory,\n    SongsService,\n    PlaylistsService,\n    UserService,\n    AudioPlayerService,\n    EnhancedAudioPlayerService,\n    MediaServiceFactory,\n    ArtistsService,\n    SongEnrichmentService,\n\n    // Autenticación\n    AuthenticationServiceFactory,\n    {\n      provide: AUTH_TOKEN,\n      useExisting: BaseAuthenticationService\n    },\n    {\n      provide: STRAPI_AUTH_TOKEN,\n      useExisting: BaseAuthenticationService\n    },\n    { provide: RouteReuseStrategy, useClass: IonicRouteStrategy },\n    {\n      provide: LOTTIE_OPTIONS,\n      useValue: {\n        player: () => player\n      }\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\nimport { authGuard } from './core/guards/auth.guard';\nimport { noAuthGuard } from './core/guards/no-auth.guard';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'splash',\n    pathMatch: 'full'\n  },\n  {\n    path: 'home',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/home/home.module').then(m => m.HomePageModule)\"\n  },\n  {\n    path: 'splash',\n    loadComponent: () => \"import('./pages/splash/splash.page').then(m => m.SplashPage)\"\n  },\n  {\n    path: 'login',\n    canActivate: [noAuthGuard],\n    loadChildren: () => \"import('./pages/login/login.module').then(m => m.LoginPageModule)\"\n  },\n  {\n    path: 'register',\n    canActivate: [noAuthGuard],\n    loadChildren: () => \"import('./pages/register/register.module').then(m => m.RegisterPageModule)\"\n  },\n  {\n    path: 'playlists',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/playlists/playlists.module').then(m => m.PlaylistsPageModule)\"\n  },\n  {\n    path: 'songs',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/songs/songs.module').then(m => m.SongsPageModule)\"\n  },\n  {\n    path: 'profile',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/profile/profile.module').then(m => m.ProfilePageModule)\"\n  },\n  {\n    path: 'playlist/:id',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/playlist-detail/playlist-detail.module').then(m => m.PlaylistDetailPageModule)\"\n  },\n  {\n    path: 'artists',\n    canActivate: [authGuard],\n    loadChildren: () => \"import('./pages/artists/artists.module').then(m => m.ArtistsPageModule)\"\n  },\n  {\n    path: 'artist/:id',\n    loadChildren: () => \"import('./pages/artist-profile/artist-profile.module').then(m => m.ArtistProfilePageModule)\",\n    canActivate: [authGuard]\n  },\n  {\n    path: 'artist-profile',\n    loadChildren: () => \"import('./pages/artist-profile/artist-profile.module').then( m => m.ArtistProfilePageModule)\",\n    canActivate: [authGuard]\n  },\n  {\n    path: 'about',\n    loadChildren: () => \"import('./pages/about/about.module').then( m => m.AboutPageModule)\",\n    canActivate: [authGuard]\n  },\n\n\n\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Artist.html":{"url":"interfaces/Artist.html","title":"interface - Artist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Artist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/artist.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artists_follow\n                                        \n                                \n                                \n                                        \n                                            followers_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            listeners\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            songs_IDS\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            verified\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artists_follow\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists_follow:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listeners\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listeners:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songs_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songs_IDS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        verified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        verified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Artist extends Model {\n    name: string;\n    listeners: number;\n    songs_IDS: string[];\n    image?: {\n        url: string | undefined;\n        large: string | undefined;\n        medium: string | undefined;\n        small: string | undefined;\n        thumbnail: string | undefined;\n    };\n    artists_follow: string[];\n    followers_count: number;\n    verified?: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ArtistData.html":{"url":"interfaces/ArtistData.html","title":"interface - ArtistData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ArtistData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/clickable-artist/clickable-artist-names.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\n\ninterface ArtistData {\n  name: string;\n  id?: string;\n}\n\n@Component({\n  selector: 'app-clickable-artist-names',\n  templateUrl: './clickable-artist-names.component.html',\n  styleUrls: ['./clickable-artist-names.component.scss']\n})\nexport class ClickableArtistNamesComponent implements OnChanges {\n  @Input() artistNames: string[] = [];\n  @Input() artistIds: string[] = []; // ✅ OPCIONAL: IDs si los tienes\n  @Input() maxArtists: number = 0;\n  @Input() showCount: boolean = false;\n  @Input() searchEnabled: boolean = true;\n  \n  @Output() artistClicked = new EventEmitter();\n\n  artistsData: ArtistData[] = [];\n\n  constructor(\n    private router: Router,\n    private artistsService: ArtistsService\n  ) {}\n\n  ngOnChanges() {\n    this.buildArtistsData();\n  }\n\n  private buildArtistsData() {\n    this.artistsData = this.artistNames.map((name, index) => ({\n      name,\n      id: this.artistIds && this.artistIds[index] ? this.artistIds[index] : undefined\n    }));\n  }\n\n  get displayArtists(): ArtistData[] {\n    if (this.maxArtists \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArtistGridCardComponent.html":{"url":"components/ArtistGridCardComponent.html","title":"component - ArtistGridCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArtistGridCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/artist-grid-card/artist-grid-card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-artist-grid-card\n            \n\n\n\n            \n                styleUrls\n                ./artist-grid-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./artist-grid-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHovered\n                            \n                            \n                                isPlaying\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                            \n                                onPlay\n                            \n                            \n                                onSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                artist\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        artist\n                    \n                \n                \n                    \n                        Type :         Artist\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        select\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:13\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:22\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \nonMouseEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \nonMouseLeave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onPlay\n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelect\n                        \n                    \n                \n            \n            \n                \nonSelect()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isHovered\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/artist-grid-card/artist-grid-card.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { Artist } from 'src/app/core/models/artist.model';\n\n@Component({\n  selector: 'app-artist-grid-card',\n  templateUrl: './artist-grid-card.component.html',\n  styleUrls: ['./artist-grid-card.component.scss']\n})\nexport class ArtistGridCardComponent {\n  @Input() artist!: Artist;\n  @Output() edit = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() select = new EventEmitter();\n\n  isHovered = false;\n  isPlaying = false; \n\n  onEdit() {\n    this.edit.emit(this.artist);\n  }\n\n  onDelete() {\n    this.delete.emit(this.artist);\n  }\n\n  onSelect() {\n    this.select.emit(this.artist);\n  }\n\n  onMouseEnter() {\n    this.isHovered = true;\n  }\n\n  onMouseLeave() {\n    this.isHovered = false;\n  }\n\n  onPlay() {\n    this.isPlaying = !this.isPlaying; // Cambia el estado de isPlaying\n    console.log('Playing artist:', this.artist);\n  }\n}\n    \n\n    \n        \n  \n    \n    \n    \n      \n        \n          \n        \n        \n        \n          \n        \n        \n        \n          \n        \n      \n    \n  \n\n  \n    {{artist.name}}\n    {{artist.listeners | number}} oyentes\n  \n\n    \n\n    \n                \n                    ./artist-grid-card.component.scss\n                \n                .artist-card {\n    background: rgba(71, 103, 42, 0.119);\n    border-radius: 8px;\n    overflow: hidden;\n    box-shadow: 0 2px 4px rgb(255, 255, 255);\n    transition: all 0.3s ease;\n  \n    &:hover {\n      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    }\n  }\n  \n  .image-container {\n    position: relative;\n    aspect-ratio: 1;\n  \n    .artist-image {\n      width: 100%;\n      height: 100%;\n      object-fit: cover;\n    }\n  \n    .overlay {\n      position: absolute;\n      inset: 0;\n      background: rgba(0, 0, 0, 0.4);\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      transition: opacity 0.3s ease;\n    }\n  \n    .action-buttons {\n      display: flex;\n      gap: 8px;\n  \n      ion-button {\n        --padding-start: 8px;\n        --padding-end: 8px;\n        --background: rgb(255, 255, 255);\n        --color: var(--ion-color-dark);\n  \n        &.play-button {\n          --color: var(--ion-color-primary);\n        }\n  \n        &.edit-button {\n          --color: var(--ion-color-primary);\n        }\n  \n        &.delete-button {\n          --color: var(--ion-color-danger);\n        }\n      }\n    }\n  }\n  \n  .artist-info {\n    padding: 1rem;\n  \n    .artist-name {\n      font-weight: 600;\n      color: var(--ion-color-dark);\n      margin: 0 0 4px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  \n    .artist-listeners {\n      font-size: 0.875rem;\n      color: var(--ion-color-medium);\n      margin: 0;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                    {{artist.name}}    {{artist.listeners | number}} oyentes  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArtistGridCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArtistModalComponent.html":{"url":"components/ArtistModalComponent.html","title":"component - ArtistModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArtistModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/artist-modal.component/artist-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-artist-modal\n            \n\n\n\n            \n                styleUrls\n                ./artist-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./artist-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _selectedSongs\n                            \n                            \n                                formGroup\n                            \n                            \n                                mode\n                            \n                            \n                                selectedSongs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                    Private\n                                    Async\n                                loadSelectedSongs\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                openSongSelector\n                            \n                            \n                                removeSong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                artist\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    artist\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, mediaService: BaseMediaService, songsService: SongsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        songsService\n                                                  \n                                                        \n                                                                        SongsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        artist\n                    \n                \n                \n                    \n                        Type :         Artist\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:23\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:134\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        loadSelectedSongs\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadSelectedSongs(songIds: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songIds\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openSongSelector\n                        \n                    \n                \n            \n            \n                \n                        \n                    openSongSelector()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:60\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSong\n                        \n                    \n                \n            \n            \n                \nremoveSong(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:87\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _selectedSongs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSongs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._selectedSongs.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        artist\n                    \n                \n\n\n                \n                    \n                        setartist(_artist: Artist)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/artist-modal.component/artist-modal.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _artist\n                                                    \n                                                            \n                                                                            Artist\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { Artist } from 'src/app/core/models/artist.model';\nimport { Song } from 'src/app/core/models/song.model';\nimport { BaseMediaService } from 'src/app/core/services/impl/base-media.service';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { BehaviorSubject, lastValueFrom } from 'rxjs';\nimport { SongDetailModalComponent } from '../song-detail-modal/song-detail-modal.component';\n\n@Component({\n  selector: 'app-artist-modal',\n  templateUrl: './artist-modal.component.html',\n  styleUrls: ['./artist-modal.component.scss']\n})\nexport class ArtistModalComponent  {\n  formGroup: FormGroup;\n  mode: 'new' | 'edit' = 'new';\n  private _selectedSongs = new BehaviorSubject([]);\n  selectedSongs$ = this._selectedSongs.asObservable();\n\n  @Input() set artist(_artist: Artist) {\n    if (_artist && _artist.id) {\n      this.mode = 'edit';\n      this.formGroup.patchValue({\n        name: _artist.name,\n        listiners: _artist.listeners || 0,\n        image: _artist.image?.url,\n        songs_IDS: _artist.songs_IDS || []\n      });\n      \n      if (_artist.songs_IDS?.length) {\n        this.loadSelectedSongs(_artist.songs_IDS);\n      }\n    }\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private modalCtrl: ModalController,\n    private mediaService: BaseMediaService,\n    private songsService: SongsService\n  ) {\n    this.formGroup = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      listiners: [0],\n      image: [null],\n      songs_IDS: [[]]\n    });\n  }\n\n  private async loadSelectedSongs(songIds: string[]) {\n    const songs = await Promise.all(\n      songIds.map(id => lastValueFrom(this.songsService.getById(id)))\n    );\n    this._selectedSongs.next(songs.filter((song): song is Song => song !== null));\n  }\n\n  async openSongSelector() {\n    const modal = await this.modalCtrl.create({\n      component: SongDetailModalComponent,\n      componentProps: {\n        excludeSongIds: this.formGroup.get('songs_IDS')?.value || []\n      }\n    });\n\n    modal.onDidDismiss().then((result) => {\n      if (result.role === 'select' && result.data) {\n        const currentSongs = this._selectedSongs.value;\n        const newSong = result.data as Song;\n        \n        if (!currentSongs.find(s => s.id === newSong.id)) {\n          this._selectedSongs.next([...currentSongs, newSong]);\n          const currentIds = this.formGroup.get('songs_IDS')?.value || [];\n          this.formGroup.patchValue({\n            songs_IDS: [...currentIds, newSong.id]\n          });\n          this.formGroup.markAsDirty();\n        }\n      }\n    });\n\n    await modal.present();\n  }\n\n  removeSong(song: Song) {\n    const currentSongs = this._selectedSongs.value;\n    this._selectedSongs.next(currentSongs.filter(s => s.id !== song.id));\n    \n    const currentIds = this.formGroup.get('songs_IDS')?.value || [];\n    this.formGroup.patchValue({\n      songs_IDS: currentIds.filter((id: string) => id !== song.id)\n    });\n    this.formGroup.markAsDirty();\n  }\n\n  async onSubmit() {\n    if (this.formGroup.valid) {\n      try {\n        const formData = { ...this.formGroup.value };\n        \n        if (this.formGroup.get('image')?.dirty && formData.image) {\n          try {\n            const response = await fetch(formData.image);\n            const blob = await response.blob();\n            \n            const uploadResult = await lastValueFrom(this.mediaService.upload(blob));\n            formData.image = {\n              url: uploadResult[0],\n              large: uploadResult[0],\n              medium: uploadResult[0],\n              small: uploadResult[0],\n              thumbnail: uploadResult[0]\n            };\n          } catch (error) {\n            console.error('Error uploading image:', error);\n            delete formData.image;\n          }\n        }\n\n        const role = this.mode === 'new' ? 'create' : 'update';\n        const data = this.mode === 'new' ? \n          formData : \n          this.getDirtyValues(this.formGroup);\n        \n        this.modalCtrl.dismiss(data, role);\n      } catch (error) {\n        console.error('Error in submit:', error);\n      }\n    }\n  }\n\n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n    return dirtyValues;\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n      \n    \n    {{ (mode === 'edit' ? 'Edit Artist' : 'New Artist') }}\n  \n\n\n\n  \n    \n    \n      \n      \n    \n    \n      Name is required\n    \n\n    \n    \n      \n      \n    \n\n    \n    \n      \n    \n\n    \n    \n      Songs\n      \n        \n          {{ song.name }}\n          \n        \n      \n      \n        \n        Add Songs\n      \n    \n\n    \n      \n        {{ (mode === 'edit' ? 'Update' : 'Create') }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./artist-modal.component.scss\n                \n                .selected-songs {\n    margin: 10px 0;\n    min-height: 40px;\n  }\n  \n  ion-chip {\n    margin: 5px;\n  }\n  \n  ion-button[expand=\"block\"] {\n    margin-top: 16px;\n  }\n  \n  .ion-padding {\n    margin-top: 20px;\n  }\n  \n  ion-item {\n    margin-bottom: 16px;\n    --padding-start: 0;\n    --inner-padding-end: 0;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{ (mode === \\'edit\\' ? \\'Edit Artist\\' : \\'New Artist\\') }}                                      Name is required                                                            Songs                        {{ song.name }}                                              Add Songs                            {{ (mode === \\'edit\\' ? \\'Update\\' : \\'Create\\') }}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArtistModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArtistProfilePageModule.html":{"url":"modules/ArtistProfilePageModule.html","title":"module - ArtistProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ArtistProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArtistProfilePageModule\n\n\n\ncluster_ArtistProfilePageModule_declarations\n\n\n\ncluster_ArtistProfilePageModule_imports\n\n\n\n\nArtistProfilePage\n\nArtistProfilePage\n\n\n\nArtistProfilePageModule\n\nArtistProfilePageModule\n\nArtistProfilePageModule -->\n\nArtistProfilePage->ArtistProfilePageModule\n\n\n\n\n\nArtistProfilePageRoutingModule\n\nArtistProfilePageRoutingModule\n\nArtistProfilePageModule -->\n\nArtistProfilePageRoutingModule->ArtistProfilePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nArtistProfilePageModule -->\n\nSharedModule->ArtistProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/artist-profile/artist-profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArtistProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArtistProfilePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/app/pages/artist-profile/artist-profile.module.ts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\nimport { ArtistProfilePageRoutingModule } from './artist-profile-routing.module';\nimport { ArtistProfilePage } from './artist-profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    TranslateModule.forChild(),\n    SharedModule,\n    ArtistProfilePageRoutingModule\n  ],\n  declarations: [ArtistProfilePage]\n})\nexport class ArtistProfilePageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArtistProfilePageRoutingModule.html":{"url":"modules/ArtistProfilePageRoutingModule.html","title":"module - ArtistProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArtistProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/artist-profile/artist-profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ArtistProfilePage } from './artist-profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ArtistProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ArtistProfilePageRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArtistsMappingStrapi.html":{"url":"injectables/ArtistsMappingStrapi.html","title":"injectable - ArtistsMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArtistsMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/artists-mapping-strapi.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de mapeo para artistas específico para Strapi\nManeja la transformación entre el modelo Artist y la estructura de datos de Strapi\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                    Private\n                                mapArtistsFollow\n                            \n                            \n                                    Private\n                                mapImage\n                            \n                            \n                                    Private\n                                mapSongsIds\n                            \n                            \n                                    Private\n                                parseNumber\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:184\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de creación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras POST\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Artist\n\n                        \n                            \n                                Modelo Artist mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:202\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de eliminación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras DELETE\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Artist\n\n                        \n                            \n                                Modelo Artist mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:83\n                        \n                    \n\n\n            \n                \n                        Convierte un objeto de respuesta de Strapi en un modelo Artist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos sin procesar de Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Artist\n\n                        \n                            \n                                Modelo Artist mapeado o null si los datos son inválidos\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, totalItems: number, items: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:69\n                        \n                    \n\n\n            \n                \n                        Crea un objeto paginado con artistas mapeados\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página actual\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                totalItems\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Total de elementos disponibles\n\n                                            \n                                        \n                                        \n                                                items\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array de datos sin procesar de Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                Objeto Paginated con artistas mapeados\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:193\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de actualización\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras PUT/PATCH\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Artist\n\n                        \n                            \n                                Modelo Artist mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapArtistsFollow\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapArtistsFollow(artistsFollowData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:154\n                        \n                    \n\n\n            \n                \n                        Mapea los datos de usuarios que siguen al artista\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                artistsFollowData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos de usuarios que siguen desde Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                Array de strings con IDs de usuarios\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapImage(imageData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:113\n                        \n                    \n\n\n            \n                \n                        Mapea los datos de imagen de Strapi al formato del modelo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                imageData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos de imagen desde Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Objeto de imagen con diferentes tamaños o estructura vacía\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapSongsIds\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapSongsIds(songsData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:141\n                        \n                    \n\n\n            \n                \n                        Extrae y mapea los IDs de canciones desde la respuesta de Strapi\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                songsData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos de canciones relacionadas desde Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string[]\n\n                        \n                            \n                                Array de strings con los IDs de las canciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        parseNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    parseNumber(value: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:168\n                        \n                    \n\n\n            \n                \n                        Convierte un valor a número, manejando strings y valores nulos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor a convertir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         number\n\n                        \n                            \n                                Número parseado o 0 si no es válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Artist)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Prepara los datos del artista para ser enviados a Strapi en una operación de creación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Artist\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Modelo Artist a convertir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Objeto con estructura compatible con Strapi para POST\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/artists-mapping-strapi.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Prepara los datos parciales del artista para actualización en Strapi\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos parciales del Artist a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Objeto con estructura compatible con Strapi para PUT/PATCH\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Artist } from '../../models/artist.model';\nimport { Paginated } from '../../models/paginated.model';\n\n/**\n * Servicio de mapeo para artistas específico para Strapi\n * Maneja la transformación entre el modelo Artist y la estructura de datos de Strapi\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class ArtistsMappingStrapi implements IBaseMapping {\n    \n    /**\n     * Prepara los datos del artista para ser enviados a Strapi en una operación de creación\n     * @param data Modelo Artist a convertir\n     * @returns Objeto con estructura compatible con Strapi para POST\n     */\n    setAdd(data: Artist): any {\n        return {\n            data: {\n                Name: data.name, // Convertir name -> Name para Strapi\n                listeners: data.listeners?.toString() || \"0\",\n                followers_count: data.followers_count?.toString() || \"0\",\n                verified: data.verified || false,\n            }\n        };\n    }\n\n    /**\n     * Prepara los datos parciales del artista para actualización en Strapi\n     * @param data Datos parciales del Artist a actualizar\n     * @returns Objeto con estructura compatible con Strapi para PUT/PATCH\n     */\n    setUpdate(data: Partial): any {\n        const updateData: any = {};\n        \n        if (data.name !== undefined) {\n            updateData.Name = data.name;\n        }\n        \n        if (data.listeners !== undefined) {\n            updateData.listeners = data.listeners.toString();\n        }\n        \n        if (data.followers_count !== undefined) {\n            updateData.followers_count = data.followers_count.toString();\n        }\n        \n        if (data.verified !== undefined) {\n            updateData.verified = data.verified;\n        }\n\n        return {\n            data: updateData\n        };\n    }\n\n    /**\n     * Crea un objeto paginado con artistas mapeados\n     * @param page Número de página actual\n     * @param pageSize Tamaño de página\n     * @param totalItems Total de elementos disponibles\n     * @param items Array de datos sin procesar de Strapi\n     * @returns Objeto Paginated con artistas mapeados\n     */\n    getPaginated(page: number, pageSize: number, totalItems: number, items: any[]): Paginated {\n        return {\n            data: items.map(item => this.getOne({ data: item })),\n            page,\n            pageSize,\n            pages: Math.ceil(totalItems / pageSize)\n        };\n    }\n\n    /**\n     * Convierte un objeto de respuesta de Strapi en un modelo Artist\n     * @param data Datos sin procesar de Strapi\n     * @returns Modelo Artist mapeado o null si los datos son inválidos\n     */\n    getOne(data: any): Artist {\n        if (!data) return null as any;\n\n        const item = data.data || data;\n        const id = item.id?.toString();\n        const attributes = item.attributes || item;\n\n        if (!attributes) {\n            return null as any;\n        }\n\n        const artist: Artist = {\n            id,\n            name: attributes.Name || attributes.name || '',\n            listeners: this.parseNumber(attributes.listeners),\n            followers_count: this.parseNumber(attributes.followers_count),\n            image: this.mapImage(attributes.image),\n            songs_IDS: this.mapSongsIds(attributes.songs_IDS),\n            artists_follow: this.mapArtistsFollow(attributes.artists_follow),\n            verified: attributes.verified || false\n        };\n\n        return artist;\n    }\n\n    /**\n     * Mapea los datos de imagen de Strapi al formato del modelo\n     * @param imageData Datos de imagen desde Strapi\n     * @returns Objeto de imagen con diferentes tamaños o estructura vacía\n     */\n    private mapImage(imageData: any): any {\n        if (!imageData?.data?.attributes) {\n            return {\n                url: undefined,\n                large: undefined,\n                medium: undefined,\n                small: undefined,\n                thumbnail: undefined\n            };\n        }\n\n        const imageAttrs = imageData.data.attributes;\n        const formats = imageAttrs.formats || {};\n\n        return {\n            url: imageAttrs.url,\n            large: formats.large?.url,\n            medium: formats.medium?.url,\n            small: formats.small?.url,\n            thumbnail: formats.thumbnail?.url\n        };\n    }\n\n    /**\n     * Extrae y mapea los IDs de canciones desde la respuesta de Strapi\n     * @param songsData Datos de canciones relacionadas desde Strapi\n     * @returns Array de strings con los IDs de las canciones\n     */\n    private mapSongsIds(songsData: any): string[] {\n        if (!songsData?.data || !Array.isArray(songsData.data)) {\n            return [];\n        }\n\n        return songsData.data.map((song: any) => song.id?.toString()).filter(Boolean);\n    }\n\n    /**\n     * Mapea los datos de usuarios que siguen al artista\n     * @param artistsFollowData Datos de usuarios que siguen desde Strapi\n     * @returns Array de strings con IDs de usuarios\n     */\n    private mapArtistsFollow(artistsFollowData: any): string[] {\n        if (!artistsFollowData?.data || !Array.isArray(artistsFollowData.data)) {\n            return [];\n        }\n\n        // Convertir de array de objetos a array de IDs de usuarios\n        return artistsFollowData.data.map((user: any) => user.id?.toString()).filter(Boolean);\n    }\n\n    /**\n     * Convierte un valor a número, manejando strings y valores nulos\n     * @param value Valor a convertir\n     * @returns Número parseado o 0 si no es válido\n     */\n    private parseNumber(value: any): number {\n        if (typeof value === 'number') {\n            return value;\n        }\n        if (typeof value === 'string') {\n            const parsed = parseInt(value, 10);\n            return isNaN(parsed) ? 0 : parsed;\n        }\n        return 0;\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de creación\n     * @param data Respuesta de Strapi tras POST\n     * @returns Modelo Artist mapeado\n     */\n    getAdded(data: any): Artist {\n        return this.getOne(data);\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de actualización\n     * @param data Respuesta de Strapi tras PUT/PATCH\n     * @returns Modelo Artist mapeado\n     */\n    getUpdated(data: any): Artist {\n        return this.getOne(data);\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de eliminación\n     * @param data Respuesta de Strapi tras DELETE\n     * @returns Modelo Artist mapeado\n     */\n    getDeleted(data: any): Artist {\n        return this.getOne(data);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ArtistsPage.html":{"url":"components/ArtistsPage.html","title":"component - ArtistsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ArtistsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/artists/artists.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-artists\n            \n\n\n\n            \n                styleUrls\n                ./artists.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./artists.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _artists\n                            \n                            \n                                artists$\n                            \n                            \n                                page\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadArtists\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onAddArtist\n                            \n                            \n                                    Async\n                                onDeleteArtist\n                            \n                            \n                                onIonInfinite\n                            \n                            \n                                onSelectArtist\n                            \n                            \n                                    Async\n                                onUpdateArtist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(artistsSvc: ArtistsService, modalCtrl: ModalController, alertCtrl: AlertController, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/artists/artists.page.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        artistsSvc\n                                                  \n                                                        \n                                                                        ArtistsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadArtists\n                        \n                    \n                \n            \n            \n                \nloadArtists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artists/artists.page.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artists/artists.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onAddArtist\n                        \n                    \n                \n            \n            \n                \n                        \n                    onAddArtist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artists/artists.page.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onDeleteArtist\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeleteArtist(artist: Artist)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artists/artists.page.ts:107\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            Artist\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIonInfinite\n                        \n                    \n                \n            \n            \n                \nonIonInfinite(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artists/artists.page.ts:136\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSelectArtist\n                        \n                    \n                \n            \n            \n                \nonSelectArtist(artist: Artist)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artists/artists.page.ts:132\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            Artist\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onUpdateArtist\n                        \n                    \n                \n            \n            \n                \n                        \n                    onUpdateArtist(artist: Artist)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/artists/artists.page.ts:73\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            Artist\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _artists\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/artists/artists.page.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        artists$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._artists.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/artists/artists.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/artists/artists.page.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/artists/artists.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/artists/artists.page.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { ArtistsService } from '../../core/services/impl/artists.service';\nimport { Artist } from '../../core/models/artist.model';\nimport { Paginated } from '../../core/models/paginated.model';\nimport { Router } from '@angular/router';\nimport { ArtistModalComponent } from 'src/app/shared/components/artist-modal.component/artist-modal.component';\n\n@Component({\n  selector: 'app-artists',\n  templateUrl: './artists.page.html',\n  styleUrls: ['./artists.page.scss'],\n})\nexport class ArtistsPage implements OnInit {\n  private _artists = new BehaviorSubject([]);\n  artists$ = this._artists.asObservable();\n  \n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  constructor(\n    private artistsSvc: ArtistsService,\n    private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    console.log('ArtistsPage - ngOnInit');\n    this.loadArtists();\n  }\n\n  loadArtists() {\n    console.log('Loading artists - Page:', this.page);\n    this.page = 1;\n    this.artistsSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        console.log('Artists response:', response);\n        this._artists.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      },\n      error: (error) => {\n        console.error('Error loading artists:', error);\n      }\n    });\n  }\n\n  async onAddArtist() {\n    const modal = await this.modalCtrl.create({\n      component: ArtistModalComponent,\n      componentProps: {}\n    });\n\n    modal.onDidDismiss().then((result) => {\n      if (result.role === 'create') {\n        this.artistsSvc.add(result.data).subscribe({\n          next: () => {\n            this.loadArtists();\n          },\n          error: (err) => {\n            console.error('Error creating artist:', err);\n          }\n        });\n      }\n    });\n\n    await modal.present();\n  }\n\n  async onUpdateArtist(artist: Artist) {\n    const modal = await this.modalCtrl.create({\n      component: ArtistModalComponent,\n      componentProps: {\n        artist: artist\n      }\n    });\n  \n    modal.onDidDismiss().then((result) => {\n      if (result.role === 'update') {\n        const formData = result.data; \n  \n        console.log('Datos actualizados:', formData); \n  \n        this.artistsSvc.update(artist.id, formData).subscribe({\n          next: (updatedArtist) => {\n            console.log('Artista actualizado:', updatedArtist); \n            const currentArtists = this._artists.value;\n            const index = currentArtists.findIndex(a => a.id === artist.id);\n            if (index !== -1) {\n              currentArtists[index] = updatedArtist; \n              this._artists.next([...currentArtists]);\n            }\n          },\n          error: (err) => {\n            console.error('Error updating artist:', err);\n          }\n        });\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async onDeleteArtist(artist: Artist) {\n    const alert = await this.alertCtrl.create({\n      header: 'Delete Artist',\n      message: 'Are you sure you want to delete this artist?',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'Delete',\n          role: 'destructive',\n          handler: () => {\n            this.artistsSvc.delete(artist.id).subscribe({\n              next: () => this.loadArtists(),\n              error: console.error\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  onSelectArtist(artist: Artist) {\n    this.router.navigate(['/artists', artist.id]);\n  }\n\n  onIonInfinite(ev: any) {\n    if (this.page ) => {\n          console.log('Loading more artists - Page:', this.page, 'Response:', response);\n          this._artists.next([...this._artists.value, ...response.data]);\n          this.page++;\n          ev.target.complete();\n        },\n        error: (error) => {\n          console.error('Error loading more artists:', error);\n          ev.target.complete();\n        }\n      });\n    } else {\n      ev.target.complete();\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    Artists\n    \n      \n        \n        Add Artist\n      \n    \n  \n\n\n\n  \n    \n      \n      \n        \n        \n        \n          \n          \n        \n      \n      \n      \n        {{ artist.name }}\n        \n          \n          \n            \n            {{ artist.followers_count || 0 }} seguidores\n          \n          \n            \n            {{ artist.listeners | number }} oyentes\n          \n        \n        \n        \n        \n          \n            \n            Ver canciones\n          \n          \n          \n            \n          \n          \n          \n            \n          \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n    No hay artistas\n    Añade el primer artista para empezar\n    \n      \n      Añadir Artista\n    \n  \n\n    \n\n    \n                \n                    ./artists.page.scss\n                \n                .artists-grid {\n    display: grid;\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr)); // Tarjetas de al menos 250px\n    gap: 16px; // Espacio entre tarjetas\n    padding: 16px; // Espacio alrededor del grid\n  }\n  \n  // Estilos adicionales para el contenido\n  ion-content {\n    --background: #000000; // Fondo claro para el contenido\n  }\n  \n  ion-toolbar {\n    --background: #2f2d2d; // Fondo blanco para la barra de herramientas\n    --color: #ffffff; // Color de texto negro\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Artists                          Add Artist                                                                                                            {{ artist.name }}                                                    {{ artist.followers_count || 0 }} seguidores                                            {{ artist.listeners | number }} oyentes                                                                            Ver canciones                                                                                                                                    No hay artistas    Añade el primer artista para empezar                Añadir Artista      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'ArtistsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArtistsPageModule.html":{"url":"modules/ArtistsPageModule.html","title":"module - ArtistsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    ArtistsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ArtistsPageModule\n\n\n\ncluster_ArtistsPageModule_imports\n\n\n\ncluster_ArtistsPageModule_declarations\n\n\n\n\nArtistModalComponent\n\nArtistModalComponent\n\n\n\nArtistsPageModule\n\nArtistsPageModule\n\nArtistsPageModule -->\n\nArtistModalComponent->ArtistsPageModule\n\n\n\n\n\nArtistsPage\n\nArtistsPage\n\nArtistsPageModule -->\n\nArtistsPage->ArtistsPageModule\n\n\n\n\n\nArtistsPageRoutingModule\n\nArtistsPageRoutingModule\n\nArtistsPageModule -->\n\nArtistsPageRoutingModule->ArtistsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nArtistsPageModule -->\n\nSharedModule->ArtistsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/artists/artists.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArtistModalComponent\n                        \n                        \n                            ArtistsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ArtistsPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // artists.module.ts\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { ArtistsPageRoutingModule } from './artists-routing.module';\nimport { ArtistsPage } from './artists.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { ArtistModalComponent } from 'src/app/shared/components/artist-modal.component/artist-modal.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    ArtistsPageRoutingModule,\n    TranslateModule.forChild(),\n    SharedModule\n  ],\n  declarations: [\n    ArtistsPage,\n    ArtistModalComponent\n  ]\n})\nexport class ArtistsPageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ArtistsPageRoutingModule.html":{"url":"modules/ArtistsPageRoutingModule.html","title":"module - ArtistsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ArtistsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/artists/artists-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        // artists-routing.module.ts\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ArtistsPage } from './artists.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ArtistsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ArtistsPageRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ArtistsService.html":{"url":"injectables/ArtistsService.html","title":"injectable - ArtistsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ArtistsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/artists.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findByExactName\n                            \n                            \n                                getByIds\n                            \n                            \n                                searchByName\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IArtistsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/artists.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IArtistsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findByExactName\n                        \n                    \n                \n            \n            \n                \nfindByExactName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/artists.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByIds\n                        \n                    \n                \n            \n            \n                \ngetByIds(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/artists.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByName\n                        \n                    \n                \n            \n            \n                \nsearchByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/artists.service.ts:38\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { IArtistsService } from '../interfaces/artists-service.interface';\nimport { Artist } from '../../models/artist.model';\nimport { ARTISTS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { IArtistsRepository } from '../../repositories/intefaces/artists-repository.interface';\nimport { map, Observable, forkJoin, tap, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArtistsService extends BaseService implements IArtistsService {\n  constructor(\n    @Inject(ARTISTS_REPOSITORY_TOKEN) repository: IArtistsRepository\n  ) {\n    super(repository);\n  }\n  \n  getByIds(ids: string[]): Observable {\n    if (!ids || ids.length === 0) {\n      return of([]);\n    }\n\n    return forkJoin(\n      ids.map(id => {\n        return this.getById(id).pipe();\n      })\n    ).pipe(\n      map(artists => {\n        const validArtists = artists.filter((artist): artist is Artist => artist !== null);\n        return validArtists;\n      }),\n    );\n  }\n\n  // ✅ NUEVO MÉTODO: Buscar artistas por nombre\n  searchByName(name: string): Observable {\n    if (!name || name.trim().length === 0) {\n      return of([]);\n    }\n\n    // Opción 1: Si tu BaseService tiene un método search que acepta parámetros\n    // return this.search({ name: name.trim() }).pipe(\n    //   map(paginated => paginated.data || [])\n    // );\n\n    // Opción 2: Si necesitas usar getAll y filtrar (menos eficiente)\n    return this.getAll(1, 100).pipe(\n      map(paginated => {\n        if (!paginated || !paginated.data) {\n          return [];\n        }\n        \n        const searchTerm = name.toLowerCase().trim();\n        return paginated.data.filter(artist => \n          artist.name.toLowerCase().includes(searchTerm)\n        );\n      })\n    );\n\n    // Opción 3: Si tu repositorio tiene un método específico para buscar por nombre\n    // return (this.repository as IArtistsRepository).searchByName(name);\n  }\n\n  // ✅ MÉTODO ADICIONAL: Buscar artista exacto por nombre (para navegación directa)\n  findByExactName(name: string): Observable {\n    return this.searchByName(name).pipe(\n      map(artists => {\n        if (!artists || artists.length === 0) {\n          return null;\n        }\n        \n        // Buscar coincidencia exacta primero\n        const exactMatch = artists.find(artist => \n          artist.name.toLowerCase() === name.toLowerCase()\n        );\n        \n        // Si no hay coincidencia exacta, devolver el primer resultado\n        return exactMatch || artists[0];\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioPlayerService.html":{"url":"injectables/AudioPlayerService.html","title":"injectable - AudioPlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioPlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/audio-player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _playerState\n                            \n                            \n                                    Private\n                                audio\n                            \n                            \n                                    Public\n                                playerState$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addToQueue\n                            \n                            \n                                formatTime\n                            \n                            \n                                getCurrentSong\n                            \n                            \n                                getPlayerState\n                            \n                            \n                                getPlayingFrom\n                            \n                            \n                                    Private\n                                handleSongEnd\n                            \n                            \n                                loadSong\n                            \n                            \n                                next\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                play\n                            \n                            \n                                previous\n                            \n                            \n                                removeFromQueue\n                            \n                            \n                                resume\n                            \n                            \n                                seekTo\n                            \n                            \n                                setPlayingContext\n                            \n                            \n                                setQueue\n                            \n                            \n                                    Private\n                                setupAudioEvents\n                            \n                            \n                                    Private\n                                setupProgressTracking\n                            \n                            \n                                setVolume\n                            \n                            \n                                stop\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                            \n                                    Private\n                                updateState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/audio-player.service.ts:48\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addToQueue\n                        \n                    \n                \n            \n            \n                \naddToQueue(song: Song | EnrichedSong)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:224\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                        Song | EnrichedSong\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:318\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentSong\n                        \n                    \n                \n            \n            \n                \ngetCurrentSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:326\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     EnrichedSong | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerState\n                        \n                    \n                \n            \n            \n                \ngetPlayerState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:330\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         PlayerState\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayingFrom\n                        \n                    \n                \n            \n            \n                \ngetPlayingFrom()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:334\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleSongEnd\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSongEnd()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:306\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSong\n                        \n                    \n                \n            \n            \n                \nloadSong(song: Song | EnrichedSong)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                        Song | EnrichedSong\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:248\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:171\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        play\n                        \n                    \n                \n            \n            \n                \n                        \n                    play(song?: Song | EnrichedSong)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:158\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                        Song | EnrichedSong\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previous\n                        \n                    \n                \n            \n            \n                \nprevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:264\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromQueue\n                        \n                    \n                \n            \n            \n                \nremoveFromQueue(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:231\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:175\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekTo\n                        \n                    \n                \n            \n            \n                \nseekTo(time: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:190\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                time\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setPlayingContext\n                        \n                    \n                \n            \n            \n                \nsetPlayingContext(context: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:130\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                context\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setQueue\n                        \n                    \n                \n            \n            \n                \nsetQueue(songs: (Song | EnrichedSong)[], startIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:217\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                songs\n                                            \n                                                        (Song | EnrichedSong)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                startIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupAudioEvents\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupAudioEvents()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        setupProgressTracking\n                        \n                    \n                \n            \n            \n                \n                        \n                    setupProgressTracking()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stop\n                        \n                    \n                \n            \n            \n                \nstop()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:179\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:297\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:282\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateState\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateState(partialState: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/audio-player.service.ts:124\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                partialState\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _playerState\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject({\n        isPlaying: false,\n        isPaused: false,\n        currentTime: 0,\n        duration: 0,\n        volume: 0.7, // ✅ MEJORADO: Volumen inicial al 70%\n        isLoading: false,\n        progress: 0,\n        currentSong: null,\n        queue: [],\n        currentIndex: -1,\n        isShuffled: false,\n        repeatMode: 'none'\n    })\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/audio-player.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        audio\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HTMLAudioElement\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/audio-player.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        playerState$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._playerState.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/audio-player.service.ts:48\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, interval, takeWhile, map } from 'rxjs';\nimport { Song } from '../../models/song.model';\nimport { EnrichedSong } from '../../models/enriched-song.interface';\n\nexport interface PlayerState {\n    isPlaying: boolean;\n    isPaused: boolean;\n    currentTime: number;\n    duration: number;\n    volume: number;\n    isLoading: boolean;\n    progress: number; // 0-100\n    currentSong: EnrichedSong | null;\n    queue: EnrichedSong[];\n    currentIndex: number;\n    isShuffled: boolean;\n    repeatMode: 'none' | 'one' | 'all';\n    // ✅ NUEVO: Información de contexto\n    playingFrom?: {\n        type: 'playlist' | 'album' | 'artist' | 'liked' | 'search';\n        name: string;\n        id?: string;\n    };\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AudioPlayerService {\n    private audio: HTMLAudioElement;\n    private _playerState = new BehaviorSubject({\n        isPlaying: false,\n        isPaused: false,\n        currentTime: 0,\n        duration: 0,\n        volume: 0.7, // ✅ MEJORADO: Volumen inicial al 70%\n        isLoading: false,\n        progress: 0,\n        currentSong: null,\n        queue: [],\n        currentIndex: -1,\n        isShuffled: false,\n        repeatMode: 'none'\n    });\n\n    public playerState$ = this._playerState.asObservable();\n\n    constructor() {\n        this.audio = new Audio();\n        this.audio.volume = 0.7; // ✅ Establecer volumen inicial\n        this.setupAudioEvents();\n        this.setupProgressTracking();\n    }\n\n    private setupAudioEvents() {\n        this.audio.addEventListener('loadstart', () => {\n            this.updateState({ isLoading: true });\n        });\n\n        this.audio.addEventListener('loadedmetadata', () => {\n            this.updateState({ \n                duration: this.audio.duration,\n                isLoading: false \n            });\n        });\n\n        this.audio.addEventListener('play', () => {\n            this.updateState({ \n                isPlaying: true, \n                isPaused: false \n            });\n        });\n\n        this.audio.addEventListener('pause', () => {\n            this.updateState({ \n                isPlaying: false, \n                isPaused: true \n            });\n        });\n\n        this.audio.addEventListener('ended', () => {\n            this.handleSongEnd();\n        });\n\n        this.audio.addEventListener('error', (e) => {\n            console.error('Audio error:', e);\n            this.updateState({ \n                isLoading: false, \n                isPlaying: false \n            });\n        });\n\n        this.audio.addEventListener('timeupdate', () => {\n            const currentTime = this.audio.currentTime;\n            const duration = this.audio.duration || 0;\n            const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n            \n            this.updateState({\n                currentTime,\n                progress\n            });\n        });\n    }\n\n    private setupProgressTracking() {\n        interval(1000).pipe(\n            takeWhile(() => true)\n        ).subscribe(() => {\n            if (this.audio && !this.audio.paused) {\n                const currentTime = this.audio.currentTime;\n                const duration = this.audio.duration || 0;\n                const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n                \n                this.updateState({\n                    currentTime,\n                    progress\n                });\n            }\n        });\n    }\n\n    private updateState(partialState: Partial) {\n        const currentState = this._playerState.value;\n        this._playerState.next({ ...currentState, ...partialState });\n    }\n\n    // ✅ NUEVO: Método para establecer contexto de reproducción\n    setPlayingContext(context: { type: 'playlist' | 'album' | 'artist' | 'liked' | 'search', name: string, id?: string }) {\n        this.updateState({\n            playingFrom: context\n        });\n    }\n\n    // Métodos públicos del reproductor\n    loadSong(song: Song | EnrichedSong): Promise {\n        return new Promise((resolve, reject) => {\n            if (!song.audioUrl) {\n                console.warn('No audio URL found for song:', song.name);\n                this.audio.src = 'assets/audio/sample.mp3';\n            } else {\n                this.audio.src = song.audioUrl;\n            }\n\n            this.updateState({\n                currentSong: song as EnrichedSong,\n                isLoading: true,\n                currentTime: 0,\n                progress: 0\n            });\n\n            this.audio.addEventListener('loadeddata', () => resolve(), { once: true });\n            this.audio.addEventListener('error', () => reject(), { once: true });\n        });\n    }\n\n    async play(song?: Song | EnrichedSong): Promise {\n        try {\n            if (song) {\n                await this.loadSong(song);\n            }\n            \n            await this.audio.play();\n        } catch (error) {\n            console.error('Error playing audio:', error);\n            this.updateState({ isLoading: false });\n        }\n    }\n\n    pause() {\n        this.audio.pause();\n    }\n\n    resume() {\n        this.audio.play();\n    }\n\n    stop() {\n        this.audio.pause();\n        this.audio.currentTime = 0;\n        this.updateState({\n            isPlaying: false,\n            isPaused: false,\n            currentTime: 0,\n            progress: 0\n        });\n    }\n\n    seekTo(time: number) {\n        this.audio.currentTime = time;\n    }\n\n    // ✅ MEJORADO: Control de volumen más suave\n    setVolume(volume: number) {\n        const clampedVolume = Math.max(0, Math.min(1, volume));\n        \n        // Transición suave del volumen\n        const currentVolume = this.audio.volume;\n        const steps = 10;\n        const increment = (clampedVolume - currentVolume) / steps;\n        \n        let step = 0;\n        const volumeInterval = setInterval(() => {\n            step++;\n            const newVolume = currentVolume + (increment * step);\n            this.audio.volume = step === steps ? clampedVolume : newVolume;\n            \n            if (step >= steps) {\n                clearInterval(volumeInterval);\n                this.updateState({ volume: clampedVolume });\n            }\n        }, 20); // 20ms entre pasos para transición suave\n    }\n\n    // Control de cola de reproducción\n    setQueue(songs: (Song | EnrichedSong)[], startIndex: number = 0) {\n        this.updateState({\n            queue: songs.map(song => song as EnrichedSong),\n            currentIndex: startIndex\n        });\n    }\n\n    addToQueue(song: Song | EnrichedSong) {\n        const currentState = this._playerState.value;\n        this.updateState({\n            queue: [...currentState.queue, song as EnrichedSong]\n        });\n    }\n\n    removeFromQueue(index: number) {\n        const currentState = this._playerState.value;\n        const newQueue = currentState.queue.filter((_, i) => i !== index);\n        let newIndex = currentState.currentIndex;\n        \n        if (index = state.queue.length) {\n            nextIndex = 0;\n        } else if (nextIndex >= state.queue.length) {\n            return;\n        }\n\n        this.updateState({ currentIndex: nextIndex });\n        this.play(state.queue[nextIndex]);\n    }\n\n    previous() {\n        const state = this._playerState.value;\n        if (state.queue.length === 0) return;\n\n        let prevIndex = state.currentIndex - 1;\n        \n        if (prevIndex  0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [shuffledQueue[i], shuffledQueue[j]] = [shuffledQueue[j], shuffledQueue[i]];\n            }\n            this.updateState({ queue: shuffledQueue });\n        }\n    }\n\n    toggleRepeat() {\n        const state = this._playerState.value;\n        const modes: Array = ['none', 'one', 'all'];\n        const currentIndex = modes.indexOf(state.repeatMode);\n        const nextMode = modes[(currentIndex + 1) % modes.length];\n        \n        this.updateState({ repeatMode: nextMode });\n    }\n\n    private handleSongEnd() {\n        const state = this._playerState.value;\n        \n        if (state.repeatMode === 'one') {\n            this.audio.currentTime = 0;\n            this.audio.play();\n        } else {\n            this.next();\n        }\n    }\n\n    // Métodos de utilidad\n    formatTime(seconds: number): string {\n        if (isNaN(seconds)) return '0:00';\n        \n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins}:${secs.toString().padStart(2, '0')}`;\n    }\n\n    getCurrentSong(): EnrichedSong | null {\n        return this._playerState.value.currentSong;\n    }\n\n    getPlayerState(): PlayerState {\n        return this._playerState.value;\n    }\n\n    getPlayingFrom(): string {\n        const context = this._playerState.value.playingFrom;\n        if (!context) return 'Música';\n        \n        switch (context.type) {\n            case 'playlist': return `Playing from playlist`;\n            case 'album': return `Playing from album`;\n            case 'artist': return `Playing from artist`;\n            case 'liked': return `Playing from liked songs`;\n            case 'search': return `Playing from search`;\n            default: return 'Música';\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseAuthenticationService.html":{"url":"injectables/BaseAuthenticationService.html","title":"injectable - BaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-authentication.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                getCurrentUser\n                            \n                            \n                                    Abstract\n                                me\n                            \n                            \n                                    Abstract\n                                signIn\n                            \n                            \n                                    Abstract\n                                signOut\n                            \n                            \n                                    Abstract\n                                signUp\n                            \n                            \n                                    Protected\n                                updateCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        me\n                        \n                    \n                \n            \n            \n                \n                        \n                    me()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signIn\n                        \n                    \n                \n            \n            \n                \n                        \n                    signIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signOut\n                        \n                    \n                \n            \n            \n                \n                        \n                    signOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        signUp\n                        \n                    \n                \n            \n            \n                \n                        \n                    signUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        updateCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-authentication.service.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/base-authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { User } from \"../../models/user.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport abstract class BaseAuthenticationService implements IAuthentication {\n    protected _authenticated: BehaviorSubject = new BehaviorSubject(false);\n    public authenticated$: Observable = this._authenticated.asObservable();\n\n    protected _user: BehaviorSubject = new BehaviorSubject(undefined);\n    public user$: Observable = this._user.asObservable();\n    \n    // CAMBIO IMPORTANTE: Inicializar ready$ como false hasta que se complete la inicialización\n    protected _ready: BehaviorSubject = new BehaviorSubject(false);\n    public ready$: Observable = this._ready.asObservable();\n\n    constructor(\n        protected authMapping: IAuthMapping\n    ) {\n    }\n\n    // Método para actualizar el usuario actual\n    protected updateCurrentUser(user: User) {\n        this._user.next(user);\n    }\n\n    abstract getCurrentUser(): Promise;\n    abstract signIn(authPayload: any): Observable;\n    abstract signUp(registerPayload: any): Observable;\n    abstract signOut(): Observable;\n    abstract me(): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BaseMediaService.html":{"url":"classes/BaseMediaService.html","title":"class - BaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-media.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Abstract\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Abstract\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-media.service.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport abstract class BaseMediaService {\n  abstract upload(blob: Blob): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryFirebaseService.html":{"url":"injectables/BaseRepositoryFirebaseService.html","title":"injectable - BaseRepositoryFirebaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryFirebaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-firebase.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio base para repositorios que utilizan Firebase Firestore\nImplementa operaciones CRUD utilizando la API de Firestore\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                collectionRef\n                            \n                            \n                                    Private\n                                db\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                    Async\n                                getLastDocumentOfPreviousPage\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, collectionName: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        collectionName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:121\n                        \n                    \n\n\n            \n                \n                        Añade un nuevo documento a la colección\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Entidad a añadir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad creada incluyendo el ID generado por Firestore\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:146\n                        \n                    \n\n\n            \n                \n                        Elimina un documento de la colección\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del documento a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad eliminada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:74\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los elementos con paginación cursor de Firestore\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Filtros de búsqueda (no implementados en esta versión básica)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con elementos paginados\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:104\n                        \n                    \n\n\n            \n                \n                        Obtiene un documento específico por su ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del documento a obtener\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con el elemento encontrado o null si no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        getLastDocumentOfPreviousPage\n                        \n                    \n                \n            \n            \n                \n                        \n                    getLastDocumentOfPreviousPage(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:53\n                        \n                    \n\n\n            \n                \n                        Obtiene el último documento de la página anterior para implementar paginación cursor\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página actual\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                Promise con el último documento de la página anterior o null si es la primera página\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Actualiza un documento existente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del documento a actualizar\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad actualizada\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        collectionRef\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-firebase.service.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getFirestore, \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  addDoc, \n  updateDoc, \n  deleteDoc,\n  query,\n  limit,\n  startAfter,\n  QueryConstraint\n} from 'firebase/firestore';\nimport { from, map, Observable, mergeMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { FIREBASE_CONFIG_TOKEN, FIREBASE_COLLECTION_TOKEN, REPOSITORY_MAPPING_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n\n/**\n * Servicio base para repositorios que utilizan Firebase Firestore\n * Implementa operaciones CRUD utilizando la API de Firestore\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryFirebaseService implements IBaseRepository {\n  private db;\n  private collectionRef;\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(FIREBASE_COLLECTION_TOKEN) protected collectionName: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    // Inicializar Firebase y obtener referencia a Firestore\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n    this.collectionRef = collection(this.db, this.collectionName);\n  }\n\n  /**\n   * Obtiene el último documento de la página anterior para implementar paginación cursor\n   * @param page Número de página actual\n   * @param pageSize Tamaño de página\n   * @returns Promise con el último documento de la página anterior o null si es la primera página\n   */\n  private async getLastDocumentOfPreviousPage(page: number, pageSize: number) {\n    if (page > {\n    return from(this.getLastDocumentOfPreviousPage(page, pageSize)).pipe(\n      map(lastDoc => {\n        const constraints: QueryConstraint[] = [\n          limit(pageSize)\n        ];\n        \n        // Si hay un documento anterior, iniciar después de él (paginación cursor)\n        if (lastDoc) {\n          constraints.push(startAfter(lastDoc));\n        }\n        \n        return query(this.collectionRef, ...constraints);\n      }),\n      mergeMap(q => getDocs(q)),\n      map(snapshot => {\n        const items = snapshot.docs.map(doc => ({\n          id: doc.id,\n          ...doc.data()\n        }));\n        return this.mapping.getPaginated(page, pageSize, snapshot.size, items as T[]);\n      })\n    );\n  }\n\n  /**\n   * Obtiene un documento específico por su ID\n   * @param id ID del documento a obtener\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => {\n        if (doc.exists()) {\n          return this.mapping.getOne({ id: doc.id, ...doc.data() } as T);\n        }\n        return null;\n      })\n    );\n  }\n\n  /**\n   * Añade un nuevo documento a la colección\n   * @param entity Entidad a añadir\n   * @returns Observable con la entidad creada incluyendo el ID generado por Firestore\n   */\n  add(entity: T): Observable {\n    return from(addDoc(this.collectionRef, this.mapping.setAdd(entity))).pipe(\n      map(docRef => this.mapping.getAdded({ ...entity, id: docRef.id } as T))\n    );\n  }\n\n  /**\n   * Actualiza un documento existente\n   * @param id ID del documento a actualizar\n   * @param entity Datos a actualizar\n   * @returns Observable con la entidad actualizada\n   */\n  update(id: string, entity: T): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    \n    return from(updateDoc(docRef, this.mapping.setUpdate(entity))).pipe(\n      map(() => this.mapping.getUpdated({ ...entity, id } as T))\n    );\n  }\n\n  /**\n   * Elimina un documento de la colección\n   * @param id ID del documento a eliminar\n   * @returns Observable con la entidad eliminada\n   */\n  delete(id: string): Observable {\n    const docRef = doc(this.db, this.collectionName, id);\n    return from(getDoc(docRef)).pipe(\n      map(doc => ({ id: doc.id, ...doc.data() } as T)),\n      map(entity => {\n        deleteDoc(docRef);\n        return this.mapping.getDeleted(entity);\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryHttpService.html":{"url":"injectables/BaseRepositoryHttpService.html","title":"injectable - BaseRepositoryHttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryHttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-http.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio base para repositorios que utilizan HTTP\nImplementa operaciones CRUD básicas utilizando RESTful APIs\nSirve como clase base para otros servicios de repositorio HTTP especializados\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-http.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo elemento en el recurso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Entidad a crear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad creada y mapeada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Elimina un elemento del recurso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad eliminada y mapeada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:39\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los elementos del recurso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página (para paginación)\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Parámetros de filtrado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con elementos paginados o array de elementos\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:49\n                        \n                    \n\n\n            \n                \n                        Obtiene un elemento específico por su ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a obtener\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con el elemento encontrado o null si no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-http.service.ts:70\n                        \n                    \n\n\n            \n                \n                        Actualiza un elemento existente usando PUT (reemplazo completo)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a actualizar\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos completos del elemento\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad actualizada y mapeada\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\n/**\n * Servicio base para repositorios que utilizan HTTP\n * Implementa operaciones CRUD básicas utilizando RESTful APIs\n * Sirve como clase base para otros servicios de repositorio HTTP especializados\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryHttpService implements IBaseRepository {\n\n  constructor(\n    protected http: HttpClient,\n    @Inject(AUTH_TOKEN) protected auth: IAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string, // URL base de la API para el modelo\n    @Inject(RESOURCE_NAME_TOKEN) protected resource: string, // nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {\n    this.apiUrl = apiUrl;\n  }\n\n  /**\n   * Obtiene todos los elementos del recurso\n   * @param page Número de página (para paginación)\n   * @param pageSize Tamaño de página\n   * @param filters Parámetros de filtrado\n   * @returns Observable con elementos paginados o array de elementos\n   */\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable> {\n    return this.http.get(`${this.apiUrl}/${this.resource}`)\n      .pipe(map(res => this.mapping.getPaginated(page, pageSize, 0, res)));\n  }\n\n  /**\n   * Obtiene un elemento específico por su ID\n   * @param id ID del elemento a obtener\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    return this.http.get(`${this.apiUrl}/${this.resource}/${id}`)\n      .pipe(map(res => this.mapping.getOne(res)));\n  }\n\n  /**\n   * Crea un nuevo elemento en el recurso\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada y mapeada\n   */\n  add(entity: T): Observable {\n    return this.http.post(`${this.apiUrl}/${this.resource}`, entity)\n      .pipe(map(res => this.mapping.getAdded(res)));\n  }\n\n  /**\n   * Actualiza un elemento existente usando PUT (reemplazo completo)\n   * @param id ID del elemento a actualizar\n   * @param entity Datos completos del elemento\n   * @returns Observable con la entidad actualizada y mapeada\n   */\n  update(id: string, entity: T): Observable {\n    return this.http.put(`${this.apiUrl}/${this.resource}/${id}`, entity)\n      .pipe(map(res => this.mapping.getUpdated(res)));\n  }\n\n  /**\n   * Elimina un elemento del recurso\n   * @param id ID del elemento a eliminar\n   * @returns Observable con la entidad eliminada y mapeada\n   */\n  delete(id: string): Observable {\n    return this.http.delete(`${this.apiUrl}/${this.resource}/${id}`)\n      .pipe(map(res => this.mapping.getDeleted(res)));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseRepositoryLocalStorageService.html":{"url":"injectables/BaseRepositoryLocalStorageService.html","title":"injectable - BaseRepositoryLocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseRepositoryLocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/base-repository-local-storage.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de repositorio que utiliza LocalStorage como almacenamiento\nIncluye datos de prueba (mockup) generados automáticamente\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                newID\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Añade un nuevo elemento al almacenamiento\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Entidad a añadir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad añadida\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:133\n                        \n                    \n\n\n            \n                \n                        Elimina un elemento del almacenamiento\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con el elemento eliminado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:71\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los elementos con paginación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Número de página (empezando en 0)\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    Filtros de búsqueda (no implementados en esta versión)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                Observable con elementos paginados\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Obtiene un elemento por su ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a buscar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con el elemento encontrado o null si no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        newID\n                        \n                    \n                \n            \n            \n                \n                        \n                    newID()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Genera un ID único aleatorio de 10 caracteres\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                String con ID único\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:117\n                        \n                    \n\n\n            \n                \n                        Actualiza un elemento existente\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a actualizar\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos actualizados del elemento\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con el elemento actualizado\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _items\n                        \n                    \n                \n            \n                \n                    \n                        Type :     T[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/core/repositories/impl/base-repository-local-storage.service.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\n\n/**\n * Servicio de repositorio que utiliza LocalStorage como almacenamiento\n * Incluye datos de prueba (mockup) generados automáticamente\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseRepositoryLocalStorageService implements IBaseRepository {\n\n  _items: T[] = [];\n\n  /**\n   * Genera un ID único aleatorio de 10 caracteres\n   * @returns String con ID único\n   */\n  private newID(): string {\n    const validChars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let code = \"\";\n    for (let i = 0; i \n  ) {\n    // Generar datos de prueba (mockup) si no existen en localStorage\n    let mockupList: any[] = [];\n    for (let i = 0; i > {\n    return of(\n      this.mapping.getPaginated(\n        page,\n        pageSize,\n        Math.ceil(this._items.length / pageSize),\n        this._items.slice(\n          page * pageSize,\n          Math.min(\n            (page + 1) * pageSize,\n            this._items.length\n          )\n        )\n      )\n    );\n  }\n\n  /**\n   * Obtiene un elemento por su ID\n   * @param id ID del elemento a buscar\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    return of(this.mapping.getOne(this._items.find(item => item.id == id) ?? null));\n  }\n\n  /**\n   * Añade un nuevo elemento al almacenamiento\n   * @param entity Entidad a añadir\n   * @returns Observable con la entidad añadida\n   */\n  add(entity: T): Observable {\n    entity.id = this.newID();\n    entity.createdAt = (new Date()).toISOString();\n    this._items.push(entity);\n    localStorage.setItem(this.resource, JSON.stringify(this._items));\n    return of(this.mapping.getAdded(entity));\n  }\n\n  /**\n   * Actualiza un elemento existente\n   * @param id ID del elemento a actualizar\n   * @param entity Datos actualizados del elemento\n   * @returns Observable con el elemento actualizado\n   * @throws Error si el ID no se encuentra\n   */\n  update(id: string, entity: T): Observable {\n    let index = this._items.findIndex(item => item.id == id);\n    if (index >= 0) {\n      this._items[index] = entity;\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getUpdated(this._items[index]));\n    }\n    throw new Error(\"id not found\");\n  }\n\n  /**\n   * Elimina un elemento del almacenamiento\n   * @param id ID del elemento a eliminar\n   * @returns Observable con el elemento eliminado\n   * @throws Error si el ID no se encuentra\n   */\n  delete(id: string): Observable {\n    let index = this._items.findIndex(item => item.id == id);\n    if (index >= 0) {\n      let entity = this._items.splice(index, 1);\n      localStorage.setItem(this.resource, JSON.stringify(this._items));\n      return of(this.mapping.getDeleted(entity));\n    }\n    throw new Error(\"id not found\");\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseService.html":{"url":"injectables/BaseService.html","title":"injectable - BaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/base-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IBaseRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/base-service.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                    IBaseRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:18\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page?: number, pageSize?: number, filters?: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:28\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/base-service.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { IBaseService } from '../interfaces/base-service.interface';\nimport { IBaseRepository, SearchParams } from '../../repositories/intefaces/base-repository.interface';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BaseService implements IBaseService {\n  constructor(\n    @Inject(REPOSITORY_TOKEN) protected repository: IBaseRepository\n  ) {}\n\n  getAll(): Observable;\n  getAll(page: number, pageSize: number): Observable>;\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getAll(page?: number, pageSize?: number, filters?: SearchParams): Observable> {    \n    if (page === undefined || pageSize === undefined)\n        return this.repository.getAll(1, 25, {});\n    else\n    return this.repository.getAll(page, pageSize, filters??{});\n  }\n\n  getById(id: string): Observable {\n    return this.repository.getById(id);\n  }\n\n  add(entity: T): Observable {\n    return this.repository.add(entity);\n  }\n\n  update(id: string, entity: T): Observable {\n    return this.repository.update(id, entity);\n  }\n\n  delete(id: string): Observable {\n    return this.repository.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ChangePasswordModalComponent.html":{"url":"components/ChangePasswordModalComponent.html","title":"component - ChangePasswordModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ChangePasswordModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/change-password-modal/change-password-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-change-password-modal\n            \n\n\n\n            \n                styleUrls\n                ./change-password-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./change-password-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                showConfirmPassword\n                            \n                            \n                                showNewPassword\n                            \n                            \n                                showOldPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                getPasswordStrength\n                            \n                            \n                                getPasswordStrengthText\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                passwordsDoNotMatch\n                            \n                            \n                                togglePasswordVisibility\n                            \n                            \n                                    Private\n                                validatePasswordMatch\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    oldPassword\n                                \n                                \n                                    newPassword\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, modalCtrl: ModalController, toastController: ToastController, loadingCtrl: LoadingController, translateService: TranslateService, authService: BaseAuthenticationService, strapiSvc: StrapiAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        strapiSvc\n                                                  \n                                                        \n                                                                        StrapiAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:122\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPasswordStrength\n                        \n                    \n                \n            \n            \n                \ngetPasswordStrength()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:145\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     \"weak\" | \"medium\" | \"strong\"\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPasswordStrengthText\n                        \n                    \n                \n            \n            \n                \ngetPasswordStrengthText()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:166\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsDoNotMatch\n                        \n                    \n                \n            \n            \n                \npasswordsDoNotMatch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:138\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePasswordVisibility\n                        \n                    \n                \n            \n            \n                \ntogglePasswordVisibility(field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        validatePasswordMatch\n                        \n                    \n                \n            \n            \n                \n                        \n                    validatePasswordMatch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showNewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showOldPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        oldPassword\n                    \n                \n\n                \n                    \n                        getoldPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:126\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        newPassword\n                    \n                \n\n                \n                    \n                        getnewPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:130\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/change-password-modal/change-password-modal.component.ts:134\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, ModalController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { passwordValidator } from 'src/app/core/utils/validators';\nimport { StrapiAuthenticationService } from 'src/app/core/services/impl/strapi-authentication.service';\n\n@Component({\n  selector: 'app-change-password-modal',\n  templateUrl: './change-password-modal.component.html',\n  styleUrls: ['./change-password-modal.component.scss']\n})\nexport class ChangePasswordModalComponent {\n  formGroup: FormGroup;\n  showOldPassword: boolean = false;\n  showNewPassword: boolean = false;\n  showConfirmPassword: boolean = false;\n  \n  constructor(\n    private formBuilder: FormBuilder,\n    private modalCtrl: ModalController,\n    private toastController: ToastController,\n    private loadingCtrl: LoadingController,\n    private translateService: TranslateService,\n    private authService: BaseAuthenticationService,\n    private strapiSvc: StrapiAuthenticationService\n  ) {\n    this.formGroup = this.formBuilder.group({\n      oldPassword: ['', [Validators.required]],\n      newPassword: ['', [Validators.required, passwordValidator]],\n      confirmPassword: ['', [Validators.required]]\n    });\n    \n    this.formGroup.get('confirmPassword')?.valueChanges.subscribe(() => {\n      this.validatePasswordMatch();\n    });\n    this.formGroup.get('newPassword')?.valueChanges.subscribe(() => {\n      this.validatePasswordMatch();\n    });\n  }\n\n  private validatePasswordMatch() {\n    const newPassword = this.formGroup.get('newPassword')?.value;\n    const confirmPassword = this.formGroup.get('confirmPassword')?.value;\n\n    if (confirmPassword) {\n      const passwordsMatch = newPassword === confirmPassword;\n      this.formGroup.get('confirmPassword')?.setErrors(\n        passwordsMatch ? null : { passwordsMismatch: true }\n      );\n    }\n  }\n\n  async onSubmit() {\n    if (this.formGroup.valid) {\n      const loading = await this.loadingCtrl.create();\n      await loading.present();\n\n      try {\n        const user = await this.authService.getCurrentUser();\n        if (!user) {\n          throw new Error('No user logged in');\n        }\n\n        const changePasswordData = {\n          oldPassword: this.formGroup.value.oldPassword,\n          newPassword: this.formGroup.value.newPassword\n        };\n\n        await this.strapiSvc.changePassword(changePasswordData);\n\n        const successMessage = await lastValueFrom(\n          this.translateService.get('CHANGE_PASSWORD.SUCCESS')\n        );\n        const toast = await this.toastController.create({\n          message: successMessage,\n          duration: 2000,\n          color: 'success'\n        });\n        await toast.present();\n        this.modalCtrl.dismiss(true);\n      } catch (error: any) {\n        console.error('Error changing password:', error);\n        let errorMessage = await lastValueFrom(\n          this.translateService.get('CHANGE_PASSWORD.ERROR')\n        );\n\n        if (error.message?.includes('wrong-password') || error.message?.includes('incorrect')) {\n          errorMessage = await lastValueFrom(\n            this.translateService.get('CHANGE_PASSWORD.ERRORS.OLD_PASSWORD_WRONG')\n          );\n        }\n\n        const toast = await this.toastController.create({\n          message: errorMessage,\n          duration: 3000,\n          color: 'danger'\n        });\n        await toast.present();\n      } finally {\n        loading.dismiss();\n      }\n    }\n  }\n\n  togglePasswordVisibility(field: string) {\n    switch (field) {\n      case 'old':\n        this.showOldPassword = !this.showOldPassword;\n        break;\n      case 'new':\n        this.showNewPassword = !this.showNewPassword;\n        break;\n      case 'confirm':\n        this.showConfirmPassword = !this.showConfirmPassword;\n        break;\n    }\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss();\n  }\n\n  get oldPassword() {\n    return this.formGroup.get('oldPassword');\n  }\n\n  get newPassword() {\n    return this.formGroup.get('newPassword');\n  }\n\n  get confirmPassword() {\n    return this.formGroup.get('confirmPassword');\n  }\n\n  passwordsDoNotMatch(): boolean {\n    const newPassword = this.formGroup.get('newPassword')?.value;\n    const confirmPassword = this.formGroup.get('confirmPassword')?.value;\n    return confirmPassword && newPassword !== confirmPassword;\n  }\n\n  // ✅ MÉTODO PARA EVALUAR LA FUERZA DE LA CONTRASEÑA\n  getPasswordStrength(): 'weak' | 'medium' | 'strong' {\n    const password = this.formGroup.get('newPassword')?.value || '';\n    \n    if (password.length === 0) return 'weak';\n    \n    let score = 0;\n    \n    // Criterios de evaluación\n    if (password.length >= 8) score++;\n    if (/[a-z]/.test(password)) score++;\n    if (/[A-Z]/.test(password)) score++;\n    if (/\\d/.test(password)) score++;\n    if (/[@$!%*?&.]/.test(password)) score++;\n    if (password.length >= 12) score++;\n    \n    if (score \n    \n\n    \n        \n  \n    \n      {{ 'CHANGE_PASSWORD.TITLE' | translate }}\n      \n        \n      \n    \n  \n\n\n\n  \n  \n    \n      \n    \n    {{ 'COMMON.SECURITY' | translate }}\n    Actualiza tu contraseña para mantener tu cuenta segura\n  \n\n  \n    \n    \n    \n      \n        \n          \n          \n          \n          \n            \n          \n        \n        \n        \n          \n          \n            {{ 'CHANGE_PASSWORD.ERRORS.OLD_PASSWORD_REQUIRED' | translate }}\n          \n        \n      \n    \n\n    \n    \n      \n        \n          \n          \n          \n          \n            \n          \n        \n        \n        \n          \n          \n            {{ 'CHANGE_PASSWORD.ERRORS.NEW_PASSWORD_REQUIRED' | translate }}\n          \n          \n            {{ 'CHANGE_PASSWORD.ERRORS.PASSWORD_STRENGTH' | translate }}\n          \n        \n      \n    \n\n    \n    \n      \n        \n          \n          \n          \n          \n            \n          \n        \n        \n        \n          \n          {{ 'CHANGE_PASSWORD.ERRORS.PASSWORDS_MISMATCH' | translate }}\n        \n      \n    \n\n    \n    \n      Seguridad de la contraseña:\n      \n        \n      \n      \n        {{ getPasswordStrengthText() }}\n      \n    \n\n    \n    \n      \n        {{ 'COMMON.CANCEL' | translate }}\n      \n      \n      \n        \n        {{ 'CHANGE_PASSWORD.SUBMIT' | translate }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./change-password-modal.component.scss\n                \n                :host {\n  --modal-bg: #121212;\n  --input-bg: #272727;\n  --border-color: #404040;\n  --text-color: #ffffff;\n  --text-secondary: #b3b3b3;\n  --accent-color: #1db954;\n  --error-color: #ff6b6b;\n  --warning-color: #ffa726;\n}\n\n// ✅ CONFIGURACIÓN DEL MODAL\n.custom-modal {\n  --width: 480px;\n  --height: 600px;\n  --border-radius: 16px;\n}\n\n// ✅ HEADER ESTILIZADO\nion-header {\n  background: var(--modal-bg);\n  border-bottom: 1px solid var(--border-color);\n}\n\nion-toolbar {\n  --background: var(--modal-bg);\n  --color: var(--text-color);\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem 1.5rem;\n\n  h1 {\n    color: var(--text-color);\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0;\n  }\n\n  .close-button {\n    --color: var(--text-secondary);\n    --border-radius: 50%;\n    width: 40px;\n    height: 40px;\n\n    &:hover {\n      --background: rgba(255, 255, 255, 0.1);\n    }\n  }\n}\n\n// ✅ CONTENIDO PRINCIPAL\n.change-password-content {\n  --background: var(--modal-bg);\n  --color: var(--text-color);\n}\n\n// ✅ HEADER CON ICONO\n.password-header {\n  text-align: center;\n  padding: 2rem 1.5rem 1rem;\n\n  .security-icon {\n    width: 80px;\n    height: 80px;\n    background: linear-gradient(135deg, var(--accent-color), #1ed760);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    margin: 0 auto 1rem;\n    box-shadow: 0 8px 32px rgba(29, 185, 84, 0.3);\n\n    ion-icon {\n      font-size: 40px;\n      color: white;\n    }\n  }\n\n  h2 {\n    color: var(--text-color);\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0 0 0.5rem 0;\n  }\n\n  p {\n    color: var(--text-secondary);\n    font-size: 0.9rem;\n    margin: 0;\n    line-height: 1.4;\n  }\n}\n\n// ✅ FORMULARIO\n.password-form {\n  padding: 0 1.5rem 2rem;\n}\n\n.input-group {\n  margin-bottom: 1.5rem;\n\n  .input-container {\n    position: relative;\n  }\n}\n\n// ✅ INPUTS ESTILIZADOS\n.password-input {\n  --background: var(--input-bg);\n  --border-radius: 12px;\n  --border-width: 2px;\n  --border-color: transparent;\n  --padding-start: 16px;\n  --padding-end: 16px;\n  --min-height: 56px;\n  margin: 0;\n  transition: all 0.3s ease;\n\n  &:hover {\n    --border-color: var(--border-color);\n  }\n\n  &.ion-focused {\n    --border-color: var(--accent-color);\n    box-shadow: 0 0 0 3px rgba(29, 185, 84, 0.1);\n  }\n\n  &.ion-invalid.ion-touched {\n    --border-color: var(--error-color);\n    box-shadow: 0 0 0 3px rgba(255, 107, 107, 0.1);\n  }\n\n  .input-icon {\n    color: var(--text-secondary);\n    font-size: 20px;\n    margin-right: 12px;\n    transition: color 0.3s ease;\n  }\n\n  &.ion-focused .input-icon {\n    color: var(--accent-color);\n  }\n\n  &.ion-invalid.ion-touched .input-icon {\n    color: var(--error-color);\n  }\n\n  ion-input {\n    --color: var(--text-color);\n    --placeholder-color: var(--text-secondary);\n    font-size: 16px;\n  }\n\n  .eye-button {\n    --color: var(--text-secondary);\n    --border-radius: 8px;\n    margin: 0;\n\n    &:hover {\n      --background: rgba(255, 255, 255, 0.1);\n      --color: var(--text-color);\n    }\n  }\n}\n\n// ✅ MENSAJES DE ERROR\n.error-message {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-top: 8px;\n  padding: 0 16px;\n  color: var(--error-color);\n  font-size: 0.85rem;\n  animation: slideIn 0.3s ease;\n\n  ion-icon {\n    font-size: 16px;\n    flex-shrink: 0;\n  }\n\n  span {\n    line-height: 1.4;\n  }\n}\n\n// ✅ INDICADOR DE SEGURIDAD DE CONTRASEÑA\n.password-strength {\n  margin: 1rem 0;\n  padding: 1rem;\n  background: rgba(255, 255, 255, 0.05);\n  border-radius: 12px;\n  border: 1px solid var(--border-color);\n\n  .strength-label {\n    color: var(--text-secondary);\n    font-size: 0.85rem;\n    margin-bottom: 8px;\n  }\n\n  .strength-bar {\n    height: 6px;\n    background: var(--border-color);\n    border-radius: 3px;\n    overflow: hidden;\n    margin-bottom: 8px;\n\n    .strength-indicator {\n      height: 100%;\n      border-radius: 3px;\n      transition: all 0.5s ease;\n\n      &[data-strength=\"weak\"] {\n        width: 33%;\n        background: var(--error-color);\n      }\n\n      &[data-strength=\"medium\"] {\n        width: 66%;\n        background: var(--warning-color);\n      }\n\n      &[data-strength=\"strong\"] {\n        width: 100%;\n        background: var(--accent-color);\n      }\n    }\n  }\n\n  .strength-text {\n    font-size: 0.85rem;\n    font-weight: 500;\n\n    &[data-strength=\"weak\"] {\n      color: var(--error-color);\n    }\n\n    &[data-strength=\"medium\"] {\n      color: var(--warning-color);\n    }\n\n    &[data-strength=\"strong\"] {\n      color: var(--accent-color);\n    }\n  }\n}\n\n// ✅ BOTONES\n.form-actions {\n  display: flex;\n  gap: 12px;\n  margin-top: 2rem;\n\n  ion-button {\n    height: 48px;\n    font-weight: 600;\n    font-size: 1rem;\n    letter-spacing: 0.5px;\n\n    &.cancel-button {\n      --border-color: var(--border-color);\n      --color: var(--text-secondary);\n      --border-width: 2px;\n      --border-radius: 12px;\n      flex: 1;\n\n      &:hover {\n        --background: rgba(255, 255, 255, 0.05);\n        --color: var(--text-color);\n      }\n    }\n\n    &.submit-button {\n      --background: linear-gradient(135deg, var(--accent-color), #1ed760);\n      --color: white;\n      --border-radius: 12px;\n      flex: 2;\n      box-shadow: 0 4px 16px rgba(29, 185, 84, 0.3);\n\n      &:hover:not(:disabled) {\n        --background: linear-gradient(135deg, #1ed760, #17c653);\n        transform: translateY(-1px);\n        box-shadow: 0 6px 20px rgba(29, 185, 84, 0.4);\n      }\n\n      &:disabled {\n        --background: var(--border-color);\n        --color: var(--text-secondary);\n        box-shadow: none;\n        transform: none;\n      }\n    }\n  }\n}\n\n// ✅ ANIMACIONES\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n// ✅ RESPONSIVE\n@media (max-width: 768px) {\n  .custom-modal {\n    --width: 95vw;\n    --height: 90vh;\n  }\n\n  .password-header {\n    padding: 1.5rem 1rem 0.5rem;\n\n    .security-icon {\n      width: 60px;\n      height: 60px;\n\n      ion-icon {\n        font-size: 30px;\n      }\n    }\n\n    h2 {\n      font-size: 1.25rem;\n    }\n  }\n\n  .password-form {\n    padding: 0 1rem 1.5rem;\n  }\n\n  .form-actions {\n    flex-direction: column;\n\n    ion-button {\n      width: 100%;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'CHANGE_PASSWORD.TITLE\\' | translate }}                                                {{ \\'COMMON.SECURITY\\' | translate }}    Actualiza tu contraseña para mantener tu cuenta segura                                                                                                                                                    {{ \\'CHANGE_PASSWORD.ERRORS.OLD_PASSWORD_REQUIRED\\' | translate }}                                                                                                                                                                        {{ \\'CHANGE_PASSWORD.ERRORS.NEW_PASSWORD_REQUIRED\\' | translate }}                                {{ \\'CHANGE_PASSWORD.ERRORS.PASSWORD_STRENGTH\\' | translate }}                                                                                                                                                            {{ \\'CHANGE_PASSWORD.ERRORS.PASSWORDS_MISMATCH\\' | translate }}                                Seguridad de la contraseña:                                  {{ getPasswordStrengthText() }}                                {{ \\'COMMON.CANCEL\\' | translate }}                                  {{ \\'CHANGE_PASSWORD.SUBMIT\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'ChangePasswordModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ClickableArtistNamesComponent.html":{"url":"components/ClickableArtistNamesComponent.html","title":"component - ClickableArtistNamesComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ClickableArtistNamesComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/clickable-artist/clickable-artist-names.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-clickable-artist-names\n            \n\n\n\n            \n                styleUrls\n                ./clickable-artist-names.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./clickable-artist-names.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                artistsData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                buildArtistsData\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                    Async\n                                onArtistClick\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                artistIds\n                            \n                            \n                                artistNames\n                            \n                            \n                                maxArtists\n                            \n                            \n                                searchEnabled\n                            \n                            \n                                showCount\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                artistClicked\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    displayArtists\n                                \n                                \n                                    remainingCount\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, artistsService: ArtistsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        artistsService\n                                                  \n                                                        \n                                                                        ArtistsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        artistIds\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        artistNames\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        maxArtists\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        searchEnabled\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showCount\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        artistClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:23\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        buildArtistsData\n                        \n                    \n                \n            \n            \n                \n                        \n                    buildArtistsData()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onArtistClick\n                        \n                    \n                \n            \n            \n                \n                        \n                    onArtistClick(artist: ArtistData)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artist\n                                            \n                                                            ArtistData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        artistsData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ArtistData[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        displayArtists\n                    \n                \n\n                \n                    \n                        getdisplayArtists()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:43\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        remainingCount\n                    \n                \n\n                \n                    \n                        getremainingCount()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/clickable-artist/clickable-artist-names.component.ts:50\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\n\ninterface ArtistData {\n  name: string;\n  id?: string;\n}\n\n@Component({\n  selector: 'app-clickable-artist-names',\n  templateUrl: './clickable-artist-names.component.html',\n  styleUrls: ['./clickable-artist-names.component.scss']\n})\nexport class ClickableArtistNamesComponent implements OnChanges {\n  @Input() artistNames: string[] = [];\n  @Input() artistIds: string[] = []; // ✅ OPCIONAL: IDs si los tienes\n  @Input() maxArtists: number = 0;\n  @Input() showCount: boolean = false;\n  @Input() searchEnabled: boolean = true;\n  \n  @Output() artistClicked = new EventEmitter();\n\n  artistsData: ArtistData[] = [];\n\n  constructor(\n    private router: Router,\n    private artistsService: ArtistsService\n  ) {}\n\n  ngOnChanges() {\n    this.buildArtistsData();\n  }\n\n  private buildArtistsData() {\n    this.artistsData = this.artistNames.map((name, index) => ({\n      name,\n      id: this.artistIds && this.artistIds[index] ? this.artistIds[index] : undefined\n    }));\n  }\n\n  get displayArtists(): ArtistData[] {\n    if (this.maxArtists \n    \n\n    \n        \n\n  \n    \n      {{ artist.name }}\n    \n     0\" class=\"separator\">, \n  \n  \n   0 && showCount\" \n        class=\"remaining-count\"\n        [title]=\"remainingCount + ' artistas más'\">\n    +{{ remainingCount }} más\n  \n\n    \n\n    \n                \n                    ./clickable-artist-names.component.scss\n                \n                /* src/app/shared/components/clickable-artist/clickable-artist-names.component.scss - MEJORADO */\n\n.artists-container {\n  display: inline;\n  line-height: 1.4;\n\n  .clickable-artist {\n    color: rgba(255, 255, 255, 0.7);\n    cursor: pointer;\n    transition: all 0.3s ease;\n    text-decoration: none;\n    font-size: 0.9rem;\n    font-weight: 400;\n    position: relative;\n    \n    &:hover {\n      color: #1DB954;\n      text-decoration: underline; /* ✅ Subrayado visible */\n      text-decoration-color: #1DB954; /* ✅ Color del subrayado */\n      text-decoration-thickness: 1px; /* ✅ Grosor del subrayado */\n      text-underline-offset: 2px; /* ✅ Separación del texto */\n      text-shadow: 0 0 4px rgba(29, 185, 84, 0.3);\n      cursor: pointer;\n    }\n    \n    &:active {\n      color: #1ed760;\n      transform: scale(0.98);\n    }\n\n    // Para pantallas táctiles\n    &:focus {\n      outline: none;\n      color: #1DB954;\n      text-decoration: underline;\n      text-decoration-color: #1DB954;\n    }\n\n    // ✅ NUEVO: Efecto de subrayado animado (opcional)\n    &::after {\n      content: '';\n      position: absolute;\n      bottom: -2px;\n      left: 0;\n      width: 0;\n      height: 1px;\n      background-color: #1DB954;\n      transition: width 0.3s ease;\n    }\n\n    &:hover::after {\n      width: 100%;\n    }\n  }\n\n  .separator {\n    color: rgba(255, 255, 255, 0.7);\n    margin: 0 2px;\n    user-select: none;\n  }\n\n  .remaining-count {\n    color: rgba(255, 255, 255, 0.5);\n    font-size: 0.85rem;\n    cursor: help;\n    \n    &:hover {\n      color: rgba(255, 255, 255, 0.8);\n    }\n  }\n}\n\n// Responsive design\n@media (max-width: 768px) {\n  .artists-container {\n    .clickable-artist {\n      font-size: 0.85rem;\n      \n      // Área de toque más grande en móviles\n      padding: 2px 0;\n      margin: -2px 0;\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .artists-container {\n    .clickable-artist {\n      font-size: 0.8rem;\n    }\n    \n    .separator {\n      margin: 0 1px;\n    }\n  }\n}\n\n// Variantes de tema\n.artists-container {\n  // En tarjetas oscuras\n  &.on-dark {\n    .clickable-artist {\n      color: rgba(255, 255, 255, 0.8);\n      \n      &:hover {\n        color: #1DB954;\n      }\n    }\n  }\n  \n  // En tarjetas de colores\n  &.on-colored {\n    .clickable-artist {\n      color: rgba(255, 255, 255, 0.9);\n      \n      &:hover {\n        color: #ffffff;\n        text-shadow: 0 0 6px rgba(255, 255, 255, 0.4);\n      }\n    }\n  }\n  \n  // Para subtítulos más pequeños\n  &.subtitle {\n    .clickable-artist {\n      font-size: 0.8rem;\n      font-weight: 300;\n      opacity: 0.8;\n      \n      &:hover {\n        opacity: 1;\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ artist.name }}         0\" class=\"separator\">,        0 && showCount\"         class=\"remaining-count\"        [title]=\"remainingCount + \\' artistas más\\'\">    +{{ remainingCount }} más  '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'ClickableArtistNamesComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectionChange.html":{"url":"interfaces/CollectionChange.html","title":"interface - CollectionChange","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CollectionChange\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"added\" | \"modified\" | \"removed\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"added\" | \"modified\" | \"removed\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\nexport interface CollectionChange {\n    type: 'added' | 'modified' | 'removed';\n    data?: T;\n    id: string;\n}\nexport interface ICollectionSubscription {\n    subscribe(collectionName: string): Observable>;\n    unsubscribe(collectionName: string): void;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Data.html":{"url":"interfaces/Data.html","title":"interface - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Data\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable, catchError, tap, switchMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\n/**\n * Interfaces para respuestas de Strapi v4\n */\nexport interface PaginatedRaw {\n  data: Data[];\n  meta: Meta;\n}\n\nexport interface Data {\n  id: number;\n  attributes: T;\n}\n\nexport interface Meta {\n  pagination: Pagination;\n}\n\nexport interface Pagination {\n  page: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n}\n\n/**\n * Servicio de repositorio específico para Strapi v4\n * Implementa operaciones CRUD con autenticación Bearer token y populate para relaciones\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService implements IBaseRepository {\n  \n  constructor(\n    protected http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) protected auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string,\n    @Inject(RESOURCE_NAME_TOKEN) protected resource: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {}\n\n  /**\n   * Obtiene headers de autenticación con Bearer token\n   * @returns Objeto con headers de autorización o vacío si no hay token\n   */\n  private getHeaders() {\n    const token = this.auth.getToken();\n    if (!token) {\n      return {};\n    }\n\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n  }\n\n  /**\n   * Obtiene todos los elementos con paginación y filtros específicos de Strapi\n   * @param page Número de página (empezando en 1)\n   * @param pageSize Tamaño de página\n   * @param filters Filtros de búsqueda usando sintaxis Strapi\n   * @returns Observable con elementos paginados\n   */\n  getAll(page: number, pageSize: number, filters: SearchParams = {}): Observable> {\n    let url = `${this.apiUrl}/${this.resource}?populate=*`;\n\n    // Agregar parámetros de paginación\n    url += `&pagination[page]=${page}&pagination[pageSize]=${pageSize}`;\n\n    // Procesar filtros con sintaxis específica de Strapi\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined) {\n        switch(key) {\n          case 'user':\n            url += `&filters[users_IDS][id][$eq]=${value}`;\n            break;\n          case 'sort':\n            url += `&sort[0]=${value}`;\n            break;\n          default:\n            url += `&filters[${key}][$eq]=${value}`;\n        }\n      }\n    });\n\n    const headers = this.getHeaders();\n\n    return this.http.get>(url, headers).pipe(\n      map(res => {\n        if (!res.meta?.pagination) {\n          return this.mapping.getPaginated(page, pageSize, res.data.length, res.data);\n        }\n        return this.mapping.getPaginated(\n          page,\n          pageSize,\n          res.meta.pagination.total,\n          res.data\n        );\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Obtiene un elemento específico por su ID con todas las relaciones pobladas\n   * @param id ID del elemento a obtener\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    const url = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n    \n    return this.http.get(url, this.getHeaders())\n      .pipe(\n        map(res => {\n          if (res.data) {\n            return this.mapping.getOne(res);\n          } else if (res.id) {\n            return this.mapping.getOne({ data: res });\n          } else {\n            return null;\n          }\n        }),\n        catchError(error => {\n          throw error;\n        })\n      );\n  }\n\n  /**\n   * Crea un nuevo elemento con populate para obtener relaciones en la respuesta\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada incluyendo relaciones\n   */\n  add(entity: T): Observable {\n    // Incluir populate para obtener relaciones en la respuesta\n    const url = `${this.apiUrl}/${this.resource}?populate=*`;\n    \n    return this.http.post(\n      url,\n      this.mapping.setAdd(entity),\n      this.getHeaders()\n    ).pipe(\n      map(res => {\n        const mappedResult = this.mapping.getAdded(res);\n        return mappedResult;\n      })\n    );\n  }\n\n  /**\n   * Actualiza un elemento existente sin wrapper \"data\" y hace GET para obtener datos completos\n   * @param id ID del elemento a actualizar\n   * @param entity Datos a actualizar\n   * @returns Observable con la entidad actualizada incluyendo todas las relaciones\n   */\n  update(id: string, entity: T): Observable {\n    const updateUrl = `${this.apiUrl}/${this.resource}/${id}`;\n    const mappedData = this.mapping.setUpdate(entity);\n    \n    // Usar contenido directo sin wrapper \"data\" para Strapi\n    const bodyToSend = mappedData.data || mappedData;\n    \n    return this.http.put(\n      updateUrl,\n      bodyToSend,\n      this.getHeaders()\n    ).pipe(\n      // Después del PUT, hacer GET para obtener datos completos con relaciones\n      switchMap(updateResponse => {\n        const getUrl = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n        return this.http.get(getUrl, this.getHeaders());\n      }),\n      map(getResponse => {\n        const mappedResult = this.mapping.getUpdated(getResponse);\n        return mappedResult;\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n  \n  /**\n   * Elimina un elemento del recurso\n   * @param id ID del elemento a eliminar\n   * @returns Observable con la entidad eliminada\n   */\n  delete(id: string): Observable {\n    return this.http.delete(\n      `${this.apiUrl}/${this.resource}/${id}`,\n      this.getHeaders()\n    ).pipe(\n      map(res => this.mapping.getDeleted(res))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragDropDirective.html":{"url":"directives/DragDropDirective.html","title":"directive - DragDropDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DragDropDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/directives/drag-drop.directive.ts\n        \n\n\n\n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [appDragDrop]\n                    \n\n\n\n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isDragging\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                onDragEnd\n                            \n                            \n                                    \n                                onDragLeave\n                            \n                            \n                                    \n                                onDragOver\n                            \n                            \n                                    \n                                onDragStart\n                            \n                            \n                                    \n                                onDrop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                appDragDropData\n                            \n                            \n                                appDragDropIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                itemDropped\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragend\n                            \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                dragstart\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef, renderer: Renderer2)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/directives/drag-drop.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                    Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        appDragDropData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/drag-drop.directive.ts:7\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        appDragDropIndex\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : -1\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/drag-drop.directive.ts:8\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        itemDropped\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/directives/drag-drop.directive.ts:9\n                            \n                        \n            \n        \n\n\n            \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        \n                            dragend\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-drop.directive.ts:38\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragleave\n                        \n                        \n                    \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-drop.directive.ts:55\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragover\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-drop.directive.ts:44\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            dragstart\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-drop.directive.ts:18\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            drop\n                        \n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n\n\n            \n                \n                    Defined in src/app/shared/directives/drag-drop.directive.ts:60\n                \n            \n\n\n        \n    \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragEnd\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragEnd()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragend')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-drop.directive.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragLeave\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragLeave()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragleave')\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-drop.directive.ts:55\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragOver\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragOver(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragover', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-drop.directive.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDragStart\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDragStart(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('dragstart', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-drop.directive.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onDrop\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDrop(event: DragEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('drop', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/shared/directives/drag-drop.directive.ts:60\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        DragEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isDragging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/directives/drag-drop.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostListener, Input, Output, Renderer2 } from '@angular/core';\n\n@Directive({\n    selector: '[appDragDrop]'\n    })\nexport class DragDropDirective {\n    @Input() appDragDropData: any;\n    @Input() appDragDropIndex: number = -1;\n    @Output() itemDropped = new EventEmitter();\n    \n    private isDragging = false;\n    \n    constructor(private el: ElementRef, private renderer: Renderer2) {\n        this.renderer.setAttribute(this.el.nativeElement, 'draggable', 'true');\n    }\n    \n    @HostListener('dragstart', ['$event'])\n    onDragStart(event: DragEvent) {\n        this.isDragging = true;\n        const data = {\n        item: this.appDragDropData,\n        index: this.appDragDropIndex\n        };\n        \n        event.dataTransfer?.setData('text', JSON.stringify(data));\n        \n        this.renderer.addClass(this.el.nativeElement, 'dragging');\n        \n        if (this.appDragDropData?.image?.url) {\n        const img = new Image();\n        img.src = this.appDragDropData.image.url;\n        img.width = 50;\n        event.dataTransfer?.setDragImage(img, 25, 25);\n        }\n    }\n    \n    @HostListener('dragend')\n    onDragEnd() {\n        this.isDragging = false;\n        this.renderer.removeClass(this.el.nativeElement, 'dragging');\n    }\n    \n    @HostListener('dragover', ['$event'])\n    onDragOver(event: DragEvent) {\n        if (event.preventDefault) {\n        event.preventDefault();\n        }\n        \n        this.renderer.addClass(this.el.nativeElement, 'drag-over');\n        \n        return false;\n    }\n    \n    @HostListener('dragleave')\n    onDragLeave() {\n        this.renderer.removeClass(this.el.nativeElement, 'drag-over');\n    }\n    \n    @HostListener('drop', ['$event'])\n    onDrop(event: DragEvent) {\n        event.preventDefault();\n        if (event.stopPropagation) {\n        event.stopPropagation();\n        }\n        \n        this.renderer.removeClass(this.el.nativeElement, 'drag-over');\n        \n        if (!this.isDragging) {\n        try {\n            const dataStr = event.dataTransfer?.getData('text');\n            if (dataStr) {\n            const data = JSON.parse(dataStr);\n            \n            this.itemDropped.emit({\n                item: data.item, \n                targetIndex: this.appDragDropIndex,\n                sourceIndex: data.index\n            });\n            }\n        } catch (err) {\n            console.error('Error al procesar datos de arrastre:', err);\n        }\n        }\n        \n        return false;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DurationPipe.html":{"url":"pipes/DurationPipe.html","title":"pipe - DurationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DurationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/duration.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        duration\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: string | number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipe/duration.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                        string | number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'duration'\n})\nexport class DurationPipe implements PipeTransform {\n    transform(value: string | number): string {\n        \n        if (!value) {\n            return '00:00';\n        }\n        \n        let seconds: number;\n        \n        if (typeof value === 'string') {\n            if (value.includes(':')) {\n                return value;\n            }\n            \n            seconds = parseInt(value, 10);\n        } else {\n            seconds = value;\n        }\n        \n        if (isNaN(seconds)) {\n            return '00:00';\n        }\n        \n        const minutes = Math.floor(seconds / 60);\n        const remainingSeconds = seconds % 60;\n        \n        const formattedMinutes = minutes.toString().padStart(2, '0');\n        const formattedSeconds = remainingSeconds.toString().padStart(2, '0');\n        \n        const result = `${formattedMinutes}:${formattedSeconds}`;\n        \n        return result;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EditProfileModalComponent.html":{"url":"components/EditProfileModalComponent.html","title":"component - EditProfileModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  EditProfileModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-edit-profile-modal\n            \n\n\n\n            \n                styleUrls\n                ./edit-profile-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./edit-profile-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                openChangePasswordModal\n                            \n                            \n                                    Private\n                                    Async\n                                showErrorToast\n                            \n                            \n                                    Private\n                                    Async\n                                showSuccessToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    email\n                                \n                                \n                                    image\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userSvc: UserService, mediaService: BaseMediaService, loadingController: LoadingController, toastController: ToastController, translateService: TranslateService, modalCtrl: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userSvc\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingController\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translateService\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        user\n                    \n                \n                \n                    \n                        Type :         User\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:233\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:50\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:69\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        openChangePasswordModal\n                        \n                    \n                \n            \n            \n                \n                        \n                    openChangePasswordModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:186\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showErrorToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showErrorToast(messageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:223\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showSuccessToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showSuccessToast(messageKey: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:213\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                messageKey\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:201\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:205\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        image\n                    \n                \n\n                \n                    \n                        getimage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts:209\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { LoadingController, ModalController, ToastController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { lastValueFrom } from 'rxjs';\nimport { User } from 'src/app/core/models/user.model';\nimport { UserService } from 'src/app/core/services/impl/user.service';\nimport { BaseMediaService } from 'src/app/core/services/impl/base-media.service';\nimport { ChangePasswordModalComponent } from '../change-password-modal/change-password-modal.component';\n\n// ✅ FUNCIÓN AUXILIAR PARA CONVERTIR DATA URL A BLOB\nfunction dataURLtoBlob(dataurl: string): Blob {\n  const arr = dataurl.split(',');\n  const mime = arr[0].match(/:(.*?);/)?.[1];\n  const bstr = atob(arr[1]);\n  let n = bstr.length;\n  const u8arr = new Uint8Array(n);\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n  return new Blob([u8arr], { type: mime });\n}\n\n@Component({\n  selector: 'app-edit-profile-modal',\n  templateUrl: './edit-profile-modal.component.html',\n  styleUrls: ['./edit-profile-modal.component.scss'],\n})\nexport class EditProfileModalComponent implements OnInit {\n  @Input() user?: User;\n  formGroup: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userSvc: UserService,\n    private mediaService: BaseMediaService,\n    private loadingController: LoadingController,\n    private toastController: ToastController,\n    private translateService: TranslateService,\n    private modalCtrl: ModalController\n  ) {\n    // ✅ CORREGIDO: Usar 'username' consistentemente\n    this.formGroup = this.formBuilder.group({\n      username: ['', [Validators.required]], \n      email: ['', [Validators.required, Validators.email]],\n      image: ['']\n    });\n  }\n\n  ngOnInit() {\n    console.log('✅ EditProfileModal: ngOnInit with user:', this.user);\n    \n    if (this.user) {\n      // ✅ CARGAR DATOS CORRECTAMENTE\n      this.formGroup.patchValue({\n        username: this.user.username || '',\n        email: this.user.email || '',\n        image: this.user.image?.url || ''\n      });\n      \n      console.log('✅ EditProfileModal: Form patched with values:', {\n        username: this.user.username,\n        email: this.user.email,\n        image: this.user.image?.url\n      });\n    }\n  }\n\n  async onSubmit() {\n    console.log('🚀 EditProfileModal: onSubmit called');\n    console.log('📋 Form valid:', this.formGroup.valid);\n    console.log('📋 Form dirty:', this.formGroup.dirty);\n    console.log('📋 Form values:', this.formGroup.value);\n    \n    if (!this.formGroup.valid || !this.user) {\n      console.error('❌ Form not valid or no user');\n      return;\n    }\n  \n    const loading = await this.loadingController.create({\n      message: await lastValueFrom(this.translateService.get('COMMON.LOADING'))\n    });\n    await loading.present();\n  \n    try {\n      const formValues = this.formGroup.value;\n      const changes: Partial = {};\n  \n      // ✅ VERIFICAR CAMBIOS EN USERNAME\n      if (formValues.username !== this.user.username) {\n        changes.username = formValues.username;\n        console.log('🔄 Username changed from', this.user.username, 'to', formValues.username);\n      }\n      \n      // ✅ VERIFICAR CAMBIOS EN EMAIL\n      if (formValues.email !== this.user.email) {\n        changes.email = formValues.email;\n        console.log('🔄 Email changed from', this.user.email, 'to', formValues.email);\n      }\n  \n      // ✅ VERIFICAR CAMBIOS EN IMAGEN - CORREGIDO\n      if (formValues.image && formValues.image !== this.user.image?.url) {\n        console.log('🖼️ Image changed, uploading new image...');\n        console.log('🖼️ Current image URL:', this.user.image?.url);\n        console.log('🖼️ New image value:', formValues.image);\n        \n        try {\n          let blob: Blob;\n          \n          // Verificar si es data URL o URL normal\n          if (formValues.image.startsWith('data:')) {\n            blob = dataURLtoBlob(formValues.image);\n            console.log('🔄 Created blob from data URL');\n          } else if (formValues.image.startsWith('blob:')) {\n            // Es una blob URL\n            const response = await fetch(formValues.image);\n            blob = await response.blob();\n            console.log('🔄 Created blob from blob URL');\n          } else if (formValues.image.startsWith('http')) {\n            // Es una URL HTTP\n            const response = await fetch(formValues.image);\n            blob = await response.blob();\n            console.log('🔄 Created blob from HTTP URL');\n          } else {\n            throw new Error('Unknown image format');\n          }\n          \n          console.log('📤 Uploading blob. Size:', blob.size, 'Type:', blob.type);\n          const uploadResult = await lastValueFrom(this.mediaService.upload(blob));\n          console.log('✅ Upload result:', uploadResult);\n          \n          if (uploadResult && uploadResult[0]) {\n            // ✅ CORREGIDO: Manejar como ID numérico, no como URL\n            const imageId = Number(uploadResult[0]);\n            console.log('🖼️ Image upload successful. ID:', imageId);\n            \n            // ✅ Para el mapping de Strapi, enviar el ID como número\n            changes.image = imageId as any; // El mapping lo convertirá correctamente\n            console.log('🖼️ Setting image change as ID:', changes.image);\n          } else {\n            throw new Error('Upload failed - no result');\n          }\n        } catch (imageError) {\n          console.error('❌ Error uploading image:', imageError);\n          await loading.dismiss();\n          await this.showErrorToast('COMMON.ERROR.UPLOAD');\n          return;\n        }\n      }\n\n      console.log('📤 Changes to apply:', changes);\n\n      // ✅ SOLO ACTUALIZAR SI HAY CAMBIOS\n      if (Object.keys(changes).length === 0) {\n        console.log('⚠️ No changes detected, closing modal');\n        await loading.dismiss();\n        this.modalCtrl.dismiss(null, 'cancel');\n        return;\n      }\n\n      // ✅ APLICAR CAMBIOS\n      console.log('🔄 Applying changes to user:', this.user.id);\n      const result = await lastValueFrom(this.userSvc.updateProfile(this.user.id, changes));\n      console.log('✅ Update result:', result);\n      console.log('🖼️ Update result image:', result.image);\n      \n      await loading.dismiss();\n      \n      // ✅ EL RESULT YA ES EL USUARIO COMPLETO ACTUALIZADO\n      // No necesitamos mezclarlo con this.user porque result viene completo de Strapi\n      console.log('✅ Complete updated user to return:', result);\n      console.log('🖼️ Final image to return:', result.image);\n      \n      await this.showSuccessToast('COMMON.SUCCESS.SAVE');\n      \n      // ✅ DEVOLVER EL USUARIO COMPLETO ACTUALIZADO DIRECTAMENTE\n      this.modalCtrl.dismiss(result, 'updated');\n      \n    } catch (error) {\n      console.error('❌ Update error:', error);\n      await loading.dismiss();\n      await this.showErrorToast('COMMON.ERROR.SAVE');\n    }\n  }\n\n  async openChangePasswordModal() {\n    const modal = await this.modalCtrl.create({\n      component: ChangePasswordModalComponent,\n      cssClass: 'custom-modal' \n    });\n\n    await modal.present();\n\n    const { data } = await modal.onDidDismiss();\n    if (data) {\n      await this.showSuccessToast('CHANGE_PASSWORD.SUCCESS');\n    }\n  }\n\n  // ✅ GETTERS CORREGIDOS\n  get username() {\n    return this.formGroup.controls['username'];\n  }\n\n  get email() {\n    return this.formGroup.controls['email'];\n  }\n\n  get image() {\n    return this.formGroup.controls['image'];\n  }\n\n  private async showSuccessToast(messageKey: string) {\n    const toast = await this.toastController.create({\n      message: await lastValueFrom(this.translateService.get(messageKey)),\n      duration: 3000,\n      position: 'bottom',\n      color: 'success'\n    });\n    await toast.present();\n  }\n\n  private async showErrorToast(messageKey: string) {\n    const toast = await this.toastController.create({\n      message: await lastValueFrom(this.translateService.get(messageKey)),\n      duration: 3000,\n      position: 'bottom',\n      color: 'danger'\n    });\n    await toast.present();\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n}\n    \n\n    \n        \n  \n    \n      {{ 'PROFILE.DETAILS_TITLE' | translate }}\n      \n        \n      \n    \n  \n\n\n\n  \n    \n      \n        \n        \n          \n        \n\n        \n        \n          \n            \n              \n              \n                \n                \n                \n                \n                  {{ 'USER.ERRORS.USERNAME_REQUIRED' | translate }}\n                \n              \n              \n              \n                \n                \n                \n                \n                  \n                    {{ 'USER.ERRORS.EMAIL_REQUIRED' | translate }}\n                  \n                  \n                    {{ 'USER.ERRORS.EMAIL_INVALID' | translate }}\n                  \n                \n              \n\n              \n              \n                \n                {{ 'PROFILE.CHANGE_PASSWORD' | translate }}\n                \n              \n            \n          \n        \n      \n    \n\n    \n    \n      \n        \n        {{ 'PROFILE.SAVE' | translate }}\n      \n    \n  \n\n    \n\n    \n                \n                    ./edit-profile-modal.component.scss\n                \n                :host {\n  --modal-bg: #121212;\n  --input-bg: #272727;\n}\n\n.custom-modal {\n  --width: 500px; /* Hacemos el popup más ancho */\n  --height: 250px; /* Hacemos el popup menos alto */\n}\n\nion-header {\n  background: var(--modal-bg);\n}\n\nion-toolbar {\n  --background: var(--modal-bg);\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1rem;\n}\n\nh1 {\n  color: white;\n  font-size: 1.25rem;\n  margin: 0;\n}\n\nion-button {\n  --color: #666;\n}\n\n.profile-avatar {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-top: 1rem;\n}\n\n.profile-avatar app-picture-selectable {\n  width: 500px; /* Ajusta el tamaño */\n  height: 350px;\n  background: var(--input-bg);\n  border-radius: 50%; /* Hace que sea completamente circular */\n  overflow: hidden; /* Evita que cualquier imagen desbordante se vea fuera del círculo */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.profile-avatar app-picture-selectable img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover; /* Asegura que la imagen se adapte sin deformarse */\n  border-radius: 50%; /* Mantiene la imagen dentro del círculo */\n}\n\n.profile-fields {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 1rem;\n}\n\n.save-button-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1rem;\n}\n\nion-list {\n  background: var(--modal-bg);\n  padding: 0;\n}\n\nion-item {\n  --background: var(--input-bg);\n  --border-radius: 4px;\n  margin-bottom: 0.75rem;\n}\n\nion-input {\n  --color: white;\n  --placeholder-color: #888;\n}\n\nion-item:last-child {\n  margin-bottom: 0;\n}\n\n.save-button-container {\n  display: flex;\n  justify-content: flex-end;\n  margin-top: 1rem;\n}\n\n.save-button-container ion-button {\n  --background: white;\n  --color: black;\n  --border-radius: 20px;\n  height: 36px;\n  min-width: 100px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ \\'PROFILE.DETAILS_TITLE\\' | translate }}                                                                                                                                                                                                                            {{ \\'USER.ERRORS.USERNAME_REQUIRED\\' | translate }}                                                                                                                                                                {{ \\'USER.ERRORS.EMAIL_REQUIRED\\' | translate }}                                                        {{ \\'USER.ERRORS.EMAIL_INVALID\\' | translate }}                                                                                                            {{ \\'PROFILE.CHANGE_PASSWORD\\' | translate }}                                                                                                    {{ \\'PROFILE.SAVE\\' | translate }}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'EditProfileModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EnhancedAudioPlayerService.html":{"url":"injectables/EnhancedAudioPlayerService.html","title":"injectable - EnhancedAudioPlayerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EnhancedAudioPlayerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/enhanced-audio-player.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                formatTime\n                            \n                            \n                                getCurrentSong\n                            \n                            \n                                getPlayerState\n                            \n                            \n                                    Private\n                                isEnrichedSong\n                            \n                            \n                                next\n                            \n                            \n                                pause\n                            \n                            \n                                    Async\n                                playEnrichedSong\n                            \n                            \n                                previous\n                            \n                            \n                                removeFromQueue\n                            \n                            \n                                resume\n                            \n                            \n                                seekTo\n                            \n                            \n                                    Async\n                                setEnrichedQueue\n                            \n                            \n                                setVolume\n                            \n                            \n                                toggleRepeat\n                            \n                            \n                                toggleShuffle\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playerState$\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(audioPlayerService: AudioPlayerService, songEnrichmentService: SongEnrichmentService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        audioPlayerService\n                                                  \n                                                        \n                                                                        AudioPlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        songEnrichmentService\n                                                  \n                                                        \n                                                                        SongEnrichmentService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        formatTime\n                        \n                    \n                \n            \n            \n                \nformatTime(seconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:90\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                seconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentSong\n                        \n                    \n                \n            \n            \n                \ngetCurrentSong()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:98\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPlayerState\n                        \n                    \n                \n            \n            \n                \ngetPlayerState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isEnrichedSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    isEnrichedSong(song: Song | EnrichedSong)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:49\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                        Song | EnrichedSong\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         EnrichedSong\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pause\n                        \n                    \n                \n            \n            \n                \npause()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:58\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        playEnrichedSong\n                        \n                    \n                \n            \n            \n                \n                        \n                    playEnrichedSong(song: Song | EnrichedSong)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                        Song | EnrichedSong\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        previous\n                        \n                    \n                \n            \n            \n                \nprevious()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFromQueue\n                        \n                    \n                \n            \n            \n                \nremoveFromQueue(index: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                index\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resume\n                        \n                    \n                \n            \n            \n                \nresume()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:62\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seekTo\n                        \n                    \n                \n            \n            \n                \nseekTo(time: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                time\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        setEnrichedQueue\n                        \n                    \n                \n            \n            \n                \n                        \n                    setEnrichedQueue(songs: (Song | EnrichedSong)[], startIndex: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:32\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                songs\n                                            \n                                                        (Song | EnrichedSong)[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                startIndex\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    0\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setVolume\n                        \n                    \n                \n            \n            \n                \nsetVolume(volume: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                volume\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRepeat\n                        \n                    \n                \n            \n            \n                \ntoggleRepeat()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:86\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleShuffle\n                        \n                    \n                \n            \n            \n                \ntoggleShuffle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playerState$\n                    \n                \n\n                \n                    \n                        getplayerState$()\n                    \n                \n                            \n                                \n                                    Defined in src/app/core/services/impl/enhanced-audio-player.service.ts:54\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, forkJoin, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { AudioPlayerService } from './audio-player.service';\nimport { SongEnrichmentService } from './song-enrichment.service';\nimport { Song } from '../../models/song.model';\nimport { EnrichedSong } from '../../models/enriched-song.interface';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EnhancedAudioPlayerService {\n    constructor(\n        private audioPlayerService: AudioPlayerService,\n        private songEnrichmentService: SongEnrichmentService\n    ) {}\n\n    async playEnrichedSong(song: Song | EnrichedSong): Promise {\n        if (this.isEnrichedSong(song)) {\n        // Ya tiene artistNames, usar directamente\n        await this.audioPlayerService.play(song);\n        } else {\n        // Necesita ser enriquecida\n        const enrichedSong = await this.songEnrichmentService.enrichSong(song).toPromise();\n        if (enrichedSong) {\n            await this.audioPlayerService.play(enrichedSong);\n        }\n        }\n    }\n\n    async setEnrichedQueue(songs: (Song | EnrichedSong)[], startIndex: number = 0): Promise {\n        const enrichedSongs: EnrichedSong[] = [];\n        \n        for (const song of songs) {\n        if (this.isEnrichedSong(song)) {\n            enrichedSongs.push(song);\n        } else {\n            const enriched = await this.songEnrichmentService.enrichSong(song).toPromise();\n            if (enriched) {\n            enrichedSongs.push(enriched);\n            }\n        }\n        }\n        \n        this.audioPlayerService.setQueue(enrichedSongs, startIndex);\n    }\n\n    private isEnrichedSong(song: Song | EnrichedSong): song is EnrichedSong {\n        return 'artistNames' in song && Array.isArray((song as EnrichedSong).artistNames);\n    }\n\n    // Delegar todos los otros métodos al AudioPlayerService\n    get playerState$() {\n        return this.audioPlayerService.playerState$;\n    }\n\n    pause() {\n        this.audioPlayerService.pause();\n    }\n\n    resume() {\n        this.audioPlayerService.resume();\n    }\n\n    next() {\n        this.audioPlayerService.next();\n    }\n\n    previous() {\n        this.audioPlayerService.previous();\n    }\n\n    seekTo(time: number) {\n        this.audioPlayerService.seekTo(time);\n    }\n\n    setVolume(volume: number) {\n        this.audioPlayerService.setVolume(volume);\n    }\n\n    toggleShuffle() {\n        this.audioPlayerService.toggleShuffle();\n    }\n\n    toggleRepeat() {\n        this.audioPlayerService.toggleRepeat();\n    }\n\n    formatTime(seconds: number): string {\n        return this.audioPlayerService.formatTime(seconds);\n    }\n\n    getPlayerState() {\n        return this.audioPlayerService.getPlayerState();\n    }\n\n    getCurrentSong() {\n        return this.audioPlayerService.getCurrentSong();\n    }\n\n    removeFromQueue(index: number) {\n        this.audioPlayerService.removeFromQueue(index);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnrichedSong.html":{"url":"interfaces/EnrichedSong.html","title":"interface - EnrichedSong","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnrichedSong\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/enriched-song.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Song\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artistNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Song } from './song.model';\n\nexport interface EnrichedSong extends Song {\n    artistNames?: string[];\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnrichedSong-1.html":{"url":"interfaces/EnrichedSong-1.html","title":"interface - EnrichedSong-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnrichedSong\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/artist-profile/artist-profile.page.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Song\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artistNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { BehaviorSubject, Subject, switchMap, takeUntil, of } from 'rxjs';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { Artist } from 'src/app/core/models/artist.model';\nimport { Song } from 'src/app/core/models/song.model';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { AudioPlayerService } from 'src/app/core/services/impl/audio-player.service';\nimport { SocialService } from 'src/app/core/services/impl/social.service';\nimport { TranslateService } from '@ngx-translate/core';\n\ninterface EnrichedSong extends Song {\n  artistNames?: string[];\n}\n\n@Component({\n  selector: 'app-artist-profile',\n  templateUrl: './artist-profile.page.html',\n  styleUrls: ['./artist-profile.page.scss']\n})\nexport class ArtistProfilePage implements OnInit, OnDestroy {\n  private destroy$ = new Subject();\n  \n  artist: Artist | null = null;\n  artistSongs: EnrichedSong[] = [];\n  relatedArtists: Artist[] = [];\n  isFollowing = false;\n  isLoading = true;\n  selectedTab = 'songs';\n  followLoading = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private location: Location,\n    private artistsService: ArtistsService,\n    private songsService: SongsService,\n    private audioPlayerService: AudioPlayerService,\n    private socialService: SocialService,\n    private loadingController: LoadingController,\n    private toastController: ToastController,\n    private translate: TranslateService\n  ) {}\n\n  ngOnInit() {\n    this.route.params.pipe(\n      switchMap(params => {\n        const artistId = params['id'];\n        if (artistId) {\n          this.loadFollowStatus(artistId);\n          return this.loadArtistData(artistId);\n        }\n        return of(null);\n      }),\n      takeUntil(this.destroy$)\n    ).subscribe();\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  private loadFollowStatus(artistId: string) {\n    console.log('🔍 Loading follow status for artist:', artistId);\n    \n    this.socialService.isArtistFollowed(artistId)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(isFollowing => {\n        console.log('✅ Follow status loaded:', { artistId, isFollowing });\n        this.isFollowing = isFollowing;\n      });\n  }\n\n  private async loadArtistData(artistId: string) {\n    const loading = await this.loadingController.create({\n      message: this.translate.instant('COMMON.LOADING')\n    });\n    await loading.present();\n\n    try {\n      console.log('🔍 Loading artist data for ID:', artistId);\n      const artist = await this.artistsService.getById(artistId).toPromise();\n      \n      if (artist) {\n        console.log('✅ Artist loaded:', artist);\n        this.artist = artist;\n        \n        if (artist.songs_IDS && artist.songs_IDS.length > 0) {\n          console.log('🎵 Loading artist songs:', artist.songs_IDS);\n          await this.loadArtistSongs(artist.songs_IDS);\n        }\n        \n        await this.loadRelatedArtists();\n      } else {\n        console.error('❌ Artist not found for ID:', artistId);\n      }\n    } catch (error) {\n      console.error('❌ Error loading artist data:', error);\n      this.showError('Error al cargar el perfil del artista');\n    } finally {\n      this.isLoading = false;\n      await loading.dismiss();\n    }\n  }\n\n  private async loadArtistSongs(songIds: string[]) {\n    try {\n      const songPromises = songIds.map(id => \n        this.songsService.getById(id).toPromise()\n      );\n      \n      const songs = await Promise.all(songPromises);\n      const validSongs = songs.filter((song): song is Song => song !== null);\n      \n      console.log('🎵 Songs loaded:', validSongs.length);\n      this.artistSongs = await this.enrichSongsWithArtists(validSongs);\n      \n    } catch (error) {\n      console.error('❌ Error loading artist songs:', error);\n    }\n  }\n\n  private async enrichSongsWithArtists(songs: Song[]): Promise {\n    const enrichedSongs: EnrichedSong[] = [];\n    \n    for (const song of songs) {\n      if (song.artists_IDS && song.artists_IDS.length > 0) {\n        try {\n          const artists = await this.artistsService.getByIds(song.artists_IDS).toPromise();\n          if (artists) {\n            const enrichedSong: EnrichedSong = {\n              ...song,\n              artistNames: artists.map(artist => artist.name)\n            };\n            enrichedSongs.push(enrichedSong);\n          }\n        } catch (error) {\n          console.error('❌ Error loading artists for song:', song.id, error);\n          enrichedSongs.push({ ...song, artistNames: [] });\n        }\n      } else {\n        enrichedSongs.push({ ...song, artistNames: [] });\n      }\n    }\n    \n    return enrichedSongs;\n  }\n\n  private async loadRelatedArtists() {\n    try {\n      const allArtists = await this.artistsService.getAll(1, 10).toPromise();\n      if (allArtists) {\n        this.relatedArtists = allArtists.data.filter(a => a.id !== this.artist?.id);\n      }\n    } catch (error) {\n      console.error('❌ Error loading related artists:', error);\n    }\n  }\n\n  async toggleFollow() {\n    if (!this.artist || this.followLoading) return;\n\n    console.log('🔄 Toggling follow for artist:', this.artist.id, 'Current state:', this.isFollowing);\n    this.followLoading = true;\n\n    try {\n      if (this.isFollowing) {\n        console.log('➖ Unfollowing artist...');\n        const success = await this.socialService.unfollowArtist(this.artist.id).toPromise();\n        if (success) {\n          console.log('✅ Successfully unfollowed');\n          this.showToast(`Ya no sigues a ${this.artist.name}`);\n        } else {\n          console.error('❌ Failed to unfollow');\n          this.showError('Error al dejar de seguir al artista');\n        }\n      } else {\n        console.log('➕ Following artist...');\n        const success = await this.socialService.followArtist(this.artist.id).toPromise();\n        if (success) {\n          console.log('✅ Successfully followed');\n          this.showToast(`Ahora sigues a ${this.artist.name}`);\n        } else {\n          console.error('❌ Failed to follow');\n          this.showError('Error al seguir al artista');\n        }\n      }\n    } catch (error) {\n      console.error('❌ Error in toggleFollow:', error);\n      this.showError('Error al actualizar el seguimiento');\n    } finally {\n      this.followLoading = false;\n    }\n  }\n\n  async onPlayAll() {\n    if (!this.artistSongs || this.artistSongs.length === 0) {\n      this.showError('No hay canciones disponibles para reproducir');\n      return;\n    }\n\n    try {\n      console.log('🎵 Playing all songs for artist:', this.artist?.name);\n      \n      if (typeof this.audioPlayerService.setQueue === 'function') {\n        this.audioPlayerService.setQueue(this.artistSongs, 0);\n      }\n\n      if (typeof this.audioPlayerService.play === 'function') {\n        await this.audioPlayerService.play(this.artistSongs[0]);\n      }\n\n      this.showToast(`Reproduciendo ${this.artistSongs.length} canciones de ${this.artist?.name}`);\n      \n    } catch (error) {\n      console.error('❌ Error playing songs:', error);\n      this.showError('Error al reproducir las canciones');\n    }\n  }\n\n  async onPlaySong(song: EnrichedSong, index: number) {\n    if (!song) return;\n\n    try {\n      console.log('🎵 Playing song:', song.name, 'at index:', index);\n      \n      if (typeof this.audioPlayerService.setQueue === 'function') {\n        this.audioPlayerService.setQueue(this.artistSongs, index);\n      }\n\n      if (typeof this.audioPlayerService.play === 'function') {\n        await this.audioPlayerService.play(song);\n      }\n\n      this.showToast(`Reproduciendo: ${song.name}`);\n      \n    } catch (error) {\n      console.error('❌ Error playing song:', error);\n      this.showError('Error al reproducir la canción');\n    }\n  }\n\n  onRelatedArtistClick(artist: Artist) {\n    this.router.navigate(['/artist', artist.id]);\n  }\n\n  goBack() {\n    this.location.back();\n  }\n\n  formatNumber(num: number): string {\n    if (num >= 1000000) {\n      return (num / 1000000).toFixed(1) + 'M';\n    } else if (num >= 1000) {\n      return (num / 1000).toFixed(1) + 'K';\n    }\n    return num.toString();\n  }\n\n  private async showError(message: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 3000,\n      color: 'danger'\n    });\n    toast.present();\n  }\n\n  private async showToast(message: string) {\n    const toast = await this.toastController.create({\n      message,\n      duration: 2000,\n      color: 'success'\n    });\n    toast.present();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnrichedSong-2.html":{"url":"interfaces/EnrichedSong-2.html","title":"interface - EnrichedSong-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnrichedSong\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/song-enrichment.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Song\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artistNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, forkJoin, of, map, catchError, lastValueFrom } from 'rxjs';\nimport { Song } from '../../models/song.model';\nimport { ArtistsService } from './artists.service';\n\nexport interface EnrichedSong extends Song {\n    artistNames?: string[];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SongEnrichmentService {\n    constructor(private artistsService: ArtistsService) {}\n\n    enrichSong(song: Song): Observable {\n        \n        if (!song.artists_IDS || song.artists_IDS.length === 0) {\n        return of({ ...song, artistNames: ['Unknown Artist'] });\n        }\n\n        return this.artistsService.getByIds(song.artists_IDS).pipe(\n        map(artists => {\n            const artistNames = artists.map(artist => artist.name);\n            return {\n            ...song,\n            artistNames: artistNames\n            };\n        }),\n        catchError(error => {\n            return of({ ...song, artistNames: ['Unknown Artist'] });\n        })\n        );\n    }\n\n    enrichSongs(songs: Song[]): Observable {\n        if (songs.length === 0) {\n        return of([]);\n        }\n\n        const enrichmentObservables = songs.map(song => this.enrichSong(song));\n        \n        return forkJoin(enrichmentObservables).pipe(\n        catchError(error => {\n            console.error('Error enriching songs:', error);\n            // Fallback: devolver canciones con nombres de artistas por defecto\n            return of(songs.map(song => ({ \n            ...song, \n            artistNames: ['Unknown Artist'] \n            })));\n        })\n        );\n    }\n\n  // ✅ ARREGLADO: Usar lastValueFrom en lugar de toPromise()\n    async enrichSongsAsync(songs: Song[]): Promise {\n        const enrichedSongs: EnrichedSong[] = [];\n        \n        for (const song of songs) {\n        try {\n            if (song.artists_IDS && song.artists_IDS.length > 0) {\n            \n            // ✅ ARREGLADO: Usar lastValueFrom en lugar de toPromise()\n            const artists = await lastValueFrom(this.artistsService.getByIds(song.artists_IDS));\n            \n            if (artists && artists.length > 0) {\n                enrichedSongs.push({\n                ...song,\n                artistNames: artists.map(artist => artist.name)\n                });\n            } else {\n                console.warn('🎨 No artists found for song:', song.name);\n                enrichedSongs.push({\n                ...song,\n                artistNames: ['Unknown Artist']\n                });\n            }\n            } else {\n            enrichedSongs.push({\n                ...song,\n                artistNames: ['Unknown Artist']\n            });\n            }\n        } catch (error) {\n            console.error('🎨 Error loading artists for song:', song.name, error);\n            enrichedSongs.push({\n            ...song,\n            artistNames: ['Unknown Artist']\n            });\n        }\n        }\n        \n        return enrichedSongs;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseArtist.html":{"url":"interfaces/FirebaseArtist.html","title":"interface - FirebaseArtist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseArtist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-artist.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            listiners\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            songs_IDS\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        listiners\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        listiners:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songs_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songs_IDS:     DocumentReference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebaseArtist {\n    name: string;\n    listiners: number;\n    image?: string;\n    songs_IDS?: DocumentReference[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseAuthenticationService.html":{"url":"injectables/FirebaseAuthenticationService.html","title":"injectable - FirebaseAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _token\n                            \n                            \n                                    Private\n                                auth\n                            \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                isUpdating\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                getToken\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                    Protected\n                                    \n                                updateCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, authMapping: IAuthMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:87\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/firebase-authentication.service.ts:195\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:184\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:109\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:175\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:132\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                            \n                        updateCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:81\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        auth\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Firestore\n\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isUpdating\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-authentication.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, firstValueFrom, from, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, FIREBASE_CONFIG_TOKEN } from '../../repositories/repository.tokens';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { SignInPayload, SignUpPayload} from '../../models/auth.model';\nimport { initializeApp } from 'firebase/app';\nimport { \n  getAuth, \n  signInWithEmailAndPassword, \n  createUserWithEmailAndPassword,\n  signOut as firebaseSignOut,\n  onAuthStateChanged,\n  updateProfile,\n  User as FirebaseUser\n} from 'firebase/auth';\nimport { \n  getFirestore, \n  doc, \n  setDoc,\n  getDoc,\n  Firestore \n} from 'firebase/firestore';\nimport { User } from '../../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseAuthenticationService extends BaseAuthenticationService {\n  private auth;\n  private db: Firestore;\n  private _token: string | null = null;\n  private isUpdating = false;\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping\n  ) {\n    super(authMapping);\n    const app = initializeApp(firebaseConfig);\n    this.auth = getAuth(app);\n    this.db = getFirestore(app);\n\n    onAuthStateChanged(this.auth, async (user) => {\n      if (user) {\n        try {\n          this.isUpdating = true;\n          this._token = await user.getIdToken();\n          this._authenticated.next(true);\n\n          const userDoc = await getDoc(doc(this.db, 'users', user.uid));\n          if (!userDoc.exists()) {\n            throw new Error('User document not found in Firestore');\n          }\n\n          const userData = userDoc.data();\n          const enrichedUser = {\n            ...user,\n            displayName: userData?.['name'] ? `${userData['name']} ${userData['surname']}` : user.displayName,\n          };\n\n          this._user.next(this.authMapping.me(enrichedUser));\n        } catch (error) {\n          console.error('Error loading user data:', error);\n          this._user.next(this.authMapping.me(user));\n        } finally {\n          setTimeout(() => {\n            this.isUpdating = false;\n          }, 100);\n        }\n      } else {\n        this._token = null;\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      }\n      this._ready.next(true);\n    });\n  }\n\n  protected override updateCurrentUser(user: User) {\n    if (this.isUpdating) return;\n    console.log('Updating current user:', user);\n    this._user.next(user);\n  }\n\n  async getCurrentUser(): Promise {\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n  \n    const user = this.auth.currentUser;\n    if (!user) {\n      return undefined; \n    }\n  \n    const userDoc = await getDoc(doc(this.db, 'users', user.uid));\n    if (!userDoc.exists()) {\n      throw new Error('User document not found in Firestore');\n    }\n  \n    const userData = userDoc.data();\n    const enrichedUser = {\n      ...user,\n      displayName: userData?.['name'] ? `${userData['name']} ${userData['surname']}` : user.displayName,\n    };\n  \n    return this.authMapping.me(enrichedUser);\n  }\n\n  signIn(authPayload: SignInPayload): Observable {\n    const { email, password } = this.authMapping.signInPayload(authPayload);\n\n    return from(signInWithEmailAndPassword(this.auth, email, password)).pipe(\n      switchMap(userCredential => \n        from(getDoc(doc(this.db, 'users', userCredential.user.uid))).pipe(\n          map(userDoc => {\n            if (!userDoc.exists()) {\n              throw new Error('User document not found in Firestore');\n            }\n\n            const userData = userDoc.data();\n            const enrichedUser = {\n              ...userCredential.user,\n              displayName: userData?.['name'] ? `${userData['name']} ${userData['surname']}` : userCredential.user.displayName,\n            };\n            return this.authMapping.signIn(enrichedUser);\n          })\n        )\n      )\n    );\n  }\n\n  signUp(signUpPayload: SignUpPayload): Observable {\n    const { email, password, displayName } = this.authMapping.signUpPayload(signUpPayload);\n  \n    return new Observable(observer => {\n      createUserWithEmailAndPassword(this.auth, email, password)\n        .then(async (userCredential) => {\n          try {\n            await updateProfile(userCredential.user, { displayName });\n  \n            const userRef = doc(this.db, 'users', userCredential.user.uid);\n            const userData = {\n              name: signUpPayload.name,\n              surname: signUpPayload.surname,\n              email: signUpPayload.email,\n              displayName,\n              gender: signUpPayload.gender || null,\n              image: signUpPayload.image || null,\n              createdAt: new Date(),\n              updatedAt: new Date()\n            };\n  \n            await setDoc(userRef, userData);\n  \n            const enrichedUser = {\n              ...userCredential.user,\n              displayName,\n            };\n  \n            observer.next(this.authMapping.signUp(enrichedUser));\n            observer.complete();\n          } catch (error) {\n            console.error('Error creating user in Firestore:', error);\n            await userCredential.user.delete();\n            observer.error('Error creating user. Please try again.');\n          }\n        })\n        .catch(error => {\n          console.error('Error creating user in Firebase Auth:', error);\n          observer.error('Error creating user. Please check your credentials.');\n        });\n    });\n  }\n\n  signOut(): Observable {\n    return from(firebaseSignOut(this.auth)).pipe(\n      tap(() => {\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      })\n    );\n  }\n\n  me(): Observable {\n    return of(this.auth.currentUser).pipe(\n      map(user => {\n        if (!user) {\n          throw new Error('No authenticated user');\n        }\n        return this.authMapping.me(user);\n      })\n    );\n  }\n\n  getToken(): string | null {\n    return this._token;\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseCollectionSubscriptionService.html":{"url":"injectables/FirebaseCollectionSubscriptionService.html","title":"injectable - FirebaseCollectionSubscriptionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseCollectionSubscriptionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/firebase-collection-subscription.interface.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                subscriptions\n                            \n                            \n                                    Private\n                                unsubscribeFunctions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getMappingForCollection\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                subscribe\n                            \n                            \n                                unsubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, songMapping: IBaseMapping, playlistMapping: IBaseMapping, userMapping: IBaseMapping, artistMapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        songMapping\n                                                  \n                                                        \n                                                                    IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        playlistMapping\n                                                  \n                                                        \n                                                                    IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userMapping\n                                                  \n                                                        \n                                                                    IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        artistMapping\n                                                  \n                                                        \n                                                                    IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getMappingForCollection\n                        \n                    \n                \n            \n            \n                \n                        \n                    getMappingForCollection(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         IBaseMapping\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:110\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:96\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        db\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Map>>\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        unsubscribeFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Map\n\n                    \n                \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/interfaces/firebase-collection-subscription.interface.ts:33\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { initializeApp } from 'firebase/app';\nimport {\n  getFirestore,\n  collection,\n  onSnapshot,\n  QuerySnapshot,\n  DocumentData\n} from 'firebase/firestore';\nimport { Observable, Subject } from 'rxjs';\nimport { ICollectionSubscription } from '../interfaces/collection-subscription.interface';\nimport { \n  FIREBASE_CONFIG_TOKEN, \n  SONGS_REPOSITORY_MAPPING_TOKEN,\n  PLAYLISTS_REPOSITORY_MAPPING_TOKEN,\n  USERS_REPOSITORY_MAPPING_TOKEN,\n  ARTISTS_REPOSITORY_MAPPING_TOKEN\n} from '../../repositories/repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../../repositories/intefaces/base-mapping.interface';\nimport { CollectionChange } from '../interfaces/collection-subscription.interface';\nimport { Song } from '../../models/song.model';\nimport { Playlist } from '../../models/playlist.model';\nimport { User } from '../../models/user.model';\nimport { Artist } from '../../models/artist.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseCollectionSubscriptionService implements ICollectionSubscription {\n  private db;\n  private subscriptions: Map>> = new Map();\n  private unsubscribeFunctions: Map void> = new Map();\n\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(SONGS_REPOSITORY_MAPPING_TOKEN) private songMapping: IBaseMapping,\n    @Inject(PLAYLISTS_REPOSITORY_MAPPING_TOKEN) private playlistMapping: IBaseMapping,\n    @Inject(USERS_REPOSITORY_MAPPING_TOKEN) private userMapping: IBaseMapping,\n    @Inject(ARTISTS_REPOSITORY_MAPPING_TOKEN) private artistMapping: IBaseMapping\n  ) {\n    const app = initializeApp(firebaseConfig);\n    this.db = getFirestore(app);\n  }\n\n  private getMappingForCollection(collectionName: string): IBaseMapping {\n    switch(collectionName) {\n      case 'songs': return this.songMapping;\n      case 'playlists': return this.playlistMapping;\n      case 'users': return this.userMapping;\n      case 'artists': return this.artistMapping;\n      default: \n        throw new Error(`No mapping found for collection: ${collectionName}`);\n    }\n  }\n\n  subscribe(collectionName: string): Observable> {\n    if (this.subscriptions.has(collectionName)) {\n      return this.subscriptions.get(collectionName)!.asObservable();\n    }\n\n    const subject = new Subject>();\n    this.subscriptions.set(collectionName, subject);\n\n    const mapping = this.getMappingForCollection(collectionName);\n\n    const unsubscribe = onSnapshot(\n      collection(this.db, collectionName),\n      (snapshot: QuerySnapshot) => {\n        snapshot.docChanges().forEach(change => {\n          const changeData: CollectionChange = {\n            type: change.type as 'added' | 'modified' | 'removed',\n            id: change.doc.id\n          };\n\n          if (change.type !== 'removed') {\n            changeData.data = mapping.getOne({\n              id: change.doc.id,\n              ...change.doc.data()\n            } as T);\n          }\n\n          subject.next(changeData);\n        });\n      },\n      error => {\n        console.error(`Error en suscripción a ${collectionName}:`, error);\n        subject.error(error);\n      }\n    );\n\n    this.unsubscribeFunctions.set(collectionName, unsubscribe);\n    return subject.asObservable();\n  }\n\n  unsubscribe(collectionName: string): void {\n    const unsubscribe = this.unsubscribeFunctions.get(collectionName);\n    if (unsubscribe) {\n      unsubscribe();\n      this.unsubscribeFunctions.delete(collectionName);\n    }\n\n    const subject = this.subscriptions.get(collectionName);\n    if (subject) {\n      subject.complete();\n      this.subscriptions.delete(collectionName);\n    }\n  }\n\n  ngOnDestroy() {\n    // Limpiar todas las suscripciones al destruir el servicio\n    this.unsubscribeFunctions.forEach(unsubscribe => unsubscribe());\n    this.subscriptions.forEach(subject => subject.complete());\n    this.unsubscribeFunctions.clear();\n    this.subscriptions.clear();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseGroup.html":{"url":"interfaces/FirebaseGroup.html","title":"interface - FirebaseGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-group.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FirebaseGroup {\n  name: string;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FirebaseMediaService.html":{"url":"injectables/FirebaseMediaService.html","title":"injectable - FirebaseMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FirebaseMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/firebase-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(firebaseConfig: any, auth: IAuthentication)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        firebaseConfig\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storage\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/core/services/impl/firebase-media.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from \"@angular/core\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { \n  getStorage, \n  ref, \n  uploadBytes,\n  getDownloadURL,\n  StorageReference \n} from \"firebase/storage\";\nimport { from, map, Observable, switchMap } from \"rxjs\";\nimport { AUTH_TOKEN, FIREBASE_CONFIG_TOKEN } from \"../../repositories/repository.tokens\";\nimport { initializeApp } from \"firebase/app\";\nimport { IAuthentication } from \"../interfaces/authentication.interface\";\n@Injectable({\n  providedIn: 'root'\n})\nexport class FirebaseMediaService extends BaseMediaService {\n  private storage;\n  constructor(\n    @Inject(FIREBASE_CONFIG_TOKEN) protected firebaseConfig: any,\n    @Inject(AUTH_TOKEN) private auth: IAuthentication\n  ) {\n    super();\n    const app = initializeApp(firebaseConfig);\n    this.storage = getStorage(app);\n  }\n  public upload(blob: Blob): Observable {\n    return from(this.auth.getCurrentUser()).pipe(\n      switchMap(user => {\n        if (!user) throw new Error('Usuario no autenticado');\n        \n        const fileName = `${Date.now()}_${Math.random().toString(36).substring(2)}`;\n        const storageRef: StorageReference = ref(this.storage, `uploads/${fileName}`);\n        const metadata = {\n          contentType: blob.type,\n          customMetadata: {\n            'uploaded-by': user.id || 'anonymous'\n          }\n        };\n        return from(uploadBytes(storageRef, blob, metadata)).pipe(\n          switchMap(snapshot => getDownloadURL(snapshot.ref)),\n          map(url => [url])\n        );\n      })\n    );\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebasePerson.html":{"url":"interfaces/FirebasePerson.html","title":"interface - FirebasePerson","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebasePerson\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-person.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupId:     DocumentReference\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebasePerson {\n  name: string;\n  surname: string;\n  age?: number;\n  gender: string;\n  user: string;\n  groupId?: DocumentReference;\n  picture?: string;\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebasePlaylist.html":{"url":"interfaces/FirebasePlaylist.html","title":"interface - FirebasePlaylist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebasePlaylist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-playlist.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            song_IDS\n                                        \n                                \n                                \n                                        \n                                            users_IDS\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_IDS:     DocumentReference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users_IDS:     DocumentReference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebasePlaylist {\n    name: string;\n    author: string;\n    duration: string;\n    image?: string;\n    song_IDS: DocumentReference[];\n    users_IDS: DocumentReference[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseSong.html":{"url":"interfaces/FirebaseSong.html","title":"interface - FirebaseSong","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseSong\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-song.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            artists_IDS\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playlistId_IDS\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists_IDS:     DocumentReference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlistId_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlistId_IDS:     DocumentReference[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     DocumentReference[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DocumentReference } from \"firebase/firestore\";\n\nexport interface FirebaseSong {\n    name: string;\n    album?: string;\n    duration: string;\n    image?: string;\n    artists_IDS?: DocumentReference[];\n    playlistId_IDS?: DocumentReference[];\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FirebaseUser.html":{"url":"interfaces/FirebaseUser.html","title":"interface - FirebaseUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FirebaseUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/firebase/firebase-user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            emailVerified\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            following\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            playlists_ids\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            uid\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emailVerified\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emailVerified:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlists_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlists_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FirebaseUser {\n    id: string;\n    uid: string;\n    email: string;\n    name: string;\n    surname: string;\n    displayName?: string;\n    image?: string;\n    followers: string[];\n    following: string[];\n    playlists_ids: string[];\n    emailVerified: boolean;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FollowArtistButtonComponent.html":{"url":"components/FollowArtistButtonComponent.html","title":"component - FollowArtistButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FollowArtistButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/follow-artist-button/follow-artist-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-follow-artist-button\n            \n\n\n\n            \n                styleUrls\n                ./follow-artist-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./follow-artist-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                isFollowing\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfFollowing\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                showToast\n                            \n                            \n                                    Async\n                                toggleFollow\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                artistId\n                            \n                            \n                                artistName\n                            \n                            \n                                size\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(socialService: SocialService, toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialService\n                                                  \n                                                        \n                                                                        SocialService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        artistId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        artistName\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"small\" | \"default\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkIfFollowing\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfFollowing()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:71\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleFollow\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleFollow()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:44\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFollowing\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/follow-artist-button/follow-artist-button.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { SocialService } from '../../../core/services/impl/social.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-follow-artist-button',\n    templateUrl: './follow-artist-button.component.html',\n    styleUrls: ['./follow-artist-button.component.scss']\n})\nexport class FollowArtistButtonComponent implements OnInit, OnDestroy {\n    @Input() artistId!: string;\n    @Input() artistName?: string;\n    @Input() size: 'small' | 'default' = 'default';\n    \n    isFollowing = false;\n    loading = false;\n    private destroy$ = new Subject();\n\n    constructor(\n        private socialService: SocialService,\n        private toastController: ToastController\n    ) {}\n\n    ngOnInit() {\n        this.checkIfFollowing();\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private checkIfFollowing() {\n        this.socialService.isArtistFollowed(this.artistId)\n        .pipe(takeUntil(this.destroy$))\n        .subscribe(isFollowing => {\n            this.isFollowing = isFollowing;\n        });\n    }\n\n    async toggleFollow() {\n        if (this.loading) return;\n        \n        this.loading = true;\n        \n        try {\n        if (this.isFollowing) {\n            const success = await this.socialService.unfollowArtist(this.artistId).toPromise();\n            if (success) {\n            this.isFollowing = false;\n            await this.showToast(`Dejaste de seguir a ${this.artistName || 'este artista'}`);\n            }\n        } else {\n            const success = await this.socialService.followArtist(this.artistId).toPromise();\n            if (success) {\n            this.isFollowing = true;\n            await this.showToast(`Ahora sigues a ${this.artistName || 'este artista'}`);\n            }\n        }\n        } catch (error) {\n        console.error('Error toggling follow:', error);\n        await this.showToast('Error al actualizar seguimiento');\n        } finally {\n        this.loading = false;\n        }\n    }\n\n    private async showToast(message: string) {\n        const toast = await this.toastController.create({\n        message,\n        duration: 2000,\n        position: 'bottom'\n        });\n        await toast.present();\n    }\n}\n    \n\n    \n        \n\n    \n    \n    \n    \n    {{ isFollowing ? 'Siguiendo' : 'Seguir' }}\n    \n    \n    \n\n    \n\n    \n                \n                    ./follow-artist-button.component.scss\n                \n                /* src/app/shared/components/follow-artist-button/follow-artist-button.component.scss */\n.follow-button {\n    --padding-start: 12px;\n    --padding-end: 12px;\n    transition: all 0.3s ease;\n\n    &:hover {\n        transform: translateY(-1px);\n        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n    }\n\n    ion-icon {\n        margin-right: 8px;\n    }\n\n    ion-spinner {\n        margin-left: 8px;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ isFollowing ? \\'Siguiendo\\' : \\'Seguir\\' }}            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'FollowArtistButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Formats.html":{"url":"interfaces/Formats.html","title":"interface - Formats","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Formats\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            large\n                                        \n                                \n                                \n                                        \n                                            medium\n                                        \n                                \n                                \n                                        \n                                            small\n                                        \n                                \n                                \n                                        \n                                            thumbnail\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        large\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        large:         Large\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Large\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medium\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        medium:         Medium\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Medium\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        small\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        small:         Small\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Small\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        thumbnail\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        thumbnail:         Thumbnail\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thumbnail\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Group.html":{"url":"interfaces/Group.html","title":"interface - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/group.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Group extends Model{\n    name:string,\n    picture?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageModule.html":{"url":"modules/HomePageModule.html","title":"module - HomePageModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_HomePageModule_declarations\n\n\n\n\nHomePage\n\nHomePage\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            HomePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            HomePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { HomePage } from './home.page';\nimport { HomePageRoutingModule } from './home-routing.module';\nimport { provideHttpClient } from '@angular/common/http';\nimport { SharedModule } from 'src/app/shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    HomePageRoutingModule,\n    SharedModule,\n    TranslateModule.forChild(),\n  ],\n  declarations: [\n    HomePage,\n  ],\n  providers: [\n    provideHttpClient()\n  ]\n})\nexport class HomePageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HomePageRoutingModule.html":{"url":"modules/HomePageRoutingModule.html","title":"module - HomePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    HomePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/home/home-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomePage } from './home.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IArtistsRepository.html":{"url":"interfaces/IArtistsRepository.html","title":"interface - IArtistsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IArtistsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/artists-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addSongToArtist\n                                    \n                                \n                                \n                                    \n                                        getArtistSongs\n                                    \n                                \n                                \n                                    \n                                        getByIds\n                                    \n                                \n                                \n                                    \n                                        getByName\n                                    \n                                \n                                \n                                    \n                                        getTopArtists\n                                    \n                                \n                                \n                                    \n                                        removeSongFromArtist\n                                    \n                                \n                                \n                                    \n                                        searchByName\n                                    \n                                \n                                \n                                    \n                                        updateListeners\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSongToArtist\n                        \n                    \n                \n            \n            \n                \naddSongToArtist(artistId: string, songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getArtistSongs\n                        \n                    \n                \n            \n            \n                \ngetArtistSongs(artistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByIds\n                        \n                    \n                \n            \n            \n                \ngetByIds(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByName\n                        \n                    \n                \n            \n            \n                \ngetByName(name: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTopArtists\n                        \n                    \n                \n            \n            \n                \ngetTopArtists(limit: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSongFromArtist\n                        \n                    \n                \n            \n            \n                \nremoveSongFromArtist(artistId: string, songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchByName\n                        \n                    \n                \n            \n            \n                \nsearchByName(searchTerm: string, limit?: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                searchTerm\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateListeners\n                        \n                    \n                \n            \n            \n                \nupdateListeners(artistId: string, listeners: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/artists-repository.interface.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                artistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                listeners\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Artist } from \"../../models/artist.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface IArtistsRepository extends IBaseRepository {\n    // Obtiene todos los artistas que coinciden con el nombre proporcionado\n    getByName(name: string): Observable;\n\n    // Obtiene artistas por una lista de IDs\n    getByIds(ids: string[]): Observable;\n\n    // Obtiene los artistas más populares basado en el número de oyentes\n    getTopArtists(limit: number): Observable;\n\n    // Busca artistas por nombre usando un término de búsqueda\n    searchByName(searchTerm: string, limit?: number): Observable;\n\n    // Obtiene las canciones asociadas a un artista\n    getArtistSongs(artistId: string): Observable;\n\n    // Añade una canción a un artista\n    addSongToArtist(artistId: string, songId: string): Observable;\n\n    // Elimina una canción de un artista\n    removeSongFromArtist(artistId: string, songId: string): Observable;\n\n    // Actualiza el número de oyentes de un artista\n    updateListeners(artistId: string, listeners: number): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IArtistsService.html":{"url":"interfaces/IArtistsService.html","title":"interface - IArtistsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IArtistsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/artists-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getByIds\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByIds\n                        \n                    \n                \n            \n            \n                \ngetByIds(ids: string[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/artists-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ids\n                                            \n                                                        string[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Artist } from '../../models/artist.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface IArtistsService extends IBaseService {\n    getByIds(ids: string[]): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthMapping.html":{"url":"interfaces/IAuthMapping.html","title":"interface - IAuthMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/auth-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signInPayload\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                                \n                                    \n                                        signUpPayload\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/auth-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { Person } from \"../../models/person.model\";\nimport { User } from \"../../models/user.model\";\n\nexport interface IAuthMapping{\n    signInPayload(payload:SignInPayload):any;\n    signUpPayload(payload:SignUpPayload):any;\n    signIn(response:any):User;\n    signUp(response:any):User;\n    me(response:any):User;\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IAuthentication.html":{"url":"interfaces/IAuthentication.html","title":"interface - IAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/authentication.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getCurrentUser\n                                    \n                                \n                                \n                                    \n                                        me\n                                    \n                                \n                                \n                                    \n                                        signIn\n                                    \n                                \n                                \n                                    \n                                        signOut\n                                    \n                                \n                                \n                                    \n                                        signUp\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \ngetCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:4\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(registerPayload: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                registerPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\n\nexport interface IAuthentication{\n    signIn(authPayload:any):Observable;\n    signUp(registerPayload:any):Observable;\n    signOut():Observable;\n    me():Observable;\n    getCurrentUser():Promise;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseMapping.html":{"url":"interfaces/IBaseMapping.html","title":"interface - IBaseMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAdded\n                                    \n                                \n                                \n                                    \n                                        getDeleted\n                                    \n                                \n                                \n                                    \n                                        getOne\n                                    \n                                \n                                \n                                    \n                                        getPaginated\n                                    \n                                \n                                \n                                    \n                                        getUpdated\n                                    \n                                \n                                \n                                    \n                                        setAdd\n                                    \n                                \n                                \n                                    \n                                        setUpdate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     T\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-mapping.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\n\nexport interface IBaseMapping {\n  getPaginated(page:number, pageSize: number, pages:number, data:any):Paginated;\n  getOne(data:any):T;\n  getAdded(data:any):T;\n  getUpdated(data:any):T;\n  getDeleted(data:any):T;\n  setAdd(data:T):any;\n  setUpdate(data:any):any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseRepository.html":{"url":"interfaces/IBaseRepository.html","title":"interface - IBaseRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:18\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:16\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:19\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { Playlist } from '../../models/playlist.model';\n\nexport interface SearchOperators {\n  $eq?: string;\n  $in?: string[];\n}\n\nexport interface SearchParams {\n  [key: string]: SearchOperators | string;\n}\n\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseRepository-1.html":{"url":"interfaces/IBaseRepository-1.html","title":"interface - IBaseRepository-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:25\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:27\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:26\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { Playlist } from '../../models/playlist.model';\n\nexport interface SearchOperators {\n  $eq?: string;\n  $in?: string[];\n}\n\nexport interface SearchParams {\n  [key: string]: SearchOperators | string;\n}\n\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IBaseService.html":{"url":"interfaces/IBaseService.html","title":"interface - IBaseService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IBaseService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/base-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        delete\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getAll\n                                    \n                                \n                                \n                                    \n                                        getById\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page?: number, pageSize?: number, filters?: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    Yes\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/base-service.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SearchParams } from '../../repositories/intefaces/base-repository.interface';\n\nexport interface IBaseService {\n  getAll(): Observable;\n  getAll(page: number, pageSize: number): Observable>;\n  getAll(page?: number, pageSize?: number, filters?: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ICollectionSubscription.html":{"url":"interfaces/ICollectionSubscription.html","title":"interface - ICollectionSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ICollectionSubscription\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/collection-subscription.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        subscribe\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        subscribe\n                        \n                    \n                \n            \n            \n                \nsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable>\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe(collectionName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/collection-subscription.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                collectionName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Model } from \"../../models/base.model\";\nexport interface CollectionChange {\n    type: 'added' | 'modified' | 'removed';\n    data?: T;\n    id: string;\n}\nexport interface ICollectionSubscription {\n    subscribe(collectionName: string): Observable>;\n    unsubscribe(collectionName: string): void;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlaylistsRepository.html":{"url":"interfaces/IPlaylistsRepository.html","title":"interface - IPlaylistsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPlaylistsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/playlists-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n\n\n\n    \n\n\n    \n        import { Playlist } from \"../../models/playlist.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface IPlaylistsRepository extends IBaseRepository {\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IPlaylistsService.html":{"url":"interfaces/IPlaylistsService.html","title":"interface - IPlaylistsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IPlaylistsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/playlists-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addSong\n                                    \n                                \n                                \n                                    \n                                        getAllByUser\n                                    \n                                \n                                \n                                    \n                                        getByUserId\n                                    \n                                \n                                \n                                    \n                                        removeSong\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addSong\n                        \n                    \n                \n            \n            \n                \naddSong(playlistId: string, songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/playlists-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllByUser\n                        \n                    \n                \n            \n            \n                \ngetAllByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/playlists-service.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/playlists-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSong\n                        \n                    \n                \n            \n            \n                \nremoveSong(playlistId: string, songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/playlists-service.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Playlist } from '../../models/playlist.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface IPlaylistsService extends IBaseService {\n  getByUserId(userId: string): Observable;\n  addSong(playlistId: string, songId: string): Observable;\n  removeSong(playlistId: string, songId: string): Observable;\n  getAllByUser(userId: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISongsRepository.html":{"url":"interfaces/ISongsRepository.html","title":"interface - ISongsRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISongsRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/songs-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        getByPlaylistId\n                                    \n                                \n                                \n                                    \n                                        update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        getByPlaylistId\n                        \n                    \n                \n            \n            \n                \ngetByPlaylistId(playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/songs-repository.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/songs-repository.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { Song } from \"../../models/song.model\";\nimport { IBaseRepository } from \"./base-repository.interface\";\n\nexport interface ISongsRepository extends IBaseRepository {\n  // ✅ SOBRESCRIBIR el método update para aceptar Partial\n  update(id: string, entity: Partial): Observable;\n  \n  // Métodos específicos opcionales\n  getByPlaylistId?(playlistId: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ISongsService.html":{"url":"interfaces/ISongsService.html","title":"interface - ISongsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ISongsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/songs-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getByPlaylistId\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getByPlaylistId\n                        \n                    \n                \n            \n            \n                \ngetByPlaylistId(playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/songs-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Song } from '../../models/song.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ISongsService extends IBaseService {\n  getByPlaylistId(playlistId: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IStrapiAuthentication.html":{"url":"interfaces/IStrapiAuthentication.html","title":"interface - IStrapiAuthentication","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IStrapiAuthentication\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/strapi-authentication.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IAuthentication\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getToken\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/strapi-authentication.interface.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from \"rxjs\";\nimport { IAuthentication } from \"./authentication.interface\";\n\nexport interface IStrapiAuthentication extends IAuthentication{\n    getToken():string | null;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ITasksService.html":{"url":"interfaces/ITasksService.html","title":"interface - ITasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ITasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/tasks-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n\n\n\n    \n\n\n    \n        import { Task } from '../../models/task.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface ITasksService extends IBaseService {\n  // Métodos específicos si los hay\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserMapping.html":{"url":"interfaces/IUserMapping.html","title":"interface - IUserMapping","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserMapping\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/user-mapping.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getAdded\n                                    \n                                \n                                \n                                    \n                                        getDeleted\n                                    \n                                \n                                \n                                    \n                                        getOne\n                                    \n                                \n                                \n                                    \n                                        getPaginated\n                                    \n                                \n                                \n                                    \n                                        getUpdated\n                                    \n                                \n                                \n                                    \n                                        setAdd\n                                    \n                                \n                                \n                                    \n                                        setUpdate\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-mapping.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-mapping.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-mapping.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-mapping.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-mapping.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(user: User)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-mapping.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(user: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-mapping.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { User } from '../../models/user.model';\nimport { Paginated } from '../../models/paginated.model';\n\nexport interface IUserMapping {\n  getOne(data: any): User;\n  getPaginated(page: number, pageSize: number, pages: number, data: any[]): Paginated;\n  setAdd(user: User): any;\n  setUpdate(user: Partial): any;\n  getAdded(data: any): User;\n  getUpdated(data: any): User;\n  getDeleted(data: any): User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserRepository.html":{"url":"interfaces/IUserRepository.html","title":"interface - IUserRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/user-repository.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseRepository\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addPlaylist\n                                    \n                                \n                                \n                                    \n                                        follow\n                                    \n                                \n                                \n                                    \n                                        getByEmail\n                                    \n                                \n                                \n                                    \n                                        getFollowers\n                                    \n                                \n                                \n                                    \n                                        getFollowing\n                                    \n                                \n                                \n                                    \n                                        removePlaylist\n                                    \n                                \n                                \n                                    \n                                        unfollow\n                                    \n                                \n                                \n                                    \n                                        updateProfile\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlaylist\n                        \n                    \n                \n            \n            \n                \naddPlaylist(userId: string, playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        follow\n                        \n                    \n                \n            \n            \n                \nfollow(userId: string, followId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                followId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByEmail\n                        \n                    \n                \n            \n            \n                \ngetByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:6\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowers\n                        \n                    \n                \n            \n            \n                \ngetFollowers(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowing\n                        \n                    \n                \n            \n            \n                \ngetFollowing(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePlaylist\n                        \n                    \n                \n            \n            \n                \nremovePlaylist(userId: string, playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollow\n                        \n                    \n                \n            \n            \n                \nunfollow(userId: string, followId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                followId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(id: string, changes: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/intefaces/user-repository.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changes\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { User } from '../../models/user.model';\nimport { IBaseRepository } from './base-repository.interface';\n\nexport interface IUserRepository extends IBaseRepository {\n    getByEmail(email: string): Observable;\n    updateProfile(id: string, changes: Partial): Observable;\n    follow(userId: string, followId: string): Observable;\n    unfollow(userId: string, followId: string): Observable;\n    getFollowers(userId: string): Observable;\n    getFollowing(userId: string): Observable;\n    addPlaylist(userId: string, playlistId: string): Observable;\n    removePlaylist(userId: string, playlistId: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IUserService.html":{"url":"interfaces/IUserService.html","title":"interface - IUserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IUserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/interfaces/user-service.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            IBaseService\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        addPlaylist\n                                    \n                                \n                                \n                                    \n                                        follow\n                                    \n                                \n                                \n                                    \n                                        getByEmail\n                                    \n                                \n                                \n                                    \n                                        getFollowers\n                                    \n                                \n                                \n                                    \n                                        getFollowing\n                                    \n                                \n                                \n                                    \n                                        removePlaylist\n                                    \n                                \n                                \n                                    \n                                        unfollow\n                                    \n                                \n                                \n                                    \n                                        updateProfile\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlaylist\n                        \n                    \n                \n            \n            \n                \naddPlaylist(userId: string, playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        follow\n                        \n                    \n                \n            \n            \n                \nfollow(userId: string, followId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:9\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                followId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByEmail\n                        \n                    \n                \n            \n            \n                \ngetByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowers\n                        \n                    \n                \n            \n            \n                \ngetFollowers(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:11\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowing\n                        \n                    \n                \n            \n            \n                \ngetFollowing(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePlaylist\n                        \n                    \n                \n            \n            \n                \nremovePlaylist(userId: string, playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:14\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollow\n                        \n                    \n                \n            \n            \n                \nunfollow(userId: string, followId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                followId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(id: string, changes: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/interfaces/user-service.interface.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changes\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { User } from '../../models/user.model';\nimport { IBaseService } from './base-service.interface';\n\nexport interface IUserService extends IBaseService {\n    getByEmail(email: string): Observable;\n    updateProfile(id: string, changes: Partial): Observable\n    follow(userId: string, followId: string): Observable;\n    unfollow(userId: string, followId: string): Observable;\n    getFollowers(userId: string): Observable;\n    getFollowing(userId: string): Observable;\n    addPlaylist(userId: string, playlistId: string): Observable;\n    removePlaylist(userId: string, playlistId: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JsonServerRepositoryService.html":{"url":"injectables/JsonServerRepositoryService.html","title":"injectable - JsonServerRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JsonServerRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de repositorio específico para JSON Server\nExtiende BaseRepositoryHttpService para personalizar comportamientos específicos de JSON Server\n\n            \n\n            \n                Extends\n            \n            \n                            BaseRepositoryHttpService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                    \n                                getAll\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                delete\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/json-server-repository.service.ts:33\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:83\n\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo elemento usando el endpoint POST de JSON Server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Entidad a crear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad creada y mapeada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:52\n\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los elementos con paginación y filtros específicos de JSON Server\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Número de página (empezando en 1)\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    Filtros de búsqueda usando sintaxis JSON Server (_like)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con array de elementos o elementos paginados\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:98\n\n                        \n                    \n\n\n            \n                \n                        Actualiza un elemento existente usando PATCH (actualización parcial)\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a actualizar\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos parciales a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad actualizada y mapeada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:80\n\n                        \n                    \n\n\n            \n                \n                        Elimina un elemento del recurso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad eliminada y mapeada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseRepositoryHttpService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseRepositoryHttpService:49\n\n                        \n                    \n\n\n            \n                \n                        Obtiene un elemento específico por su ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a obtener\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con el elemento encontrado o null si no existe\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\n/**\n * Interfaz para respuestas paginadas de JSON Server\n */\nexport interface PaginatedRaw {\n  first: number;\n  prev: number | null;\n  next: number | null;\n  last: number;\n  pages: number;\n  items: number;\n  data: T[];\n}\n\n/**\n * Servicio de repositorio específico para JSON Server\n * Extiende BaseRepositoryHttpService para personalizar comportamientos específicos de JSON Server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API JSON Server\n    @Inject(RESOURCE_NAME_TOKEN) resource: string, // nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping: IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  /**\n   * Obtiene todos los elementos con paginación y filtros específicos de JSON Server\n   * @param page Número de página (empezando en 1)\n   * @param pageSize Tamaño de página\n   * @param filters Filtros de búsqueda usando sintaxis JSON Server (_like)\n   * @returns Observable con array de elementos o elementos paginados\n   */\n  override getAll(page: number, pageSize: number, filters: SearchParams = {}): Observable> {\n    // Construir cadena de filtros usando sintaxis _like de JSON Server\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n\n    // Si page = -1, obtener todos los elementos sin paginación\n    if (page !== -1) {\n      // Solicitud paginada usando parámetros _page y _per_page de JSON Server\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res => {\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    } else {\n      // Solicitud sin paginación - obtener todos los elementos\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res => {\n          return res.map((elem: any) => {\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  /**\n   * Crea un nuevo elemento usando el endpoint POST de JSON Server\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada y mapeada\n   */\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, \n      this.mapping.setAdd(entity)\n    ).pipe(map(res => {\n      return this.mapping.getAdded(res);\n    }));\n  }\n\n  /**\n   * Actualiza un elemento existente usando PATCH (actualización parcial)\n   * @param id ID del elemento a actualizar\n   * @param entity Datos parciales a actualizar\n   * @returns Observable con la entidad actualizada y mapeada\n   */\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, \n      this.mapping.setUpdate(entity)\n    ).pipe(map(res => {\n      return this.mapping.getUpdated(res);\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LanguageService.html":{"url":"injectables/LanguageService.html","title":"injectable - LanguageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LanguageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/language.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                defaultLang\n                            \n                            \n                                    Private\n                                    Readonly\n                                LANG_KEY\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getCurrentLang\n                            \n                            \n                                getStoredLanguage\n                            \n                            \n                                storeLanguage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/language.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:22\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentLang\n                        \n                    \n                \n            \n            \n                \ngetCurrentLang()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:26\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getStoredLanguage\n                        \n                    \n                \n            \n            \n                \ngetStoredLanguage()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        storeLanguage\n                        \n                    \n                \n            \n            \n                \nstoreLanguage(lang: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/language.service.ts:34\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                lang\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        defaultLang\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'es'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        LANG_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'selectedLanguage'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/language.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LanguageService {\n  private readonly LANG_KEY = 'selectedLanguage';\n  private defaultLang = 'es';\n\n  constructor(private translate: TranslateService) {\n    translate.addLangs(['es', 'en']);\n    translate.setDefaultLang('es');\n    \n    const browserLang = translate.getBrowserLang();\n    translate.use(browserLang?.match(/es|en/) ? browserLang : 'es');\n\n    const storedLang = this.getStoredLanguage();\n    this.changeLanguage(storedLang);\n  }\n\n  changeLanguage(lang: string) {\n    this.translate.use(lang);\n  }\n\n  getCurrentLang(): string {\n    return this.translate.currentLang;\n  }\n\n  getStoredLanguage(): string {\n    return localStorage.getItem(this.LANG_KEY) || this.defaultLang;\n  }\n\n  storeLanguage(lang: string): void {\n    localStorage.setItem(this.LANG_KEY, lang);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Large.html":{"url":"interfaces/Large.html","title":"interface - Large","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Large\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LikeButtonComponent.html":{"url":"components/LikeButtonComponent.html","title":"component - LikeButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LikeButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/like-button/like-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-like-button\n            \n\n\n\n            \n                styleUrls\n                ./like-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./like-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                componentId\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                isLiked\n                            \n                            \n                                loading\n                            \n                            \n                                    Private\n                                operationInProgress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                showToast\n                            \n                            \n                                    Private\n                                subscribeToLikeStatus\n                            \n                            \n                                    Async\n                                toggleLike\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                showCount\n                            \n                            \n                                size\n                            \n                            \n                                songId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(socialService: SocialService, toastController: ToastController, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/like-button/like-button.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        socialService\n                                                  \n                                                        \n                                                                        SocialService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        showCount\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/like-button/like-button.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :     \"small\" | \"default\" | \"large\"\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/like-button/like-button.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        songId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/like-button/like-button.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/like-button/like-button.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/like-button/like-button.component.ts:35\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/like-button/like-button.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Mostrar toast\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribeToLikeStatus\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribeToLikeStatus()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/like-button/like-button.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Suscribirse a cambios de estado de like\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleLike\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleLike()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/like-button/like-button.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Toggle like/unlike\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        componentId\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Math.random().toString(36).substr(2, 9)\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/like-button/like-button.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/like-button/like-button.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLiked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/like-button/like-button.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/like-button/like-button.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        operationInProgress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/like-button/like-button.component.ts:22\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\nimport { lastValueFrom, Subject } from 'rxjs';\nimport { takeUntil, finalize, distinctUntilChanged, debounceTime } from 'rxjs/operators';\nimport { SocialService } from '../../../core/services/impl/social.service';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-like-button',\n    templateUrl: './like-button.component.html',\n    styleUrls: ['./like-button.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LikeButtonComponent implements OnInit, OnDestroy {\n    @Input() songId!: string;\n    @Input() showCount: boolean = false;\n    @Input() size: 'small' | 'default' | 'large' = 'default';\n    \n    isLiked = false;\n    loading = false;\n    private destroy$ = new Subject();\n    private operationInProgress = false;\n    \n    // ID único para debugging\n    private componentId = Math.random().toString(36).substr(2, 9);\n\n    constructor(\n        private socialService: SocialService,\n        private toastController: ToastController,\n        private cdr: ChangeDetectorRef\n    ) {\n        console.log(`LikeButton[${this.componentId}]: Constructor`);\n    }\n\n    ngOnInit() {\n        console.log(`LikeButton[${this.componentId}]: ngOnInit for songId:`, this.songId);\n        \n        if (this.songId) {\n            this.subscribeToLikeStatus();\n        } else {\n            console.warn(`LikeButton[${this.componentId}]: No songId provided`);\n        }\n    }\n\n    ngOnDestroy() {\n        console.log(`LikeButton[${this.componentId}]: ngOnDestroy`);\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    /**\n     * Suscribirse a cambios de estado de like\n     */\n    private subscribeToLikeStatus() {\n        console.log(`LikeButton[${this.componentId}]: Subscribing to like status for:`, this.songId);\n        \n        this.socialService.isSongLiked(this.songId)\n            .pipe(\n                takeUntil(this.destroy$),\n                distinctUntilChanged(), // Solo si el valor cambió\n                debounceTime(10) // Pequeño delay para evitar múltiples actualizaciones\n            )\n            .subscribe({\n                next: (isLiked: boolean) => {\n                    console.log(`LikeButton[${this.componentId}]: Like status updated:`, {\n                        songId: this.songId,\n                        isLiked,\n                        previousState: this.isLiked\n                    });\n                    \n                    // Solo actualizar si realmente cambió\n                    if (this.isLiked !== isLiked) {\n                        this.isLiked = isLiked;\n                        this.cdr.markForCheck();\n                    }\n                },\n                error: (error: any) => {\n                    console.error(`LikeButton[${this.componentId}]: Error in like status subscription:`, error);\n                }\n            });\n    }\n\n    /**\n     * Toggle like/unlike\n     */\n    async toggleLike() {\n        if (this.operationInProgress || this.loading || !this.songId) return;\n\n        this.operationInProgress = true;\n        this.loading = true;\n        this.cdr.markForCheck();\n        \n        const wasLiked = this.isLiked;\n        \n        try {\n            // Cambiar el estado inmediatamente para feedback visual\n            this.isLiked = !wasLiked;\n            this.cdr.markForCheck();\n            \n            const serviceCall = wasLiked \n                ? this.socialService.unlikeSong(this.songId)\n                : this.socialService.likeSong(this.songId);\n            \n            const success = await lastValueFrom(serviceCall);\n            \n            if (!success) {\n                // Revertir si falla\n                this.isLiked = wasLiked;\n                await this.showToast('Error al actualizar favoritos');\n            }\n        } catch (error) {\n            this.isLiked = wasLiked;\n            await this.showToast('Error de conexión');\n            console.error('Error in toggleLike:', error);\n        } finally {\n            this.loading = false;\n            this.operationInProgress = false;\n            this.cdr.markForCheck();\n        }\n    }\n\n    /**\n     * Mostrar toast\n     */\n    private async showToast(message: string) {\n        try {\n            const toast = await this.toastController.create({\n                message,\n                duration: 2000,\n                position: 'bottom'\n            });\n            await toast.present();\n        } catch (error) {\n            console.error(`LikeButton[${this.componentId}]: Error showing toast:`, error);\n        }\n    }\n}\n    \n\n    \n        \n\n    \n    \n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./like-button.component.scss\n                \n                /* src/app/shared/components/like-button/like-button.component.scss */\n.like-button {\n    --padding-start: 8px;\n    --padding-end: 8px;\n    margin: 0;\n    transition: transform 0.2s ease;\n\n    &:hover {\n        transform: scale(1.1);\n    }\n\n    &.liked {\n        ion-icon {\n        animation: heartBeat 0.6s ease;\n        }\n    }\n\n    ion-icon {\n        font-size: 20px;\n        transition: color 0.3s ease;\n    }\n\n    ion-spinner {\n        --color: var(--ion-color-medium);\n    }\n}\n\n@keyframes heartBeat {\n    0% {\n        transform: scale(1);\n    }\n    30% {\n        transform: scale(1.3);\n    }\n    50% {\n        transform: scale(1.1);\n    }\n    100% {\n        transform: scale(1);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'LikeButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginPage.html":{"url":"components/LoginPage.html","title":"component - LoginPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/login/login.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ./login.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loginForm\n                            \n                            \n                                showPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onRegister\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                presentErrorToast\n                            \n                            \n                                togglePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, loadingCtrl: LoadingController, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/login/login.page.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onRegister\n                        \n                    \n                \n            \n            \n                \nonRegister()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:85\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:30\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentErrorToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentErrorToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:69\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/login/login.page.ts:94\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        loginForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/login/login.page.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:98\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/login/login.page.ts:102\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage {\n  loginForm: FormGroup;\n  showPassword: boolean = false; \n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authSvc: BaseAuthenticationService,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  async onSubmit() {\n    if (this.loginForm.valid) {\n      const loading = await this.loadingCtrl.create({\n        message: 'Iniciando sesión...',\n        cssClass: 'custom-loading'\n      });\n      await loading.present();\n\n      try {\n        await this.authSvc.signIn(this.loginForm.value).subscribe({\n          next: async (resp) => {\n            await loading.dismiss();\n            const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n            this.router.navigateByUrl(returnUrl);\n          },\n          error: async (err) => {\n            await loading.dismiss();\n            let errorMessage = 'Error al iniciar sesión';\n\n            if (err.status === 401) {\n              errorMessage = 'Email o contraseña incorrectos';\n            } else if (err.status === 404) {\n              errorMessage = 'Usuario no encontrado';\n            } else if (err.status === 0) {\n              errorMessage = 'Error de conexión. Comprueba tu internet';\n            } else if (err.error?.message) {\n              errorMessage = err.error.message;\n            }\n\n            await this.presentErrorToast(errorMessage);\n          }\n        });\n      } catch (error) {\n        await loading.dismiss();\n        await this.presentErrorToast('Error inesperado. Inténtalo de nuevo');\n      }\n    }\n  }\n\n  async presentErrorToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000,\n      position: 'top',\n      cssClass: 'error-toast',\n      buttons: [\n        {\n          icon: 'close-outline',\n          role: 'cancel'\n        }\n      ]\n    });\n    await toast.present();\n  }\n\n  onRegister() {\n    this.loginForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/register'], {\n      queryParams: { returnUrl: returnUrl },\n      replaceUrl: true\n    });\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  get email() {\n    return this.loginForm.controls['email'];\n  }\n\n  get password() {\n    return this.loginForm.controls['password'];\n  }\n}\n    \n\n    \n        \n  \n    \n      \n      \n        \n      \n\n      ¡Bienvenido!\n      Inicia sesión para continuar\n\n      \n        \n          \n            \n            \n            \n          \n          \n            *Debe introducir un email\n            *Debe introducir un email correcto\n          \n        \n\n        \n          \n            \n            \n            \n            \n              \n              \n            \n          \n          \n            *Debe introducir una contraseña\n          \n        \n\n        \n          INICIAR SESIÓN\n        \n\n        \n          o\n        \n\n        \n          ¿No tienes cuenta?\n          \n            REGÍSTRATE\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./login.page.scss\n                \n                :host {\n  --background-color: #121212;\n  --card-background: #181818;\n  --primary-color: #1DB954;\n  --text-primary: #FFFFFF;\n  --text-secondary: #B3B3B3;\n  --error-color: #F15E6C;\n}\n\nion-content {\n  --background: var(--background-color);\n}\n\n.login-wrapper {\n  min-height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}\n\n.login-container {\n  width: 100%;\n  max-width: 450px;\n  padding: 2rem;\n  background: var(--card-background);\n  border-radius: 8px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n  animation: fadeIn 0.5s ease-out;\n}\n\n.logo-section {\n  text-align: center;\n  margin-bottom: 2rem;\n\n  .app-logo {\n    font-size: 4rem;\n    color: var(--primary-color);\n  }\n}\n\n.title {\n  color: var(--text-primary);\n  font-size: 2rem;\n  font-weight: 700;\n  text-align: center;\n  margin-bottom: 0.5rem;\n}\n\n.subtitle {\n  color: var(--text-secondary);\n  text-align: center;\n  margin-bottom: 2rem;\n  font-size: 0.9rem;\n}\n\n.form-field {\n  margin-bottom: 1rem;\n}\n\n.input-item {\n  --background: rgba(255, 255, 255, 0.1);\n  --border-radius: 4px;\n  --padding-start: 1rem;\n  --padding-end: 1rem;\n  --highlight-height: 0;\n  margin-bottom: 0.5rem;\n\n  &.item-has-focus {\n    --background: rgba(255, 255, 255, 0.15);\n  }\n\n  ion-icon {\n    color: var(--text-secondary);\n    margin-right: 0.75rem;\n  }\n}\n\n.custom-input {\n  --color: var(--text-primary);\n  --placeholder-color: var(--text-secondary);\n  --placeholder-opacity: 0.8;\n}\n\n.error-text {\n  color: var(--error-color);\n  font-size: 0.75rem;\n  margin-left: 1rem;\n  \n  p {\n    margin: 0.25rem 0;\n  }\n}\n\n.login-button {\n  --background: var(--primary-color);\n  --background-hover: #1ed760;\n  --border-radius: 500px;\n  --color: var(--text-primary);\n  margin-top: 1.5rem;\n  height: 48px;\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  \n  &:hover {\n    --background: #1ed760;\n  }\n}\n\n.divider {\n  display: flex;\n  align-items: center;\n  text-align: center;\n  margin: 1.5rem 0;\n  \n  &::before,\n  &::after {\n    content: '';\n    flex: 1;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n  }\n  \n  span {\n    color: var(--text-secondary);\n    padding: 0 1rem;\n    text-transform: uppercase;\n    font-size: 0.8rem;\n  }\n}\n\n.register-section {\n  text-align: center;\n  \n  p {\n    color: var(--text-secondary);\n    margin-bottom: 1rem;\n  }\n}\n\n.register-button {\n  --background: transparent;\n  --background-hover: rgba(255, 255, 255, 0.1);\n  --border-color: rgba(255, 255, 255, 0.3);\n  --border-radius: 500px;\n  --color: var(--text-primary);\n  height: 48px;\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  \n  &:hover {\n    --background: rgba(255, 255, 255, 0.1);\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                      ¡Bienvenido!      Inicia sesión para continuar                                                                                            *Debe introducir un email            *Debe introducir un email correcto                                                                                                                                                            *Debe introducir una contraseña                                    INICIAR SESIÓN                          o                          ¿No tienes cuenta?                      REGÍSTRATE                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageModule.html":{"url":"modules/LoginPageModule.html","title":"module - LoginPageModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\n\nLoginPage\n\nLoginPage\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoginPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginPageRoutingModule.html":{"url":"modules/LoginPageRoutingModule.html","title":"module - LoginPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/login/login-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Medium.html":{"url":"interfaces/Medium.html","title":"interface - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Medium\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Meta.html":{"url":"interfaces/Meta.html","title":"interface - Meta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Meta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            pagination\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        pagination\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pagination:         Pagination\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Pagination\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable, catchError, tap, switchMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\n/**\n * Interfaces para respuestas de Strapi v4\n */\nexport interface PaginatedRaw {\n  data: Data[];\n  meta: Meta;\n}\n\nexport interface Data {\n  id: number;\n  attributes: T;\n}\n\nexport interface Meta {\n  pagination: Pagination;\n}\n\nexport interface Pagination {\n  page: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n}\n\n/**\n * Servicio de repositorio específico para Strapi v4\n * Implementa operaciones CRUD con autenticación Bearer token y populate para relaciones\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService implements IBaseRepository {\n  \n  constructor(\n    protected http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) protected auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string,\n    @Inject(RESOURCE_NAME_TOKEN) protected resource: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {}\n\n  /**\n   * Obtiene headers de autenticación con Bearer token\n   * @returns Objeto con headers de autorización o vacío si no hay token\n   */\n  private getHeaders() {\n    const token = this.auth.getToken();\n    if (!token) {\n      return {};\n    }\n\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n  }\n\n  /**\n   * Obtiene todos los elementos con paginación y filtros específicos de Strapi\n   * @param page Número de página (empezando en 1)\n   * @param pageSize Tamaño de página\n   * @param filters Filtros de búsqueda usando sintaxis Strapi\n   * @returns Observable con elementos paginados\n   */\n  getAll(page: number, pageSize: number, filters: SearchParams = {}): Observable> {\n    let url = `${this.apiUrl}/${this.resource}?populate=*`;\n\n    // Agregar parámetros de paginación\n    url += `&pagination[page]=${page}&pagination[pageSize]=${pageSize}`;\n\n    // Procesar filtros con sintaxis específica de Strapi\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined) {\n        switch(key) {\n          case 'user':\n            url += `&filters[users_IDS][id][$eq]=${value}`;\n            break;\n          case 'sort':\n            url += `&sort[0]=${value}`;\n            break;\n          default:\n            url += `&filters[${key}][$eq]=${value}`;\n        }\n      }\n    });\n\n    const headers = this.getHeaders();\n\n    return this.http.get>(url, headers).pipe(\n      map(res => {\n        if (!res.meta?.pagination) {\n          return this.mapping.getPaginated(page, pageSize, res.data.length, res.data);\n        }\n        return this.mapping.getPaginated(\n          page,\n          pageSize,\n          res.meta.pagination.total,\n          res.data\n        );\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Obtiene un elemento específico por su ID con todas las relaciones pobladas\n   * @param id ID del elemento a obtener\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    const url = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n    \n    return this.http.get(url, this.getHeaders())\n      .pipe(\n        map(res => {\n          if (res.data) {\n            return this.mapping.getOne(res);\n          } else if (res.id) {\n            return this.mapping.getOne({ data: res });\n          } else {\n            return null;\n          }\n        }),\n        catchError(error => {\n          throw error;\n        })\n      );\n  }\n\n  /**\n   * Crea un nuevo elemento con populate para obtener relaciones en la respuesta\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada incluyendo relaciones\n   */\n  add(entity: T): Observable {\n    // Incluir populate para obtener relaciones en la respuesta\n    const url = `${this.apiUrl}/${this.resource}?populate=*`;\n    \n    return this.http.post(\n      url,\n      this.mapping.setAdd(entity),\n      this.getHeaders()\n    ).pipe(\n      map(res => {\n        const mappedResult = this.mapping.getAdded(res);\n        return mappedResult;\n      })\n    );\n  }\n\n  /**\n   * Actualiza un elemento existente sin wrapper \"data\" y hace GET para obtener datos completos\n   * @param id ID del elemento a actualizar\n   * @param entity Datos a actualizar\n   * @returns Observable con la entidad actualizada incluyendo todas las relaciones\n   */\n  update(id: string, entity: T): Observable {\n    const updateUrl = `${this.apiUrl}/${this.resource}/${id}`;\n    const mappedData = this.mapping.setUpdate(entity);\n    \n    // Usar contenido directo sin wrapper \"data\" para Strapi\n    const bodyToSend = mappedData.data || mappedData;\n    \n    return this.http.put(\n      updateUrl,\n      bodyToSend,\n      this.getHeaders()\n    ).pipe(\n      // Después del PUT, hacer GET para obtener datos completos con relaciones\n      switchMap(updateResponse => {\n        const getUrl = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n        return this.http.get(getUrl, this.getHeaders());\n      }),\n      map(getResponse => {\n        const mappedResult = this.mapping.getUpdated(getResponse);\n        return mappedResult;\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n  \n  /**\n   * Elimina un elemento del recurso\n   * @param id ID del elemento a eliminar\n   * @returns Observable con la entidad eliminada\n   */\n  delete(id: string): Observable {\n    return this.http.delete(\n      `${this.apiUrl}/${this.resource}/${id}`,\n      this.getHeaders()\n    ).pipe(\n      map(res => this.mapping.getDeleted(res))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Model.html":{"url":"interfaces/Model.html","title":"interface - Model","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Model\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/base.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Model{\n    id:string,\n    createdAt?:string,\n    updatedAt?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paginated.html":{"url":"interfaces/Paginated.html","title":"interface - Paginated","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paginated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/paginated.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Paginated{\n    data:T[];\n    page:number;\n    pages:number;\n    pageSize:number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw.html":{"url":"interfaces/PaginatedRaw.html","title":"interface - PaginatedRaw","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/json-server-repository.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz para respuestas paginadas de JSON Server\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            first\n                                        \n                                \n                                \n                                        \n                                            items\n                                        \n                                \n                                \n                                        \n                                            last\n                                        \n                                \n                                \n                                        \n                                            next\n                                        \n                                \n                                \n                                        \n                                            pages\n                                        \n                                \n                                \n                                        \n                                            prev\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        first:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        items:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        next:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pages\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pages:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev:     number | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { map, Observable } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, AUTH_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { BaseRepositoryHttpService } from './base-repository-http.service';\nimport { IAuthentication } from '../../services/interfaces/authentication.interface';\n\n/**\n * Interfaz para respuestas paginadas de JSON Server\n */\nexport interface PaginatedRaw {\n  first: number;\n  prev: number | null;\n  next: number | null;\n  last: number;\n  pages: number;\n  items: number;\n  data: T[];\n}\n\n/**\n * Servicio de repositorio específico para JSON Server\n * Extiende BaseRepositoryHttpService para personalizar comportamientos específicos de JSON Server\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonServerRepositoryService extends BaseRepositoryHttpService {\n\n  constructor(\n    http: HttpClient,\n    @Inject(AUTH_TOKEN) auth: IAuthentication,\n    @Inject(API_URL_TOKEN) apiUrl: string, // URL base de la API JSON Server\n    @Inject(RESOURCE_NAME_TOKEN) resource: string, // nombre del recurso del repositorio\n    @Inject(REPOSITORY_MAPPING_TOKEN) mapping: IBaseMapping\n  ) {\n    super(http, auth, apiUrl, resource, mapping);\n  }\n\n  /**\n   * Obtiene todos los elementos con paginación y filtros específicos de JSON Server\n   * @param page Número de página (empezando en 1)\n   * @param pageSize Tamaño de página\n   * @param filters Filtros de búsqueda usando sintaxis JSON Server (_like)\n   * @returns Observable con array de elementos o elementos paginados\n   */\n  override getAll(page: number, pageSize: number, filters: SearchParams = {}): Observable> {\n    // Construir cadena de filtros usando sintaxis _like de JSON Server\n    let search: string = Object.entries(filters)\n      .map(([k, v]) => `${k}_like=${v}`)\n      .reduce((p, v) => `${p}${v}`, \"\");\n\n    // Si page = -1, obtener todos los elementos sin paginación\n    if (page !== -1) {\n      // Solicitud paginada usando parámetros _page y _per_page de JSON Server\n      return this.http.get>(\n        `${this.apiUrl}/${this.resource}/?_page=${page}&_per_page=${pageSize}&${search}`)\n        .pipe(map(res => {\n          return this.mapping.getPaginated(page, pageSize, res.pages, res.data);\n        }));\n    } else {\n      // Solicitud sin paginación - obtener todos los elementos\n      return this.http.get(\n        `${this.apiUrl}/${this.resource}?&${search}`)\n        .pipe(map(res => {\n          return res.map((elem: any) => {\n            return this.mapping.getOne(elem);\n          });\n        }));\n    }\n  }\n\n  /**\n   * Crea un nuevo elemento usando el endpoint POST de JSON Server\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada y mapeada\n   */\n  override add(entity: T): Observable {\n    return this.http.post(\n      `${this.apiUrl}/${this.resource}`, \n      this.mapping.setAdd(entity)\n    ).pipe(map(res => {\n      return this.mapping.getAdded(res);\n    }));\n  }\n\n  /**\n   * Actualiza un elemento existente usando PATCH (actualización parcial)\n   * @param id ID del elemento a actualizar\n   * @param entity Datos parciales a actualizar\n   * @returns Observable con la entidad actualizada y mapeada\n   */\n  override update(id: string, entity: T): Observable {\n    return this.http.patch(\n      `${this.apiUrl}/${this.resource}/${id}`, \n      this.mapping.setUpdate(entity)\n    ).pipe(map(res => {\n      return this.mapping.getUpdated(res);\n    }));\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PaginatedRaw-1.html":{"url":"interfaces/PaginatedRaw-1.html","title":"interface - PaginatedRaw-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PaginatedRaw\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaces para respuestas de Strapi v4\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Data[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Data[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         Meta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Meta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable, catchError, tap, switchMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\n/**\n * Interfaces para respuestas de Strapi v4\n */\nexport interface PaginatedRaw {\n  data: Data[];\n  meta: Meta;\n}\n\nexport interface Data {\n  id: number;\n  attributes: T;\n}\n\nexport interface Meta {\n  pagination: Pagination;\n}\n\nexport interface Pagination {\n  page: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n}\n\n/**\n * Servicio de repositorio específico para Strapi v4\n * Implementa operaciones CRUD con autenticación Bearer token y populate para relaciones\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService implements IBaseRepository {\n  \n  constructor(\n    protected http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) protected auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string,\n    @Inject(RESOURCE_NAME_TOKEN) protected resource: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {}\n\n  /**\n   * Obtiene headers de autenticación con Bearer token\n   * @returns Objeto con headers de autorización o vacío si no hay token\n   */\n  private getHeaders() {\n    const token = this.auth.getToken();\n    if (!token) {\n      return {};\n    }\n\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n  }\n\n  /**\n   * Obtiene todos los elementos con paginación y filtros específicos de Strapi\n   * @param page Número de página (empezando en 1)\n   * @param pageSize Tamaño de página\n   * @param filters Filtros de búsqueda usando sintaxis Strapi\n   * @returns Observable con elementos paginados\n   */\n  getAll(page: number, pageSize: number, filters: SearchParams = {}): Observable> {\n    let url = `${this.apiUrl}/${this.resource}?populate=*`;\n\n    // Agregar parámetros de paginación\n    url += `&pagination[page]=${page}&pagination[pageSize]=${pageSize}`;\n\n    // Procesar filtros con sintaxis específica de Strapi\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined) {\n        switch(key) {\n          case 'user':\n            url += `&filters[users_IDS][id][$eq]=${value}`;\n            break;\n          case 'sort':\n            url += `&sort[0]=${value}`;\n            break;\n          default:\n            url += `&filters[${key}][$eq]=${value}`;\n        }\n      }\n    });\n\n    const headers = this.getHeaders();\n\n    return this.http.get>(url, headers).pipe(\n      map(res => {\n        if (!res.meta?.pagination) {\n          return this.mapping.getPaginated(page, pageSize, res.data.length, res.data);\n        }\n        return this.mapping.getPaginated(\n          page,\n          pageSize,\n          res.meta.pagination.total,\n          res.data\n        );\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Obtiene un elemento específico por su ID con todas las relaciones pobladas\n   * @param id ID del elemento a obtener\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    const url = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n    \n    return this.http.get(url, this.getHeaders())\n      .pipe(\n        map(res => {\n          if (res.data) {\n            return this.mapping.getOne(res);\n          } else if (res.id) {\n            return this.mapping.getOne({ data: res });\n          } else {\n            return null;\n          }\n        }),\n        catchError(error => {\n          throw error;\n        })\n      );\n  }\n\n  /**\n   * Crea un nuevo elemento con populate para obtener relaciones en la respuesta\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada incluyendo relaciones\n   */\n  add(entity: T): Observable {\n    // Incluir populate para obtener relaciones en la respuesta\n    const url = `${this.apiUrl}/${this.resource}?populate=*`;\n    \n    return this.http.post(\n      url,\n      this.mapping.setAdd(entity),\n      this.getHeaders()\n    ).pipe(\n      map(res => {\n        const mappedResult = this.mapping.getAdded(res);\n        return mappedResult;\n      })\n    );\n  }\n\n  /**\n   * Actualiza un elemento existente sin wrapper \"data\" y hace GET para obtener datos completos\n   * @param id ID del elemento a actualizar\n   * @param entity Datos a actualizar\n   * @returns Observable con la entidad actualizada incluyendo todas las relaciones\n   */\n  update(id: string, entity: T): Observable {\n    const updateUrl = `${this.apiUrl}/${this.resource}/${id}`;\n    const mappedData = this.mapping.setUpdate(entity);\n    \n    // Usar contenido directo sin wrapper \"data\" para Strapi\n    const bodyToSend = mappedData.data || mappedData;\n    \n    return this.http.put(\n      updateUrl,\n      bodyToSend,\n      this.getHeaders()\n    ).pipe(\n      // Después del PUT, hacer GET para obtener datos completos con relaciones\n      switchMap(updateResponse => {\n        const getUrl = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n        return this.http.get(getUrl, this.getHeaders());\n      }),\n      map(getResponse => {\n        const mappedResult = this.mapping.getUpdated(getResponse);\n        return mappedResult;\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n  \n  /**\n   * Elimina un elemento del recurso\n   * @param id ID del elemento a eliminar\n   * @returns Observable con la entidad eliminada\n   */\n  delete(id: string): Observable {\n    return this.http.delete(\n      `${this.apiUrl}/${this.resource}/${id}`,\n      this.getHeaders()\n    ).pipe(\n      map(res => this.mapping.getDeleted(res))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Pagination.html":{"url":"interfaces/Pagination.html","title":"interface - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Pagination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            page\n                                        \n                                \n                                \n                                        \n                                            pageCount\n                                        \n                                \n                                \n                                        \n                                            pageSize\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        page:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageCount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageCount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pageSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pageSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable, catchError, tap, switchMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\n/**\n * Interfaces para respuestas de Strapi v4\n */\nexport interface PaginatedRaw {\n  data: Data[];\n  meta: Meta;\n}\n\nexport interface Data {\n  id: number;\n  attributes: T;\n}\n\nexport interface Meta {\n  pagination: Pagination;\n}\n\nexport interface Pagination {\n  page: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n}\n\n/**\n * Servicio de repositorio específico para Strapi v4\n * Implementa operaciones CRUD con autenticación Bearer token y populate para relaciones\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService implements IBaseRepository {\n  \n  constructor(\n    protected http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) protected auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string,\n    @Inject(RESOURCE_NAME_TOKEN) protected resource: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {}\n\n  /**\n   * Obtiene headers de autenticación con Bearer token\n   * @returns Objeto con headers de autorización o vacío si no hay token\n   */\n  private getHeaders() {\n    const token = this.auth.getToken();\n    if (!token) {\n      return {};\n    }\n\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n  }\n\n  /**\n   * Obtiene todos los elementos con paginación y filtros específicos de Strapi\n   * @param page Número de página (empezando en 1)\n   * @param pageSize Tamaño de página\n   * @param filters Filtros de búsqueda usando sintaxis Strapi\n   * @returns Observable con elementos paginados\n   */\n  getAll(page: number, pageSize: number, filters: SearchParams = {}): Observable> {\n    let url = `${this.apiUrl}/${this.resource}?populate=*`;\n\n    // Agregar parámetros de paginación\n    url += `&pagination[page]=${page}&pagination[pageSize]=${pageSize}`;\n\n    // Procesar filtros con sintaxis específica de Strapi\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined) {\n        switch(key) {\n          case 'user':\n            url += `&filters[users_IDS][id][$eq]=${value}`;\n            break;\n          case 'sort':\n            url += `&sort[0]=${value}`;\n            break;\n          default:\n            url += `&filters[${key}][$eq]=${value}`;\n        }\n      }\n    });\n\n    const headers = this.getHeaders();\n\n    return this.http.get>(url, headers).pipe(\n      map(res => {\n        if (!res.meta?.pagination) {\n          return this.mapping.getPaginated(page, pageSize, res.data.length, res.data);\n        }\n        return this.mapping.getPaginated(\n          page,\n          pageSize,\n          res.meta.pagination.total,\n          res.data\n        );\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Obtiene un elemento específico por su ID con todas las relaciones pobladas\n   * @param id ID del elemento a obtener\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    const url = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n    \n    return this.http.get(url, this.getHeaders())\n      .pipe(\n        map(res => {\n          if (res.data) {\n            return this.mapping.getOne(res);\n          } else if (res.id) {\n            return this.mapping.getOne({ data: res });\n          } else {\n            return null;\n          }\n        }),\n        catchError(error => {\n          throw error;\n        })\n      );\n  }\n\n  /**\n   * Crea un nuevo elemento con populate para obtener relaciones en la respuesta\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada incluyendo relaciones\n   */\n  add(entity: T): Observable {\n    // Incluir populate para obtener relaciones en la respuesta\n    const url = `${this.apiUrl}/${this.resource}?populate=*`;\n    \n    return this.http.post(\n      url,\n      this.mapping.setAdd(entity),\n      this.getHeaders()\n    ).pipe(\n      map(res => {\n        const mappedResult = this.mapping.getAdded(res);\n        return mappedResult;\n      })\n    );\n  }\n\n  /**\n   * Actualiza un elemento existente sin wrapper \"data\" y hace GET para obtener datos completos\n   * @param id ID del elemento a actualizar\n   * @param entity Datos a actualizar\n   * @returns Observable con la entidad actualizada incluyendo todas las relaciones\n   */\n  update(id: string, entity: T): Observable {\n    const updateUrl = `${this.apiUrl}/${this.resource}/${id}`;\n    const mappedData = this.mapping.setUpdate(entity);\n    \n    // Usar contenido directo sin wrapper \"data\" para Strapi\n    const bodyToSend = mappedData.data || mappedData;\n    \n    return this.http.put(\n      updateUrl,\n      bodyToSend,\n      this.getHeaders()\n    ).pipe(\n      // Después del PUT, hacer GET para obtener datos completos con relaciones\n      switchMap(updateResponse => {\n        const getUrl = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n        return this.http.get(getUrl, this.getHeaders());\n      }),\n      map(getResponse => {\n        const mappedResult = this.mapping.getUpdated(getResponse);\n        return mappedResult;\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n  \n  /**\n   * Elimina un elemento del recurso\n   * @param id ID del elemento a eliminar\n   * @returns Observable con la entidad eliminada\n   */\n  delete(id: string): Observable {\n    return this.http.delete(\n      `${this.apiUrl}/${this.resource}/${id}`,\n      this.getHeaders()\n    ).pipe(\n      map(res => this.mapping.getDeleted(res))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PasswordVisibilityPipe.html":{"url":"pipes/PasswordVisibilityPipe.html","title":"pipe - PasswordVisibilityPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PasswordVisibilityPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/password-visibility.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        passwordVisibility\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(type: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipe/password-visibility.pipe.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                type\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n    name: 'passwordVisibility'\n})\nexport class PasswordVisibilityPipe implements PipeTransform {\n    transform(type: boolean): string {\n        return type ? 'text' : 'password';\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/person.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            age\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            groupId\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            picture\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        age\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        age:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        groupId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        groupId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        picture\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        picture:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Person extends Model{\n    name:string,\n    surname:string,\n    age?:number,\n    email?:string, //TODO: Quitar interrogación más adelante\n    gender:string,\n    picture?:{\n        url:string | undefined,\n        large:string | undefined,\n        medium:string | undefined,\n        small:string | undefined,\n        thumbnail:string | undefined\n    },\n    groupId?:string,\n    userId?:string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PictureSelectableComponent.html":{"url":"components/PictureSelectableComponent.html","title":"component - PictureSelectableComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PictureSelectableComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente para seleccionar y gestionar imágenes\nImplementa ControlValueAccessor para integrarse con formularios reactivos de Angular\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                PICTURE_SELECTABLE_VALUE_ACCESSOR\n                \n            \n\n\n            \n                selector\n                app-picture-selectable\n            \n\n\n\n            \n                styleUrls\n                ./picture-selectable.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./picture-selectable.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _picture\n                            \n                            \n                                hasValue\n                            \n                            \n                                isDisabled\n                            \n                            \n                                    Public\n                                picture$\n                            \n                            \n                                propagateChange\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePicture\n                            \n                            \n                                close\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onChangePicture\n                            \n                            \n                                onDeletePicture\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                    Optional\n                                setDisabledState\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pictureModal: ModalController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pictureModal\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changePicture\n                        \n                    \n                \n            \n            \n                \nchangePicture(picture: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:74\n                        \n                    \n\n\n            \n                \n                        Cambia la imagen actual y propaga el cambio\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                picture\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nueva URL de la imagen\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de selección de imagen\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Limpia los recursos al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangePicture\n                        \n                    \n                \n            \n            \n                \nonChangePicture(event: Event, fileLoader: HTMLInputElement)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Maneja el evento de cambio de imagen desde un input file\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del DOM\n\n                                            \n                                        \n                                        \n                                                fileLoader\n                                            \n                                                        HTMLInputElement\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Elemento input file\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDeletePicture\n                        \n                    \n                \n            \n            \n                \nonDeletePicture(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:107\n                        \n                    \n\n\n            \n                \n                        Elimina la imagen actual\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del DOM\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnChange\n                        \n                    \n                \n            \n            \n                \nregisterOnChange(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerOnTouched\n                        \n                    \n                \n            \n            \n                \nregisterOnTouched(fn: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fn\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        setDisabledState\n                        \n                    \n                \n            \n            \n                \nsetDisabledState(isDisabled: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                isDisabled\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeValue\n                        \n                    \n                \n            \n            \n                \nwriteValue(obj: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Establece el valor del componente desde el formulario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                obj\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Valor a establecer (URL de la imagen)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _picture\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(\"\")\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:25\n                        \n                    \n\n            \n                \n                    Subject que mantiene el valor actual de la imagen\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:31\n                        \n                    \n\n            \n                \n                    Indica si hay una imagen seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDisabled\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:29\n                        \n                    \n\n            \n                \n                    Indica si el componente está deshabilitado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        picture$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._picture.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:27\n                        \n                    \n\n            \n                \n                    Observable público para la imagen seleccionada\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        propagateChange\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/picture-selectable/picture-selectable.component.ts:45\n                        \n                    \n\n            \n                \n                    Función que propaga los cambios al formulario padre\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnDestroy, OnInit, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\n\nexport const PICTURE_SELECTABLE_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n};\n\n/**\n * Componente para seleccionar y gestionar imágenes\n * Implementa ControlValueAccessor para integrarse con formularios reactivos de Angular\n */\n@Component({\n    selector: 'app-picture-selectable',\n    templateUrl: './picture-selectable.component.html',\n    styleUrls: ['./picture-selectable.component.scss'],\n    providers:[PICTURE_SELECTABLE_VALUE_ACCESSOR]\n    })\nexport class PictureSelectableComponent  implements OnInit, ControlValueAccessor, OnDestroy {\n\n    /** Subject que mantiene el valor actual de la imagen */\n    private _picture = new BehaviorSubject(\"\");\n    /** Observable público para la imagen seleccionada */\n    public picture$ = this._picture.asObservable();\n    /** Indica si el componente está deshabilitado */\n    isDisabled:boolean = false;\n    /** Indica si hay una imagen seleccionada */\n    hasValue:boolean = false;\n    constructor(\n        private pictureModal:ModalController\n    ) { }\n\n    /** Limpia los recursos al destruir el componente */\n    ngOnDestroy(): void {\n        this._picture.complete();\n    }\n\n    // eslint-disable-next-line @angular-eslint/no-empty-lifecycle-method\n    ngOnInit() {}\n\n    /** Función que propaga los cambios al formulario padre */\n    propagateChange = (obj: any) => {\n    }\n\n    /**\n     * Establece el valor del componente desde el formulario\n     * @param obj Valor a establecer (URL de la imagen)\n     */\n    writeValue(obj: any): void {\n        if(obj){\n        this.hasValue = true;\n        this._picture.next(obj);\n        }\n    }\n\n    registerOnChange(fn: any): void {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched(fn: any): void {\n    }\n\n    setDisabledState?(isDisabled: boolean): void {\n        this.isDisabled = isDisabled;\n    }\n\n    /**\n     * Cambia la imagen actual y propaga el cambio\n     * @param picture Nueva URL de la imagen\n     */\n    changePicture(picture:string){\n        this.hasValue = picture!='';\n        this._picture.next(picture);\n        this.propagateChange(picture);\n    }\n\n    /**\n     * Maneja el evento de cambio de imagen desde un input file\n     * @param event Evento del DOM\n     * @param fileLoader Elemento input file\n     */\n    onChangePicture(event:Event, fileLoader:HTMLInputElement){\n        event.stopPropagation();\n        fileLoader.onchange = ()=>{\n        if(fileLoader.files && fileLoader.files?.length>0){\n            var file = fileLoader.files[0];\n            var reader = new FileReader();\n            reader.onload = () => {\n            this.changePicture(reader.result as string);\n            };\n            reader.onerror = (error) =>{\n            console.log(error);\n            }\n            reader.readAsDataURL(file);\n        }\n        }\n        fileLoader.click();\n    }\n\n    /**\n     * Elimina la imagen actual\n     * @param event Evento del DOM\n     */\n    onDeletePicture(event:Event){\n        event.stopPropagation();\n        this.changePicture('');\n    }\n\n    /** Cierra el modal de selección de imagen */\n    close(){\n        this.pictureModal?.dismiss();\n    }\n\n}\n\n\n    \n\n    \n        \n\n  \n    \n      \n        \n          \n            \n              \n            \n          \n        \n        \n            \n        \n      \n    \n    \n    \n        \n    \n    \n        \n    \n  \n  \n  \n      \n  \n\n    \n\n    \n                \n                    ./picture-selectable.component.scss\n                \n                div.user-picture{\n    min-width:300px;\n    height:300px;\n    ion-img{\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n        cursor: pointer;\n    }\n    ion-button.picture-button{\n        margin:0;\n        --padding-start:0;\n        --padding-end:0;\n    \n        .button-native{\n            padding:0!important;\n        }\n    }\n}\n\nion-modal.auto-height{\n    &.bottom {\n        align-items: flex-end;\n    }\n\n    --height: auto;\n\n    .ion-page {\n        position: relative;\n        display: block;\n        contain: content;\n\n        .inner-content {\n            max-height: 80vh;\n            overflow: auto;\n            padding: 10px;\n        }\n    }\n}\n\n.change-picture-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n  --background: rgba(var(--ion-color-primary-rgb), 0.7);\n}\n\n.delete-picture-btn {\n  position: absolute;\n  top: 40px;\n  right: 0;\n  --background: rgba(var(--ion-color-danger-rgb), 0.7);\n}\n\n.empty-picture-btn {\n  height: 100%;\n  width: 100%;\n}\n\n.empty-picture-icon {\n  width: 100%;\n  height: 100%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'PictureSelectableComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlayButtonComponent.html":{"url":"components/PlayButtonComponent.html","title":"component - PlayButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlayButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/play-button/play-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-play-button\n            \n\n\n\n            \n                styleUrls\n                ./play-button.component.scss\n            \n\n\n            \n                template\n                \n  \n  \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                isCurrentSongPlaying\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                togglePlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                color\n                            \n                            \n                                customClass\n                            \n                            \n                                fill\n                            \n                            \n                                iconSlot\n                            \n                            \n                                playlist\n                            \n                            \n                                size\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                playPaused\n                            \n                            \n                                playStarted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(audioPlayerService: AudioPlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/play-button/play-button.component.ts:39\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        audioPlayerService\n                                                  \n                                                        \n                                                                        AudioPlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        color\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'primary'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        customClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        fill\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'clear'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        iconSlot\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'icon-only'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playlist\n                    \n                \n                \n                    \n                        Type :     (Song | EnrichedSong)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        song\n                    \n                \n                \n                    \n                        Type :     Song | EnrichedSong\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:27\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        playPaused\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playStarted\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/play-button/play-button.component.ts:35\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/play-button/play-button.component.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/play-button/play-button.component.ts:43\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        togglePlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    togglePlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/play-button/play-button.component.ts:57\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/play-button/play-button.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCurrentSongPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/play-button/play-button.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Subject, takeUntil } from 'rxjs';\nimport { Song } from '../../../core/models/song.model';\nimport { EnrichedSong } from '../../../core/models/enriched-song.interface';\nimport { AudioPlayerService } from '../../../core/services/impl/audio-player.service';\n\n@Component({\n  selector: 'app-play-button',\n  template: `\n    \n      \n      \n      \n    \n  `,\n  styleUrls: ['./play-button.component.scss']\n})\nexport class PlayButtonComponent implements OnInit, OnDestroy {\n  @Input() song!: Song | EnrichedSong;\n  @Input() playlist: (Song | EnrichedSong)[] = [];\n  @Input() fill: string = 'clear';\n  @Input() size: string = 'default';\n  @Input() color: string = 'primary';\n  @Input() iconSlot: string = 'icon-only';\n  @Input() customClass: string = '';\n  \n  @Output() playStarted = new EventEmitter();\n  @Output() playPaused = new EventEmitter();\n\n  isCurrentSongPlaying = false;\n  private destroy$ = new Subject();\n\n  constructor(private audioPlayerService: AudioPlayerService) {}\n\n  ngOnInit() {\n    this.audioPlayerService.playerState$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(state => {\n        this.isCurrentSongPlaying = \n          state.currentSong?.id === this.song?.id && state.isPlaying;\n      });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  async togglePlay() {\n    if (!this.song) return;\n\n    const currentState = this.audioPlayerService.getPlayerState();\n    \n    if (currentState.currentSong?.id === this.song.id) {\n      // Es la misma canción, toggle play/pause\n      if (currentState.isPlaying) {\n        this.audioPlayerService.pause();\n        this.playPaused.emit(this.song);\n      } else {\n        this.audioPlayerService.resume();\n        this.playStarted.emit(this.song);\n      }\n    } else {\n      // Es una canción diferente, cargar y reproducir\n      if (this.playlist.length > 0) {\n        const songIndex = this.playlist.findIndex(s => s.id === this.song.id);\n        this.audioPlayerService.setQueue(this.playlist, songIndex);\n      } else {\n        this.audioPlayerService.setQueue([this.song], 0);\n      }\n      \n      await this.audioPlayerService.play(this.song);\n      this.playStarted.emit(this.song);\n    }\n  }\n}\n\n\n    \n\n\n    \n                \n                    ./play-button.component.scss\n                \n                .play-button {\n    --ripple-color: rgba(29, 185, 84, 0.3);\n    transition: all 0.2s ease;\n\n    &:hover {\n        transform: scale(1.05);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlayButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlayerState.html":{"url":"interfaces/PlayerState.html","title":"interface - PlayerState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PlayerState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/audio-player.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            currentIndex\n                                        \n                                \n                                \n                                        \n                                            currentSong\n                                        \n                                \n                                \n                                        \n                                            currentTime\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                        \n                                            isLoading\n                                        \n                                \n                                \n                                        \n                                            isPaused\n                                        \n                                \n                                \n                                        \n                                            isPlaying\n                                        \n                                \n                                \n                                        \n                                            isShuffled\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            playingFrom\n                                        \n                                \n                                \n                                        \n                                            progress\n                                        \n                                \n                                \n                                        \n                                            queue\n                                        \n                                \n                                \n                                        \n                                            repeatMode\n                                        \n                                \n                                \n                                        \n                                            volume\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentIndex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentIndex:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentSong\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentSong:     EnrichedSong | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EnrichedSong | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        currentTime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        currentTime:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isLoading\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLoading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPaused\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPaused:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isPlaying\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isPlaying:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isShuffled\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isShuffled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playingFrom\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playingFrom:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        progress\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        progress:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        queue\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        queue:     EnrichedSong[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EnrichedSong[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repeatMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        repeatMode:     \"none\" | \"one\" | \"all\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"none\" | \"one\" | \"all\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        volume\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        volume:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, interval, takeWhile, map } from 'rxjs';\nimport { Song } from '../../models/song.model';\nimport { EnrichedSong } from '../../models/enriched-song.interface';\n\nexport interface PlayerState {\n    isPlaying: boolean;\n    isPaused: boolean;\n    currentTime: number;\n    duration: number;\n    volume: number;\n    isLoading: boolean;\n    progress: number; // 0-100\n    currentSong: EnrichedSong | null;\n    queue: EnrichedSong[];\n    currentIndex: number;\n    isShuffled: boolean;\n    repeatMode: 'none' | 'one' | 'all';\n    // ✅ NUEVO: Información de contexto\n    playingFrom?: {\n        type: 'playlist' | 'album' | 'artist' | 'liked' | 'search';\n        name: string;\n        id?: string;\n    };\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AudioPlayerService {\n    private audio: HTMLAudioElement;\n    private _playerState = new BehaviorSubject({\n        isPlaying: false,\n        isPaused: false,\n        currentTime: 0,\n        duration: 0,\n        volume: 0.7, // ✅ MEJORADO: Volumen inicial al 70%\n        isLoading: false,\n        progress: 0,\n        currentSong: null,\n        queue: [],\n        currentIndex: -1,\n        isShuffled: false,\n        repeatMode: 'none'\n    });\n\n    public playerState$ = this._playerState.asObservable();\n\n    constructor() {\n        this.audio = new Audio();\n        this.audio.volume = 0.7; // ✅ Establecer volumen inicial\n        this.setupAudioEvents();\n        this.setupProgressTracking();\n    }\n\n    private setupAudioEvents() {\n        this.audio.addEventListener('loadstart', () => {\n            this.updateState({ isLoading: true });\n        });\n\n        this.audio.addEventListener('loadedmetadata', () => {\n            this.updateState({ \n                duration: this.audio.duration,\n                isLoading: false \n            });\n        });\n\n        this.audio.addEventListener('play', () => {\n            this.updateState({ \n                isPlaying: true, \n                isPaused: false \n            });\n        });\n\n        this.audio.addEventListener('pause', () => {\n            this.updateState({ \n                isPlaying: false, \n                isPaused: true \n            });\n        });\n\n        this.audio.addEventListener('ended', () => {\n            this.handleSongEnd();\n        });\n\n        this.audio.addEventListener('error', (e) => {\n            console.error('Audio error:', e);\n            this.updateState({ \n                isLoading: false, \n                isPlaying: false \n            });\n        });\n\n        this.audio.addEventListener('timeupdate', () => {\n            const currentTime = this.audio.currentTime;\n            const duration = this.audio.duration || 0;\n            const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n            \n            this.updateState({\n                currentTime,\n                progress\n            });\n        });\n    }\n\n    private setupProgressTracking() {\n        interval(1000).pipe(\n            takeWhile(() => true)\n        ).subscribe(() => {\n            if (this.audio && !this.audio.paused) {\n                const currentTime = this.audio.currentTime;\n                const duration = this.audio.duration || 0;\n                const progress = duration > 0 ? (currentTime / duration) * 100 : 0;\n                \n                this.updateState({\n                    currentTime,\n                    progress\n                });\n            }\n        });\n    }\n\n    private updateState(partialState: Partial) {\n        const currentState = this._playerState.value;\n        this._playerState.next({ ...currentState, ...partialState });\n    }\n\n    // ✅ NUEVO: Método para establecer contexto de reproducción\n    setPlayingContext(context: { type: 'playlist' | 'album' | 'artist' | 'liked' | 'search', name: string, id?: string }) {\n        this.updateState({\n            playingFrom: context\n        });\n    }\n\n    // Métodos públicos del reproductor\n    loadSong(song: Song | EnrichedSong): Promise {\n        return new Promise((resolve, reject) => {\n            if (!song.audioUrl) {\n                console.warn('No audio URL found for song:', song.name);\n                this.audio.src = 'assets/audio/sample.mp3';\n            } else {\n                this.audio.src = song.audioUrl;\n            }\n\n            this.updateState({\n                currentSong: song as EnrichedSong,\n                isLoading: true,\n                currentTime: 0,\n                progress: 0\n            });\n\n            this.audio.addEventListener('loadeddata', () => resolve(), { once: true });\n            this.audio.addEventListener('error', () => reject(), { once: true });\n        });\n    }\n\n    async play(song?: Song | EnrichedSong): Promise {\n        try {\n            if (song) {\n                await this.loadSong(song);\n            }\n            \n            await this.audio.play();\n        } catch (error) {\n            console.error('Error playing audio:', error);\n            this.updateState({ isLoading: false });\n        }\n    }\n\n    pause() {\n        this.audio.pause();\n    }\n\n    resume() {\n        this.audio.play();\n    }\n\n    stop() {\n        this.audio.pause();\n        this.audio.currentTime = 0;\n        this.updateState({\n            isPlaying: false,\n            isPaused: false,\n            currentTime: 0,\n            progress: 0\n        });\n    }\n\n    seekTo(time: number) {\n        this.audio.currentTime = time;\n    }\n\n    // ✅ MEJORADO: Control de volumen más suave\n    setVolume(volume: number) {\n        const clampedVolume = Math.max(0, Math.min(1, volume));\n        \n        // Transición suave del volumen\n        const currentVolume = this.audio.volume;\n        const steps = 10;\n        const increment = (clampedVolume - currentVolume) / steps;\n        \n        let step = 0;\n        const volumeInterval = setInterval(() => {\n            step++;\n            const newVolume = currentVolume + (increment * step);\n            this.audio.volume = step === steps ? clampedVolume : newVolume;\n            \n            if (step >= steps) {\n                clearInterval(volumeInterval);\n                this.updateState({ volume: clampedVolume });\n            }\n        }, 20); // 20ms entre pasos para transición suave\n    }\n\n    // Control de cola de reproducción\n    setQueue(songs: (Song | EnrichedSong)[], startIndex: number = 0) {\n        this.updateState({\n            queue: songs.map(song => song as EnrichedSong),\n            currentIndex: startIndex\n        });\n    }\n\n    addToQueue(song: Song | EnrichedSong) {\n        const currentState = this._playerState.value;\n        this.updateState({\n            queue: [...currentState.queue, song as EnrichedSong]\n        });\n    }\n\n    removeFromQueue(index: number) {\n        const currentState = this._playerState.value;\n        const newQueue = currentState.queue.filter((_, i) => i !== index);\n        let newIndex = currentState.currentIndex;\n        \n        if (index = state.queue.length) {\n            nextIndex = 0;\n        } else if (nextIndex >= state.queue.length) {\n            return;\n        }\n\n        this.updateState({ currentIndex: nextIndex });\n        this.play(state.queue[nextIndex]);\n    }\n\n    previous() {\n        const state = this._playerState.value;\n        if (state.queue.length === 0) return;\n\n        let prevIndex = state.currentIndex - 1;\n        \n        if (prevIndex  0; i--) {\n                const j = Math.floor(Math.random() * (i + 1));\n                [shuffledQueue[i], shuffledQueue[j]] = [shuffledQueue[j], shuffledQueue[i]];\n            }\n            this.updateState({ queue: shuffledQueue });\n        }\n    }\n\n    toggleRepeat() {\n        const state = this._playerState.value;\n        const modes: Array = ['none', 'one', 'all'];\n        const currentIndex = modes.indexOf(state.repeatMode);\n        const nextMode = modes[(currentIndex + 1) % modes.length];\n        \n        this.updateState({ repeatMode: nextMode });\n    }\n\n    private handleSongEnd() {\n        const state = this._playerState.value;\n        \n        if (state.repeatMode === 'one') {\n            this.audio.currentTime = 0;\n            this.audio.play();\n        } else {\n            this.next();\n        }\n    }\n\n    // Métodos de utilidad\n    formatTime(seconds: number): string {\n        if (isNaN(seconds)) return '0:00';\n        \n        const mins = Math.floor(seconds / 60);\n        const secs = Math.floor(seconds % 60);\n        return `${mins}:${secs.toString().padStart(2, '0')}`;\n    }\n\n    getCurrentSong(): EnrichedSong | null {\n        return this._playerState.value.currentSong;\n    }\n\n    getPlayerState(): PlayerState {\n        return this._playerState.value;\n    }\n\n    getPlayingFrom(): string {\n        const context = this._playerState.value.playingFrom;\n        if (!context) return 'Música';\n        \n        switch (context.type) {\n            case 'playlist': return `Playing from playlist`;\n            case 'album': return `Playing from album`;\n            case 'artist': return `Playing from artist`;\n            case 'liked': return `Playing from liked songs`;\n            case 'search': return `Playing from search`;\n            default: return 'Música';\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Playlist.html":{"url":"interfaces/Playlist.html","title":"interface - Playlist","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Playlist\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/playlist.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            author\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            likes_count\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            song_IDS\n                                        \n                                \n                                \n                                        \n                                            users_IDS\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        author\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        author:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likes_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        likes_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        song_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        song_IDS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users_IDS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Playlist extends Model {\n    name: string;\n    author: string;\n    duration: string;\n    image?: {\n        url: string | undefined;\n        large: string | undefined;\n        medium: string | undefined;\n        small: string | undefined;\n        thumbnail: string | undefined;\n    };\n    song_IDS: string[];\n    users_IDS: string[];\n    likes_count: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlaylistDetailPageModule.html":{"url":"modules/PlaylistDetailPageModule.html","title":"module - PlaylistDetailPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PlaylistDetailPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlaylistDetailPageModule\n\n\n\ncluster_PlaylistDetailPageModule_declarations\n\n\n\ncluster_PlaylistDetailPageModule_imports\n\n\n\n\nPlaylistDetailPage\n\nPlaylistDetailPage\n\n\n\nPlaylistDetailPageModule\n\nPlaylistDetailPageModule\n\nPlaylistDetailPageModule -->\n\nPlaylistDetailPage->PlaylistDetailPageModule\n\n\n\n\n\nPlaylistDetailPageRoutingModule\n\nPlaylistDetailPageRoutingModule\n\nPlaylistDetailPageModule -->\n\nPlaylistDetailPageRoutingModule->PlaylistDetailPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPlaylistDetailPageModule -->\n\nSharedModule->PlaylistDetailPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/playlist-detail/playlist-detail.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PlaylistDetailPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PlaylistDetailPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { PlaylistDetailPageRoutingModule } from './playlist-detail-routing.module';\nimport { PlaylistDetailPage } from './playlist-detail.page';\nimport { SharedModule } from '../../shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    PlaylistDetailPageRoutingModule,\n    SharedModule,\n    TranslateModule.forChild()\n  ],\n  declarations: [\n    PlaylistDetailPage\n  ]\n})\nexport class PlaylistDetailPageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlaylistDetailPageRoutingModule.html":{"url":"modules/PlaylistDetailPageRoutingModule.html","title":"module - PlaylistDetailPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PlaylistDetailPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/playlist-detail/playlist-detail-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlaylistDetailPage } from './playlist-detail.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlaylistDetailPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlaylistDetailPageRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/PlaylistDurationPipe.html":{"url":"pipes/PlaylistDurationPipe.html","title":"pipe - PlaylistDurationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  PlaylistDurationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/pipe/playlist-duration.pipte.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        playlistDuration\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatLongDuration\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatLongDuration(totalSeconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipe/playlist-duration.pipte.ts:53\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                totalSeconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        formatShortDuration\n                        \n                    \n                \n            \n            \n                \n                        \n                    formatShortDuration(totalSeconds: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipe/playlist-duration.pipte.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                totalSeconds\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        padNumber\n                        \n                    \n                \n            \n            \n                \n                        \n                    padNumber(num: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipe/playlist-duration.pipte.ts:63\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                num\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(songs: Song[], format: \"short\" | \"long\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/pipe/playlist-duration.pipte.ts:8\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                songs\n                                            \n                                                            Song[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                format\n                                            \n                                                        \"short\" | \"long\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'short'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Song } from '../../core/models/song.model';\n\n@Pipe({\n  name: 'playlistDuration'\n})\nexport class PlaylistDurationPipe implements PipeTransform {\n  transform(songs: Song[], format: 'short' | 'long' = 'short'): string {\n    if (!songs || songs.length === 0) {\n      return format === 'short' ? '0:00' : '0 min';\n    }\n\n\n    const totalSeconds = songs.reduce((acc, song) => {\n      let songDuration = 0;\n      if (typeof song.duration === 'string' && (song.duration as string).includes(':')) {\n        const [mins, secs] = (song.duration as string).split(':').map(Number);\n        songDuration = mins * 60 + secs;\n      } \n      else if (typeof song.duration === 'number') {\n        songDuration = song.duration;\n      }\n      else if (typeof song.duration === 'string' && !isNaN(Number(song.duration))) {\n        songDuration = Number(song.duration);\n      }\n      else {\n        console.warn(`Unexpected duration format for song: ${song.name}`, song.duration);\n        return acc;\n      }\n\n      return acc + songDuration;\n    }, 0);\n\n\n    const result = format === 'short' ? \n      this.formatShortDuration(totalSeconds) : \n      this.formatLongDuration(totalSeconds);\n\n    return result;\n  }\n\n  private formatShortDuration(totalSeconds: number): string {\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    const seconds = totalSeconds % 60;\n\n    if (hours > 0) {\n      return `${hours}:${this.padNumber(minutes)}:${this.padNumber(seconds)}`;\n    }\n    return `${minutes}:${this.padNumber(seconds)}`;\n  }\n\n  private formatLongDuration(totalSeconds: number): string {\n    const hours = Math.floor(totalSeconds / 3600);\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\n    \n    if (hours > 0) {\n      return `${hours} h ${minutes} min`;\n    }\n    return `${minutes} min`;\n  }\n\n  private padNumber(num: number): string {\n    return num.toString().padStart(2, '0');\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistLikeButtonComponent.html":{"url":"components/PlaylistLikeButtonComponent.html","title":"component - PlaylistLikeButtonComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistLikeButtonComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/playlist-like-button/playlist-like-button.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playlist-like-button\n            \n\n\n\n            \n                styleUrls\n                ./playlist-like-button.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./playlist-like-button.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                isLiked\n                            \n                            \n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkIfLiked\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                    Async\n                                showToast\n                            \n                            \n                                    Async\n                                toggleLike\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                playlistId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastController: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastController\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        playlistId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkIfLiked\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkIfLiked()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:32\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:27\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:23\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        showToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    showToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:59\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        toggleLike\n                        \n                    \n                \n            \n            \n                \n                        \n                    toggleLike()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLiked\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/playlist-like-button/playlist-like-button.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ToastController } from '@ionic/angular';\n\n@Component({\n    selector: 'app-playlist-like-button',\n    templateUrl: './playlist-like-button.component.html',\n    styleUrls: ['./playlist-like-button.component.scss']\n})\nexport class PlaylistLikeButtonComponent implements OnInit, OnDestroy {\n    @Input() playlistId!: string;\n    \n    isLiked = false;\n    loading = false;\n    private destroy$ = new Subject();\n\n    constructor(\n        private toastController: ToastController\n    ) {}\n\n    ngOnInit() {\n        this.checkIfLiked();\n    }\n\n    ngOnDestroy() {\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    private checkIfLiked() {\n        this.isLiked = false;\n    }\n\n    async toggleLike() {\n        if (this.loading) return;\n        \n        this.loading = true;\n        \n        try {\n        await new Promise(resolve => setTimeout(resolve, 1000)); \n        \n        if (this.isLiked) {\n            await this.showToast('Eliminado de favoritos');\n            this.isLiked = false;\n        } else {\n            await this.showToast('Añadido a favoritos');\n            this.isLiked = true;\n        }\n        } catch (error) {\n        console.error('Error toggling playlist like:', error);\n        await this.showToast('Error al actualizar favoritos');\n        } finally {\n        this.loading = false;\n        }\n    }\n\n    private async showToast(message: string) {\n        const toast = await this.toastController.create({\n        message,\n        duration: 2000,\n        position: 'bottom'\n        });\n        await toast.present();\n    }\n}\n    \n\n    \n        \n\n    \n    \n    \n    \n    \n    \n\n    \n\n    \n                \n                    ./playlist-like-button.component.scss\n                \n                /* src/app/shared/components/playlist-like-button/playlist-like-button.component.scss */\n.playlist-like-button {\n    --padding-start: 12px;\n    --padding-end: 12px;\n    margin: 0 8px;\n    transition: transform 0.2s ease;\n\n    &:hover {\n        transform: scale(1.1);\n    }\n\n    &.liked {\n        ion-icon {\n        animation: heartBeat 0.6s ease;\n        }\n    }\n\n    ion-icon {\n        font-size: 24px;\n        transition: color 0.3s ease;\n    }\n}\n\n@keyframes heartBeat {\n    0% { transform: scale(1); }\n    30% { transform: scale(1.3); }\n    50% { transform: scale(1.1); }\n    100% { transform: scale(1); }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistLikeButtonComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistModalComponent.html":{"url":"components/PlaylistModalComponent.html","title":"component - PlaylistModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/playlist-modal/playlist-modal.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playlist-modal\n            \n\n\n\n            \n                styleUrls\n                ./playlist-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./playlist-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formGroup\n                            \n                            \n                                isMobile\n                            \n                            \n                                mode\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                dataURLtoBlob\n                            \n                            \n                                dismiss\n                            \n                            \n                                getDirtyValues\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                playlist\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    playlist\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, modalCtrl: ModalController, platform: Platform, authSvc: BaseAuthenticationService, mediaService: BaseMediaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:31\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        playlist\n                    \n                \n                \n                    \n                        Type :         Playlist\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \n                        \n                    dataURLtoBlob(dataURL: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:172\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataURL\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Blob\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:197\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDirtyValues\n                        \n                    \n                \n            \n            \n                \ngetDirtyValues(formGroup: FormGroup)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                formGroup\n                                            \n                                                            FormGroup\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"new\" | \"edit\"\n\n                    \n                \n                \n                    \n                        Default value : 'new'\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        playlist\n                    \n                \n\n\n                \n                    \n                        setplaylist(_playlist: Playlist)\n                    \n                \n                            \n                                \n                                    Defined in src/app/shared/components/playlist-modal/playlist-modal.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            _playlist\n                                                    \n                                                            \n                                                                            Playlist\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, Platform } from '@ionic/angular';\nimport { lastValueFrom } from 'rxjs';\nimport { Playlist } from 'src/app/core/models/playlist.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { BaseMediaService } from 'src/app/core/services/impl/base-media.service';\n\n@Component({\n  selector: 'app-playlist-modal',\n  templateUrl: './playlist-modal.component.html',\n  styleUrls: ['./playlist-modal.component.scss'],\n})\nexport class PlaylistModalComponent {\n  formGroup: FormGroup;\n  mode: 'new' | 'edit' = 'new';\n  isMobile: boolean = false;\n\n  @Input() set playlist(_playlist: Playlist) {\n    if (_playlist && _playlist.id) {\n      this.mode = 'edit';\n      this.formGroup.patchValue({\n        name: _playlist.name,\n        author: _playlist.author,\n        duration: _playlist.duration,\n        image: _playlist.image?.url,\n        song_IDS: _playlist.song_IDS,\n        users_IDS: _playlist.users_IDS\n      });\n    }\n  }\n\n  constructor(\n    private fb: FormBuilder,\n    private modalCtrl: ModalController,\n    private platform: Platform,\n    private authSvc: BaseAuthenticationService,\n    private mediaService: BaseMediaService,\n  ) {\n    this.isMobile = this.platform.is('ios') || this.platform.is('android');\n    this.formGroup = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      image: [null],\n      song_IDS: [[]],\n      users_IDS: [[]]\n    });\n\n    // ✅ DEBUG: Escuchar cambios en la imagen\n    this.formGroup.get('image')?.valueChanges.subscribe(value => {\n      console.log('🖼️ Image control value changed:', value);\n      console.log('🖼️ Image type:', typeof value);\n      if (typeof value === 'string') {\n        console.log('🖼️ Image starts with data:', value?.startsWith?.('data:'));\n        console.log('🖼️ Image starts with blob:', value?.startsWith?.('blob:'));\n        console.log('🖼️ Image first 50 chars:', value?.substring(0, 50));\n      }\n    });\n\n    this.authSvc.user$.subscribe(user => {\n      if (user) {\n        this.formGroup.patchValue({\n          users_IDS: [user.id]\n        });\n      }\n    });\n  }\n\n  getDirtyValues(formGroup: FormGroup): any {\n    const dirtyValues: any = {};\n    Object.keys(formGroup.controls).forEach(key => {\n      const control = formGroup.get(key);\n      if (control?.dirty) {\n        dirtyValues[key] = control.value;\n      }\n    });\n    return dirtyValues;\n  }\n\n  async onSubmit() {\n    if (this.formGroup.valid) {\n      try {\n        const formData = { ...this.formGroup.value };\n        \n        console.log('📋 Form data before processing:', formData);\n        console.log('📋 Image in form data:', formData.image);\n        \n        // ✅ MANEJO CORREGIDO DE LA IMAGEN BASE64\n        if (formData.image && typeof formData.image === 'string' && formData.image.trim() !== '') {\n          try {\n            let imageToUpload: Blob;\n            \n            // Si es una data URL (base64)\n            if (formData.image.startsWith('data:')) {\n              console.log('🔄 Converting base64 to blob...');\n              imageToUpload = this.dataURLtoBlob(formData.image);\n              console.log('✅ Blob created:', imageToUpload);\n            } \n            // Si es una blob URL\n            else if (formData.image.startsWith('blob:')) {\n              console.log('🔄 Fetching blob from URL...');\n              const response = await fetch(formData.image);\n              imageToUpload = await response.blob();\n              console.log('✅ Blob fetched:', imageToUpload);\n            }\n            else {\n              console.log('❌ Unknown image format, skipping upload. Format:', formData.image.substring(0, 20));\n              delete formData.image;\n              throw new Error('Unknown image format');\n            }\n            \n            console.log('📤 Uploading image blob. Size:', imageToUpload.size, 'Type:', imageToUpload.type);\n            const uploadResult = await lastValueFrom(this.mediaService.upload(imageToUpload));\n            console.log('✅ Upload result COMPLETO:', uploadResult);\n            console.log('✅ Upload result tipo:', typeof uploadResult);\n            console.log('✅ Upload result[0]:', uploadResult[0]);\n            \n            if (uploadResult && uploadResult[0]) {\n              // 🔧 FORMATO CORREGIDO PARA STRAPI V4 - Necesita ser enviado como relación\n              formData.image = uploadResult[0]; // Solo el ID para crear la relación en Strapi\n              \n              console.log('✅ Image processed successfully. ID:', formData.image);\n              console.log('✅ Image type:', typeof formData.image);\n            } else {\n              console.log('❌ Upload failed - no result');\n              delete formData.image;\n            }\n            \n          } catch (error) {\n            console.error('❌ Error uploading image:', error);\n            delete formData.image;\n          }\n        } else {\n          console.log('⚠️ No image to process. Image value:', formData.image);\n          // Si no hay imagen nueva, eliminar el campo en modo edición para no sobrescribir\n          if (this.mode === 'edit') {\n            delete formData.image;\n          }\n        }\n\n        if (this.mode === 'new') {\n          const user = await this.authSvc.getCurrentUser();\n          formData.author = user?.username || 'Unknown';\n          formData.duration = '0:00';\n          formData.song_IDS = [];\n          formData.users_IDS = [user?.id];\n        }\n\n        const role = this.mode === 'new' ? 'create' : 'update';\n        const data = this.mode === 'new' ? \n          formData : \n          this.getDirtyValues(this.formGroup);\n        \n        console.log('📤 Final data to submit:', data);\n        console.log('📤 Image specifically:', data.image);\n        console.log('📤 Image type:', typeof data.image);\n        console.log('📤 Image JSON:', JSON.stringify(data.image));\n        \n        this.modalCtrl.dismiss(data, role);\n      } catch (error) {\n        console.error('❌ Error in submit:', error);\n      }\n    } else {\n      console.log('❌ Form is invalid:', this.formGroup.errors);\n      console.log('❌ Form controls status:', {\n        name: this.formGroup.get('name')?.status,\n        image: this.formGroup.get('image')?.status\n      });\n    }\n  }\n\n  // ✅ MÉTODO AUXILIAR PARA CONVERTIR BASE64 A BLOB\n  private dataURLtoBlob(dataURL: string): Blob {\n    try {\n      const arr = dataURL.split(',');\n      const mime = arr[0].match(/:(.*?);/)![1];\n      const bstr = atob(arr[1]);\n      let n = bstr.length;\n      const u8arr = new Uint8Array(n);\n      \n      while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n      }\n      \n      const blob = new Blob([u8arr], { type: mime });\n      console.log('🔧 dataURLtoBlob created blob:', {\n        size: blob.size,\n        type: blob.type,\n        originalMime: mime\n      });\n      return blob;\n    } catch (error) {\n      console.error('❌ Error in dataURLtoBlob:', error);\n      throw error;\n    }\n  }\n\n  dismiss() {\n    this.modalCtrl.dismiss(null, 'cancel');\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        \n          \n        \n        {{ (mode === 'edit' ? 'Editar playlist' : 'Nueva playlist') }}\n      \n      \n        \n      \n    \n  \n\n\n\n  \n  \n    \n    \n      \n        \n          \n            \n              \n                \n                Seleccionar imagen\n              \n            \n          \n        \n        \n        \n          \n            \n            \n              Nombre de la playlist\n              \n                \n                \n              \n              \n                \n                El nombre es obligatorio\n              \n            \n\n            \n            \n              Duración\n              \n                \n                \n                \n              \n            \n\n            \n            \n              \n                Cancelar\n              \n              \n              \n                \n                {{ mode === 'edit' ? 'Actualizar' : 'Crear' }}\n              \n            \n          \n        \n      \n      \n      \n      \n        \n          \n          Podrás agregar canciones después de crear la playlist\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./playlist-modal.component.scss\n                \n                :host {\n  --modal-bg: #121212;\n  --gradient-start: #1e3a5f;\n  --gradient-end: #0f1419;\n  --spotify-green: #1db954;\n  --spotify-green-hover: #1ed760;\n  --text-primary: #ffffff;\n  --text-secondary: #b3b3b3;\n  --error-color: #ff6b6b;\n  --border-color: #333;\n}\n\n.custom-modal {\n  --width: 540px;\n  --height: 480px;\n  --border-radius: 16px;\n}\n\n// ✅ HEADER MEJORADO\nion-header {\n  background: transparent;\n  position: relative;\n  z-index: 10;\n}\n\nion-toolbar {\n  --background: transparent;\n  --color: var(--text-primary);\n  --border-color: transparent;\n}\n\n.header-content {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.5rem 2rem 1rem;\n\n  .header-left {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n\n    .playlist-icon {\n      width: 40px;\n      height: 40px;\n      background: linear-gradient(135deg, var(--spotify-green), var(--spotify-green-hover));\n      border-radius: 50%;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-shadow: 0 4px 16px rgba(29, 185, 84, 0.3);\n\n      ion-icon {\n        font-size: 20px;\n        color: white;\n      }\n    }\n\n    h1 {\n      color: var(--text-primary);\n      font-size: 1.5rem;\n      font-weight: 700;\n      margin: 0;\n      text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);\n    }\n  }\n\n  .close-button {\n    --color: var(--text-secondary);\n    --border-radius: 50%;\n    --background-hover: rgba(255, 255, 255, 0.1);\n    width: 40px;\n    height: 40px;\n    transition: all 0.3s ease;\n\n    &:hover {\n      --color: var(--text-primary);\n      transform: scale(1.1);\n    }\n  }\n}\n\n// ✅ CONTENIDO PRINCIPAL CON GRADIENTE\n.playlist-content {\n  --background: transparent;\n}\n\n.visual-header {\n  position: relative;\n  min-height: 100%;\n  overflow: hidden;\n\n  .background-gradient {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: linear-gradient(\n      135deg,\n      #1a1a1a 0%,\n      #2d2d2d 25%,\n      #1e1e1e 50%,\n      #0a0a0a 100%\n    );\n    opacity: 0.95;\n  }\n\n  .content-overlay {\n    position: relative;\n    z-index: 2;\n    padding: 0 2rem 2rem;\n  }\n}\n\n// ✅ SECCIÓN PRINCIPAL DEL PLAYLIST\n.playlist-visual {\n  display: flex;\n  gap: 2rem;\n  align-items: center; /* Cambio: centrar verticalmente */\n  margin-bottom: 1.5rem;\n  min-height: 200px; /* Altura mínima para centrado */\n\n  .image-section {\n    flex-shrink: 0;\n\n    .playlist-image-upload {\n      width: 160px;\n      height: 160px;\n      border-radius: 12px;\n      overflow: hidden;\n      border: 3px solid rgba(255, 255, 255, 0.1);\n      transition: all 0.3s ease;\n      cursor: pointer;\n      position: relative;\n\n      &:hover {\n        border-color: var(--spotify-green);\n        transform: scale(1.02);\n        box-shadow: 0 8px 32px rgba(29, 185, 84, 0.2);\n      }\n\n      .upload-placeholder {\n        width: 100%;\n        height: 100%;\n        background: rgba(0, 0, 0, 0.4);\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        gap: 0.5rem;\n        color: var(--text-secondary);\n        transition: all 0.3s ease;\n\n        ion-icon {\n          font-size: 2.5rem;\n          opacity: 0.7;\n        }\n\n        span {\n          font-size: 0.9rem;\n          font-weight: 500;\n        }\n\n        &:hover {\n          background: rgba(29, 185, 84, 0.1);\n          color: var(--spotify-green);\n        }\n      }\n\n      img {\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n  }\n\n  .playlist-form-section {\n    flex: 1;\n    min-width: 0;\n    display: flex;\n    flex-direction: column;\n    justify-content: center; /* Centrar el contenido del formulario */\n  }\n}\n\n// ✅ INPUTS PERSONALIZADOS\n.input-container {\n  margin-bottom: 1.5rem;\n\n  .input-label {\n    display: block;\n    color: var(--text-primary);\n    font-size: 0.95rem;\n    font-weight: 600;\n    margin-bottom: 0.5rem;\n    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.5);\n  }\n\n  .custom-input-wrapper {\n    position: relative;\n    background: rgba(0, 0, 0, 0.6); /* Fondo más oscuro */\n    border: 2px solid rgba(255, 255, 255, 0.15);\n    border-radius: 12px;\n    transition: all 0.3s ease;\n    backdrop-filter: blur(10px);\n\n    &:hover {\n      border-color: rgba(255, 255, 255, 0.25);\n    }\n\n    &:focus-within {\n      border-color: var(--spotify-green);\n      box-shadow: 0 0 0 3px rgba(29, 185, 84, 0.2);\n    }\n\n    &.readonly {\n      background: rgba(0, 0, 0, 0.3);\n      border-color: rgba(255, 255, 255, 0.08);\n    }\n\n    .custom-input {\n      --background: transparent;\n      --color: var(--text-primary);\n      --placeholder-color: var(--text-secondary);\n      --padding-start: 1rem;\n      --padding-end: 1rem;\n      font-size: 1rem;\n      font-weight: 500;\n      min-height: 48px;\n\n      &.readonly {\n        --color: var(--text-secondary);\n      }\n\n      &.error {\n        --color: var(--error-color);\n      }\n    }\n\n    .input-icon {\n      position: absolute;\n      right: 1rem;\n      top: 50%;\n      transform: translateY(-50%);\n      color: var(--text-secondary);\n      font-size: 1.2rem;\n    }\n  }\n\n  .error-text {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    margin-top: 0.5rem;\n    color: var(--error-color);\n    font-size: 0.85rem;\n    animation: slideIn 0.3s ease;\n\n    ion-icon {\n      font-size: 1rem;\n    }\n  }\n}\n\n// ✅ BOTONES DE ACCIÓN\n.action-buttons {\n  display: flex;\n  gap: 1rem;\n  margin-top: 2rem;\n\n  .cancel-btn {\n    --background: transparent;\n    --color: var(--text-secondary);\n    --border-color: rgba(255, 255, 255, 0.2);\n    --border-width: 2px;\n    --border-radius: 24px;\n    flex: 1;\n    height: 48px;\n    font-weight: 600;\n    transition: all 0.3s ease;\n\n    &:hover {\n      --background: rgba(255, 255, 255, 0.05);\n      --color: var(--text-primary);\n      --border-color: rgba(255, 255, 255, 0.3);\n    }\n  }\n\n  .create-btn {\n    --background: linear-gradient(135deg, var(--spotify-green), var(--spotify-green-hover));\n    --color: white;\n    --border-radius: 24px;\n    flex: 2;\n    height: 48px;\n    font-weight: 700;\n    letter-spacing: 0.5px;\n    box-shadow: 0 4px 20px rgba(29, 185, 84, 0.4);\n    transition: all 0.3s ease;\n\n    &:hover:not(:disabled) {\n      --background: linear-gradient(135deg, var(--spotify-green-hover), #17c653);\n      transform: translateY(-2px);\n      box-shadow: 0 6px 24px rgba(29, 185, 84, 0.5);\n    }\n\n    &:disabled {\n      --background: rgba(255, 255, 255, 0.1);\n      --color: var(--text-secondary);\n      box-shadow: none;\n      transform: none;\n    }\n  }\n}\n\n// ✅ TIP INFORMATIVO\n.info-tip {\n  background: rgba(29, 185, 84, 0.1);\n  border: 1px solid rgba(29, 185, 84, 0.2);\n  border-radius: 12px;\n  padding: 1rem;\n  backdrop-filter: blur(10px);\n\n  .tip-content {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    color: var(--text-secondary);\n\n    ion-icon {\n      color: var(--spotify-green);\n      font-size: 1.25rem;\n      flex-shrink: 0;\n    }\n\n    span {\n      font-size: 0.9rem;\n      line-height: 1.4;\n    }\n  }\n}\n\n// ✅ ANIMACIONES\n@keyframes slideIn {\n  from {\n    opacity: 0;\n    transform: translateY(-10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n// ✅ RESPONSIVE\n@media (max-width: 768px) {\n  .custom-modal {\n    --width: 95vw;\n    --height: 90vh;\n  }\n\n  .header-content {\n    padding: 1rem;\n\n    .header-left {\n      gap: 0.75rem;\n\n      .playlist-icon {\n        width: 32px;\n        height: 32px;\n\n        ion-icon {\n          font-size: 16px;\n        }\n      }\n\n      h1 {\n        font-size: 1.25rem;\n      }\n    }\n  }\n\n  .content-overlay {\n    padding: 0 1rem 1rem;\n  }\n\n  .playlist-visual {\n    flex-direction: column;\n    align-items: center;\n    gap: 1.5rem;\n\n    .image-section .playlist-image-upload {\n      width: 140px;\n      height: 140px;\n    }\n  }\n\n  .action-buttons {\n    flex-direction: column;\n\n    .cancel-btn,\n    .create-btn {\n      flex: 1;\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                              {{ (mode === \\'edit\\' ? \\'Editar playlist\\' : \\'Nueva playlist\\') }}                                                                                                                              Seleccionar imagen                                                                                                            Nombre de la playlist                                                                                                          El nombre es obligatorio                                                                Duración                                                                                                                                              Cancelar                                                                          {{ mode === \\'edit\\' ? \\'Actualizar\\' : \\'Crear\\' }}                                                                                                Podrás agregar canciones después de crear la playlist                    '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlaylistsMappingStrapi.html":{"url":"injectables/PlaylistsMappingStrapi.html","title":"injectable - PlaylistsMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlaylistsMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/playlists-mapping-strapi.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de mapeo para playlists específico para Strapi\nManeja la transformación entre el modelo Playlist y la estructura de datos de Strapi\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/playlists-mapping-strapi.service.ts:220\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de creación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras POST\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Playlist\n\n                        \n                            \n                                Modelo Playlist mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/playlists-mapping-strapi.service.ts:238\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de eliminación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras DELETE\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Playlist\n\n                        \n                            \n                                Modelo Playlist mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/playlists-mapping-strapi.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Convierte un objeto de respuesta de Strapi en un modelo Playlist\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos sin procesar de Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Playlist\n\n                        \n                            \n                                Modelo Playlist mapeado con valores por defecto si faltan datos\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, pages: number, data: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/playlists-mapping-strapi.service.ts:125\n                        \n                    \n\n\n            \n                \n                        Crea un objeto paginado con playlists mapeadas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página actual\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                pages\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número total de páginas\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array de datos sin procesar de Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                Objeto Paginated con playlists mapeadas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/playlists-mapping-strapi.service.ts:229\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de actualización\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras PUT/PATCH\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Playlist\n\n                        \n                            \n                                Modelo Playlist mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Playlist)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/playlists-mapping-strapi.service.ts:21\n                        \n                    \n\n\n            \n                \n                        Prepara los datos de la playlist para ser enviados a Strapi en una operación de creación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Playlist\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Modelo Playlist a convertir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Objeto con estructura compatible con Strapi para POST\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/playlists-mapping-strapi.service.ts:62\n                        \n                    \n\n\n            \n                \n                        Prepara los datos parciales de la playlist para actualización en Strapi\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos parciales del Playlist a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Objeto con estructura compatible con Strapi para PUT/PATCH\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IBaseMapping } from \"../intefaces/base-mapping.interface\";\nimport { Paginated } from \"../../models/paginated.model\";\nimport { Playlist } from \"../../models/playlist.model\";\n\n/**\n * Servicio de mapeo para playlists específico para Strapi\n * Maneja la transformación entre el modelo Playlist y la estructura de datos de Strapi\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class PlaylistsMappingStrapi implements IBaseMapping {\n    \n    /**\n     * Prepara los datos de la playlist para ser enviados a Strapi en una operación de creación\n     * @param data Modelo Playlist a convertir\n     * @returns Objeto con estructura compatible con Strapi para POST\n     */\n    setAdd(data: Playlist): any {\n        const mappedData: any = {\n            name: data.name,\n            author: data.author,\n            duration: data.duration,\n            song_IDS: data.song_IDS ? \n                data.song_IDS.map(id => Number(id)) : [],\n            users_IDS: data.users_IDS ? \n                data.users_IDS.map(id => Number(id)) : [],\n            likes_count: data.likes_count || 0\n        };\n\n        // Manejar imagen en creación - convertir diferentes formatos a ID numérico\n        if (data.image !== undefined) {\n            const imageData: any = data.image;\n            \n            if (typeof imageData === 'number') {\n                mappedData.image = imageData;\n            } else if (typeof imageData === 'object' && imageData !== null) {\n                if (imageData.url && !isNaN(Number(imageData.url))) {\n                    mappedData.image = Number(imageData.url);\n                } else if (imageData.id) {\n                    mappedData.image = Number(imageData.id);\n                } else if (imageData.data && imageData.data.id) {\n                    mappedData.image = Number(imageData.data.id);\n                }\n            } else if (typeof imageData === 'string' && !isNaN(Number(imageData))) {\n                mappedData.image = Number(imageData);\n            }\n        }\n\n        return {\n            data: mappedData\n        };\n    }\n\n    /**\n     * Prepara los datos parciales de la playlist para actualización en Strapi\n     * @param data Datos parciales del Playlist a actualizar\n     * @returns Objeto con estructura compatible con Strapi para PUT/PATCH\n     */\n    setUpdate(data: Partial): any {\n        const mappedData: any = {};\n        \n        Object.keys(data).forEach(key => {\n            switch(key) {\n                case 'name': \n                    mappedData.name = data[key];\n                    break;\n                case 'author': \n                    mappedData.author = data[key];\n                    break;\n                case 'duration': \n                    mappedData.duration = data[key];\n                    break;\n                case 'song_IDS': \n                    mappedData.song_IDS = data[key] ? \n                        data[key]?.map(id => Number(id)) : [];\n                    break;\n                case 'users_IDS': \n                    mappedData.users_IDS = data[key] ? \n                        data[key]?.map(id => Number(id)) : [];\n                    break;\n                case 'image': \n                    // Manejo de imagen en actualización\n                    if (data[key] === null) {\n                        mappedData.image = null; // Para remover imagen\n                    } else if (data[key]) {\n                        const imageData: any = data[key];\n                        \n                        if (typeof imageData === 'number') {\n                            mappedData.image = imageData;\n                        } else if (typeof imageData === 'object' && imageData !== null) {\n                            if (imageData.data && imageData.data.id) {\n                                mappedData.image = Number(imageData.data.id);\n                            } else if (imageData.id) {\n                                mappedData.image = Number(imageData.id);\n                            } else if (imageData.url && !isNaN(Number(imageData.url))) {\n                                mappedData.image = Number(imageData.url);\n                            }\n                        } else if (typeof imageData === 'string' && !isNaN(Number(imageData))) {\n                            mappedData.image = Number(imageData);\n                        }\n                    }\n                    break;\n                case 'likes_count':\n                    mappedData.likes_count = data[key] || 0;\n                    break;\n            }\n        });\n\n        return {\n            data: mappedData\n        };\n    }\n\n    /**\n     * Crea un objeto paginado con playlists mapeadas\n     * @param page Número de página actual\n     * @param pageSize Tamaño de página\n     * @param pages Número total de páginas\n     * @param data Array de datos sin procesar de Strapi\n     * @returns Objeto Paginated con playlists mapeadas\n     */\n    getPaginated(page: number, pageSize: number, pages: number, data: any[]): Paginated {\n        return {\n            page, \n            pageSize, \n            pages, \n            data: data.map(d => this.getOne(d))\n        };\n    }\n\n    /**\n     * Convierte un objeto de respuesta de Strapi en un modelo Playlist\n     * @param data Datos sin procesar de Strapi\n     * @returns Modelo Playlist mapeado con valores por defecto si faltan datos\n     */\n    getOne(data: any): Playlist {\n        let attributes, id;\n        \n        // Manejar diferentes estructuras de respuesta de Strapi\n        if (data.data && data.data.attributes) {\n            attributes = data.data.attributes;\n            id = data.data.id;\n        } else if (data.attributes) {\n            attributes = data.attributes;\n            id = data.id;\n        } else if (data.id && (data.name || data.author)) {\n            attributes = data;\n            id = data.id;\n        } else {\n            // Fallback para datos inválidos\n            return {\n                id: data.id?.toString() || 'unknown',\n                name: 'Unknown Playlist',\n                author: 'Unknown Author',\n                duration: '0:00',\n                song_IDS: [],\n                users_IDS: [],\n                likes_count: 0,\n                image: undefined\n            };\n        }\n\n        // Mapear IDs de canciones\n        let songIds: string[] = [];\n        if (attributes.song_IDS) {\n            if (attributes.song_IDS.data && Array.isArray(attributes.song_IDS.data)) {\n                songIds = attributes.song_IDS.data\n                    .filter((s: any) => s && s.id)\n                    .map((s: any) => s.id.toString());\n            } else if (Array.isArray(attributes.song_IDS)) {\n                songIds = attributes.song_IDS\n                    .filter((s: any) => s && (s.id || s))\n                    .map((s: any) => s.id ? s.id.toString() : s.toString());\n            }\n        }\n\n        // Mapear IDs de usuarios\n        let userIds: string[] = [];\n        if (attributes.users_IDS) {\n            if (attributes.users_IDS.data && Array.isArray(attributes.users_IDS.data)) {\n                userIds = attributes.users_IDS.data\n                    .filter((u: any) => u && u.id)\n                    .map((u: any) => u.id.toString());\n            } else if (Array.isArray(attributes.users_IDS)) {\n                userIds = attributes.users_IDS\n                    .filter((u: any) => u && (u.id || u))\n                    .map((u: any) => u.id ? u.id.toString() : u.toString());\n            }\n        }\n\n        const mappedPlaylist: Playlist = {\n            id: id.toString(),\n            name: attributes.name || 'Unknown Playlist',\n            author: attributes.author || 'Unknown Author',\n            duration: attributes.duration || '0:00',\n            song_IDS: songIds,\n            users_IDS: userIds,\n            likes_count: attributes.likes_count || 0,\n            // Mapear imagen con todos los formatos disponibles\n            image: attributes.image?.data ? {\n                url: attributes.image.data.attributes.url,\n                large: attributes.image.data.attributes.formats?.large?.url || attributes.image.data.attributes.url,\n                medium: attributes.image.data.attributes.formats?.medium?.url || attributes.image.data.attributes.url,\n                small: attributes.image.data.attributes.formats?.small?.url || attributes.image.data.attributes.url,\n                thumbnail: attributes.image.data.attributes.formats?.thumbnail?.url || attributes.image.data.attributes.url,\n            } : undefined\n        };\n\n        return mappedPlaylist;\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de creación\n     * @param data Respuesta de Strapi tras POST\n     * @returns Modelo Playlist mapeado\n     */\n    getAdded(data: any): Playlist {\n        return this.getOne(data);\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de actualización\n     * @param data Respuesta de Strapi tras PUT/PATCH\n     * @returns Modelo Playlist mapeado\n     */\n    getUpdated(data: any): Playlist {\n        return this.getOne(data);\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de eliminación\n     * @param data Respuesta de Strapi tras DELETE\n     * @returns Modelo Playlist mapeado\n     */\n    getDeleted(data: any): Playlist {\n        return this.getOne(data);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PlaylistsPage.html":{"url":"components/PlaylistsPage.html","title":"component - PlaylistsPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PlaylistsPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/playlists/playlists.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-playlists\n            \n\n\n\n            \n                styleUrls\n                ./playlists.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./playlists.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _playlists\n                            \n                            \n                                isWeb\n                            \n                            \n                                page\n                            \n                            \n                                pages\n                            \n                            \n                                pageSize\n                            \n                            \n                                playlists$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPlaylists\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Async\n                                onAddPlaylist\n                            \n                            \n                                    Async\n                                onDeletePlaylist\n                            \n                            \n                                onIonInfinite\n                            \n                            \n                                    Async\n                                onUpdatePlaylist\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(playlistsSvc: PlaylistsService, modalCtrl: ModalController, translate: TranslateService, alertCtrl: AlertController, platform: Platform, authSvc: BaseAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/playlists/playlists.page.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        playlistsSvc\n                                                  \n                                                        \n                                                                        PlaylistsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertCtrl\n                                                  \n                                                        \n                                                                    AlertController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPlaylists\n                        \n                    \n                \n            \n            \n                \nloadPlaylists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/playlists/playlists.page.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/playlists/playlists.page.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onAddPlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    onAddPlaylist()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/playlists/playlists.page.ts:51\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onDeletePlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    onDeletePlaylist(playlist: Playlist)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/playlists/playlists.page.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlist\n                                            \n                                                            Playlist\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onIonInfinite\n                        \n                    \n                \n            \n            \n                \nonIonInfinite(ev: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/playlists/playlists.page.ts:165\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                ev\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onUpdatePlaylist\n                        \n                    \n                \n            \n            \n                \n                        \n                    onUpdatePlaylist(playlist: Playlist)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/playlists/playlists.page.ts:97\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlist\n                                            \n                                                            Playlist\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _playlists\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/playlists/playlists.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isWeb\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/playlists/playlists.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/playlists/playlists.page.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/playlists/playlists.page.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/playlists/playlists.page.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playlists$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._playlists.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/playlists/playlists.page.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { AlertController, ModalController, Platform } from '@ionic/angular';\nimport { PlaylistsService } from '../../core/services/impl/playlists.service';\nimport { Playlist } from '../../core/models/playlist.model';\nimport { Paginated } from '../../core/models/paginated.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BaseAuthenticationService } from '../../core/services/impl/base-authentication.service';\nimport { PlaylistModalComponent } from 'src/app/shared/components/playlist-modal/playlist-modal.component';\n\n@Component({\n  selector: 'app-playlists',\n  templateUrl: './playlists.page.html',\n  styleUrls: ['./playlists.page.scss'],\n})\nexport class PlaylistsPage implements OnInit {\n  private _playlists: BehaviorSubject = new BehaviorSubject([]);\n  playlists$: Observable = this._playlists.asObservable();\n  \n  isWeb: boolean = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n\n  constructor(\n    private playlistsSvc: PlaylistsService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: BaseAuthenticationService\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit() {\n    this.loadPlaylists();\n  }\n\n  loadPlaylists() {\n    this.page = 1;\n    this.playlistsSvc.getAll(this.page, this.pageSize).subscribe({\n      next: (response: Paginated) => {\n        this._playlists.next([...response.data]);\n        this.page++;\n        this.pages = response.pages;\n      }\n    });\n  }\n\n  async onAddPlaylist() {\n    const user = await this.authSvc.getCurrentUser();\n    if (!user) {\n      console.error('No user found');\n      return;\n    }\n\n    const modal = await this.modalCtrl.create({\n      component: PlaylistModalComponent,\n      componentProps: {}\n    });\n\n    modal.onDidDismiss().then((result) => {\n      if (result.role === 'create') {\n        const newPlaylist: Playlist = {\n          name: result.data.name,\n          author: user.username,\n          duration: '0:00',\n          song_IDS: [],\n          users_IDS: [user.id],\n          ...(result.data.image && {\n            image: {\n              url: result.data.image.url,\n              thumbnail: result.data.image.url,\n              large: result.data.image.url,\n              medium: result.data.image.url,\n              small: result.data.image.url\n            }\n          })\n        };\n\n        this.playlistsSvc.add(newPlaylist).subscribe({\n          next: () => {\n            this.loadPlaylists();\n              \n          },\n          error: (err) => {\n            console.error('Error creating playlist:', err);\n          }\n        });\n      }\n    });\n\n    await modal.present();\n  }\n\n  async onUpdatePlaylist(playlist: Playlist) {\n    const user = await this.authSvc.getCurrentUser();\n    if (!user) {\n      console.error('No user found');\n      return;\n    }\n\n    const modal = await this.modalCtrl.create({\n      component: PlaylistModalComponent,\n      componentProps: {\n        playlist: { ...playlist } \n      }\n    });\n\n    modal.onDidDismiss().then((result) => {\n      if (result.role === 'update' && playlist.id) {\n        const updatedPlaylist: Playlist = {\n          ...playlist, \n          name: result.data.name,\n          ...(result.data.image && {\n            image: {\n              url: result.data.image.url,\n              thumbnail: result.data.image.url,\n              large: result.data.image.url,\n              medium: result.data.image.url,\n              small: result.data.image.url\n            }\n          })\n        };\n\n        this.playlistsSvc.update(playlist.id, updatedPlaylist).subscribe({\n          next: () => {\n            this.loadPlaylists();\n          },\n          error: (err) => {\n            console.error('Error updating playlist:', err);\n          }\n        });\n      }\n    });\n\n    await modal.present();\n  }\n\n  async onDeletePlaylist(playlist: Playlist) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate.get('PLAYLIST.MESSAGES.DELETE_CONFIRM').toPromise(),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'confirm',\n          handler: () => {\n            this.playlistsSvc.delete(playlist.id).subscribe({\n              next: () => this.loadPlaylists(),\n              error: console.error\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  onIonInfinite(ev: any) {\n    if (this.page ) => {\n          this._playlists.next([...this._playlists.value, ...response.data]);\n          this.page++;\n          ev.target.complete();\n        }\n      });\n    } else {\n      ev.target.complete();\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n      \n    \n    {{ 'PLAYLIST.TITLE' | translate }}\n    \n      \n        \n        {{ 'PLAYLIST.ADD_BUTTON' | translate }}\n      \n    \n  \n\n\n\n  \n    \n      \n        \n          \n        \n        \n          {{playlist.name}}\n          {{playlist.author}}\n          {{playlist.duration}}\n        \n        \n          \n            \n          \n          \n            \n          \n        \n      \n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./playlists.page.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ \\'PLAYLIST.TITLE\\' | translate }}                          {{ \\'PLAYLIST.ADD_BUTTON\\' | translate }}                                                                    {{playlist.name}}          {{playlist.author}}          {{playlist.duration}}                                                                                                            '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'PlaylistsPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlaylistsPageModule.html":{"url":"modules/PlaylistsPageModule.html","title":"module - PlaylistsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    PlaylistsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PlaylistsPageModule\n\n\n\ncluster_PlaylistsPageModule_declarations\n\n\n\ncluster_PlaylistsPageModule_imports\n\n\n\n\nPlaylistsPage\n\nPlaylistsPage\n\n\n\nPlaylistsPageModule\n\nPlaylistsPageModule\n\nPlaylistsPageModule -->\n\nPlaylistsPage->PlaylistsPageModule\n\n\n\n\n\nPlaylistsPageRoutingModule\n\nPlaylistsPageRoutingModule\n\nPlaylistsPageModule -->\n\nPlaylistsPageRoutingModule->PlaylistsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nPlaylistsPageModule -->\n\nSharedModule->PlaylistsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/playlists/playlists.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PlaylistsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PlaylistsPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { PlaylistsPageRoutingModule } from './playlists-routing.module';\nimport { PlaylistsPage } from './playlists.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PlaylistsPageRoutingModule,\n    TranslateModule.forChild(),\n    SharedModule\n  ],\n  declarations: [PlaylistsPage]\n})\nexport class PlaylistsPageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PlaylistsPageRoutingModule.html":{"url":"modules/PlaylistsPageRoutingModule.html","title":"module - PlaylistsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PlaylistsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/playlists/playlists-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PlaylistsPage } from './playlists.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlaylistsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlaylistsPageRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PlaylistsService.html":{"url":"injectables/PlaylistsService.html","title":"injectable - PlaylistsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PlaylistsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/playlists.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                add\n                            \n                            \n                                addSong\n                            \n                            \n                                getAllByUser\n                            \n                            \n                                getByUserDisplayName\n                            \n                            \n                                getByUserId\n                            \n                            \n                                getUserPlaylists\n                            \n                            \n                                    Private\n                                mapImageField\n                            \n                            \n                                removeSong\n                            \n                            \n                                    \n                                update\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repository: IPlaylistsRepository)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/playlists.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        IPlaylistsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        add\n                        \n                    \n                \n            \n            \n                \n                        \n                    add(playlist: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:21\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlist\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addSong\n                        \n                    \n                \n            \n            \n                \naddSong(playlistId: string, songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/playlists.service.ts:120\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllByUser\n                        \n                    \n                \n            \n            \n                \ngetAllByUser(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/playlists.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserDisplayName\n                        \n                    \n                \n            \n            \n                \ngetByUserDisplayName(displayName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/playlists.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                displayName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByUserId\n                        \n                    \n                \n            \n            \n                \ngetByUserId(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/playlists.service.ts:78\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserPlaylists\n                        \n                    \n                \n            \n            \n                \ngetUserPlaylists(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/playlists.service.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mapImageField\n                        \n                    \n                \n            \n            \n                \n                        \n                    mapImageField(image: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/playlists.service.ts:50\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                image\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeSong\n                        \n                    \n                \n            \n            \n                \nremoveSong(playlistId: string, songId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/playlists.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        update\n                        \n                    \n                \n            \n            \n                \n                        \n                    update(id: string, playlist: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlist\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { IPlaylistsService } from '../interfaces/playlists-service.interface';\nimport { Playlist } from '../../models/playlist.model';\nimport { PLAYLISTS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { Paginated } from '../../models/paginated.model';\nimport { IPlaylistsRepository } from '../../repositories/intefaces/playlists-repository.interface';\nimport { map, Observable, switchMap, catchError, of } from 'rxjs';\nimport { SearchParams } from '../../repositories/intefaces/base-repository.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlaylistsService extends BaseService implements IPlaylistsService {\n  constructor(\n    @Inject(PLAYLISTS_REPOSITORY_TOKEN) repository: IPlaylistsRepository\n  ) {\n    super(repository);\n  }\n\n  override add(playlist: any): Observable {\n    const playlistData: Playlist = {\n      id: playlist.id,\n      name: playlist.name,\n      author: playlist.author,\n      duration: playlist.duration,\n      song_IDS: playlist.song_IDS || [],\n      users_IDS: playlist.users_IDS || [],\n      image: this.mapImageField(playlist.image),\n      likes_count: 0\n    };\n\n    return super.add(playlistData);\n  }\n\n  override update(id: string, playlist: any): Observable {\n    const playlistData: Playlist = {\n      id,\n      name: playlist.name,\n      author: playlist.author,\n      duration: playlist.duration,\n      song_IDS: playlist.song_IDS || [],\n      users_IDS: playlist.users_IDS || [],\n      image: this.mapImageField(playlist.image),\n      likes_count: 0\n    };\n    return super.update(id, playlistData);\n  }\n\n  private mapImageField(image: any): any {\n    if (!image) return undefined;\n    if (typeof image === 'number') {\n      return image;\n    }\n    if (typeof image === 'object') {\n      if (image?.data?.id) {\n        return image.data.id;\n      }\n      if (image?.id) {\n        return image.id;\n      }\n    }\n    console.warn('⚠️ Unrecognized image format:', image);\n    return undefined;\n  }\n\n  getAllByUser(userId: string): Observable {\n    const filters: SearchParams = { 'user': userId };\n    return this.repository.getAll(1, 1000, filters).pipe(\n      map(res => Array.isArray(res) ? res : res.data),\n      catchError(error => {\n        console.error('Error in getAllByUser:', error);\n        return of([]);\n      })\n    );\n  }\n\n  getByUserId(userId: string): Observable {\n    return this.repository.getAll(1, 1000, {}).pipe(\n      map(res => {\n        const playlists = Array.isArray(res) ? res : res.data;\n        return playlists.filter(playlist => \n          Array.isArray(playlist.users_IDS) && \n          playlist.users_IDS.includes(userId)\n        );\n      }),\n      catchError(error => {\n        console.error('Error in getByUserId:', error);\n        return of([]);\n      })\n    );\n  }\n\n  getByUserDisplayName(displayName: string): Observable {\n    if (!displayName) return of([]);\n    return this.repository.getAll(1, 1000, {}).pipe(\n      map(res => {\n        const playlists = Array.isArray(res) ? res : res.data;\n        return playlists.filter(playlist => \n          playlist.author?.toLowerCase() === displayName.toLowerCase()\n        );\n      }),\n      catchError(error => {\n        console.error('Error in getByUserDisplayName:', error);\n        return of([]);\n      })\n    );\n  }\n\n  getUserPlaylists(userId: string): Observable> {\n    const filters: SearchParams = { 'user': userId };\n    return this.getAll(1, 25, filters).pipe(\n      catchError(error => {\n        console.error('Error in getUserPlaylists:', error);\n        return of([]);\n      })\n    );\n  }\n\n  addSong(playlistId: string, songId: string): Observable {\n    return this.getById(playlistId).pipe(\n      switchMap(playlist => {\n        if (!playlist) throw new Error('Playlist not found');\n        const updatedPlaylist: Playlist = {\n          ...playlist,\n          song_IDS: [...(playlist.song_IDS || []), songId]\n        };\n        return this.update(playlistId, updatedPlaylist);\n      }),\n      catchError(error => {\n        console.error('Error adding song to playlist:', error);\n        throw error;\n      })\n    );\n  }\n\n  removeSong(playlistId: string, songId: string): Observable {\n    return this.getById(playlistId).pipe(\n      switchMap(playlist => {\n        if (!playlist) throw new Error('Playlist not found');\n        const updatedPlaylist: Playlist = {\n          ...playlist,\n          song_IDS: (playlist.song_IDS || []).filter(id => id !== songId)\n        };\n        return this.update(playlistId, updatedPlaylist);\n      }),\n      catchError(error => {\n        console.error('Error removing song from playlist:', error);\n        throw error;\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageModule.html":{"url":"modules/ProfilePageModule.html","title":"module - ProfilePageModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\n\nProfilePage\n\nProfilePage\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ProfilePage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ProfilePageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ProfilePage } from './profile.page';\nimport { ProfilePageRoutingModule } from './profile-routing.module';\nimport { SharedModule } from '../../shared/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    IonicModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule.forChild(),\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfilePageRoutingModule.html":{"url":"modules/ProfilePageRoutingModule.html","title":"module - ProfilePageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfilePageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/profile/profile-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProviderMetadata.html":{"url":"interfaces/ProviderMetadata.html","title":"interface - ProviderMetadata","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProviderMetadata\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            public_id\n                                        \n                                \n                                \n                                        \n                                            resource_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        public_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        public_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resource_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReactiveEnrichedSong.html":{"url":"interfaces/ReactiveEnrichedSong.html","title":"interface - ReactiveEnrichedSong","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReactiveEnrichedSong\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.page.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            EnrichedSong\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            isLikedByCurrentUser\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        isLikedByCurrentUser\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isLikedByCurrentUser:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, catchError, forkJoin, map, Observable, of, Subject, combineLatest, debounceTime, distinctUntilChanged, switchMap } from 'rxjs';\nimport { Playlist } from 'src/app/core/models/playlist.model';\nimport { User } from 'src/app/core/models/user.model';\nimport { Song } from 'src/app/core/models/song.model';\nimport { Artist } from 'src/app/core/models/artist.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { PlaylistsService } from 'src/app/core/services/impl/playlists.service';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { filter, take, takeUntil, tap, distinctUntilChanged as distinctUntilChangedOperator } from 'rxjs/operators';\nimport { LanguageService } from '../../core/services/language.service';\nimport { UserService } from 'src/app/core/services/impl/user.service';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\nimport { SongEnrichmentService, EnrichedSong } from 'src/app/core/services/impl/song-enrichment.service';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { EnhancedAudioPlayerService } from 'src/app/core/services/impl/enhanced-audio-player.service';\nimport { ToastController } from '@ionic/angular';\nimport { SocialService } from 'src/app/core/services/impl/social.service';\n\n// Interfaces para búsqueda\ninterface ReactiveEnrichedSong extends EnrichedSong {\n  isLikedByCurrentUser: boolean;\n}\n\ninterface SearchResult {\n  songs: ReactiveEnrichedSong[];\n  playlists: Playlist[];\n  artists: Artist[];\n}\n\ninterface SearchSuggestion {\n  type: 'song' | 'playlist' | 'artist';\n  id: string;\n  name: string;\n  subtitle?: string;\n  image?: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit, OnDestroy {\n  isMobile: boolean = false;\n  showSearch: boolean = false;\n  currentLang: string;\n  selectedTab: 'all' | 'music' | 'podcasts' = 'all';\n  searchQuery: string = '';\n\n  // ================================================================\n  // PROPIEDADES DE BÚSQUEDA\n  // ================================================================\n  private searchSubject = new Subject();\n  isSearching = false;\n  showSearchResults = false;\n  searchSuggestions: SearchSuggestion[] = [];\n  searchResults: SearchResult = {\n    songs: [],\n    playlists: [],\n    artists: []\n  };\n\n  // ================================================================\n  // PROPIEDADES EXISTENTES\n  // ================================================================\n  private _quickAccess = new BehaviorSubject([]);\n  quickAccess$ = this._quickAccess.asObservable();\n\n  private _baseNewReleases = new BehaviorSubject([]);\n  private _baseRecommendedSongs = new BehaviorSubject([]);\n\n  newReleases$!: Observable;\n  recommendedSongs$!: Observable;\n\n  private _currentUser = new BehaviorSubject(null);\n  currentUser$ = this._currentUser.asObservable();\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private router: Router,\n    public authSvc: BaseAuthenticationService,\n    private playlistsSvc: PlaylistsService,\n    private songsSvc: SongsService,\n    private artistsSvc: ArtistsService,\n    private songEnrichmentService: SongEnrichmentService,\n    private languageService: LanguageService,\n    private userService: UserService,\n    private enhancedAudioPlayer: EnhancedAudioPlayerService,\n    private toastController: ToastController,\n    private socialService: SocialService,\n    \n    @Inject(COLLECTION_SUBSCRIPTION_TOKEN) \n    private collectionSubscriptionSvc: ICollectionSubscription & ICollectionSubscription\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n    this.setupReactiveObservables();\n    this.setupSearchObservables();\n  }\n\n  // ================================================================\n  // CONFIGURACIÓN DE OBSERVABLES\n  // ================================================================\n\n  private setupReactiveObservables() {\n    this.newReleases$ = combineLatest([\n      this._baseNewReleases.asObservable(),\n      this.socialService.likedSongs$\n    ]).pipe(\n      map(([songs, likedSongs]) => {\n        return songs.map(song => ({\n          ...song,\n          isLikedByCurrentUser: likedSongs.has(song.id)\n        })) as ReactiveEnrichedSong[];\n      }),\n      distinctUntilChangedOperator((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)),\n      takeUntil(this.destroy$)\n    );\n\n    this.recommendedSongs$ = combineLatest([\n      this._baseRecommendedSongs.asObservable(),\n      this.socialService.likedSongs$\n    ]).pipe(\n      map(([songs, likedSongs]) => {\n        return songs.map(song => ({\n          ...song,\n          isLikedByCurrentUser: likedSongs.has(song.id)\n        })) as ReactiveEnrichedSong[];\n      }),\n      distinctUntilChangedOperator((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  // ================================================================\n  // ✅ NUEVA FUNCIONALIDAD DE BÚSQUEDA\n  // ================================================================\n\n  /**\n   * Configurar observables de búsqueda en tiempo real\n   */\n  private setupSearchObservables() {\n    this.searchSubject.pipe(\n      debounceTime(300), // Esperar 300ms después de que el usuario deje de escribir\n      distinctUntilChanged(), // Solo procesar si el término cambió\n      tap(term => {\n        this.isSearching = !!term;\n        this.showSearchResults = !!term;\n        \n        if (!term) {\n          this.clearSearchResults();\n        }\n      }),\n      switchMap(term => {\n        if (!term || term.length  {\n        this.isSearching = false;\n        if (results) {\n          this.searchResults = results;\n          this.generateSearchSuggestions(results);\n        }\n      },\n      error: (error) => {\n        console.error('Search error:', error);\n        this.isSearching = false;\n        this.clearSearchResults();\n      }\n    });\n  }\n\n  /**\n   * Realizar búsqueda en tiempo real\n   */\n  private performSearch(term: string): Observable {\n    const searchTerm = term.toLowerCase().trim();\n    \n    console.log('Performing search for:', searchTerm);\n\n    return forkJoin({\n      songs: this.searchSongs(searchTerm),\n      playlists: this.searchPlaylists(searchTerm),\n      artists: this.searchArtists(searchTerm)\n    }).pipe(\n      map(({ songs, playlists, artists }) => ({\n        songs,\n        playlists,\n        artists\n      })),\n      catchError(error => {\n        console.error('Search error:', error);\n        return of({\n          songs: [],\n          playlists: [],\n          artists: []\n        });\n      })\n    );\n  }\n\n  /**\n   * Buscar canciones\n   */\n  private searchSongs(term: string): Observable {\n    return this.songsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      switchMap(songs => this.songEnrichmentService.enrichSongs(songs)),\n      switchMap(enrichedSongs => {\n        // Combinar con likes del usuario\n        return this.socialService.likedSongs$.pipe(\n          take(1),\n          map(likedSongs => \n            enrichedSongs.map(song => ({\n              ...song,\n              isLikedByCurrentUser: likedSongs.has(song.id)\n            })) as ReactiveEnrichedSong[]\n          )\n        );\n      }),\n      catchError(error => {\n        console.error('Error searching songs:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Buscar playlists\n   */\n  private searchPlaylists(term: string): Observable {\n    return this.playlistsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      catchError(error => {\n        console.error('Error searching playlists:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Buscar artistas\n   */\n  private searchArtists(term: string): Observable {\n    return this.artistsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      catchError(error => {\n        console.error('Error searching artists:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Generar sugerencias de búsqueda\n   */\n  private generateSearchSuggestions(results: SearchResult) {\n    const suggestions: SearchSuggestion[] = [];\n\n    // Agregar canciones a las sugerencias\n    results.songs.slice(0, 3).forEach(song => {\n      suggestions.push({\n        type: 'song',\n        id: song.id,\n        name: song.name,\n        subtitle: song.artistNames?.join(', ') || 'Unknown Artist',\n        image: song.image?.url\n      });\n    });\n\n    // Agregar playlists a las sugerencias\n    results.playlists.slice(0, 2).forEach(playlist => {\n      suggestions.push({\n        type: 'playlist',\n        id: playlist.id,\n        name: playlist.name,\n        subtitle: `Playlist • ${playlist.author || 'Unknown'}`,\n        image: playlist.image?.url\n      });\n    });\n\n    // Agregar artistas a las sugerencias\n    results.artists.slice(0, 2).forEach(artist => {\n      suggestions.push({\n        type: 'artist',\n        id: artist.id,\n        name: artist.name,\n        subtitle: `Artist • ${artist.followers_count || 0} followers`,\n        image: artist.image?.url\n      });\n    });\n\n    this.searchSuggestions = suggestions;\n  }\n\n  /**\n   * Limpiar resultados de búsqueda\n   */\n  private clearSearchResults() {\n    this.searchResults = {\n      songs: [],\n      playlists: [],\n      artists: []\n    };\n    this.searchSuggestions = [];\n    this.showSearchResults = false;\n  }\n\n  // ================================================================\n  // EVENTOS DE BÚSQUEDA\n  // ================================================================\n\n  /**\n   * Manejar cambio en el campo de búsqueda\n   */\n  onSearchChange(event: CustomEvent) {\n    const term = event.detail.value || '';\n    this.searchQuery = term;\n    this.searchSubject.next(term);\n  }\n\n  /**\n   * Manejar foco en el campo de búsqueda\n   */\n  onSearchFocus() {\n    if (this.searchQuery && this.searchQuery.length >= 2) {\n      this.showSearchResults = true;\n    }\n  }\n\n  /**\n   * Manejar pérdida de foco (con delay para permitir clicks)\n   */\n  onSearchBlur() {\n    setTimeout(() => {\n      this.showSearchResults = false;\n    }, 200);\n  }\n\n  /**\n   * Seleccionar una sugerencia\n   */\n  selectSearchSuggestion(suggestion: SearchSuggestion) {\n    this.searchQuery = suggestion.name;\n    this.showSearchResults = false;\n\n    switch (suggestion.type) {\n      case 'song':\n        const song = this.searchResults.songs.find(s => s.id === suggestion.id);\n        if (song) {\n          this.openSong(song);\n        }\n        break;\n      case 'playlist':\n        const playlist = this.searchResults.playlists.find(p => p.id === suggestion.id);\n        if (playlist) {\n          this.openPlaylist(playlist);\n        }\n        break;\n      case 'artist':\n        this.router.navigate(['/artist', suggestion.id]);\n        break;\n    }\n  }\n\n  /**\n   * Ir a página de resultados completos\n   */\n  goToFullSearchResults() {\n    if (this.searchQuery.trim()) {\n      this.router.navigate(['/search'], { \n        queryParams: { q: this.searchQuery.trim() } \n      });\n    }\n  }\n\n  /**\n   * Limpiar búsqueda\n   */\n  clearSearch() {\n    this.searchQuery = '';\n    this.searchSubject.next('');\n    this.clearSearchResults();\n  }\n\n  // ================================================================\n  // MÉTODOS EXISTENTES (sin cambios)\n  // ================================================================\n\n  ngOnInit() {\n    this.checkIfMobile();\n    window.addEventListener('resize', this.checkIfMobile.bind(this));\n\n    this.authSvc.user$.pipe(\n        filter(user => user !== undefined),\n        switchMap(user => {\n            if (!user) return of(null);\n            return this.userService.getById(user.id);\n        }),\n        takeUntil(this.destroy$)\n    ).subscribe({\n        next: (userData) => {\n            if (userData) {\n                const updatedUser: User = {\n                    ...userData,\n                    image: userData.image || undefined\n                };\n                this._currentUser.next(updatedUser);\n            }\n        },\n        error: (error) => {\n            console.error('Error loading user data:', error);\n        }\n    });\n  \n    this.authSvc.ready$.pipe(\n        filter(ready => ready === true),\n        take(1),\n        switchMap(() => {\n            return this.authSvc.authenticated$;\n        }),\n        take(1),\n        takeUntil(this.destroy$)\n    ).subscribe(isAuthenticated => {\n        if (!isAuthenticated) {\n            this.router.navigate(['/login']);\n            return;\n        }\n\n        this.loadUserContent();\n        this.setupCollectionSubscriptions();\n    });\n  }\n\n  ngOnDestroy() {\n    this.collectionSubscriptionSvc.unsubscribe('playlists');\n    this.collectionSubscriptionSvc.unsubscribe('songs');\n    \n    this.destroy$.next();\n    this.destroy$.complete();\n    \n    window.removeEventListener('resize', this.checkIfMobile.bind(this));\n  }\n\n  toggleSearch() {\n    this.showSearch = !this.showSearch;\n    if (!this.showSearch) {\n      this.clearSearch();\n    }\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  selectTab(tab: 'all' | 'music' | 'podcasts') {\n    this.selectedTab = tab;\n  }\n\n  openPlaylist(playlist: Playlist) {\n    this.router.navigate(['/playlist', playlist.id]);\n  }\n\n  async playPlaylist(playlist: Playlist, event?: Event) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (!playlist.song_IDS || playlist.song_IDS.length === 0) {\n      await this.showToast('La playlist está vacía', 'warning');\n      return;\n    }\n\n    try {      \n      const songs = await this.getPlaylistSongs(playlist.song_IDS);\n      if (songs.length > 0) {\n        await this.enhancedAudioPlayer.setEnrichedQueue(songs, 0);\n        await this.enhancedAudioPlayer.playEnrichedSong(songs[0]);\n        await this.showToast(`Reproduciendo: ${playlist.name}`, 'success');\n      } else {\n        await this.showToast('No se pudieron cargar las canciones', 'danger');\n      }\n    } catch (error) {\n      console.error('Error playing playlist:', error);\n      await this.showToast('Error al reproducir la playlist', 'danger');\n    }\n  }\n\n  async openSong(song: Song | EnrichedSong) {\n    try {\n      await this.enhancedAudioPlayer.playEnrichedSong(song);\n      await this.showToast(`Reproduciendo: ${song.name}`, 'success');\n    } catch (error) {\n      console.error('Error playing song:', error);\n      await this.showToast('Error al reproducir la canción', 'danger');\n    }\n  }\n\n  private async getPlaylistSongs(songIds: string[]): Promise {\n    try {\n      const songs: Song[] = [];\n      \n      for (const songId of songIds) {\n        try {\n          const song = await this.songsSvc.getById(songId).toPromise();\n          if (song) {\n            songs.push(song);\n          }\n        } catch (error) {\n          console.error(`Error loading song ${songId}:`, error);\n        }\n      }\n      \n      return songs;\n    } catch (error) {\n      console.error('Error getting playlist songs:', error);\n      return [];\n    }\n  }\n\n  showAllSongs() {\n    this.router.navigate(['/songs']);\n  }\n\n  showAllRecommended() {\n    this.router.navigate(['/recommended']);\n  }\n\n  checkIfMobile() {\n    this.isMobile = window.innerWidth  {\n        const currentPlaylists = this._quickAccess.value;\n        \n        switch (change.type) {\n          case 'added':\n            if (change.data && !currentPlaylists.some(p => p.id === change.id)) {\n              this._quickAccess.next([...currentPlaylists, change.data as Playlist]);\n            }\n            break;\n          case 'modified':\n            if (change.data) {\n              const index = currentPlaylists.findIndex(p => p.id === change.id);\n              if (index !== -1) {\n                const updatedPlaylists = [...currentPlaylists];\n                updatedPlaylists[index] = change.data as Playlist;\n                this._quickAccess.next(updatedPlaylists);\n              }\n            }\n            break;\n          case 'removed':\n            this._quickAccess.next(currentPlaylists.filter(p => p.id !== change.id));\n            break;\n        }\n      });\n\n    // Resto de subscripciones existentes...\n  }\n  \n  private loadUserContent() {    \n    this.authSvc.user$.pipe(\n      filter(user => user !== undefined),\n      take(1),\n      switchMap(user => {\n        if (!user) {\n          throw new Error('No user found');\n        }\n\n        const allSongs$ = this.songsSvc.getAll(1, 1000, { sort: 'createdAt:desc' }).pipe(\n          map(response => 'data' in response ? response.data : response),\n          switchMap(songs => {\n            return this.songEnrichmentService.enrichSongs(songs);\n          }),\n          catchError(err => {\n            return of([]);\n          })\n        );\n\n        return forkJoin({\n          playlists: this.playlistsSvc.getAll(1, 9, { sort: 'createdAt:desc' }).pipe(\n            map(response => 'data' in response ? response.data : response),\n            catchError(err => {\n              return of([]);\n            })\n          ),\n          allSongs: allSongs$\n        });\n      }),\n      map(({ playlists, allSongs }) => {\n        const songs = allSongs.slice(0, 8); \n        const recommendedSongs = allSongs.slice(-8); \n\n        return {\n          playlists,\n          songs,\n          recommendedSongs\n        };\n      })\n    ).subscribe({\n      next: ({ playlists, songs, recommendedSongs }) => {\n        console.log('HomePage: Loading content:', {\n          playlistsCount: playlists.length,\n          songsCount: songs.length,\n          recommendedCount: recommendedSongs.length\n        });\n        \n        this._quickAccess.next(playlists);\n        this._baseNewReleases.next(songs);\n        this._baseRecommendedSongs.next(recommendedSongs);\n      },\n      error: (error) => {\n        console.error('HomePage: Error loading content:', error);\n      }\n    });\n  }\n\n  private isSong(data: any): data is Song {\n    return data \n      && typeof data === 'object' \n      && 'artists_IDS' in data \n      && 'name' in data \n      && 'duration' in data;\n  }\n\n  trackBySongId(index: number, song: ReactiveEnrichedSong): string {\n    return song.id;\n  }\n\n  /**\n   * Obtener imagen por defecto según el tipo\n   */\n  getDefaultImage(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'assets/default-song.png';\n      case 'playlist':\n        return 'assets/default-playlist.png';\n      case 'artist':\n        return 'assets/default-artist.png';\n      default:\n        return 'assets/default-song.png';\n    }\n  }\n\n  goToAbout() {\n    this.router.navigate(['/about']);\n  }\n\n  openRepository() {\n    const url = 'https://github.com/Rafamp34/Proyecto-UMusicWeb';\n    window.open(url, '_blank');\n  }\n\n  /**\n   * Obtener icono según el tipo\n   */\n  getTypeIcon(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'musical-note';\n      case 'playlist':\n        return 'list';\n      case 'artist':\n        return 'person';\n      default:\n        return 'musical-note';\n    }\n  }\n\n  /**\n   * Obtener color según el tipo\n   */\n  getTypeColor(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'success';\n      case 'playlist':\n        return 'secondary';\n      case 'artist':\n        return 'primary';\n      default:\n        return 'medium';\n    }\n  }\n\n  /**\n   * TrackBy function para sugerencias de búsqueda\n   */\n  trackBySuggestionId(index: number, suggestion: SearchSuggestion): string {\n    return `${suggestion.type}-${suggestion.id}`;\n  }\n\n  /**\n   * Exponer router para uso en template\n   */\n  get routerPublic() {\n    return this.router;\n}\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterPage.html":{"url":"components/RegisterPage.html","title":"component - RegisterPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/register/register.page.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-register\n            \n\n\n\n            \n                styleUrls\n                ./register.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./register.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                registerForm\n                            \n                            \n                                showConfirmPassword\n                            \n                            \n                                showPassword\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onLogin\n                            \n                            \n                                    Async\n                                onSubmit\n                            \n                            \n                                    Async\n                                presentErrorToast\n                            \n                            \n                                    Async\n                                presentSuccessToast\n                            \n                            \n                                toggleConfirmPassword\n                            \n                            \n                                togglePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    image\n                                \n                                \n                                    name\n                                \n                                \n                                    surname\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, router: Router, route: ActivatedRoute, authSvc: BaseAuthenticationService, loadingCtrl: LoadingController, toastCtrl: ToastController)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/register/register.page.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingCtrl\n                                                  \n                                                        \n                                                                    LoadingController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastCtrl\n                                                  \n                                                        \n                                                                    ToastController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onLogin\n                        \n                    \n                \n            \n            \n                \nonLogin()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentErrorToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentErrorToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        presentSuccessToast\n                        \n                    \n                \n            \n            \n                \n                        \n                    presentSuccessToast(message: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:95\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleConfirmPassword\n                        \n                    \n                \n            \n            \n                \ntoggleConfirmPassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:124\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        togglePassword\n                        \n                    \n                \n            \n            \n                \ntogglePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/register/register.page.ts:120\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showConfirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/register/register.page.ts:16\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        image\n                    \n                \n\n                \n                    \n                        getimage()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:128\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:132\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        surname\n                    \n                \n\n                \n                    \n                        getsurname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:136\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:140\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:144\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/pages/register/register.page.ts:148\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { firstValueFrom } from 'rxjs';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { passwordsMatchValidator, passwordValidator } from 'src/app/core/utils/validators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage {\n  registerForm: FormGroup;\n  showPassword: boolean = false;\n  showConfirmPassword: boolean = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private route: ActivatedRoute,\n    private authSvc: BaseAuthenticationService,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController\n  ) {\n    this.registerForm = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(2)]],\n      surname: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, passwordValidator]],\n      confirmPassword: ['', [Validators.required]],\n      image: ['']\n    },\n    { validators: passwordsMatchValidator });\n  }\n\n  async onSubmit() {\n    if (this.registerForm.valid) {\n      const loading = await this.loadingCtrl.create({\n        message: 'Creando cuenta...',\n        cssClass: 'custom-loading'\n      });\n      await loading.present();\n\n      try {\n        await firstValueFrom(this.authSvc.signUp({\n          name: this.registerForm.value.name,\n          surname: this.registerForm.value.surname,\n          email: this.registerForm.value.email,\n          password: this.registerForm.value.password,\n          image: this.registerForm.value.image\n        }));\n        \n        await loading.dismiss();\n        await this.presentSuccessToast('¡Cuenta creada con éxito!');\n        const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n        this.router.navigateByUrl(returnUrl);\n\n      } catch (error: any) {\n        await loading.dismiss();\n        let errorMessage = 'Error al crear la cuenta';\n\n        if (error.status === 409) {\n          errorMessage = 'El email ya está registrado';\n        } else if (error.status === 400) {\n          errorMessage = 'Datos de registro inválidos';\n        } else if (error.status === 0) {\n          errorMessage = 'Error de conexión. Comprueba tu internet';\n        } else if (error.error?.message) {\n          errorMessage = error.error.message;\n        }\n\n        await this.presentErrorToast(errorMessage);\n      }\n    }\n  }\n\n  async presentErrorToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000,\n      position: 'top',\n      cssClass: 'error-toast',\n      buttons: [\n        {\n          icon: 'close-outline',\n          role: 'cancel'\n        }\n      ]\n    });\n    await toast.present();\n  }\n\n  async presentSuccessToast(message: string) {\n    const toast = await this.toastCtrl.create({\n      message: message,\n      duration: 3000,\n      position: 'top',\n      cssClass: 'success-toast',\n      buttons: [\n        {\n          icon: 'checkmark-outline',\n          role: 'cancel'\n        }\n      ]\n    });\n    await toast.present();\n  }\n\n  onLogin() {\n    this.registerForm.reset();\n    const returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/home';\n    this.router.navigate(['/login'], {\n      queryParams: { returnUrl: returnUrl },\n      replaceUrl: true\n    });\n  }\n\n  togglePassword() {\n    this.showPassword = !this.showPassword;\n  }\n\n  toggleConfirmPassword() {\n    this.showConfirmPassword = !this.showConfirmPassword;\n  }\n\n  get image() {\n    return this.registerForm.controls['image'];\n  }\n\n  get name() {\n    return this.registerForm.controls['name'];\n  }\n\n  get surname() {\n    return this.registerForm.controls['surname'];\n  }\n\n  get email() {\n    return this.registerForm.controls['email'];\n  }\n\n  get password() {\n    return this.registerForm.controls['password'];\n  }\n\n  get confirmPassword() {\n    return this.registerForm.controls['confirmPassword'];\n  }\n}\n    \n\n    \n        \n  \n    \n      \n        Crear cuenta\n        Únete a nuestra comunidad\n      \n\n      \n        \n        \n          \n        \n\n        \n        \n          \n            \n            \n            \n          \n          \n            *Debe introducir su nombre\n            *El nombre debe tener al menos dos caracteres\n          \n        \n\n        \n          \n            \n            \n            \n          \n          \n            *Debe introducir sus apellidos\n            *Los apellidos deben tener al menos dos caracteres\n          \n        \n\n        \n          \n            \n            \n            \n          \n          \n            *Debe introducir un email\n            *Debe introducir un email válido\n          \n        \n\n        \n          \n            \n            \n            \n            \n              \n              \n            \n          \n          \n            *Debe introducir una contraseña\n            *La contraseña debe tener al menos 8 caracteres, una mayúscula, una minúscula, un número y un carácter especial\n          \n        \n        \n        \n          \n            \n            \n            \n            \n              \n              \n            \n          \n          \n            *Las contraseñas no coinciden\n          \n        \n\n        \n          CREAR CUENTA\n        \n\n        \n          ¿Ya tienes una cuenta?\n          \n            INICIAR SESIÓN\n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./register.page.scss\n                \n                :host {\n  --background-color: #121212;\n  --card-background: #181818;\n  --primary-color: #1DB954;\n  --text-primary: #FFFFFF;\n  --text-secondary: #B3B3B3;\n  --error-color: #F15E6C;\n}\n\nion-content {\n  --background: var(--background-color);\n}\n\n.register-wrapper {\n  min-height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n}\n\n.register-container {\n  width: 100%;\n  max-width: 450px;\n  padding: 2rem;\n  background: var(--card-background);\n  border-radius: 8px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\n  animation: fadeIn 0.5s ease-out;\n  margin: 20px auto;\n}\n\n.header-section {\n  text-align: center;\n  margin-bottom: 2rem;\n\n  .title {\n    color: var(--text-primary);\n    font-size: 2rem;\n    font-weight: 700;\n    margin-bottom: 0.5rem;\n  }\n\n  .subtitle {\n    color: var(--text-secondary);\n    font-size: 1rem;\n  }\n}\n\n.profile-picture-section {\n  margin-bottom: 2rem;\n  \n  app-picture-selectable {\n    --background: rgba(255, 255, 255, 0.1);\n    border-radius: 8px;\n    overflow: hidden;\n  }\n}\n\n.form-field {\n  margin-bottom: 1rem;\n}\n\n.input-item {\n  --background: rgba(255, 255, 255, 0.1);\n  --border-radius: 4px;\n  --padding-start: 1rem;\n  --padding-end: 1rem;\n  --highlight-height: 0;\n  --border-width: 0;\n\n  &.item-has-focus {\n    --background: rgba(255, 255, 255, 0.15);\n  }\n\n  ion-icon {\n    color: var(--text-secondary);\n    margin-right: 0.75rem;\n  }\n\n  ion-input {\n    --color: var(--text-primary);\n    --placeholder-color: var(--text-secondary);\n    --placeholder-opacity: 0.8;\n  }\n}\n\n.error-text {\n  color: var(--error-color);\n  font-size: 0.75rem;\n  margin: 0.25rem 0 0 1rem;\n  \n  p {\n    margin: 0.25rem 0;\n  }\n}\n\n.register-button {\n  --background: var(--primary-color);\n  --background-hover: #1ed760;\n  --border-radius: 500px;\n  --color: var(--text-primary);\n  margin-top: 2rem;\n  height: 48px;\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  \n  &:hover {\n    --background: #1ed760;\n  }\n\n  &:disabled {\n    --background: #1db95480;\n    opacity: 0.7;\n  }\n}\n\n.login-section {\n  text-align: center;\n  margin-top: 2rem;\n  \n  p {\n    color: var(--text-secondary);\n    margin-bottom: 1rem;\n  }\n}\n\n.login-link-button {\n  --background: transparent;\n  --background-hover: rgba(255, 255, 255, 0.1);\n  --border-color: rgba(255, 255, 255, 0.3);\n  --border-radius: 500px;\n  --color: var(--text-primary);\n  height: 48px;\n  font-weight: 700;\n  letter-spacing: 1.5px;\n  \n  &:hover {\n    --background: rgba(255, 255, 255, 0.1);\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n// Estilos específicos para el selector de imagen\nion-card {\n  --background: transparent;\n  margin: 0;\n  box-shadow: none;\n  \n  ion-card-content {\n    padding: 0;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Crear cuenta        Únete a nuestra comunidad                                                                                                                                            *Debe introducir su nombre            *El nombre debe tener al menos dos caracteres                                                                                                        *Debe introducir sus apellidos            *Los apellidos deben tener al menos dos caracteres                                                                                                        *Debe introducir un email            *Debe introducir un email válido                                                                                                                                                            *Debe introducir una contraseña            *La contraseña debe tener al menos 8 caracteres, una mayúscula, una minúscula, un número y un carácter especial                                                                                                                                                                    *Las contraseñas no coinciden                                    CREAR CUENTA                          ¿Ya tienes una cuenta?                      INICIAR SESIÓN                              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'RegisterPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageModule.html":{"url":"modules/RegisterPageModule.html","title":"module - RegisterPageModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\n\nRegisterPage\n\nRegisterPage\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RegisterPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            RegisterPageRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RegisterPageRoutingModule } from './register-routing.module';\nimport { RegisterPage } from './register.page';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule,\n    ReactiveFormsModule,\n    SharedModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RegisterPageRoutingModule.html":{"url":"modules/RegisterPageRoutingModule.html","title":"module - RegisterPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RegisterPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/register/register-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchOperators.html":{"url":"interfaces/SearchOperators.html","title":"interface - SearchOperators","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchOperators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            $eq\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            $in\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        $eq\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $eq:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        $in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        $in:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { Playlist } from '../../models/playlist.model';\n\nexport interface SearchOperators {\n  $eq?: string;\n  $in?: string[];\n}\n\nexport interface SearchParams {\n  [key: string]: SearchOperators | string;\n}\n\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchParams.html":{"url":"interfaces/SearchParams.html","title":"interface - SearchParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/intefaces/base-repository.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        SearchOperators | string\n\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/intefaces/base-repository.interface.ts:11\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { Observable } from 'rxjs';\nimport { Model } from '../../models/base.model';\nimport { Paginated } from '../../models/paginated.model';\nimport { Playlist } from '../../models/playlist.model';\n\nexport interface SearchOperators {\n  $eq?: string;\n  $in?: string[];\n}\n\nexport interface SearchParams {\n  [key: string]: SearchOperators | string;\n}\n\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\nexport interface IBaseRepository {\n  getAll(page: number, pageSize: number, filters: SearchParams): Observable>;\n  getById(id: string): Observable;\n  add(entity: T): Observable;\n  update(id: string, entity: T): Observable;\n  delete(id: string): Observable;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult.html":{"url":"interfaces/SearchResult.html","title":"interface - SearchResult","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            artists\n                                        \n                                \n                                \n                                        \n                                            playlists\n                                        \n                                \n                                \n                                        \n                                            songs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists:         Artist[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Artist[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlists:         Playlist[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Playlist[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        songs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        songs:     ReactiveEnrichedSong[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ReactiveEnrichedSong[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, catchError, forkJoin, map, Observable, of, Subject, combineLatest, debounceTime, distinctUntilChanged, switchMap } from 'rxjs';\nimport { Playlist } from 'src/app/core/models/playlist.model';\nimport { User } from 'src/app/core/models/user.model';\nimport { Song } from 'src/app/core/models/song.model';\nimport { Artist } from 'src/app/core/models/artist.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { PlaylistsService } from 'src/app/core/services/impl/playlists.service';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { filter, take, takeUntil, tap, distinctUntilChanged as distinctUntilChangedOperator } from 'rxjs/operators';\nimport { LanguageService } from '../../core/services/language.service';\nimport { UserService } from 'src/app/core/services/impl/user.service';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\nimport { SongEnrichmentService, EnrichedSong } from 'src/app/core/services/impl/song-enrichment.service';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { EnhancedAudioPlayerService } from 'src/app/core/services/impl/enhanced-audio-player.service';\nimport { ToastController } from '@ionic/angular';\nimport { SocialService } from 'src/app/core/services/impl/social.service';\n\n// Interfaces para búsqueda\ninterface ReactiveEnrichedSong extends EnrichedSong {\n  isLikedByCurrentUser: boolean;\n}\n\ninterface SearchResult {\n  songs: ReactiveEnrichedSong[];\n  playlists: Playlist[];\n  artists: Artist[];\n}\n\ninterface SearchSuggestion {\n  type: 'song' | 'playlist' | 'artist';\n  id: string;\n  name: string;\n  subtitle?: string;\n  image?: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit, OnDestroy {\n  isMobile: boolean = false;\n  showSearch: boolean = false;\n  currentLang: string;\n  selectedTab: 'all' | 'music' | 'podcasts' = 'all';\n  searchQuery: string = '';\n\n  // ================================================================\n  // PROPIEDADES DE BÚSQUEDA\n  // ================================================================\n  private searchSubject = new Subject();\n  isSearching = false;\n  showSearchResults = false;\n  searchSuggestions: SearchSuggestion[] = [];\n  searchResults: SearchResult = {\n    songs: [],\n    playlists: [],\n    artists: []\n  };\n\n  // ================================================================\n  // PROPIEDADES EXISTENTES\n  // ================================================================\n  private _quickAccess = new BehaviorSubject([]);\n  quickAccess$ = this._quickAccess.asObservable();\n\n  private _baseNewReleases = new BehaviorSubject([]);\n  private _baseRecommendedSongs = new BehaviorSubject([]);\n\n  newReleases$!: Observable;\n  recommendedSongs$!: Observable;\n\n  private _currentUser = new BehaviorSubject(null);\n  currentUser$ = this._currentUser.asObservable();\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private router: Router,\n    public authSvc: BaseAuthenticationService,\n    private playlistsSvc: PlaylistsService,\n    private songsSvc: SongsService,\n    private artistsSvc: ArtistsService,\n    private songEnrichmentService: SongEnrichmentService,\n    private languageService: LanguageService,\n    private userService: UserService,\n    private enhancedAudioPlayer: EnhancedAudioPlayerService,\n    private toastController: ToastController,\n    private socialService: SocialService,\n    \n    @Inject(COLLECTION_SUBSCRIPTION_TOKEN) \n    private collectionSubscriptionSvc: ICollectionSubscription & ICollectionSubscription\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n    this.setupReactiveObservables();\n    this.setupSearchObservables();\n  }\n\n  // ================================================================\n  // CONFIGURACIÓN DE OBSERVABLES\n  // ================================================================\n\n  private setupReactiveObservables() {\n    this.newReleases$ = combineLatest([\n      this._baseNewReleases.asObservable(),\n      this.socialService.likedSongs$\n    ]).pipe(\n      map(([songs, likedSongs]) => {\n        return songs.map(song => ({\n          ...song,\n          isLikedByCurrentUser: likedSongs.has(song.id)\n        })) as ReactiveEnrichedSong[];\n      }),\n      distinctUntilChangedOperator((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)),\n      takeUntil(this.destroy$)\n    );\n\n    this.recommendedSongs$ = combineLatest([\n      this._baseRecommendedSongs.asObservable(),\n      this.socialService.likedSongs$\n    ]).pipe(\n      map(([songs, likedSongs]) => {\n        return songs.map(song => ({\n          ...song,\n          isLikedByCurrentUser: likedSongs.has(song.id)\n        })) as ReactiveEnrichedSong[];\n      }),\n      distinctUntilChangedOperator((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  // ================================================================\n  // ✅ NUEVA FUNCIONALIDAD DE BÚSQUEDA\n  // ================================================================\n\n  /**\n   * Configurar observables de búsqueda en tiempo real\n   */\n  private setupSearchObservables() {\n    this.searchSubject.pipe(\n      debounceTime(300), // Esperar 300ms después de que el usuario deje de escribir\n      distinctUntilChanged(), // Solo procesar si el término cambió\n      tap(term => {\n        this.isSearching = !!term;\n        this.showSearchResults = !!term;\n        \n        if (!term) {\n          this.clearSearchResults();\n        }\n      }),\n      switchMap(term => {\n        if (!term || term.length  {\n        this.isSearching = false;\n        if (results) {\n          this.searchResults = results;\n          this.generateSearchSuggestions(results);\n        }\n      },\n      error: (error) => {\n        console.error('Search error:', error);\n        this.isSearching = false;\n        this.clearSearchResults();\n      }\n    });\n  }\n\n  /**\n   * Realizar búsqueda en tiempo real\n   */\n  private performSearch(term: string): Observable {\n    const searchTerm = term.toLowerCase().trim();\n    \n    console.log('Performing search for:', searchTerm);\n\n    return forkJoin({\n      songs: this.searchSongs(searchTerm),\n      playlists: this.searchPlaylists(searchTerm),\n      artists: this.searchArtists(searchTerm)\n    }).pipe(\n      map(({ songs, playlists, artists }) => ({\n        songs,\n        playlists,\n        artists\n      })),\n      catchError(error => {\n        console.error('Search error:', error);\n        return of({\n          songs: [],\n          playlists: [],\n          artists: []\n        });\n      })\n    );\n  }\n\n  /**\n   * Buscar canciones\n   */\n  private searchSongs(term: string): Observable {\n    return this.songsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      switchMap(songs => this.songEnrichmentService.enrichSongs(songs)),\n      switchMap(enrichedSongs => {\n        // Combinar con likes del usuario\n        return this.socialService.likedSongs$.pipe(\n          take(1),\n          map(likedSongs => \n            enrichedSongs.map(song => ({\n              ...song,\n              isLikedByCurrentUser: likedSongs.has(song.id)\n            })) as ReactiveEnrichedSong[]\n          )\n        );\n      }),\n      catchError(error => {\n        console.error('Error searching songs:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Buscar playlists\n   */\n  private searchPlaylists(term: string): Observable {\n    return this.playlistsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      catchError(error => {\n        console.error('Error searching playlists:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Buscar artistas\n   */\n  private searchArtists(term: string): Observable {\n    return this.artistsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      catchError(error => {\n        console.error('Error searching artists:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Generar sugerencias de búsqueda\n   */\n  private generateSearchSuggestions(results: SearchResult) {\n    const suggestions: SearchSuggestion[] = [];\n\n    // Agregar canciones a las sugerencias\n    results.songs.slice(0, 3).forEach(song => {\n      suggestions.push({\n        type: 'song',\n        id: song.id,\n        name: song.name,\n        subtitle: song.artistNames?.join(', ') || 'Unknown Artist',\n        image: song.image?.url\n      });\n    });\n\n    // Agregar playlists a las sugerencias\n    results.playlists.slice(0, 2).forEach(playlist => {\n      suggestions.push({\n        type: 'playlist',\n        id: playlist.id,\n        name: playlist.name,\n        subtitle: `Playlist • ${playlist.author || 'Unknown'}`,\n        image: playlist.image?.url\n      });\n    });\n\n    // Agregar artistas a las sugerencias\n    results.artists.slice(0, 2).forEach(artist => {\n      suggestions.push({\n        type: 'artist',\n        id: artist.id,\n        name: artist.name,\n        subtitle: `Artist • ${artist.followers_count || 0} followers`,\n        image: artist.image?.url\n      });\n    });\n\n    this.searchSuggestions = suggestions;\n  }\n\n  /**\n   * Limpiar resultados de búsqueda\n   */\n  private clearSearchResults() {\n    this.searchResults = {\n      songs: [],\n      playlists: [],\n      artists: []\n    };\n    this.searchSuggestions = [];\n    this.showSearchResults = false;\n  }\n\n  // ================================================================\n  // EVENTOS DE BÚSQUEDA\n  // ================================================================\n\n  /**\n   * Manejar cambio en el campo de búsqueda\n   */\n  onSearchChange(event: CustomEvent) {\n    const term = event.detail.value || '';\n    this.searchQuery = term;\n    this.searchSubject.next(term);\n  }\n\n  /**\n   * Manejar foco en el campo de búsqueda\n   */\n  onSearchFocus() {\n    if (this.searchQuery && this.searchQuery.length >= 2) {\n      this.showSearchResults = true;\n    }\n  }\n\n  /**\n   * Manejar pérdida de foco (con delay para permitir clicks)\n   */\n  onSearchBlur() {\n    setTimeout(() => {\n      this.showSearchResults = false;\n    }, 200);\n  }\n\n  /**\n   * Seleccionar una sugerencia\n   */\n  selectSearchSuggestion(suggestion: SearchSuggestion) {\n    this.searchQuery = suggestion.name;\n    this.showSearchResults = false;\n\n    switch (suggestion.type) {\n      case 'song':\n        const song = this.searchResults.songs.find(s => s.id === suggestion.id);\n        if (song) {\n          this.openSong(song);\n        }\n        break;\n      case 'playlist':\n        const playlist = this.searchResults.playlists.find(p => p.id === suggestion.id);\n        if (playlist) {\n          this.openPlaylist(playlist);\n        }\n        break;\n      case 'artist':\n        this.router.navigate(['/artist', suggestion.id]);\n        break;\n    }\n  }\n\n  /**\n   * Ir a página de resultados completos\n   */\n  goToFullSearchResults() {\n    if (this.searchQuery.trim()) {\n      this.router.navigate(['/search'], { \n        queryParams: { q: this.searchQuery.trim() } \n      });\n    }\n  }\n\n  /**\n   * Limpiar búsqueda\n   */\n  clearSearch() {\n    this.searchQuery = '';\n    this.searchSubject.next('');\n    this.clearSearchResults();\n  }\n\n  // ================================================================\n  // MÉTODOS EXISTENTES (sin cambios)\n  // ================================================================\n\n  ngOnInit() {\n    this.checkIfMobile();\n    window.addEventListener('resize', this.checkIfMobile.bind(this));\n\n    this.authSvc.user$.pipe(\n        filter(user => user !== undefined),\n        switchMap(user => {\n            if (!user) return of(null);\n            return this.userService.getById(user.id);\n        }),\n        takeUntil(this.destroy$)\n    ).subscribe({\n        next: (userData) => {\n            if (userData) {\n                const updatedUser: User = {\n                    ...userData,\n                    image: userData.image || undefined\n                };\n                this._currentUser.next(updatedUser);\n            }\n        },\n        error: (error) => {\n            console.error('Error loading user data:', error);\n        }\n    });\n  \n    this.authSvc.ready$.pipe(\n        filter(ready => ready === true),\n        take(1),\n        switchMap(() => {\n            return this.authSvc.authenticated$;\n        }),\n        take(1),\n        takeUntil(this.destroy$)\n    ).subscribe(isAuthenticated => {\n        if (!isAuthenticated) {\n            this.router.navigate(['/login']);\n            return;\n        }\n\n        this.loadUserContent();\n        this.setupCollectionSubscriptions();\n    });\n  }\n\n  ngOnDestroy() {\n    this.collectionSubscriptionSvc.unsubscribe('playlists');\n    this.collectionSubscriptionSvc.unsubscribe('songs');\n    \n    this.destroy$.next();\n    this.destroy$.complete();\n    \n    window.removeEventListener('resize', this.checkIfMobile.bind(this));\n  }\n\n  toggleSearch() {\n    this.showSearch = !this.showSearch;\n    if (!this.showSearch) {\n      this.clearSearch();\n    }\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  selectTab(tab: 'all' | 'music' | 'podcasts') {\n    this.selectedTab = tab;\n  }\n\n  openPlaylist(playlist: Playlist) {\n    this.router.navigate(['/playlist', playlist.id]);\n  }\n\n  async playPlaylist(playlist: Playlist, event?: Event) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (!playlist.song_IDS || playlist.song_IDS.length === 0) {\n      await this.showToast('La playlist está vacía', 'warning');\n      return;\n    }\n\n    try {      \n      const songs = await this.getPlaylistSongs(playlist.song_IDS);\n      if (songs.length > 0) {\n        await this.enhancedAudioPlayer.setEnrichedQueue(songs, 0);\n        await this.enhancedAudioPlayer.playEnrichedSong(songs[0]);\n        await this.showToast(`Reproduciendo: ${playlist.name}`, 'success');\n      } else {\n        await this.showToast('No se pudieron cargar las canciones', 'danger');\n      }\n    } catch (error) {\n      console.error('Error playing playlist:', error);\n      await this.showToast('Error al reproducir la playlist', 'danger');\n    }\n  }\n\n  async openSong(song: Song | EnrichedSong) {\n    try {\n      await this.enhancedAudioPlayer.playEnrichedSong(song);\n      await this.showToast(`Reproduciendo: ${song.name}`, 'success');\n    } catch (error) {\n      console.error('Error playing song:', error);\n      await this.showToast('Error al reproducir la canción', 'danger');\n    }\n  }\n\n  private async getPlaylistSongs(songIds: string[]): Promise {\n    try {\n      const songs: Song[] = [];\n      \n      for (const songId of songIds) {\n        try {\n          const song = await this.songsSvc.getById(songId).toPromise();\n          if (song) {\n            songs.push(song);\n          }\n        } catch (error) {\n          console.error(`Error loading song ${songId}:`, error);\n        }\n      }\n      \n      return songs;\n    } catch (error) {\n      console.error('Error getting playlist songs:', error);\n      return [];\n    }\n  }\n\n  showAllSongs() {\n    this.router.navigate(['/songs']);\n  }\n\n  showAllRecommended() {\n    this.router.navigate(['/recommended']);\n  }\n\n  checkIfMobile() {\n    this.isMobile = window.innerWidth  {\n        const currentPlaylists = this._quickAccess.value;\n        \n        switch (change.type) {\n          case 'added':\n            if (change.data && !currentPlaylists.some(p => p.id === change.id)) {\n              this._quickAccess.next([...currentPlaylists, change.data as Playlist]);\n            }\n            break;\n          case 'modified':\n            if (change.data) {\n              const index = currentPlaylists.findIndex(p => p.id === change.id);\n              if (index !== -1) {\n                const updatedPlaylists = [...currentPlaylists];\n                updatedPlaylists[index] = change.data as Playlist;\n                this._quickAccess.next(updatedPlaylists);\n              }\n            }\n            break;\n          case 'removed':\n            this._quickAccess.next(currentPlaylists.filter(p => p.id !== change.id));\n            break;\n        }\n      });\n\n    // Resto de subscripciones existentes...\n  }\n  \n  private loadUserContent() {    \n    this.authSvc.user$.pipe(\n      filter(user => user !== undefined),\n      take(1),\n      switchMap(user => {\n        if (!user) {\n          throw new Error('No user found');\n        }\n\n        const allSongs$ = this.songsSvc.getAll(1, 1000, { sort: 'createdAt:desc' }).pipe(\n          map(response => 'data' in response ? response.data : response),\n          switchMap(songs => {\n            return this.songEnrichmentService.enrichSongs(songs);\n          }),\n          catchError(err => {\n            return of([]);\n          })\n        );\n\n        return forkJoin({\n          playlists: this.playlistsSvc.getAll(1, 9, { sort: 'createdAt:desc' }).pipe(\n            map(response => 'data' in response ? response.data : response),\n            catchError(err => {\n              return of([]);\n            })\n          ),\n          allSongs: allSongs$\n        });\n      }),\n      map(({ playlists, allSongs }) => {\n        const songs = allSongs.slice(0, 8); \n        const recommendedSongs = allSongs.slice(-8); \n\n        return {\n          playlists,\n          songs,\n          recommendedSongs\n        };\n      })\n    ).subscribe({\n      next: ({ playlists, songs, recommendedSongs }) => {\n        console.log('HomePage: Loading content:', {\n          playlistsCount: playlists.length,\n          songsCount: songs.length,\n          recommendedCount: recommendedSongs.length\n        });\n        \n        this._quickAccess.next(playlists);\n        this._baseNewReleases.next(songs);\n        this._baseRecommendedSongs.next(recommendedSongs);\n      },\n      error: (error) => {\n        console.error('HomePage: Error loading content:', error);\n      }\n    });\n  }\n\n  private isSong(data: any): data is Song {\n    return data \n      && typeof data === 'object' \n      && 'artists_IDS' in data \n      && 'name' in data \n      && 'duration' in data;\n  }\n\n  trackBySongId(index: number, song: ReactiveEnrichedSong): string {\n    return song.id;\n  }\n\n  /**\n   * Obtener imagen por defecto según el tipo\n   */\n  getDefaultImage(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'assets/default-song.png';\n      case 'playlist':\n        return 'assets/default-playlist.png';\n      case 'artist':\n        return 'assets/default-artist.png';\n      default:\n        return 'assets/default-song.png';\n    }\n  }\n\n  goToAbout() {\n    this.router.navigate(['/about']);\n  }\n\n  openRepository() {\n    const url = 'https://github.com/Rafamp34/Proyecto-UMusicWeb';\n    window.open(url, '_blank');\n  }\n\n  /**\n   * Obtener icono según el tipo\n   */\n  getTypeIcon(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'musical-note';\n      case 'playlist':\n        return 'list';\n      case 'artist':\n        return 'person';\n      default:\n        return 'musical-note';\n    }\n  }\n\n  /**\n   * Obtener color según el tipo\n   */\n  getTypeColor(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'success';\n      case 'playlist':\n        return 'secondary';\n      case 'artist':\n        return 'primary';\n      default:\n        return 'medium';\n    }\n  }\n\n  /**\n   * TrackBy function para sugerencias de búsqueda\n   */\n  trackBySuggestionId(index: number, suggestion: SearchSuggestion): string {\n    return `${suggestion.type}-${suggestion.id}`;\n  }\n\n  /**\n   * Exponer router para uso en template\n   */\n  get routerPublic() {\n    return this.router;\n}\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchResult-1.html":{"url":"interfaces/SearchResult-1.html","title":"interface - SearchResult-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchResult\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/global-search/global-search.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            subtitle\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"song\" | \"playlist\" | \"artist\" | \"recent\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"song\" | \"playlist\" | \"artist\" | \"recent\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy, ViewChild, ElementRef, Renderer2, Inject } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { Subject, debounceTime, distinctUntilChanged, switchMap, takeUntil, of, from } from 'rxjs';\nimport { SongsService } from '../../../core/services/impl/songs.service';\nimport { PlaylistsService } from '../../../core/services/impl/playlists.service';\nimport { ArtistsService } from '../../../core/services/impl/artists.service';\nimport { SongEnrichmentService } from '../../../core/services/impl/song-enrichment.service';\nimport { EnhancedAudioPlayerService } from '../../../core/services/impl/enhanced-audio-player.service';\nimport { Song } from '../../../core/models/song.model';\nimport { Playlist } from '../../../core/models/playlist.model';\nimport { Artist } from '../../../core/models/artist.model';\n\ninterface SearchResult {\n    type: 'song' | 'playlist' | 'artist' | 'recent';\n    id: string;\n    title: string;\n    subtitle: string;\n    image: string;\n    data: any;\n}\n\n@Component({\n    selector: 'app-global-search',\n    templateUrl: './global-search.component.html',\n    styleUrls: ['./global-search.component.scss']\n})\nexport class GlobalSearchComponent implements OnInit, OnDestroy {\n    @ViewChild('searchInput', { static: false }) searchInput!: ElementRef;\n\n    searchQuery = '';\n    isSearchActive = false;\n    isSearching = false;\n    searchResults: SearchResult[] = [];\n    recentSearches: SearchResult[] = [];\n    \n    // Cache para evitar múltiples llamadas\n    private allSongs: any[] = [];\n    private allPlaylists: Playlist[] = [];\n    private allArtists: Artist[] = [];\n    private cacheLoaded = false;\n    \n    private searchSubject = new Subject();\n    private destroy$ = new Subject();\n    private overlayElement: HTMLElement | null = null;\n\n    constructor(\n        private router: Router,\n        private renderer: Renderer2,\n        @Inject(DOCUMENT) private document: Document,\n        private songsService: SongsService,\n        private playlistsService: PlaylistsService,\n        private artistsService: ArtistsService,\n        private songEnrichmentService: SongEnrichmentService,\n        private enhancedAudioPlayer: EnhancedAudioPlayerService // ✅ Inyectar el reproductor\n    ) {}\n\n    ngOnInit() {\n        this.loadRecentSearches();\n        this.setupSearchObservable();\n        this.preloadData();\n    }\n\n    ngOnDestroy() {\n        this.removeOverlay();\n        this.destroy$.next();\n        this.destroy$.complete();\n    }\n\n    // Precargar datos una sola vez\n    private async preloadData() {\n        try {\n            console.log('🔄 Preloading search data...');\n            \n            const [songsResponse, playlistsResponse, artistsResponse] = await Promise.all([\n                this.songsService.getAll(1, 200, {}).toPromise().catch(() => ({ data: [] })),\n                this.playlistsService.getAll(1, 100, {}).toPromise().catch(() => ({ data: [] })),\n                this.artistsService.getAll(1, 100, {}).toPromise().catch(() => ({ data: [] }))\n            ]);\n\n            this.allSongs = Array.isArray(songsResponse) ? songsResponse : (songsResponse?.data || []);\n            this.allPlaylists = Array.isArray(playlistsResponse) ? playlistsResponse : (playlistsResponse?.data || []);\n            this.allArtists = Array.isArray(artistsResponse) ? artistsResponse : (artistsResponse?.data || []);\n\n            this.allSongs = await this.songEnrichmentService.enrichSongsAsync(this.allSongs);\n\n            this.cacheLoaded = true;\n            \n            console.log('✅ Data preloaded:', {\n                songs: this.allSongs.length,\n                playlists: this.allPlaylists.length,\n                artists: this.allArtists.length\n            });\n        } catch (error) {\n            console.error('❌ Error preloading data:', error);\n            this.cacheLoaded = true;\n        }\n    }\n\n    private setupSearchObservable() {\n        this.searchSubject.pipe(\n            debounceTime(200),\n            distinctUntilChanged(),\n            switchMap(query => {\n                if (!query || query.length  {\n                this.isSearching = false;\n                if (results) {\n                    this.searchResults = results;\n                }\n                this.updateOverlayContent();\n            },\n            error: (error) => {\n                console.error('Search error:', error);\n                this.isSearching = false;\n                this.searchResults = [];\n                this.updateOverlayContent();\n            }\n        });\n    }\n\n    private async performSearch(query: string): Promise {\n        console.log('🔍 Searching for:', query);\n        \n        if (!this.cacheLoaded) {\n            console.log('⏳ Waiting for data to load...');\n            await this.waitForCache();\n        }\n        \n        try {\n            const [songs, playlists, artists] = await Promise.all([\n                this.searchSongsLocal(query),\n                this.searchPlaylistsLocal(query),\n                this.searchArtistsLocal(query)\n            ]);\n            \n            console.log('📊 Local search results:', {\n                songs: songs.length,\n                playlists: playlists.length,\n                artists: artists.length\n            });\n\n            const results: SearchResult[] = [];\n\n            // Agregar artistas primero\n            artists.slice(0, 4).forEach(artist => {\n                results.push({\n                    type: 'artist',\n                    id: artist.id,\n                    title: artist.name,\n                    subtitle: `Artista • ${artist.followers_count || 0} seguidores`,\n                    image: artist.image?.url || 'assets/default-artist.png',\n                    data: artist\n                });\n            });\n\n            // Agregar canciones\n            songs.slice(0, 4).forEach(song => {\n                results.push({\n                    type: 'song',\n                    id: song.id,\n                    title: song.name,\n                    subtitle: song.artistNames?.join(', ') || 'Unknown Artist',\n                    image: song.image?.url || 'assets/default-song.png',\n                    data: song\n                });\n            });\n\n            // Agregar playlists\n            playlists.slice(0, 2).forEach(playlist => {\n                results.push({\n                    type: 'playlist',\n                    id: playlist.id,\n                    title: playlist.name,\n                    subtitle: `Playlist • ${playlist.author || 'Unknown'}`,\n                    image: playlist.image?.url || 'assets/default-playlist.png',\n                    data: playlist\n                });\n            });\n\n            console.log('✅ Final results:', results);\n            return results;\n        } catch (error) {\n            console.error('❌ Error performing search:', error);\n            return [];\n        }\n    }\n\n    private async searchSongsLocal(query: string): Promise {\n        const lowerQuery = query.toLowerCase().trim();\n        \n        const filteredSongs = this.allSongs.filter(song => {\n            if (song.name && song.name.toLowerCase().includes(lowerQuery)) {\n                return true;\n            }\n            \n            if (song.artistNames && Array.isArray(song.artistNames)) {\n                return song.artistNames.some((artistName: string) => \n                    artistName.toLowerCase().includes(lowerQuery)\n                );\n            }\n            \n            if (song.album && song.album.toLowerCase().includes(lowerQuery)) {\n                return true;\n            }\n            \n            return false;\n        });\n\n        console.log(`🎵 Found ${filteredSongs.length} songs matching \"${query}\"`);\n        return filteredSongs;\n    }\n\n    private async searchPlaylistsLocal(query: string): Promise {\n        const lowerQuery = query.toLowerCase().trim();\n        \n        const filteredPlaylists = this.allPlaylists.filter(playlist => {\n            if (playlist.name && playlist.name.toLowerCase().includes(lowerQuery)) {\n                return true;\n            }\n            \n            if (playlist.author && playlist.author.toLowerCase().includes(lowerQuery)) {\n                return true;\n            }\n            \n            return false;\n        });\n\n        console.log(`📝 Found ${filteredPlaylists.length} playlists matching \"${query}\"`);\n        return filteredPlaylists;\n    }\n\n    private async searchArtistsLocal(query: string): Promise {\n        const lowerQuery = query.toLowerCase().trim();\n        \n        const filteredArtists = this.allArtists.filter(artist => {\n            if (artist.name && artist.name.toLowerCase().includes(lowerQuery)) {\n                return true;\n            }\n            \n            return false;\n        });\n\n        console.log(`👤 Found ${filteredArtists.length} artists matching \"${query}\"`);\n        return filteredArtists;\n    }\n\n    private async waitForCache(): Promise {\n        const maxWait = 10000;\n        const checkInterval = 100;\n        let waited = 0;\n\n        while (!this.cacheLoaded && waited  setTimeout(resolve, checkInterval));\n            waited += checkInterval;\n        }\n\n        if (!this.cacheLoaded) {\n            console.warn('⚠️ Cache loading timeout, proceeding anyway');\n        }\n    }\n\n    // ✅ CREAR OVERLAY SIN BLUR\n    private createOverlay() {\n        if (this.overlayElement) return;\n\n        this.overlayElement = this.renderer.createElement('div');\n        this.renderer.addClass(this.overlayElement, 'global-search-overlay-portal');\n        this.renderer.setStyle(this.overlayElement, 'position', 'fixed');\n        this.renderer.setStyle(this.overlayElement, 'top', '0');\n        this.renderer.setStyle(this.overlayElement, 'left', '0');\n        this.renderer.setStyle(this.overlayElement, 'right', '0');\n        this.renderer.setStyle(this.overlayElement, 'bottom', '0');\n        this.renderer.setStyle(this.overlayElement, 'z-index', '10000');\n        // ✅ SIN BLUR - Solo fondo semitransparente\n        this.renderer.setStyle(this.overlayElement, 'background', 'rgba(0, 0, 0, 0.6)');\n        // ✅ Removido backdrop-filter\n\n        const panel = this.renderer.createElement('div');\n        this.renderer.addClass(panel, 'search-results-panel-portal');\n        this.renderer.setStyle(panel, 'position', 'absolute');\n        this.renderer.setStyle(panel, 'top', '80px');\n        this.renderer.setStyle(panel, 'left', '50%');\n        this.renderer.setStyle(panel, 'transform', 'translateX(-50%)');\n        this.renderer.setStyle(panel, 'width', '90%');\n        this.renderer.setStyle(panel, 'max-width', '480px');\n        this.renderer.setStyle(panel, 'background', '#282828');\n        this.renderer.setStyle(panel, 'border-radius', '8px');\n        this.renderer.setStyle(panel, 'box-shadow', '0 16px 40px rgba(0, 0, 0, 0.6)');\n        this.renderer.setStyle(panel, 'max-height', '70vh');\n        this.renderer.setStyle(panel, 'overflow-y', 'auto');\n\n        this.updatePanelContent(panel);\n\n        this.renderer.listen(this.overlayElement, 'click', (event) => {\n            if (event.target === this.overlayElement) {\n                this.deactivateSearch();\n            }\n        });\n\n        this.renderer.appendChild(this.overlayElement, panel);\n        this.renderer.appendChild(this.document.body, this.overlayElement);\n    }\n\n    private updateOverlayContent() {\n        if (this.overlayElement) {\n            const panel = this.overlayElement.querySelector('.search-results-panel-portal') as HTMLElement;\n            if (panel) {\n                this.updatePanelContent(panel);\n            }\n        }\n    }\n\n    private updatePanelContent(panel: HTMLElement) {\n        panel.innerHTML = '';\n\n        if (!this.searchQuery && this.recentSearches.length > 0) {\n            this.addRecentSearches(panel);\n        } else if (this.isSearching) {\n            this.addLoadingState(panel);\n        } else if (this.searchQuery && this.searchResults.length > 0) {\n            this.addSearchResults(panel);\n        } else if (this.searchQuery && this.searchResults.length === 0) {\n            this.addNoResults(panel);\n        } else {\n            this.addSearchTips(panel);\n        }\n    }\n\n    private addRecentSearches(panel: HTMLElement) {\n        const header = this.renderer.createElement('div');\n        header.innerHTML = 'Búsquedas recientes';\n        this.renderer.appendChild(panel, header);\n\n        // ✅ ARREGLAR BÚSQUEDAS RECIENTES - Usar el tipo original, no 'recent'\n        this.recentSearches.forEach(recent => {\n            // Restaurar el tipo original para que funcione correctamente\n            const originalResult = { ...recent, type: recent.data?.type || recent.type };\n            // Si el tipo es 'recent', usar el tipo del data\n            if (recent.type === 'recent' && recent.data) {\n                if (recent.data.name && recent.data.artistNames) {\n                    originalResult.type = 'song';\n                } else if (recent.data.name && recent.data.author) {\n                    originalResult.type = 'playlist';\n                } else if (recent.data.name && !recent.data.author) {\n                    originalResult.type = 'artist';\n                }\n            }\n            \n            const item = this.createResultItem(originalResult);\n            this.renderer.appendChild(panel, item);\n        });\n    }\n\n    private addSearchResults(panel: HTMLElement) {\n        const header = this.renderer.createElement('div');\n        header.innerHTML = 'Resultados principales';\n        this.renderer.appendChild(panel, header);\n\n        this.searchResults.forEach(result => {\n            const item = this.createResultItem(result);\n            this.renderer.appendChild(panel, item);\n        });\n\n        // ✅ COMENTAR EL BOTÓN \"VER TODOS\" SI NO TIENES LA RUTA /search\n        /*\n        const viewAllButton = this.renderer.createElement('div');\n        this.renderer.setStyle(viewAllButton, 'display', 'flex');\n        this.renderer.setStyle(viewAllButton, 'align-items', 'center');\n        this.renderer.setStyle(viewAllButton, 'padding', '12px 16px');\n        this.renderer.setStyle(viewAllButton, 'border-top', '1px solid rgba(255, 255, 255, 0.1)');\n        this.renderer.setStyle(viewAllButton, 'cursor', 'pointer');\n        this.renderer.setStyle(viewAllButton, 'color', '#1db954');\n        this.renderer.setStyle(viewAllButton, 'font-size', '14px');\n        this.renderer.setStyle(viewAllButton, 'font-weight', '600');\n\n        viewAllButton.innerHTML = `\n            🔍\n            Ver todos los resultados para \"${this.searchQuery}\"\n            →\n        `;\n\n        this.renderer.listen(viewAllButton, 'click', () => {\n            this.goToFullSearch();\n        });\n\n        this.renderer.appendChild(panel, viewAllButton);\n        */\n    }\n\n    private createResultItem(result: SearchResult): HTMLElement {\n        const item = this.renderer.createElement('div');\n        this.renderer.setStyle(item, 'display', 'flex');\n        this.renderer.setStyle(item, 'align-items', 'center');\n        this.renderer.setStyle(item, 'padding', '8px 16px');\n        this.renderer.setStyle(item, 'cursor', 'pointer');\n        this.renderer.setStyle(item, 'transition', 'background 0.2s ease');\n\n        const typeEmoji = this.getTypeEmoji(result.type);\n        \n        item.innerHTML = `\n            \n                \n            \n            \n                ${result.title}\n                ${result.subtitle}\n            \n            ${typeEmoji}\n        `;\n\n        this.renderer.listen(item, 'mouseenter', () => {\n            this.renderer.setStyle(item, 'background', 'rgba(255, 255, 255, 0.1)');\n        });\n\n        this.renderer.listen(item, 'mouseleave', () => {\n            this.renderer.setStyle(item, 'background', 'transparent');\n        });\n\n        this.renderer.listen(item, 'click', () => {\n            this.selectResult(result);\n        });\n\n        return item;\n    }\n\n    private getTypeEmoji(type: string): string {\n        switch (type) {\n            case 'song': return '🎵';\n            case 'playlist': return '📝';\n            case 'artist': return '👤';\n            case 'recent': return '🕒';\n            default: return '🔍';\n        }\n    }\n\n    // ✅ FUNCIÓN AUXILIAR PARA DETECTAR TIPO DE BÚSQUEDA RECIENTE\n    private getRecentItemType(item: any): 'song' | 'playlist' | 'artist' {\n        // Si tiene originalType, usarlo\n        if (item.originalType) {\n            return item.originalType;\n        }\n        \n        // Si no, detectar por las propiedades del data\n        if (item.data) {\n            if (item.data.artistNames || (item.data.name && item.data.duration)) {\n                return 'song';\n            } else if (item.data.author !== undefined) {\n                return 'playlist';\n            } else {\n                return 'artist';\n            }\n        }\n        \n        // Fallback\n        return item.type === 'recent' ? 'song' : item.type;\n    }\n\n    private addLoadingState(panel: HTMLElement) {\n        panel.innerHTML = `\n            \n                ⏳\n                Buscando...\n            \n        `;\n    }\n\n    private addNoResults(panel: HTMLElement) {\n        panel.innerHTML = `\n            \n                😔\n                No hay resultados para \"${this.searchQuery}\"\n                Intenta con otros términos de búsqueda.\n            \n        `;\n    }\n\n    private addSearchTips(panel: HTMLElement) {\n        panel.innerHTML = `\n            \n                🔍\n                Comienza a escribir para buscar\n                Encuentra canciones, artistas y playlists\n            \n        `;\n    }\n\n    private removeOverlay() {\n        if (this.overlayElement) {\n            this.renderer.removeChild(this.document.body, this.overlayElement);\n            this.overlayElement = null;\n        }\n    }\n\n    activateSearch() {\n        this.isSearchActive = true;\n        this.createOverlay();\n        setTimeout(() => {\n            if (this.searchInput) {\n                this.searchInput.nativeElement.focus();\n            }\n        }, 100);\n    }\n\n    deactivateSearch() {\n        setTimeout(() => {\n            this.isSearchActive = false;\n            this.searchQuery = '';\n            this.searchResults = [];\n            this.removeOverlay();\n        }, 200);\n    }\n\n    onSearchChange(event: any) {\n        const query = event.target.value;\n        this.searchQuery = query;\n        this.searchSubject.next(query);\n    }\n\n    // ✅ MEJORAR LA SELECCIÓN DE RESULTADOS\n    selectResult(result: SearchResult) {\n        this.saveToRecentSearches(result);\n        \n        switch (result.type) {\n            case 'song':\n                this.playSong(result.data);\n                break;\n            case 'playlist':\n                this.router.navigate(['/playlist', result.id]);\n                break;\n            case 'artist':\n                this.router.navigate(['/artist', result.id]);\n                break;\n        }\n        \n        this.deactivateSearch();\n    }\n\n    // ✅ IMPLEMENTAR REPRODUCCIÓN DE CANCIONES\n    private async playSong(song: any) {\n        try {\n            console.log('🎵 Playing song:', song.name);\n            \n            // Usar el servicio de audio mejorado\n            await this.enhancedAudioPlayer.playEnrichedSong(song);\n            \n            // Mostrar mensaje de éxito (opcional)\n            console.log(`✅ Reproduciendo: ${song.name}`);\n            \n            // Aquí podrías agregar un toast de confirmación\n            // await this.showToast(`Reproduciendo: ${song.name}`, 'success');\n            \n        } catch (error) {\n            console.error('❌ Error playing song:', error);\n            \n            // Mostrar mensaje de error (opcional)\n            // await this.showToast('Error al reproducir la canción', 'danger');\n        }\n    }\n\n    private saveToRecentSearches(result: SearchResult) {\n        // ✅ GUARDAR CON EL TIPO ORIGINAL, NO COMO 'recent'\n        const recent = { \n            ...result, \n            // Mantener el tipo original para que funcione al hacer click\n            originalType: result.type, \n            // Guardar toda la información necesaria\n            data: result.data\n        };\n        \n        this.recentSearches = this.recentSearches.filter(r => r.id !== result.id);\n        this.recentSearches.unshift(recent);\n        this.recentSearches = this.recentSearches.slice(0, 6);\n        localStorage.setItem('recentSearches', JSON.stringify(this.recentSearches));\n    }\n\n    private loadRecentSearches() {\n        try {\n            const saved = localStorage.getItem('recentSearches');\n            if (saved) {\n                this.recentSearches = JSON.parse(saved);\n            }\n        } catch (error) {\n            console.error('Error loading recent searches:', error);\n            this.recentSearches = [];\n        }\n    }\n\n    clearRecentSearches() {\n        this.recentSearches = [];\n        localStorage.removeItem('recentSearches');\n        this.updateOverlayContent();\n    }\n\n    goToFullSearch() {\n        if (this.searchQuery.trim()) {\n            this.router.navigate(['/search'], { \n                queryParams: { q: this.searchQuery.trim() } \n            });\n            this.deactivateSearch();\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SearchSuggestion.html":{"url":"interfaces/SearchSuggestion.html","title":"interface - SearchSuggestion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SearchSuggestion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/home/home.page.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subtitle\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subtitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subtitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"song\" | \"playlist\" | \"artist\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"song\" | \"playlist\" | \"artist\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject, catchError, forkJoin, map, Observable, of, Subject, combineLatest, debounceTime, distinctUntilChanged, switchMap } from 'rxjs';\nimport { Playlist } from 'src/app/core/models/playlist.model';\nimport { User } from 'src/app/core/models/user.model';\nimport { Song } from 'src/app/core/models/song.model';\nimport { Artist } from 'src/app/core/models/artist.model';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { PlaylistsService } from 'src/app/core/services/impl/playlists.service';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { filter, take, takeUntil, tap, distinctUntilChanged as distinctUntilChangedOperator } from 'rxjs/operators';\nimport { LanguageService } from '../../core/services/language.service';\nimport { UserService } from 'src/app/core/services/impl/user.service';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\nimport { SongEnrichmentService, EnrichedSong } from 'src/app/core/services/impl/song-enrichment.service';\nimport { ICollectionSubscription } from 'src/app/core/services/interfaces/collection-subscription.interface';\nimport { COLLECTION_SUBSCRIPTION_TOKEN } from 'src/app/core/repositories/repository.tokens';\nimport { EnhancedAudioPlayerService } from 'src/app/core/services/impl/enhanced-audio-player.service';\nimport { ToastController } from '@ionic/angular';\nimport { SocialService } from 'src/app/core/services/impl/social.service';\n\n// Interfaces para búsqueda\ninterface ReactiveEnrichedSong extends EnrichedSong {\n  isLikedByCurrentUser: boolean;\n}\n\ninterface SearchResult {\n  songs: ReactiveEnrichedSong[];\n  playlists: Playlist[];\n  artists: Artist[];\n}\n\ninterface SearchSuggestion {\n  type: 'song' | 'playlist' | 'artist';\n  id: string;\n  name: string;\n  subtitle?: string;\n  image?: string;\n}\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit, OnDestroy {\n  isMobile: boolean = false;\n  showSearch: boolean = false;\n  currentLang: string;\n  selectedTab: 'all' | 'music' | 'podcasts' = 'all';\n  searchQuery: string = '';\n\n  // ================================================================\n  // PROPIEDADES DE BÚSQUEDA\n  // ================================================================\n  private searchSubject = new Subject();\n  isSearching = false;\n  showSearchResults = false;\n  searchSuggestions: SearchSuggestion[] = [];\n  searchResults: SearchResult = {\n    songs: [],\n    playlists: [],\n    artists: []\n  };\n\n  // ================================================================\n  // PROPIEDADES EXISTENTES\n  // ================================================================\n  private _quickAccess = new BehaviorSubject([]);\n  quickAccess$ = this._quickAccess.asObservable();\n\n  private _baseNewReleases = new BehaviorSubject([]);\n  private _baseRecommendedSongs = new BehaviorSubject([]);\n\n  newReleases$!: Observable;\n  recommendedSongs$!: Observable;\n\n  private _currentUser = new BehaviorSubject(null);\n  currentUser$ = this._currentUser.asObservable();\n\n  private destroy$ = new Subject();\n\n  constructor(\n    private router: Router,\n    public authSvc: BaseAuthenticationService,\n    private playlistsSvc: PlaylistsService,\n    private songsSvc: SongsService,\n    private artistsSvc: ArtistsService,\n    private songEnrichmentService: SongEnrichmentService,\n    private languageService: LanguageService,\n    private userService: UserService,\n    private enhancedAudioPlayer: EnhancedAudioPlayerService,\n    private toastController: ToastController,\n    private socialService: SocialService,\n    \n    @Inject(COLLECTION_SUBSCRIPTION_TOKEN) \n    private collectionSubscriptionSvc: ICollectionSubscription & ICollectionSubscription\n  ) {\n    this.currentLang = this.languageService.getStoredLanguage();\n    this.setupReactiveObservables();\n    this.setupSearchObservables();\n  }\n\n  // ================================================================\n  // CONFIGURACIÓN DE OBSERVABLES\n  // ================================================================\n\n  private setupReactiveObservables() {\n    this.newReleases$ = combineLatest([\n      this._baseNewReleases.asObservable(),\n      this.socialService.likedSongs$\n    ]).pipe(\n      map(([songs, likedSongs]) => {\n        return songs.map(song => ({\n          ...song,\n          isLikedByCurrentUser: likedSongs.has(song.id)\n        })) as ReactiveEnrichedSong[];\n      }),\n      distinctUntilChangedOperator((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)),\n      takeUntil(this.destroy$)\n    );\n\n    this.recommendedSongs$ = combineLatest([\n      this._baseRecommendedSongs.asObservable(),\n      this.socialService.likedSongs$\n    ]).pipe(\n      map(([songs, likedSongs]) => {\n        return songs.map(song => ({\n          ...song,\n          isLikedByCurrentUser: likedSongs.has(song.id)\n        })) as ReactiveEnrichedSong[];\n      }),\n      distinctUntilChangedOperator((prev, curr) => JSON.stringify(prev) === JSON.stringify(curr)),\n      takeUntil(this.destroy$)\n    );\n  }\n\n  // ================================================================\n  // ✅ NUEVA FUNCIONALIDAD DE BÚSQUEDA\n  // ================================================================\n\n  /**\n   * Configurar observables de búsqueda en tiempo real\n   */\n  private setupSearchObservables() {\n    this.searchSubject.pipe(\n      debounceTime(300), // Esperar 300ms después de que el usuario deje de escribir\n      distinctUntilChanged(), // Solo procesar si el término cambió\n      tap(term => {\n        this.isSearching = !!term;\n        this.showSearchResults = !!term;\n        \n        if (!term) {\n          this.clearSearchResults();\n        }\n      }),\n      switchMap(term => {\n        if (!term || term.length  {\n        this.isSearching = false;\n        if (results) {\n          this.searchResults = results;\n          this.generateSearchSuggestions(results);\n        }\n      },\n      error: (error) => {\n        console.error('Search error:', error);\n        this.isSearching = false;\n        this.clearSearchResults();\n      }\n    });\n  }\n\n  /**\n   * Realizar búsqueda en tiempo real\n   */\n  private performSearch(term: string): Observable {\n    const searchTerm = term.toLowerCase().trim();\n    \n    console.log('Performing search for:', searchTerm);\n\n    return forkJoin({\n      songs: this.searchSongs(searchTerm),\n      playlists: this.searchPlaylists(searchTerm),\n      artists: this.searchArtists(searchTerm)\n    }).pipe(\n      map(({ songs, playlists, artists }) => ({\n        songs,\n        playlists,\n        artists\n      })),\n      catchError(error => {\n        console.error('Search error:', error);\n        return of({\n          songs: [],\n          playlists: [],\n          artists: []\n        });\n      })\n    );\n  }\n\n  /**\n   * Buscar canciones\n   */\n  private searchSongs(term: string): Observable {\n    return this.songsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      switchMap(songs => this.songEnrichmentService.enrichSongs(songs)),\n      switchMap(enrichedSongs => {\n        // Combinar con likes del usuario\n        return this.socialService.likedSongs$.pipe(\n          take(1),\n          map(likedSongs => \n            enrichedSongs.map(song => ({\n              ...song,\n              isLikedByCurrentUser: likedSongs.has(song.id)\n            })) as ReactiveEnrichedSong[]\n          )\n        );\n      }),\n      catchError(error => {\n        console.error('Error searching songs:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Buscar playlists\n   */\n  private searchPlaylists(term: string): Observable {\n    return this.playlistsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      catchError(error => {\n        console.error('Error searching playlists:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Buscar artistas\n   */\n  private searchArtists(term: string): Observable {\n    return this.artistsSvc.getAll(1, 10, { name: term }).pipe(\n      map(response => Array.isArray(response) ? response : response.data),\n      catchError(error => {\n        console.error('Error searching artists:', error);\n        return of([]);\n      })\n    );\n  }\n\n  /**\n   * Generar sugerencias de búsqueda\n   */\n  private generateSearchSuggestions(results: SearchResult) {\n    const suggestions: SearchSuggestion[] = [];\n\n    // Agregar canciones a las sugerencias\n    results.songs.slice(0, 3).forEach(song => {\n      suggestions.push({\n        type: 'song',\n        id: song.id,\n        name: song.name,\n        subtitle: song.artistNames?.join(', ') || 'Unknown Artist',\n        image: song.image?.url\n      });\n    });\n\n    // Agregar playlists a las sugerencias\n    results.playlists.slice(0, 2).forEach(playlist => {\n      suggestions.push({\n        type: 'playlist',\n        id: playlist.id,\n        name: playlist.name,\n        subtitle: `Playlist • ${playlist.author || 'Unknown'}`,\n        image: playlist.image?.url\n      });\n    });\n\n    // Agregar artistas a las sugerencias\n    results.artists.slice(0, 2).forEach(artist => {\n      suggestions.push({\n        type: 'artist',\n        id: artist.id,\n        name: artist.name,\n        subtitle: `Artist • ${artist.followers_count || 0} followers`,\n        image: artist.image?.url\n      });\n    });\n\n    this.searchSuggestions = suggestions;\n  }\n\n  /**\n   * Limpiar resultados de búsqueda\n   */\n  private clearSearchResults() {\n    this.searchResults = {\n      songs: [],\n      playlists: [],\n      artists: []\n    };\n    this.searchSuggestions = [];\n    this.showSearchResults = false;\n  }\n\n  // ================================================================\n  // EVENTOS DE BÚSQUEDA\n  // ================================================================\n\n  /**\n   * Manejar cambio en el campo de búsqueda\n   */\n  onSearchChange(event: CustomEvent) {\n    const term = event.detail.value || '';\n    this.searchQuery = term;\n    this.searchSubject.next(term);\n  }\n\n  /**\n   * Manejar foco en el campo de búsqueda\n   */\n  onSearchFocus() {\n    if (this.searchQuery && this.searchQuery.length >= 2) {\n      this.showSearchResults = true;\n    }\n  }\n\n  /**\n   * Manejar pérdida de foco (con delay para permitir clicks)\n   */\n  onSearchBlur() {\n    setTimeout(() => {\n      this.showSearchResults = false;\n    }, 200);\n  }\n\n  /**\n   * Seleccionar una sugerencia\n   */\n  selectSearchSuggestion(suggestion: SearchSuggestion) {\n    this.searchQuery = suggestion.name;\n    this.showSearchResults = false;\n\n    switch (suggestion.type) {\n      case 'song':\n        const song = this.searchResults.songs.find(s => s.id === suggestion.id);\n        if (song) {\n          this.openSong(song);\n        }\n        break;\n      case 'playlist':\n        const playlist = this.searchResults.playlists.find(p => p.id === suggestion.id);\n        if (playlist) {\n          this.openPlaylist(playlist);\n        }\n        break;\n      case 'artist':\n        this.router.navigate(['/artist', suggestion.id]);\n        break;\n    }\n  }\n\n  /**\n   * Ir a página de resultados completos\n   */\n  goToFullSearchResults() {\n    if (this.searchQuery.trim()) {\n      this.router.navigate(['/search'], { \n        queryParams: { q: this.searchQuery.trim() } \n      });\n    }\n  }\n\n  /**\n   * Limpiar búsqueda\n   */\n  clearSearch() {\n    this.searchQuery = '';\n    this.searchSubject.next('');\n    this.clearSearchResults();\n  }\n\n  // ================================================================\n  // MÉTODOS EXISTENTES (sin cambios)\n  // ================================================================\n\n  ngOnInit() {\n    this.checkIfMobile();\n    window.addEventListener('resize', this.checkIfMobile.bind(this));\n\n    this.authSvc.user$.pipe(\n        filter(user => user !== undefined),\n        switchMap(user => {\n            if (!user) return of(null);\n            return this.userService.getById(user.id);\n        }),\n        takeUntil(this.destroy$)\n    ).subscribe({\n        next: (userData) => {\n            if (userData) {\n                const updatedUser: User = {\n                    ...userData,\n                    image: userData.image || undefined\n                };\n                this._currentUser.next(updatedUser);\n            }\n        },\n        error: (error) => {\n            console.error('Error loading user data:', error);\n        }\n    });\n  \n    this.authSvc.ready$.pipe(\n        filter(ready => ready === true),\n        take(1),\n        switchMap(() => {\n            return this.authSvc.authenticated$;\n        }),\n        take(1),\n        takeUntil(this.destroy$)\n    ).subscribe(isAuthenticated => {\n        if (!isAuthenticated) {\n            this.router.navigate(['/login']);\n            return;\n        }\n\n        this.loadUserContent();\n        this.setupCollectionSubscriptions();\n    });\n  }\n\n  ngOnDestroy() {\n    this.collectionSubscriptionSvc.unsubscribe('playlists');\n    this.collectionSubscriptionSvc.unsubscribe('songs');\n    \n    this.destroy$.next();\n    this.destroy$.complete();\n    \n    window.removeEventListener('resize', this.checkIfMobile.bind(this));\n  }\n\n  toggleSearch() {\n    this.showSearch = !this.showSearch;\n    if (!this.showSearch) {\n      this.clearSearch();\n    }\n  }\n\n  changeLanguage(lang: string) {\n    this.languageService.changeLanguage(lang);\n    this.currentLang = lang;\n    this.languageService.storeLanguage(lang);\n  }\n\n  selectTab(tab: 'all' | 'music' | 'podcasts') {\n    this.selectedTab = tab;\n  }\n\n  openPlaylist(playlist: Playlist) {\n    this.router.navigate(['/playlist', playlist.id]);\n  }\n\n  async playPlaylist(playlist: Playlist, event?: Event) {\n    if (event) {\n      event.stopPropagation();\n    }\n\n    if (!playlist.song_IDS || playlist.song_IDS.length === 0) {\n      await this.showToast('La playlist está vacía', 'warning');\n      return;\n    }\n\n    try {      \n      const songs = await this.getPlaylistSongs(playlist.song_IDS);\n      if (songs.length > 0) {\n        await this.enhancedAudioPlayer.setEnrichedQueue(songs, 0);\n        await this.enhancedAudioPlayer.playEnrichedSong(songs[0]);\n        await this.showToast(`Reproduciendo: ${playlist.name}`, 'success');\n      } else {\n        await this.showToast('No se pudieron cargar las canciones', 'danger');\n      }\n    } catch (error) {\n      console.error('Error playing playlist:', error);\n      await this.showToast('Error al reproducir la playlist', 'danger');\n    }\n  }\n\n  async openSong(song: Song | EnrichedSong) {\n    try {\n      await this.enhancedAudioPlayer.playEnrichedSong(song);\n      await this.showToast(`Reproduciendo: ${song.name}`, 'success');\n    } catch (error) {\n      console.error('Error playing song:', error);\n      await this.showToast('Error al reproducir la canción', 'danger');\n    }\n  }\n\n  private async getPlaylistSongs(songIds: string[]): Promise {\n    try {\n      const songs: Song[] = [];\n      \n      for (const songId of songIds) {\n        try {\n          const song = await this.songsSvc.getById(songId).toPromise();\n          if (song) {\n            songs.push(song);\n          }\n        } catch (error) {\n          console.error(`Error loading song ${songId}:`, error);\n        }\n      }\n      \n      return songs;\n    } catch (error) {\n      console.error('Error getting playlist songs:', error);\n      return [];\n    }\n  }\n\n  showAllSongs() {\n    this.router.navigate(['/songs']);\n  }\n\n  showAllRecommended() {\n    this.router.navigate(['/recommended']);\n  }\n\n  checkIfMobile() {\n    this.isMobile = window.innerWidth  {\n        const currentPlaylists = this._quickAccess.value;\n        \n        switch (change.type) {\n          case 'added':\n            if (change.data && !currentPlaylists.some(p => p.id === change.id)) {\n              this._quickAccess.next([...currentPlaylists, change.data as Playlist]);\n            }\n            break;\n          case 'modified':\n            if (change.data) {\n              const index = currentPlaylists.findIndex(p => p.id === change.id);\n              if (index !== -1) {\n                const updatedPlaylists = [...currentPlaylists];\n                updatedPlaylists[index] = change.data as Playlist;\n                this._quickAccess.next(updatedPlaylists);\n              }\n            }\n            break;\n          case 'removed':\n            this._quickAccess.next(currentPlaylists.filter(p => p.id !== change.id));\n            break;\n        }\n      });\n\n    // Resto de subscripciones existentes...\n  }\n  \n  private loadUserContent() {    \n    this.authSvc.user$.pipe(\n      filter(user => user !== undefined),\n      take(1),\n      switchMap(user => {\n        if (!user) {\n          throw new Error('No user found');\n        }\n\n        const allSongs$ = this.songsSvc.getAll(1, 1000, { sort: 'createdAt:desc' }).pipe(\n          map(response => 'data' in response ? response.data : response),\n          switchMap(songs => {\n            return this.songEnrichmentService.enrichSongs(songs);\n          }),\n          catchError(err => {\n            return of([]);\n          })\n        );\n\n        return forkJoin({\n          playlists: this.playlistsSvc.getAll(1, 9, { sort: 'createdAt:desc' }).pipe(\n            map(response => 'data' in response ? response.data : response),\n            catchError(err => {\n              return of([]);\n            })\n          ),\n          allSongs: allSongs$\n        });\n      }),\n      map(({ playlists, allSongs }) => {\n        const songs = allSongs.slice(0, 8); \n        const recommendedSongs = allSongs.slice(-8); \n\n        return {\n          playlists,\n          songs,\n          recommendedSongs\n        };\n      })\n    ).subscribe({\n      next: ({ playlists, songs, recommendedSongs }) => {\n        console.log('HomePage: Loading content:', {\n          playlistsCount: playlists.length,\n          songsCount: songs.length,\n          recommendedCount: recommendedSongs.length\n        });\n        \n        this._quickAccess.next(playlists);\n        this._baseNewReleases.next(songs);\n        this._baseRecommendedSongs.next(recommendedSongs);\n      },\n      error: (error) => {\n        console.error('HomePage: Error loading content:', error);\n      }\n    });\n  }\n\n  private isSong(data: any): data is Song {\n    return data \n      && typeof data === 'object' \n      && 'artists_IDS' in data \n      && 'name' in data \n      && 'duration' in data;\n  }\n\n  trackBySongId(index: number, song: ReactiveEnrichedSong): string {\n    return song.id;\n  }\n\n  /**\n   * Obtener imagen por defecto según el tipo\n   */\n  getDefaultImage(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'assets/default-song.png';\n      case 'playlist':\n        return 'assets/default-playlist.png';\n      case 'artist':\n        return 'assets/default-artist.png';\n      default:\n        return 'assets/default-song.png';\n    }\n  }\n\n  goToAbout() {\n    this.router.navigate(['/about']);\n  }\n\n  openRepository() {\n    const url = 'https://github.com/Rafamp34/Proyecto-UMusicWeb';\n    window.open(url, '_blank');\n  }\n\n  /**\n   * Obtener icono según el tipo\n   */\n  getTypeIcon(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'musical-note';\n      case 'playlist':\n        return 'list';\n      case 'artist':\n        return 'person';\n      default:\n        return 'musical-note';\n    }\n  }\n\n  /**\n   * Obtener color según el tipo\n   */\n  getTypeColor(type: 'song' | 'playlist' | 'artist'): string {\n    switch (type) {\n      case 'song':\n        return 'success';\n      case 'playlist':\n        return 'secondary';\n      case 'artist':\n        return 'primary';\n      default:\n        return 'medium';\n    }\n  }\n\n  /**\n   * TrackBy function para sugerencias de búsqueda\n   */\n  trackBySuggestionId(index: number, suggestion: SearchSuggestion): string {\n    return `${suggestion.type}-${suggestion.id}`;\n  }\n\n  /**\n   * Exponer router para uso en template\n   */\n  get routerPublic() {\n    return this.router;\n}\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShareService.html":{"url":"injectables/ShareService.html","title":"injectable - ShareService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShareService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/share.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                fallbackShare\n                            \n                            \n                                    Async\n                                shareItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/share.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        fallbackShare\n                        \n                    \n                \n            \n            \n                \n                        \n                    fallbackShare(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/share.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        shareItem\n                        \n                    \n                \n            \n            \n                \n                        \n                    shareItem(options: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/share.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                options\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Share } from '@capacitor/share';\nimport { Platform } from '@ionic/angular';\n\n@Injectable({\n    providedIn: 'root'\n    })\nexport class ShareService {\n\n    constructor(private platform: Platform) {}\n\n    async shareItem(options: {\n        title?: string;\n        text?: string;\n        url?: string;\n        dialogTitle?: string;\n    }): Promise {\n        if (this.platform.is('capacitor')) {\n        const shareRet = await Share.share({\n            title: options.title,\n            text: options.text,\n            url: options.url,\n            dialogTitle: options.dialogTitle\n        });\n        console.log('Share result:', shareRet);\n        } else {\n        if (navigator.share) {\n            try {\n            await navigator.share({\n                title: options.title,\n                text: options.text,\n                url: options.url\n            });\n            console.log('Web share successful');\n            } catch (error) {\n            console.error('Error sharing via Web API:', error);\n            this.fallbackShare(options);\n            }\n        } else {\n            console.log('Web Share API not supported');\n            this.fallbackShare(options);\n        }\n        }\n    }\n\n    private fallbackShare(options: {\n        title?: string;\n        text?: string;\n        url?: string;\n    }): void {\n        console.log('Using fallback share method');\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\n\nArtistGridCardComponent\n\nArtistGridCardComponent\n\n\n\nSharedModule\n\nSharedModule\n\nSharedModule -->\n\nArtistGridCardComponent->SharedModule\n\n\n\n\n\nAudioPlayerComponent\n\nAudioPlayerComponent\n\nSharedModule -->\n\nAudioPlayerComponent->SharedModule\n\n\n\n\n\nChangePasswordModalComponent\n\nChangePasswordModalComponent\n\nSharedModule -->\n\nChangePasswordModalComponent->SharedModule\n\n\n\n\n\nClickableArtistNamesComponent\n\nClickableArtistNamesComponent\n\nSharedModule -->\n\nClickableArtistNamesComponent->SharedModule\n\n\n\n\n\nDragDropDirective\n\nDragDropDirective\n\nSharedModule -->\n\nDragDropDirective->SharedModule\n\n\n\n\n\nDurationPipe\n\nDurationPipe\n\nSharedModule -->\n\nDurationPipe->SharedModule\n\n\n\n\n\nEditProfileModalComponent\n\nEditProfileModalComponent\n\nSharedModule -->\n\nEditProfileModalComponent->SharedModule\n\n\n\n\n\nFollowArtistButtonComponent\n\nFollowArtistButtonComponent\n\nSharedModule -->\n\nFollowArtistButtonComponent->SharedModule\n\n\n\n\n\nGlobalSearchComponent\n\nGlobalSearchComponent\n\nSharedModule -->\n\nGlobalSearchComponent->SharedModule\n\n\n\n\n\nLikeButtonComponent\n\nLikeButtonComponent\n\nSharedModule -->\n\nLikeButtonComponent->SharedModule\n\n\n\n\n\nPasswordVisibilityPipe\n\nPasswordVisibilityPipe\n\nSharedModule -->\n\nPasswordVisibilityPipe->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nPlayButtonComponent\n\nPlayButtonComponent\n\nSharedModule -->\n\nPlayButtonComponent->SharedModule\n\n\n\n\n\nPlaylistDurationPipe\n\nPlaylistDurationPipe\n\nSharedModule -->\n\nPlaylistDurationPipe->SharedModule\n\n\n\n\n\nPlaylistLikeButtonComponent\n\nPlaylistLikeButtonComponent\n\nSharedModule -->\n\nPlaylistLikeButtonComponent->SharedModule\n\n\n\n\n\nPlaylistModalComponent\n\nPlaylistModalComponent\n\nSharedModule -->\n\nPlaylistModalComponent->SharedModule\n\n\n\n\n\nSongDetailModalComponent\n\nSongDetailModalComponent\n\nSharedModule -->\n\nSongDetailModalComponent->SharedModule\n\n\n\n\n\nSongGridCardComponent\n\nSongGridCardComponent\n\nSharedModule -->\n\nSongGridCardComponent->SharedModule\n\n\n\n\n\nSongModalComponent\n\nSongModalComponent\n\nSharedModule -->\n\nSongModalComponent->SharedModule\n\n\n\n\n\nArtistGridCardComponent \n\nArtistGridCardComponent \n\nArtistGridCardComponent  -->\n\nSharedModule->ArtistGridCardComponent \n\n\n\n\n\nAudioPlayerComponent \n\nAudioPlayerComponent \n\nAudioPlayerComponent  -->\n\nSharedModule->AudioPlayerComponent \n\n\n\n\n\nChangePasswordModalComponent \n\nChangePasswordModalComponent \n\nChangePasswordModalComponent  -->\n\nSharedModule->ChangePasswordModalComponent \n\n\n\n\n\nClickableArtistNamesComponent \n\nClickableArtistNamesComponent \n\nClickableArtistNamesComponent  -->\n\nSharedModule->ClickableArtistNamesComponent \n\n\n\n\n\nDragDropDirective \n\nDragDropDirective \n\nDragDropDirective  -->\n\nSharedModule->DragDropDirective \n\n\n\n\n\nDurationPipe \n\nDurationPipe \n\nDurationPipe  -->\n\nSharedModule->DurationPipe \n\n\n\n\n\nEditProfileModalComponent \n\nEditProfileModalComponent \n\nEditProfileModalComponent  -->\n\nSharedModule->EditProfileModalComponent \n\n\n\n\n\nFollowArtistButtonComponent \n\nFollowArtistButtonComponent \n\nFollowArtistButtonComponent  -->\n\nSharedModule->FollowArtistButtonComponent \n\n\n\n\n\nGlobalSearchComponent \n\nGlobalSearchComponent \n\nGlobalSearchComponent  -->\n\nSharedModule->GlobalSearchComponent \n\n\n\n\n\nLikeButtonComponent \n\nLikeButtonComponent \n\nLikeButtonComponent  -->\n\nSharedModule->LikeButtonComponent \n\n\n\n\n\nPasswordVisibilityPipe \n\nPasswordVisibilityPipe \n\nPasswordVisibilityPipe  -->\n\nSharedModule->PasswordVisibilityPipe \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nPlayButtonComponent \n\nPlayButtonComponent \n\nPlayButtonComponent  -->\n\nSharedModule->PlayButtonComponent \n\n\n\n\n\nPlaylistDurationPipe \n\nPlaylistDurationPipe \n\nPlaylistDurationPipe  -->\n\nSharedModule->PlaylistDurationPipe \n\n\n\n\n\nPlaylistLikeButtonComponent \n\nPlaylistLikeButtonComponent \n\nPlaylistLikeButtonComponent  -->\n\nSharedModule->PlaylistLikeButtonComponent \n\n\n\n\n\nPlaylistModalComponent \n\nPlaylistModalComponent \n\nPlaylistModalComponent  -->\n\nSharedModule->PlaylistModalComponent \n\n\n\n\n\nSongDetailModalComponent \n\nSongDetailModalComponent \n\nSongDetailModalComponent  -->\n\nSharedModule->SongDetailModalComponent \n\n\n\n\n\nSongGridCardComponent \n\nSongGridCardComponent \n\nSongGridCardComponent  -->\n\nSharedModule->SongGridCardComponent \n\n\n\n\n\nSongModalComponent \n\nSongModalComponent \n\nSongModalComponent  -->\n\nSharedModule->SongModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/shared/shared.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ArtistGridCardComponent\n                        \n                        \n                            AudioPlayerComponent\n                        \n                        \n                            ChangePasswordModalComponent\n                        \n                        \n                            ClickableArtistNamesComponent\n                        \n                        \n                            DragDropDirective\n                        \n                        \n                            DurationPipe\n                        \n                        \n                            EditProfileModalComponent\n                        \n                        \n                            FollowArtistButtonComponent\n                        \n                        \n                            GlobalSearchComponent\n                        \n                        \n                            LikeButtonComponent\n                        \n                        \n                            PasswordVisibilityPipe\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            PlayButtonComponent\n                        \n                        \n                            PlaylistDurationPipe\n                        \n                        \n                            PlaylistLikeButtonComponent\n                        \n                        \n                            PlaylistModalComponent\n                        \n                        \n                            SongDetailModalComponent\n                        \n                        \n                            SongGridCardComponent\n                        \n                        \n                            SongModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ArtistGridCardComponent\n                        \n                        \n                            AudioPlayerComponent\n                        \n                        \n                            ChangePasswordModalComponent\n                        \n                        \n                            ClickableArtistNamesComponent\n                        \n                        \n                            DragDropDirective\n                        \n                        \n                            DurationPipe\n                        \n                        \n                            EditProfileModalComponent\n                        \n                        \n                            FollowArtistButtonComponent\n                        \n                        \n                            GlobalSearchComponent\n                        \n                        \n                            LikeButtonComponent\n                        \n                        \n                            PasswordVisibilityPipe\n                        \n                        \n                            PictureSelectableComponent\n                        \n                        \n                            PlayButtonComponent\n                        \n                        \n                            PlaylistDurationPipe\n                        \n                        \n                            PlaylistLikeButtonComponent\n                        \n                        \n                            PlaylistModalComponent\n                        \n                        \n                            SongDetailModalComponent\n                        \n                        \n                            SongGridCardComponent\n                        \n                        \n                            SongModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/app/shared/shared.module.ts \nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { SongModalComponent } from './components/song-modal/song-modal.component';\nimport { PictureSelectableComponent } from './components/picture-selectable/picture-selectable.component';\nimport { ChangePasswordModalComponent } from './components/change-password-modal/change-password-modal.component';\nimport { PlaylistModalComponent } from './components/playlist-modal/playlist-modal.component';\nimport { EditProfileModalComponent } from './components/edit-profile-modal/edit-profile-modal.component';\nimport { SongDetailModalComponent } from './components/song-detail-modal/song-detail-modal.component';\nimport { PasswordVisibilityPipe } from './pipe/password-visibility.pipe';\nimport { SongGridCardComponent } from './components/song-grid-card/song-grid-card.component';\nimport { DurationPipe } from './pipe/duration.pipe';\nimport { ArtistGridCardComponent } from './components/artist-grid-card/artist-grid-card.component';\nimport { DragDropDirective } from './directives/drag-drop.directive';\nimport { AudioPlayerComponent } from './components/audio-player/audio-player.component';\nimport { PlayButtonComponent } from './components/play-button/play-button.component';\nimport { PlaylistDurationPipe } from './pipe/playlist-duration.pipte';\nimport { FollowArtistButtonComponent } from './components/follow-artist-button/follow-artist-button.component';\nimport { LikeButtonComponent } from './components/like-button/like-button.component';\nimport { PlaylistLikeButtonComponent } from './components/playlist-like-button/playlist-like-button.component';\nimport { ClickableArtistNamesComponent } from './components/clickable-artist/clickable-artist-names.component';\nimport { GlobalSearchComponent } from './components/global-search/global-search.component';\n\n@NgModule({\n  declarations: [\n    // Components y Modals\n    SongModalComponent,\n    PictureSelectableComponent,\n    ChangePasswordModalComponent,\n    PlaylistModalComponent,\n    EditProfileModalComponent,\n    SongDetailModalComponent,\n    SongGridCardComponent,\n    ArtistGridCardComponent,\n    AudioPlayerComponent,\n    PlayButtonComponent,\n    LikeButtonComponent,\n    FollowArtistButtonComponent,\n    PlaylistLikeButtonComponent,\n    ClickableArtistNamesComponent,\n    GlobalSearchComponent,\n    // Pipes\n    PasswordVisibilityPipe,\n    PlaylistDurationPipe,\n    DurationPipe,\n    // Directives\n    DragDropDirective\n  ],\n  imports: [\n    CommonModule,\n    IonicModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    TranslateModule.forChild()\n  ],\n  exports: [\n    // Components y Modals\n    SongModalComponent,\n    PictureSelectableComponent,\n    ChangePasswordModalComponent,\n    PlaylistModalComponent,\n    EditProfileModalComponent,\n    SongDetailModalComponent,\n    SongGridCardComponent,\n    ArtistGridCardComponent,\n    AudioPlayerComponent,\n    PlayButtonComponent,\n    LikeButtonComponent,\n    FollowArtistButtonComponent,\n    PlaylistLikeButtonComponent,\n    ClickableArtistNamesComponent,\n    GlobalSearchComponent,\n    // Pipes\n    PasswordVisibilityPipe,\n    PlaylistDurationPipe,\n    DurationPipe,\n    // Directives\n    DragDropDirective\n  ]\n})\nexport class SharedModule { }\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignInPayload.html":{"url":"interfaces/SignInPayload.html","title":"interface - SignInPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignInPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload{\n    email:string,\n    password:string\n}\n\nexport interface SignUpPayload{\n    email:string,\n    password:string,\n    name:string,\n    surname:string,\n    birthDate:string,\n    gender:string,\n    group:string,\n    user:string\n    image?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignInPayload-1.html":{"url":"interfaces/SignInPayload-1.html","title":"interface - SignInPayload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignInPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface User extends Model {\n    username: string;\n    email: string;\n    provider?: string;\n    password?: string;\n    resetPasswordToken?: string;\n    confirmationToken?: string;\n    confirmed?: boolean;\n    blocked?: boolean;\n    role?: string;\n    playlists_IDS: string[];\n    image?: {\n        url: string | undefined;\n        large: string | undefined;\n        medium: string | undefined;\n        small: string | undefined;\n        thumbnail: string | undefined;\n    };\n    \n    followers: number;\n    following: number;\n    following_ids: string[];\n    followers_FK: string[];\n    liked_songs: string[];\n    following_artists: string[];\n}\n\nexport interface SignInPayload {\n    email: string;\n    password: string;\n}\n\nexport interface SignUpPayload {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    birthDate: string;\n    gender: string;\n    group: string;\n    user: string;\n}\n\nexport interface UserDisplayData {\n    id: string;\n    username: string;\n    displayName: string;    \n    email: string;\n    image?: {\n        url: string | undefined;\n        thumbnail: string | undefined;\n    };\n    followers_count: number;\n    following_count: number;\n    playlists_count: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpPayload.html":{"url":"interfaces/SignUpPayload.html","title":"interface - SignUpPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/auth.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SignInPayload{\n    email:string,\n    password:string\n}\n\nexport interface SignUpPayload{\n    email:string,\n    password:string,\n    name:string,\n    surname:string,\n    birthDate:string,\n    gender:string,\n    group:string,\n    user:string\n    image?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SignUpPayload-1.html":{"url":"interfaces/SignUpPayload-1.html","title":"interface - SignUpPayload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SignUpPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            birthDate\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            gender\n                                        \n                                \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            surname\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        birthDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gender:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        surname\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        surname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface User extends Model {\n    username: string;\n    email: string;\n    provider?: string;\n    password?: string;\n    resetPasswordToken?: string;\n    confirmationToken?: string;\n    confirmed?: boolean;\n    blocked?: boolean;\n    role?: string;\n    playlists_IDS: string[];\n    image?: {\n        url: string | undefined;\n        large: string | undefined;\n        medium: string | undefined;\n        small: string | undefined;\n        thumbnail: string | undefined;\n    };\n    \n    followers: number;\n    following: number;\n    following_ids: string[];\n    followers_FK: string[];\n    liked_songs: string[];\n    following_artists: string[];\n}\n\nexport interface SignInPayload {\n    email: string;\n    password: string;\n}\n\nexport interface SignUpPayload {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    birthDate: string;\n    gender: string;\n    group: string;\n    user: string;\n}\n\nexport interface UserDisplayData {\n    id: string;\n    username: string;\n    displayName: string;    \n    email: string;\n    image?: {\n        url: string | undefined;\n        thumbnail: string | undefined;\n    };\n    followers_count: number;\n    following_count: number;\n    playlists_count: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Small.html":{"url":"interfaces/Small.html","title":"interface - Small","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Small\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Song.html":{"url":"interfaces/Song.html","title":"interface - Song","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Song\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/song.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            album\n                                        \n                                \n                                \n                                        \n                                            artists_IDS\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            audioUrl\n                                        \n                                \n                                \n                                        \n                                            duration\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            likes_count\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lyrics\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            playlistid_IDS\n                                        \n                                \n                                \n                                        \n                                            users_like\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        album\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        album:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        artists_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artists_IDS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        audioUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        audioUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        duration\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duration:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        likes_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        likes_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lyrics\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lyrics:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlistid_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlistid_IDS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        users_like\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users_like:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface Song extends Model {\n    name: string;\n    album?: string;\n    duration: number;\n    image?: {\n        url: string | undefined;\n        large: string | undefined;\n        medium: string | undefined;\n        small: string | undefined;\n        thumbnail: string | undefined;\n    };\n    playlistid_IDS: string[];\n    lyrics?: string;\n    artists_IDS: string[];\n    audioUrl?: string;\n    \n    users_like: string[];\n    likes_count: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SongDetailModalComponent.html":{"url":"components/SongDetailModalComponent.html","title":"component - SongDetailModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SongDetailModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/song-detail-modal/song-detail-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-song-detail-modal\n            \n\n\n\n            \n                styleUrls\n                ./song-detail-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./song-detail-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _availableSongs\n                            \n                            \n                                availableSongs$\n                            \n                            \n                                currentPage\n                            \n                            \n                                hasMorePages\n                            \n                            \n                                pageSize\n                            \n                            \n                                searchTerm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                    Private\n                                    Async\n                                enrichSongWithArtists\n                            \n                            \n                                handleSearch\n                            \n                            \n                                loadMore\n                            \n                            \n                                loadSongs\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectSong\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                excludeSongIds\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalCtrl: ModalController, songsSvc: SongsService, artistsSvc: ArtistsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalCtrl\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        songsSvc\n                                                  \n                                                        \n                                                                        SongsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        artistsSvc\n                                                  \n                                                        \n                                                                        ArtistsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        excludeSongIds\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dismiss\n                        \n                    \n                \n            \n            \n                \ndismiss()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:114\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        enrichSongWithArtists\n                        \n                    \n                \n            \n            \n                \n                        \n                    enrichSongWithArtists(songs: Song[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songs\n                                            \n                                                            Song[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSearch\n                        \n                    \n                \n            \n            \n                \nhandleSearch(event: CustomEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:93\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        CustomEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadMore\n                        \n                    \n                \n            \n            \n                \nloadMore(event: CustomEvent)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:99\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        CustomEvent\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadSongs\n                        \n                    \n                \n            \n            \n                \nloadSongs(page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:68\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectSong\n                        \n                    \n                \n            \n            \n                \nselectSong(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:110\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _availableSongs\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        availableSongs$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._availableSongs.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        currentPage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasMorePages\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pageSize\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 20\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-detail-modal/song-detail-modal.component.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BehaviorSubject, switchMap } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Song } from 'src/app/core/models/song.model';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { SearchParams } from 'src/app/core/repositories/intefaces/base-repository.interface';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\n\ninterface SongWithArtists extends Song {\n  artistNames?: string[];\n}\n\n@Component({\n  selector: 'app-song-detail-modal',\n  templateUrl: './song-detail-modal.component.html',\n  styleUrls: ['./song-detail-modal.component.scss']\n})\nexport class SongDetailModalComponent implements OnInit {\n  @Input() excludeSongIds: string[] = [];\n  \n  private _availableSongs = new BehaviorSubject([]);\n  availableSongs$ = this._availableSongs.asObservable();\n  \n  searchTerm = '';\n  currentPage = 1;\n  pageSize = 20;\n  hasMorePages = true;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private songsSvc: SongsService,\n    private artistsSvc: ArtistsService\n  ) {}\n\n  ngOnInit() {\n    this.loadSongs();\n  }\n\n  private async enrichSongWithArtists(songs: Song[]): Promise {\n    const enrichedSongs: SongWithArtists[] = [];\n    \n    for (const song of songs) {\n      if (song.artists_IDS && song.artists_IDS.length > 0) {\n        try {\n          const artists = await this.artistsSvc.getByIds(song.artists_IDS).toPromise();\n          if (artists) {\n            const enrichedSong: SongWithArtists = {\n              ...song,\n              artistNames: artists.map(artist => artist.name)\n            };\n            enrichedSongs.push(enrichedSong);\n          }\n        } catch (error) {\n          console.error('Error loading artists for song:', song.id, error);\n          enrichedSongs.push({ ...song, artistNames: [] });\n        }\n      } else {\n        enrichedSongs.push({ ...song, artistNames: [] });\n      }\n    }\n    \n    return enrichedSongs;\n  }\n\n  loadSongs(page: number = 1) {\n    const filters: SearchParams = this.searchTerm ? { name: this.searchTerm } : {};\n    \n    this.songsSvc.getAll(page, this.pageSize, filters).pipe(\n      switchMap(async (response: Paginated) => {\n        const songs = response.data;\n        const filteredSongs = songs.filter(song => !this.excludeSongIds.includes(song.id));\n        const enrichedSongs = await this.enrichSongWithArtists(filteredSongs);\n        \n        return {\n          data: enrichedSongs,\n          pages: response.pages\n        };\n      })\n    ).subscribe(result => {\n      if (page === 1) {\n        this._availableSongs.next(result.data);\n      } else {\n        this._availableSongs.next([...this._availableSongs.value, ...result.data]);\n      }\n      \n      this.hasMorePages = page \n    \n\n    \n        \n  \n    {{ 'SONG.SELECT' | translate }}\n    \n      \n        \n      \n    \n  \n\n\n\n\n\n  \n    \n      \n        \n      \n      \n        {{song.name}}\n        {{song.artistNames?.join(', ') || 'Unknown Artist'}}\n      \n      {{song.duration | duration}}\n    \n  \n\n  \n    \n  \n\n    \n\n    \n                \n                    ./song-detail-modal.component.scss\n                \n                :host {\n    // Estilos específicos del modal\n    ion-content {\n      --background: linear-gradient(180deg, #0f0c29, #302b63, #24243e);\n    }\n  \n    ion-toolbar {\n      --background: transparent;\n    }\n  \n    form {\n      padding: 16px;\n    }\n  \n    ion-item {\n      --background: rgba(255, 255, 255, 0.1);\n      --border-radius: 8px;\n      margin-bottom: 16px;\n    }\n  \n    ion-input {\n      --color: white;\n      --placeholder-color: rgba(255, 255, 255, 0.6);\n    }\n  }\n  \n  .image-upload-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n    padding: 1rem;\n  \n    .preview-image {\n      max-width: 200px;\n      max-height: 200px;\n      border-radius: 8px;\n      object-fit: cover;\n    }\n  \n    ion-button {\n      width: 100%;\n    }\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{ \\'SONG.SELECT\\' | translate }}                                                                      {{song.name}}        {{song.artistNames?.join(\\', \\') || \\'Unknown Artist\\'}}            {{song.duration | duration}}              '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'SongDetailModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SongEnrichmentService.html":{"url":"injectables/SongEnrichmentService.html","title":"injectable - SongEnrichmentService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SongEnrichmentService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/song-enrichment.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                enrichSong\n                            \n                            \n                                enrichSongs\n                            \n                            \n                                    Async\n                                enrichSongsAsync\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(artistsService: ArtistsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/song-enrichment.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        artistsService\n                                                  \n                                                        \n                                                                        ArtistsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        enrichSong\n                        \n                    \n                \n            \n            \n                \nenrichSong(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/song-enrichment.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        enrichSongs\n                        \n                    \n                \n            \n            \n                \nenrichSongs(songs: Song[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/song-enrichment.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songs\n                                            \n                                                            Song[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        enrichSongsAsync\n                        \n                    \n                \n            \n            \n                \n                        \n                    enrichSongsAsync(songs: Song[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/song-enrichment.service.ts:57\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                songs\n                                            \n                                                            Song[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Observable, forkJoin, of, map, catchError, lastValueFrom } from 'rxjs';\nimport { Song } from '../../models/song.model';\nimport { ArtistsService } from './artists.service';\n\nexport interface EnrichedSong extends Song {\n    artistNames?: string[];\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class SongEnrichmentService {\n    constructor(private artistsService: ArtistsService) {}\n\n    enrichSong(song: Song): Observable {\n        \n        if (!song.artists_IDS || song.artists_IDS.length === 0) {\n        return of({ ...song, artistNames: ['Unknown Artist'] });\n        }\n\n        return this.artistsService.getByIds(song.artists_IDS).pipe(\n        map(artists => {\n            const artistNames = artists.map(artist => artist.name);\n            return {\n            ...song,\n            artistNames: artistNames\n            };\n        }),\n        catchError(error => {\n            return of({ ...song, artistNames: ['Unknown Artist'] });\n        })\n        );\n    }\n\n    enrichSongs(songs: Song[]): Observable {\n        if (songs.length === 0) {\n        return of([]);\n        }\n\n        const enrichmentObservables = songs.map(song => this.enrichSong(song));\n        \n        return forkJoin(enrichmentObservables).pipe(\n        catchError(error => {\n            console.error('Error enriching songs:', error);\n            // Fallback: devolver canciones con nombres de artistas por defecto\n            return of(songs.map(song => ({ \n            ...song, \n            artistNames: ['Unknown Artist'] \n            })));\n        })\n        );\n    }\n\n  // ✅ ARREGLADO: Usar lastValueFrom en lugar de toPromise()\n    async enrichSongsAsync(songs: Song[]): Promise {\n        const enrichedSongs: EnrichedSong[] = [];\n        \n        for (const song of songs) {\n        try {\n            if (song.artists_IDS && song.artists_IDS.length > 0) {\n            \n            // ✅ ARREGLADO: Usar lastValueFrom en lugar de toPromise()\n            const artists = await lastValueFrom(this.artistsService.getByIds(song.artists_IDS));\n            \n            if (artists && artists.length > 0) {\n                enrichedSongs.push({\n                ...song,\n                artistNames: artists.map(artist => artist.name)\n                });\n            } else {\n                console.warn('🎨 No artists found for song:', song.name);\n                enrichedSongs.push({\n                ...song,\n                artistNames: ['Unknown Artist']\n                });\n            }\n            } else {\n            enrichedSongs.push({\n                ...song,\n                artistNames: ['Unknown Artist']\n            });\n            }\n        } catch (error) {\n            console.error('🎨 Error loading artists for song:', song.name, error);\n            enrichedSongs.push({\n            ...song,\n            artistNames: ['Unknown Artist']\n            });\n        }\n        }\n        \n        return enrichedSongs;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SongGridCardComponent.html":{"url":"components/SongGridCardComponent.html","title":"component - SongGridCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SongGridCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/shared/components/song-grid-card/song-grid-card.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-song-grid-card\n            \n\n\n\n            \n                styleUrls\n                ./song-grid-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./song-grid-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _artistNames\n                            \n                            \n                                artistNames$\n                            \n                            \n                                    Private\n                                destroy$\n                            \n                            \n                                isCurrentSongPlaying\n                            \n                            \n                                isHovered\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loadArtists\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onEdit\n                            \n                            \n                                onMouseEnter\n                            \n                            \n                                onMouseLeave\n                            \n                            \n                                    Async\n                                onPlay\n                            \n                            \n                                    Private\n                                subscribeToPlayerState\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                playlist\n                            \n                            \n                                song\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                delete\n                            \n                            \n                                edit\n                            \n                            \n                                playSong\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(artistsService: ArtistsService, audioPlayerService: AudioPlayerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        artistsService\n                                                  \n                                                        \n                                                                        ArtistsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        audioPlayerService\n                                                  \n                                                        \n                                                                        AudioPlayerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        playlist\n                    \n                \n                \n                    \n                        Type :     (Song | EnrichedSong)[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        song\n                    \n                \n                \n                    \n                        Type :     Song | EnrichedSong\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        edit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        playSong\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:20\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loadArtists\n                        \n                    \n                \n            \n            \n                \n                        \n                    loadArtists()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:54\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:39\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:74\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onEdit\n                        \n                    \n                \n            \n            \n                \nonEdit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:70\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseEnter\n                        \n                    \n                \n            \n            \n                \nonMouseEnter()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:107\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onMouseLeave\n                        \n                    \n                \n            \n            \n                \nonMouseLeave()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:111\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onPlay\n                        \n                    \n                \n            \n            \n                \n                        \n                    onPlay()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscribeToPlayerState\n                        \n                    \n                \n            \n            \n                \n                        \n                    subscribeToPlayerState()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:45\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _artistNames\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(['Unknown Artist'])\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        artistNames$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this._artistNames.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        destroy$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isCurrentSongPlaying\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isHovered\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/shared/components/song-grid-card/song-grid-card.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, OnInit, OnDestroy } from '@angular/core';\nimport { Song } from 'src/app/core/models/song.model';\nimport { EnrichedSong } from 'src/app/core/models/enriched-song.interface';\nimport { Artist } from 'src/app/core/models/artist.model';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\nimport { AudioPlayerService } from 'src/app/core/services/impl/audio-player.service';\nimport { BehaviorSubject, takeUntil, Subject } from 'rxjs';\n\n@Component({\n  selector: 'app-song-grid-card',\n  templateUrl: './song-grid-card.component.html',\n  styleUrls: ['./song-grid-card.component.scss']\n})\nexport class SongGridCardComponent implements OnInit, OnDestroy {\n  @Input() song!: Song | EnrichedSong;\n  @Input() playlist: (Song | EnrichedSong)[] = []; // ✅ NUEVO: Lista completa para el reproductor\n  @Output() edit = new EventEmitter();\n  @Output() delete = new EventEmitter();\n  @Output() playSong = new EventEmitter(); // Mantener compatibilidad\n\n  private _artistNames = new BehaviorSubject(['Unknown Artist']);\n  artistNames$ = this._artistNames.asObservable();\n  \n  isCurrentSongPlaying = false;\n  isHovered = false;\n  private destroy$ = new Subject();\n\n  constructor(\n    private artistsService: ArtistsService,\n    private audioPlayerService: AudioPlayerService // ✅ NUEVO\n  ) {}\n\n  ngOnInit() {\n    this.loadArtists();\n    this.subscribeToPlayerState(); // ✅ NUEVO\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // ✅ NUEVO: Suscribirse al estado del reproductor\n  private subscribeToPlayerState() {\n    this.audioPlayerService.playerState$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(state => {\n        this.isCurrentSongPlaying = \n          state.currentSong?.id === this.song?.id && state.isPlaying;\n      });\n  }\n\n  private loadArtists() {\n    if (this.song.artists_IDS?.length) {\n      this.artistsService.getByIds(this.song.artists_IDS).subscribe({\n        next: (artists) => {\n          this._artistNames.next(artists.map(artist => artist.name));\n        },\n        error: (error) => {\n          console.error('Error loading artists:', error);\n          this._artistNames.next(['Unknown Artist']);\n        }\n      });\n    } else {\n      this._artistNames.next(['Unknown Artist']);\n    }\n  }\n\n  onEdit() {\n    this.edit.emit(this.song);\n  }\n\n  onDelete() {\n    this.delete.emit(this.song);\n  }\n\n  // ✅ ACTUALIZADO: Nuevo método de reproducción\n  async onPlay() {\n    if (!this.song) return;\n\n    const currentState = this.audioPlayerService.getPlayerState();\n    \n    if (currentState.currentSong?.id === this.song.id) {\n      // Es la misma canción, toggle play/pause\n      if (currentState.isPlaying) {\n        this.audioPlayerService.pause();\n      } else {\n        this.audioPlayerService.resume();\n      }\n    } else {\n      // Es una canción diferente, cargar y reproducir\n      if (this.playlist.length > 0) {\n        const songIndex = this.playlist.findIndex(s => s.id === this.song.id);\n        this.audioPlayerService.setQueue(this.playlist, songIndex);\n      } else {\n        this.audioPlayerService.setQueue([this.song], 0);\n      }\n      \n      await this.audioPlayerService.play(this.song);\n    }\n\n    // Emitir evento para compatibilidad hacia atrás\n    this.playSong.emit(this.song);\n  }\n\n  onMouseEnter() {\n    this.isHovered = true;\n  }\n\n  onMouseLeave() {\n    this.isHovered = false;\n  }\n}\n    \n\n    \n        \n\n  \n    \n    \n    \n    \n      \n        \n        \n        \n        \n      \n    \n    \n    \n      \n        \n        \n          \n        \n        \n        \n          \n        \n        \n        \n          \n        \n      \n    \n  \n\n  \n  \n    {{song.name}}\n    {{(artistNames$ | async)?.join(', ')}}\n    \n      {{song.duration | duration}}\n      {{song.album}}\n    \n  \n\n    \n\n    \n                \n                    ./song-grid-card.component.scss\n                \n                /* src/app/shared/components/song-grid-card/song-grid-card.component.scss - ACTUALIZADO */\n.song-card {\n  background: rgba(71, 103, 42, 0.119);\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 2px 4px rgb(255, 255, 255);\n  transition: all 0.3s ease;\n\n  &:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n    transform: translateY(-2px);\n  }\n\n  /* ✅ NUEVO: Estado de reproducción */\n  &.playing {\n    box-shadow: 0 4px 12px rgba(29, 185, 84, 0.3);\n    border: 1px solid rgba(29, 185, 84, 0.5);\n  }\n}\n\n.image-container {\n  position: relative;\n  aspect-ratio: 1;\n\n  .song-image {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    transition: transform 0.3s ease;\n  }\n\n  /* ✅ NUEVO: Indicador de reproducción animado */\n  .playing-indicator {\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    z-index: 2;\n\n    .sound-bars {\n      display: flex;\n      align-items: flex-end;\n      gap: 2px;\n      height: 20px;\n\n      .bar {\n        width: 3px;\n        background: #1db954;\n        border-radius: 1px;\n        animation: soundBars 1.2s ease-in-out infinite;\n\n        &.bar1 {\n          height: 8px;\n          animation-delay: 0s;\n        }\n\n        &.bar2 {\n          height: 12px;\n          animation-delay: 0.2s;\n        }\n\n        &.bar3 {\n          height: 16px;\n          animation-delay: 0.4s;\n        }\n\n        &.bar4 {\n          height: 10px;\n          animation-delay: 0.6s;\n        }\n      }\n    }\n  }\n\n  .overlay {\n    position: absolute;\n    inset: 0;\n    background: rgba(0, 0, 0, 0.4);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transition: opacity 0.3s ease;\n    z-index: 3;\n  }\n\n  .action-buttons {\n    display: flex;\n    gap: 8px;\n\n    ion-button {\n      --padding-start: 8px;\n      --padding-end: 8px;\n      --background: rgb(255, 255, 255);\n      --color: var(--ion-color-dark);\n      \n      &.play-button {\n        --background: #1db954;\n        --color: white;\n        --border-radius: 50%;\n        width: 48px;\n        height: 48px;\n        \n        ion-icon {\n          font-size: 20px;\n        }\n      }\n      \n      &.edit-button {\n        --color: var(--ion-color-primary);\n      }\n      \n      &.delete-button {\n        --color: var(--ion-color-danger);\n      }\n    }\n  }\n}\n\n.song-info {\n  padding: 1rem;\n\n  .song-title {\n    font-weight: 600;\n    color: var(--ion-color-dark);\n    margin: 0 0 4px;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    transition: color 0.3s ease;\n\n    /* ✅ NUEVO: Estado de reproducción */\n    &.playing-text {\n      color: #1db954;\n    }\n  }\n\n  .song-artist {\n    font-size: 0.875rem;\n    color: var(--ion-color-medium);\n    margin: 0;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n\n  .song-details {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 8px;\n    font-size: 0.75rem;\n    color: var(--ion-color-medium);\n\n    .duration {\n      font-weight: 500;\n    }\n\n    .album {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n      max-width: 60%;\n    }\n  }\n}\n\n/* ✅ NUEVO: Animaciones */\n@keyframes soundBars {\n  0%, 100% {\n    transform: scaleY(0.3);\n  }\n  50% {\n    transform: scaleY(1);\n  }\n}\n\n/* Responsive design */\n@media (max-width: 768px) {\n  .song-card {\n    &:hover {\n      transform: none;\n    }\n  }\n\n  .image-container {\n    .action-buttons {\n      ion-button {\n        &.play-button {\n          width: 40px;\n          height: 40px;\n          \n          ion-icon {\n            font-size: 18px;\n          }\n        }\n      }\n    }\n  }\n\n  .playing-indicator {\n    .sound-bars {\n      height: 16px;\n\n      .bar {\n        width: 2px;\n\n        &.bar1 { height: 6px; }\n        &.bar2 { height: 10px; }\n        &.bar3 { height: 14px; }\n        &.bar4 { height: 8px; }\n      }\n    }\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                          {{song.name}}    {{(artistNames$ | async)?.join(\\', \\')}}          {{song.duration | duration}}      {{song.album}}      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'SongGridCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongWithArtists.html":{"url":"interfaces/SongWithArtists.html","title":"interface - SongWithArtists","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongWithArtists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/playlist-detail/playlist-detail.page.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Song\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artistNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BehaviorSubject, catchError, of, switchMap, Subject } from 'rxjs';\nimport { AlertController, ModalController, ToastController } from '@ionic/angular';\nimport { Playlist } from 'src/app/core/models/playlist.model';\nimport { Song } from 'src/app/core/models/song.model';\nimport { EnrichedSong } from 'src/app/core/models/enriched-song.interface';\nimport { PlaylistsService } from 'src/app/core/services/impl/playlists.service';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { AudioPlayerService } from 'src/app/core/services/impl/audio-player.service';\nimport { SongModalComponent } from 'src/app/shared/components/song-modal/song-modal.component';\nimport { filter, map, tap, takeUntil } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\nimport { SongDetailModalComponent } from 'src/app/shared/components/song-detail-modal/song-detail-modal.component';\nimport { TranslateService } from '@ngx-translate/core';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\nimport { User } from 'src/app/core/models/user.model';\nimport { UserService } from 'src/app/core/services/impl/user.service';\nimport { ShareService } from 'src/app/core/services/impl/share.service';\n\ninterface SongWithArtists extends Song {\n  artistNames?: string[];\n}\n\n@Component({\n  selector: 'app-playlist-detail',\n  templateUrl: './playlist-detail.page.html',\n  styleUrls: ['./playlist-detail.page.scss'],\n})\nexport class PlaylistDetailPage implements OnInit, OnDestroy {\n  private destroy$ = new Subject();\n  \n  private _playlist = new BehaviorSubject(null);\n  playlist$ = this._playlist.asObservable();\n  \n  private _songs = new BehaviorSubject([]);\n  songs$ = this._songs.asObservable();\n\n  private _currentUser = new BehaviorSubject(null);\n  currentUser$ = this._currentUser.asObservable();\n\n  // ✅ INTEGRACIÓN CON AudioPlayerService\n  playerState$ = this.audioPlayerService.playerState$;\n  \n  isOwner = false;\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    private playlistsSvc: PlaylistsService,\n    private songsSvc: SongsService,\n    private authSvc: BaseAuthenticationService,\n    private audioPlayerService: AudioPlayerService, // 👈 Tu servicio de audio\n    private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private toastCtrl: ToastController,\n    private translate: TranslateService,\n    private artistsSvc: ArtistsService,\n    private userService: UserService,\n    private shareService: ShareService,\n  ) { }\n\n  async ngOnInit() {    \n    this.authSvc.user$.pipe(\n      takeUntil(this.destroy$),\n      filter(user => user !== undefined),\n      switchMap(user => {\n        if (!user) {\n          return of(null);\n        }\n        return this.userService.getById(user.id);\n      })\n    ).subscribe({\n      next: (userData) => {\n        if (userData) {\n          const updatedUser: User = {\n            ...userData,\n            image: userData.image || undefined\n          };\n          this._currentUser.next(updatedUser);\n        }\n      },\n      error: (error) => {\n        console.error('🎵 Error loading user data:', error);\n      }\n    });\n\n    // ✅ PASO 2: Cargar playlist desde la URL\n    this.route.params.pipe(\n      takeUntil(this.destroy$),\n      switchMap(params => {\n        \n        if (!params['id']) {\n          console.error('🎵 No playlist ID in route');\n          return of(null);\n        }\n        \n        return this.playlistsSvc.getById(params['id']).pipe(\n          catchError(error => {\n            console.error('🎵 Error loading playlist:', error);\n            this.showToast('PLAYLIST.ERRORS.LOAD');\n            return of(null);\n          })\n        );\n      })\n    ).subscribe({\n      next: async (playlist) => {\n        \n        if (playlist) {\n          \n          if (!playlist.name || !playlist.author) {\n            console.error('🎵 Playlist has invalid data:', playlist);\n            this.showToast('PLAYLIST.ERRORS.INVALID_DATA');\n            this.router.navigate(['/home']);\n            return;\n          }\n          \n          this._playlist.next(playlist);\n          \n          // ✅ Cargar canciones si existen\n          if (playlist.song_IDS && playlist.song_IDS.length > 0) {\n            await this.loadSongs(playlist);\n          } else {\n            this._songs.next([]);\n          }\n          \n          // ✅ Verificar ownership\n          try {\n            const currentUser = await this.authSvc.getCurrentUser();\n            if (currentUser && playlist.users_IDS && playlist.users_IDS.length > 0) {\n              this.isOwner = playlist.users_IDS.includes(currentUser.id);\n            }\n          } catch (error) {\n            console.error('🎵 Error checking ownership:', error);\n          }\n        } else {\n          this.router.navigate(['/home']);\n        }\n      },\n      error: (error) => {\n        console.error('🎵 Critical error loading playlist:', error);\n        this.showToast('PLAYLIST.ERRORS.LOAD');\n        this.router.navigate(['/home']);\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  /**\n   * Toggle play/pause o reproduce toda la playlist si no hay nada reproduciéndose\n   */\n  async onPlay() {\n    const playerState = this.audioPlayerService.getPlayerState();\n    const songs = this._songs.value;\n    const playlist = this._playlist.value;\n    \n    if (songs.length === 0) return;\n\n    // Si hay una canción actual y está reproduciéndose, pausar\n    if (playerState.currentSong && playerState.isPlaying) {\n      this.audioPlayerService.pause();\n      return;\n    }\n\n    // Si hay una canción actual pero está pausada, reanudar\n    if (playerState.currentSong && playerState.isPaused) {\n      this.audioPlayerService.resume();\n      return;\n    }\n\n    // Si no hay canción actual, reproducir toda la playlist desde el inicio\n    \n    if (playlist) {\n      this.audioPlayerService.setPlayingContext({\n        type: 'playlist',\n        name: playlist.name,\n        id: playlist.id\n      });\n    }\n    \n    const enrichedSongs = this.convertToEnrichedSongs(songs);\n    this.audioPlayerService.setQueue(enrichedSongs, 0);\n    await this.audioPlayerService.play(enrichedSongs[0]);\n  }\n\n  /**\n   * Activa shuffle y reproduce la playlist mezclada\n   */\n  async onShuffle() {\n    const songs = this._songs.value;\n    const playlist = this._playlist.value;\n    if (songs.length === 0) return;\n    \n    // ✅ NUEVO: Establecer contexto de reproducción\n    if (playlist) {\n      this.audioPlayerService.setPlayingContext({\n        type: 'playlist',\n        name: `${playlist.name} (Shuffled)`,\n        id: playlist.id\n      });\n    }\n    \n    // Convertir a EnrichedSong\n    const enrichedSongs = this.convertToEnrichedSongs(songs);\n    \n    // Mezclar las canciones manualmente\n    const shuffledSongs = [...enrichedSongs];\n    for (let i = shuffledSongs.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledSongs[i], shuffledSongs[j]] = [shuffledSongs[j], shuffledSongs[i]];\n    }\n    \n    // Configurar la cola con las canciones mezcladas\n    this.audioPlayerService.setQueue(shuffledSongs, 0);\n    \n    // Activar el modo shuffle en el reproductor\n    const playerState = this.audioPlayerService.getPlayerState();\n    if (!playerState.isShuffled) {\n      this.audioPlayerService.toggleShuffle();\n    }\n    \n    // Reproducir la primera canción de la lista mezclada\n    await this.audioPlayerService.play(shuffledSongs[0]);\n  }\n\n  /**\n   * Reproduce una canción específica (reemplaza tu método playSong)\n   */\n  async playSong(song: SongWithArtists, index: number) {    \n    const songs = this._songs.value;\n    const enrichedSongs = this.convertToEnrichedSongs(songs);\n    \n    // Configurar la cola desde la canción seleccionada\n    this.audioPlayerService.setQueue(enrichedSongs, index);\n    \n    // Reproducir la canción seleccionada\n    await this.audioPlayerService.play(enrichedSongs[index]);\n  }\n\n  /**\n   * Verifica si una canción está reproduciéndose actualmente\n   */\n  isCurrentlyPlaying(song: Song): boolean {\n    const playerState = this.audioPlayerService.getPlayerState();\n    return playerState.currentSong?.id === song.id && playerState.isPlaying;\n  }\n\n  /**\n   * Verifica si una canción es la actual (reproduciendo o pausada)\n   */\n  isCurrentSong(song: Song): boolean {\n    const playerState = this.audioPlayerService.getPlayerState();\n    return playerState.currentSong?.id === song.id;\n  }\n\n  /**\n   * Convierte SongWithArtists[] a EnrichedSong[]\n   */\n  private convertToEnrichedSongs(songs: SongWithArtists[]): EnrichedSong[] {\n    return songs.map(song => ({\n      ...song,\n      audioUrl: song.audioUrl || `assets/audio/sample-${song.id}.mp3`, // URL de ejemplo si no existe\n      artistNames: song.artistNames || ['Unknown Artist']\n    } as EnrichedSong));\n  }\n\n  // ✅ GETTERS PARA EL TEMPLATE (para compatibilidad)\n  \n  get isPlaying$() {\n    return this.playerState$.pipe(map(state => state.isPlaying));\n  }\n\n  get currentSong() {\n    return this.audioPlayerService.getPlayerState().currentSong;\n  }\n\n  /**\n   * Verifica si el botón debe mostrar \"pause\" (hay música reproduciéndose)\n   */\n  get shouldShowPause$() {\n    return this.playerState$.pipe(\n      map(state => state.isPlaying && state.currentSong !== null)\n    );\n  }\n\n  /**\n   * Verifica si el shuffle está activo\n   */\n  get isShuffleActive$() {\n    return this.playerState$.pipe(\n      map(state => state.isShuffled)\n    );\n  }\n\n  // ✅ MÉTODOS EXISTENTES (mantener todos los que ya tienes)\n\n  private async loadSongs(playlist: Playlist) {\n    \n    if (!playlist.song_IDS?.length) {\n      this._songs.next([]);\n      return;\n    }\n\n    const songRequests = playlist.song_IDS.map(id => {\n      return this.songsSvc.getById(id).pipe(\n        catchError(err => {\n          console.error(`🎵 Error loading song ${id}:`, err);\n          return of(null);\n        })\n      );\n    });\n\n    forkJoin(songRequests)\n      .pipe(\n        map(songs => {\n          const validSongs = songs.filter((song): song is Song => song !== null);\n          return validSongs;\n        }),\n        switchMap(async (songs) => {\n          const enrichedSongs = await this.enrichSongWithArtists(songs);\n          return enrichedSongs;\n        })\n      )\n      .subscribe({\n        next: (songs) => {\n          this._songs.next(songs);\n        },\n        error: (error) => {\n          console.error('🎵 Error in loadSongs:', error);\n          this._songs.next([]);\n        }\n      });\n  }\n\n  private async enrichSongWithArtists(songs: Song[]): Promise {\n    const enrichedSongs: SongWithArtists[] = [];\n    \n    for (const song of songs) {\n      \n      if (!song) {\n        continue;\n      }\n      \n      if (song.artists_IDS && song.artists_IDS.length > 0) {\n        try {\n          const artists = await this.artistsSvc.getByIds(song.artists_IDS).toPromise();\n          if (artists) {\n            const enrichedSong: SongWithArtists = {\n              ...song,\n              artistNames: artists.map(artist => artist.name)\n            };\n            enrichedSongs.push(enrichedSong);\n          } else {\n            enrichedSongs.push({ ...song, artistNames: ['Unknown Artist'] });\n          }\n        } catch (error) {\n          console.error('🎵 Error loading artists for song:', song.id, error);\n          enrichedSongs.push({ ...song, artistNames: ['Unknown Artist'] });\n        }\n      } else {\n        enrichedSongs.push({ ...song, artistNames: ['Unknown Artist'] });\n      }\n    }\n    \n    return enrichedSongs;\n  }\n\n  // ✅ Resto de métodos permanecen iguales...\n  async addSong() {\n    const modal = await this.modalCtrl.create({\n      component: SongDetailModalComponent,\n      componentProps: {\n        excludeSongIds: this._songs.value.map(s => s.id)\n      }\n    });\n  \n    modal.onDidDismiss().then(async (result) => {\n      if (result.role === 'select' && result.data) {\n        const playlist = this._playlist.value;\n        if (!playlist) return;\n\n        const updatedPlaylist: Playlist = {\n          ...playlist,\n          song_IDS: [...playlist.song_IDS, result.data.id]\n        };\n\n        this.playlistsSvc.update(playlist.id, updatedPlaylist).subscribe({\n          next: () => {\n            this._playlist.next(updatedPlaylist);\n            \n            this.songsSvc.getById(result.data.id).subscribe(async newSong => {\n              if (newSong) {\n                const enrichedNewSong = await this.enrichSongWithArtists([newSong]);\n                this._songs.next([...this._songs.value, ...enrichedNewSong]);\n              }\n            });\n            \n            this.showToast('PLAYLIST.SUCCESS.SONG_ADDED');\n          },\n          error: () => this.showToast('PLAYLIST.ERRORS.SONG_ADD')\n        });\n      }\n    });\n  \n    await modal.present();\n  }\n\n  async editSong(song: Song, event: Event) {\n    event.stopPropagation();\n    const modal = await this.modalCtrl.create({\n      component: SongDetailModalComponent,\n      componentProps: {\n        song: song,\n        mode: 'edit'\n      }\n    });\n\n    modal.onDidDismiss().then((result) => {\n      if (result.role === 'saved' && this._playlist.value) {\n        this.loadSongs(this._playlist.value);\n        this.showToast('PLAYLIST.SUCCESS.SONG_UPDATED');\n      }\n    });\n\n    await modal.present();\n  }\n\n  private async showConfirmRemoveDialog(): Promise {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate.get('PLAYLIST.REMOVE_SONG.HEADER').toPromise(),\n      message: await this.translate.get('PLAYLIST.REMOVE_SONG.MESSAGE').toPromise(),\n      buttons: [\n        {\n          text: await this.translate.get('COMMON.CANCEL').toPromise(),\n          role: 'cancel'\n        },\n        {\n          text: await this.translate.get('COMMON.DELETE').toPromise(),\n          role: 'confirm'\n        }\n      ]\n    });\n\n    await alert.present();\n    const { role } = await alert.onDidDismiss();\n    return role === 'confirm';\n  }\n\n  async removeSong(song: Song, event: Event) {\n    event.stopPropagation();\n    \n    const confirmed = await this.showConfirmRemoveDialog();\n    if (!confirmed) return;\n\n    const playlist = this._playlist.value;\n    if (!playlist) return;\n\n    const updatedPlaylist = {\n      ...playlist,\n      song_IDS: playlist.song_IDS.filter(id => id !== song.id)\n    };\n\n    this.playlistsSvc.update(playlist.id, updatedPlaylist).subscribe({\n      next: () => {\n        this._playlist.next(updatedPlaylist);\n        this._songs.next(this._songs.value.filter(s => s.id !== song.id));\n        this.showToast('PLAYLIST.SUCCESS.SONG_REMOVED');\n      },\n      error: () => this.showToast('PLAYLIST.ERRORS.SONG_REMOVE')\n    });\n  }\n\n  onBack() {\n    this.router.navigate(['/home']);\n  }\n\n  private async showToast(translationKey: string) {\n    try {\n      const message = await this.translate.get(translationKey).toPromise();\n      const toast = await this.toastCtrl.create({\n        message,\n        duration: 2000,\n        position: 'bottom'\n      });\n      await toast.present();\n    } catch (error) {\n      console.error('Error showing toast:', error);\n    }\n  }\n\n  async sharePlaylist() {\n    const playlist = this._playlist.value;\n    \n    if (!playlist) return;\n    \n    const title = playlist.name;\n    const text = `Check out this playlist: ${playlist.name} by ${playlist.author}`;\n    const url = window.location.href;\n    \n    try {\n      await this.shareService.shareItem({\n        title: title,\n        text: text,\n        url: url,\n        dialogTitle: 'Share Playlist'\n      });\n    } catch (error) {\n      console.error('Error sharing playlist:', error);\n      const toast = await this.toastCtrl.create({\n        message: 'Could not share playlist',\n        duration: 2000,\n        position: 'bottom'\n      });\n      await toast.present();\n    }\n  }\n\n  formatDuration(seconds: number): string {\n    if (!seconds) return '00:00';\n    \n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    \n    const formattedMinutes = minutes.toString().padStart(2, '0');\n    const formattedSeconds = remainingSeconds.toString().padStart(2, '0');\n    \n    return `${formattedMinutes}:${formattedSeconds}`;\n  }\n\n  onImageError(event: Event): void {\n    const img = event.target as HTMLImageElement;\n    if (img) {\n      img.src = 'assets/default-avatar.png';\n    }\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongWithArtists-1.html":{"url":"interfaces/SongWithArtists-1.html","title":"interface - SongWithArtists-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongWithArtists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/pages/songs/songs.page.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Song\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artistNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, Observable, Subject, debounceTime, distinctUntilChanged, switchMap, takeUntil } from 'rxjs';\nimport { AlertController, LoadingController, ModalController, Platform, ToastController } from '@ionic/angular';\nimport { SongsService } from '../../core/services/impl/songs.service';\nimport { Song } from '../../core/models/song.model';\nimport { Paginated } from '../../core/models/paginated.model';\nimport { TranslateService } from '@ngx-translate/core';\nimport { BaseAuthenticationService } from '../../core/services/impl/base-authentication.service';\nimport { SongModalComponent } from 'src/app/shared/components/song-modal/song-modal.component';\nimport { SearchParams } from '../../core/repositories/intefaces/base-repository.interface';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\n// ✅ NUEVO IMPORT\nimport { AudioPlayerService } from '../../core/services/impl/audio-player.service';\n\ninterface SongWithArtists extends Song {\n  artistNames?: string[];\n}\n\n@Component({\n  selector: 'app-songs',\n  templateUrl: './songs.page.html',\n  styleUrls: ['./songs.page.scss'],\n})\nexport class SongsPage implements OnInit, OnDestroy {\n  private _songs: BehaviorSubject = new BehaviorSubject([]);\n  songs$: Observable = this._songs.asObservable();\n  \n  private searchSubject = new Subject();\n  private destroy$ = new Subject();\n  \n  isWeb: boolean = false;\n  page: number = 1;\n  pageSize: number = 25;\n  pages: number = 0;\n  currentSearchTerm: string = '';\n  \n  // ✅ NUEVO: Para el reproductor\n  allSongs: SongWithArtists[] = [];\n  currentPlayingSong: string | null = null;\n\n  constructor(\n    private songsSvc: SongsService,\n    private artistsSvc: ArtistsService,\n    private modalCtrl: ModalController,\n    private translate: TranslateService,\n    private alertCtrl: AlertController,\n    private platform: Platform,\n    private authSvc: BaseAuthenticationService,\n    private loadingCtrl: LoadingController,\n    private toastCtrl: ToastController,\n    // ✅ NUEVO SERVICIO\n    private audioPlayerService: AudioPlayerService\n  ) {\n    this.isWeb = this.platform.is('desktop');\n  }\n\n  ngOnInit() {\n    this.loadSongs();\n    this.setupSearch();\n    this.subscribeToPlayerState(); // ✅ NUEVO\n    \n    // Suscribirse a cambios en la lista de canciones\n    this.songs$.pipe(takeUntil(this.destroy$)).subscribe(songs => {\n      this.allSongs = songs;\n    });\n  }\n\n  ngOnDestroy() {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  // ✅ NUEVO: Suscribirse al estado del reproductor\n  private subscribeToPlayerState() {\n    this.audioPlayerService.playerState$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(state => {\n        this.currentPlayingSong = state.currentSong?.id || null;\n      });\n  }\n\n  // ✅ NUEVO: Verificar si una canción se está reproduciendo\n  isCurrentlyPlaying(song: Song): boolean {\n    return this.currentPlayingSong === song.id;\n  }\n\n  private setupSearch() {\n    this.searchSubject.pipe(\n      takeUntil(this.destroy$),\n      debounceTime(500),\n      distinctUntilChanged()\n    ).subscribe(term => {\n      this.currentSearchTerm = term;\n      this.loadSongs(true);\n    });\n  }\n\n  onSearchChange(event: any) {\n    const searchTerm = event.detail.value?.trim() ?? '';\n    this.searchSubject.next(searchTerm);\n  }\n\n  private createSearchFilters(): SearchParams {\n    const filters: SearchParams = {};\n    if (this.currentSearchTerm) {\n      filters['name'] = this.currentSearchTerm;\n    }\n    return filters;\n  }\n\n  private async enrichSongWithArtists(songs: Song[]): Promise {\n    const enrichedSongs: SongWithArtists[] = [];\n    \n    for (const song of songs) {\n      if (song.artists_IDS && song.artists_IDS.length > 0) {\n        try {\n          const artists = await this.artistsSvc.getByIds(song.artists_IDS).toPromise();\n          if (artists) {\n            const enrichedSong: SongWithArtists = {\n              ...song,\n              artistNames: artists.map(artist => artist.name)\n            };\n            enrichedSongs.push(enrichedSong);\n          }\n        } catch (error) {\n          console.error('Error loading artists for song:', song.id, error);\n          enrichedSongs.push({ ...song, artistNames: [] });\n        }\n      } else {\n        enrichedSongs.push({ ...song, artistNames: [] });\n      }\n    }\n    \n    return enrichedSongs;\n  }\n\n  loadSongs(isSearch: boolean = false) {\n    if (isSearch) {\n      this.page = 1;\n      this._songs.next([]); \n    }\n\n    const filters = this.createSearchFilters();\n\n    this.songsSvc.getAll(this.page, this.pageSize, filters).pipe(\n      switchMap(async (paginatedResponse: Paginated) => {\n        const enrichedSongs = await this.enrichSongWithArtists(paginatedResponse.data);\n        return {\n          data: enrichedSongs,\n          pages: paginatedResponse.pages\n        };\n      })\n    ).subscribe({\n      next: (result) => {\n        if (isSearch || this.page === 1) {\n          this._songs.next([...result.data]);\n        } else {\n          this._songs.next([...this._songs.value, ...result.data]);\n        }\n        this.page++;\n        this.pages = result.pages;\n      },\n      error: (error) => {\n        console.error('Error loading songs:', error);\n      }\n    });\n  }\n\n  // ✅ NUEVOS MÉTODOS PARA REPRODUCCIÓN\n  async playAllSongs() {\n    if (this.allSongs.length === 0) return;\n    \n    this.audioPlayerService.setQueue(this.allSongs, 0);\n    await this.audioPlayerService.play(this.allSongs[0]);\n    \n    const toast = await this.toastCtrl.create({\n      message: `Reproduciendo ${this.allSongs.length} canciones`,\n      duration: 2000,\n      position: 'bottom'\n    });\n    await toast.present();\n  }\n\n  async shuffleAndPlay() {\n    if (this.allSongs.length === 0) return;\n    \n    const shuffledSongs = [...this.allSongs];\n    for (let i = shuffledSongs.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [shuffledSongs[i], shuffledSongs[j]] = [shuffledSongs[j], shuffledSongs[i]];\n    }\n    \n    this.audioPlayerService.setQueue(shuffledSongs, 0);\n    await this.audioPlayerService.play(shuffledSongs[0]);\n    \n    const toast = await this.toastCtrl.create({\n      message: 'Reproducción aleatoria activada',\n      duration: 2000,\n      position: 'bottom'\n    });\n    await toast.present();\n  }\n\n  async playSpecificSong(song: SongWithArtists, index: number) {\n    this.audioPlayerService.setQueue(this.allSongs, index);\n    await this.audioPlayerService.play(song);\n  }\n\n  async onAddSong() {\n    const modal = await this.modalCtrl.create({\n      component: SongModalComponent,\n      componentProps: {},\n      cssClass: 'custom-modal'\n    });\n\n    modal.onDidDismiss().then((result) => {\n      if (result.role === 'create') {\n        this.songsSvc.add(result.data).subscribe({\n          next: () => this.loadSongs(true),\n          error: console.error\n        });\n      }\n    });\n\n    await modal.present();\n  }\n\n  async onUpdateSong(song: Song) {\n    const modal = await this.modalCtrl.create({\n      component: SongModalComponent,\n      componentProps: {\n        song: song\n      },\n      cssClass: 'custom-modal'\n    });\n\n    modal.onDidDismiss().then(async (result) => {\n      if (result.role === 'update') {\n        try {\n          // ✅ CAMBIAR ESTA LÍNEA:\n          // this.songsSvc.updateSongs(song.id, { data: result.data }).subscribe({\n          \n          // ✅ POR ESTA:\n          await this.songsSvc.updateSongWithImage(song.id, result.data);\n          \n          // Recargar canciones\n          this.loadSongs(true);\n          \n          // Mostrar mensaje de éxito\n          const toast = await this.toastCtrl.create({\n            message: 'Canción actualizada correctamente',\n            duration: 2000,\n            position: 'bottom',\n            color: 'success'\n          });\n          await toast.present();\n          \n        } catch (error) {\n          console.error('Error al actualizar canción:', error);\n          \n          // Mostrar mensaje de error\n          let errorMessage = 'Error desconocido';\n          if (error && typeof error === 'object' && 'message' in error) {\n            errorMessage = (error as any).message;\n          }\n          const toast = await this.toastCtrl.create({\n            message: 'Error al actualizar la canción: ' + errorMessage,\n            duration: 3000,\n            position: 'bottom',\n            color: 'danger'\n          });\n          await toast.present();\n        }\n      }\n    });\n\n    await modal.present();\n  }\n\n  async onDeleteSong(song: Song) {\n    const alert = await this.alertCtrl.create({\n      header: await this.translate.get('SONG.MESSAGES.DELETE_CONFIRM').toPromise(),\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n        },\n        {\n          text: 'OK',\n          role: 'confirm',\n          handler: () => {\n            this.songsSvc.delete(song.id).subscribe({\n              next: () => this.loadSongs(true),\n              error: console.error\n            });\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n\n  onIonInfinite(ev: any) {\n    if (this.page ) => {\n          this._songs.next([...this._songs.value, ...response.data]);\n          this.page++;\n          ev.target.complete();\n        },\n        error: (error) => {\n          console.error('Error loading more songs:', error);\n          ev.target.complete();\n        }\n      });\n    } else {\n      ev.target.complete();\n    }\n  }\n\n  // ✅ ACTUALIZADO: Método de reproducción mejorado\n  onPlaySong(song: Song) {\n    const songIndex = this.allSongs.findIndex(s => s.id === song.id);\n    if (songIndex !== -1) {\n      this.playSpecificSong(song as SongWithArtists, songIndex);\n    }\n  }\n\n  async onSongReorder(event: {item: any, targetIndex: number, sourceIndex: number}) {\n    const songs = [...this._songs.value];\n    \n    if (event.sourceIndex === event.targetIndex) return;\n    \n    const movedSong = songs[event.sourceIndex];\n    songs.splice(event.sourceIndex, 1);\n    songs.splice(event.targetIndex, 0, movedSong);\n    \n    this._songs.next([...songs]);\n    \n    const toast = await this.toastCtrl.create({\n      message: await this.translate.get('SONG.REORDERING').toPromise() || 'Reordenando canciones...',\n      duration: 2000,\n      position: 'bottom'\n    });\n    await toast.present();\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongWithArtists-2.html":{"url":"interfaces/SongWithArtists-2.html","title":"interface - SongWithArtists-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongWithArtists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/songs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Song\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artistNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { ISongsService } from '../interfaces/songs-service.interface';\nimport { Song } from '../../models/song.model';\nimport { SONGS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ISongsRepository } from '../../repositories/intefaces/songs-repository.interface';\nimport { map, Observable } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SearchParams } from '../../repositories/intefaces/base-repository.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { BaseMediaService } from '../impl/base-media.service';\n\n// Interfaz extendida para canciones con nombres de artistas\nexport interface SongWithArtists extends Song {\n  artistNames?: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongsService extends BaseService implements ISongsService {\n  private apiUrl = `${environment.apiUrl}/api/songs`;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(SONGS_REPOSITORY_TOKEN) repository: ISongsRepository,\n    private mediaService: BaseMediaService\n  ) {\n    super(repository);\n  }\n\n  getByPlaylistId(playlistId: string): Observable {\n    return this.repository.getAll(1, 1000, { playlistId: playlistId }).pipe(\n      map(res => Array.isArray(res) ? res : res.data)\n    );\n  }\n\n  // Método para obtener canciones con nombres de artistas enriquecidos\n  getAllWithArtists(page: number = 1, pageSize: number = 25, filters: SearchParams = {}): Observable> {\n    return this.getAll(page, pageSize, filters).pipe(\n      map((result: Song[] | Paginated) => {\n        if (Array.isArray(result)) {\n          return result.map((song: Song) => this.addPlaceholderArtistNames(song));\n        } else {\n          return {\n            ...result,\n            data: result.data.map((song: Song) => this.addPlaceholderArtistNames(song))\n          } as Paginated;\n        }\n      })\n    );\n  }\n\n  // Método auxiliar para agregar nombres de artistas temporales\n  private addPlaceholderArtistNames(song: Song): SongWithArtists {\n    return {\n      ...song,\n      artistNames: song.artists_IDS?.length > 0 ? ['Loading...'] : ['Unknown Artist']\n    };\n  }\n\n  // Método para obtener una canción con nombres de artistas\n  getByIdWithArtists(id: string): Observable {\n    return this.getById(id).pipe(\n      map(song => song ? this.addPlaceholderArtistNames(song) : null)\n    );\n  }\n\n  updateSongs(id: number | string, body: { data: Partial }): Observable {\n    console.log('🔄 Datos originales:', body);\n    \n    // Procesar solo la imagen si existe\n    if (body.data.image !== undefined) {\n      const processedImage = this.processImageForStrapi(body.data.image);\n      body.data.image = processedImage;\n    }\n    \n    console.log('📦 Datos procesados para enviar:', body);\n    \n    return this.http.put(`${this.apiUrl}/${id}`, body);\n  }\n\n  // ✅ MÉTODO MEJORADO: Actualizar canción con posible subida de imagen\n  async updateSongWithImage(id: number | string, songData: Partial): Promise {\n    console.log('🔄 Actualizando canción con imagen:', id);\n    \n    // Si hay una imagen en base64, subirla primero\n    if (songData.image && typeof songData.image === 'string' && (songData.image as string).startsWith('data:image/')) {\n      console.log('📤 Subiendo imagen base64...');\n      \n      try {\n        // Convertir base64 a File\n        const imageFile = this.base64ToFile(songData.image as string, 'song-image.png');\n        \n        // Subir imagen a Strapi\n        const uploadResult: any = await this.mediaService.upload(imageFile).toPromise();\n        \n        console.log('✅ Imagen subida exitosamente:', uploadResult);\n        \n        // Usar el ID de la imagen subida\n        // Strapi puede devolver un array o un objeto, manejar ambos casos\n        let imageId: number | undefined = undefined;\n        \n        if (Array.isArray(uploadResult)) {\n          // Si es un array de IDs directos: [195]\n          if (typeof uploadResult[0] === 'number') {\n            imageId = uploadResult[0];\n          } \n          // Si es un array de objetos: [{id: 195}]\n          else if (uploadResult[0] && uploadResult[0].id) {\n            imageId = uploadResult[0].id;\n          }\n        } else if (uploadResult) {\n          // Si es un objeto: {id: 195}\n          if (uploadResult.id) {\n            imageId = uploadResult.id;\n          }\n          // Si es un ID directo: 195\n          else if (typeof uploadResult === 'number') {\n            imageId = uploadResult;\n          }\n        }\n        \n        if (imageId) {\n          // Asignar el ID numérico directamente\n          (songData as any).image = imageId;\n          console.log('🎯 ID de imagen asignado:', imageId);\n        } else {\n          console.error('❌ No se pudo obtener ID de imagen válido');\n          delete songData.image;\n        }\n        \n      } catch (error) {\n        console.error('❌ Error al subir imagen:', error);\n        // Remover imagen del update si falló la subida\n        delete songData.image;\n        throw error; // Re-lanzar el error para que el componente lo maneje\n      }\n    }\n    \n    // Continuar con la actualización normal\n    return this.updateSongs(id, { data: songData }).toPromise();\n  }\n\n  // ✅ MÉTODO AUXILIAR: Convertir base64 a File\n  private base64ToFile(base64String: string, filename: string): File {\n    const arr = base64String.split(',');\n    const mime = arr[0].match(/:(.*?);/)?.[1] || 'image/png';\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    \n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    \n    return new File([u8arr], filename, { type: mime });\n  }\n\n  // ✅ MÉTODO AUXILIAR: Procesar imagen para Strapi\n  private processImageForStrapi(imageData: any): any {\n    if (imageData === null || imageData === undefined) {\n      return null;\n    }\n\n    console.log('🖼️ Procesando imagen:', typeof imageData === 'string' ? imageData.substring(0, 50) + '...' : imageData);\n    console.log('🖼️ Tipo de imagen:', typeof imageData);\n\n    // Si es un número directamente (ID del archivo en Strapi)\n    if (typeof imageData === 'number' && imageData > 0) {\n      console.log('✅ Imagen es ID numérico:', imageData);\n      return imageData;\n    }\n\n    // Si es un objeto con estructura de Strapi response\n    if (typeof imageData === 'object' && imageData !== null) {\n      // Formato: { data: { id: 123, attributes: {...} } }\n      if (imageData.data && typeof imageData.data.id === 'number') {\n        console.log('✅ Imagen extraída de data.id:', imageData.data.id);\n        return imageData.data.id;\n      }\n      // Formato: { id: 123, url: \"...\", ... }\n      if (typeof imageData.id === 'number') {\n        console.log('✅ Imagen extraída de id:', imageData.id);\n        return imageData.id;\n      }\n      // Formato: { data: { id: \"123\" } } (ID como string)\n      if (imageData.data && imageData.data.id) {\n        const parsedId = parseInt(imageData.data.id, 10);\n        if (!isNaN(parsedId) && parsedId > 0) {\n          console.log('✅ Imagen parseada de data.id string:', parsedId);\n          return parsedId;\n        }\n      }\n    }\n\n    // Si es un string que representa un ID numérico\n    if (typeof imageData === 'string' && !imageData.startsWith('data:')) {\n      const parsedId = parseInt(imageData, 10);\n      if (!isNaN(parsedId) && parsedId > 0) {\n        console.log('✅ Imagen parseada de string:', parsedId);\n        return parsedId;\n      }\n    }\n\n    // ⚠️ DETECTAR BASE64: Si es una imagen en base64, no podemos procesarla aquí\n    if (typeof imageData === 'string' && imageData.startsWith('data:image/')) {\n      console.error('❌ ERROR: Se detectó imagen en base64. Necesitas subirla primero!');\n      console.warn('💡 SOLUCIÓN: Usa MediaService para subir la imagen antes de actualizar la canción');\n      return null; // No enviar imagen base64 a Strapi\n    }\n\n    return imageData; \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SongWithArtists-3.html":{"url":"interfaces/SongWithArtists-3.html","title":"interface - SongWithArtists-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SongWithArtists\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/shared/components/song-detail-modal/song-detail-modal.component.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Song\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            artistNames\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        artistNames\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        artistNames:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { BehaviorSubject, switchMap } from 'rxjs';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ModalController } from '@ionic/angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { Song } from 'src/app/core/models/song.model';\nimport { SongsService } from 'src/app/core/services/impl/songs.service';\nimport { SearchParams } from 'src/app/core/repositories/intefaces/base-repository.interface';\nimport { Paginated } from 'src/app/core/models/paginated.model';\nimport { ArtistsService } from 'src/app/core/services/impl/artists.service';\n\ninterface SongWithArtists extends Song {\n  artistNames?: string[];\n}\n\n@Component({\n  selector: 'app-song-detail-modal',\n  templateUrl: './song-detail-modal.component.html',\n  styleUrls: ['./song-detail-modal.component.scss']\n})\nexport class SongDetailModalComponent implements OnInit {\n  @Input() excludeSongIds: string[] = [];\n  \n  private _availableSongs = new BehaviorSubject([]);\n  availableSongs$ = this._availableSongs.asObservable();\n  \n  searchTerm = '';\n  currentPage = 1;\n  pageSize = 20;\n  hasMorePages = true;\n\n  constructor(\n    private modalCtrl: ModalController,\n    private songsSvc: SongsService,\n    private artistsSvc: ArtistsService\n  ) {}\n\n  ngOnInit() {\n    this.loadSongs();\n  }\n\n  private async enrichSongWithArtists(songs: Song[]): Promise {\n    const enrichedSongs: SongWithArtists[] = [];\n    \n    for (const song of songs) {\n      if (song.artists_IDS && song.artists_IDS.length > 0) {\n        try {\n          const artists = await this.artistsSvc.getByIds(song.artists_IDS).toPromise();\n          if (artists) {\n            const enrichedSong: SongWithArtists = {\n              ...song,\n              artistNames: artists.map(artist => artist.name)\n            };\n            enrichedSongs.push(enrichedSong);\n          }\n        } catch (error) {\n          console.error('Error loading artists for song:', song.id, error);\n          enrichedSongs.push({ ...song, artistNames: [] });\n        }\n      } else {\n        enrichedSongs.push({ ...song, artistNames: [] });\n      }\n    }\n    \n    return enrichedSongs;\n  }\n\n  loadSongs(page: number = 1) {\n    const filters: SearchParams = this.searchTerm ? { name: this.searchTerm } : {};\n    \n    this.songsSvc.getAll(page, this.pageSize, filters).pipe(\n      switchMap(async (response: Paginated) => {\n        const songs = response.data;\n        const filteredSongs = songs.filter(song => !this.excludeSongIds.includes(song.id));\n        const enrichedSongs = await this.enrichSongWithArtists(filteredSongs);\n        \n        return {\n          data: enrichedSongs,\n          pages: response.pages\n        };\n      })\n    ).subscribe(result => {\n      if (page === 1) {\n        this._availableSongs.next(result.data);\n      } else {\n        this._availableSongs.next([...this._availableSongs.value, ...result.data]);\n      }\n      \n      this.hasMorePages = page \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SongsMappingStrapi.html":{"url":"injectables/SongsMappingStrapi.html","title":"injectable - SongsMappingStrapi","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SongsMappingStrapi\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/songs-mapping-strapi.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de mapeo para canciones específico para Strapi\nManeja la transformación entre el modelo Song y la estructura de datos de Strapi\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAdded\n                            \n                            \n                                getDeleted\n                            \n                            \n                                getOne\n                            \n                            \n                                getPaginated\n                            \n                            \n                                getUpdated\n                            \n                            \n                                setAdd\n                            \n                            \n                                setUpdate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAdded\n                        \n                    \n                \n            \n            \n                \ngetAdded(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/songs-mapping-strapi.service.ts:297\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de creación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras POST\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Song\n\n                        \n                            \n                                Modelo Song mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDeleted\n                        \n                    \n                \n            \n            \n                \ngetDeleted(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/songs-mapping-strapi.service.ts:315\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de eliminación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras DELETE\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Song\n\n                        \n                            \n                                Modelo Song mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOne\n                        \n                    \n                \n            \n            \n                \ngetOne(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/songs-mapping-strapi.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Convierte un objeto de respuesta de Strapi en un modelo Song\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos sin procesar de Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Song\n\n                        \n                            \n                                Modelo Song mapeado o null si los datos son inválidos\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPaginated\n                        \n                    \n                \n            \n            \n                \ngetPaginated(page: number, pageSize: number, totalItems: number, items: any[])\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/songs-mapping-strapi.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Crea un objeto paginado con canciones mapeadas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Número de página actual\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                totalItems\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Total de elementos disponibles\n\n                                            \n                                        \n                                        \n                                                items\n                                            \n                                                        any[]\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Array de datos sin procesar de Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Paginated\n\n                        \n                            \n                                Objeto Paginated con canciones mapeadas\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUpdated\n                        \n                    \n                \n            \n            \n                \ngetUpdated(data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/songs-mapping-strapi.service.ts:306\n                        \n                    \n\n\n            \n                \n                        Mapea la respuesta de Strapi después de una operación de actualización\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Respuesta de Strapi tras PUT/PATCH\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Song\n\n                        \n                            \n                                Modelo Song mapeado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setAdd\n                        \n                    \n                \n            \n            \n                \nsetAdd(data: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/songs-mapping-strapi.service.ts:253\n                        \n                    \n\n\n            \n                \n                        Prepara los datos de la canción para ser enviados a Strapi en una operación de creación\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Modelo Song a convertir\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Objeto con estructura compatible con Strapi para POST\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setUpdate\n                        \n                    \n                \n            \n            \n                \nsetUpdate(data: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/songs-mapping-strapi.service.ts:139\n                        \n                    \n\n\n            \n                \n                        Prepara los datos parciales de la canción para actualización en Strapi\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos parciales del Song a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                Objeto con estructura compatible con Strapi para PUT/PATCH\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Song } from '../../models/song.model';\nimport { Paginated } from '../../models/paginated.model';\n\n/**\n * Servicio de mapeo para canciones específico para Strapi\n * Maneja la transformación entre el modelo Song y la estructura de datos de Strapi\n */\n@Injectable({\n    providedIn: 'root'\n})\nexport class SongsMappingStrapi implements IBaseMapping {\n\n    /**\n     * Crea un objeto paginado con canciones mapeadas\n     * @param page Número de página actual\n     * @param pageSize Tamaño de página\n     * @param totalItems Total de elementos disponibles\n     * @param items Array de datos sin procesar de Strapi\n     * @returns Objeto Paginated con canciones mapeadas\n     */\n    getPaginated(page: number, pageSize: number, totalItems: number, items: any[]): Paginated {\n        return {\n            data: items.map(item => this.getOne({ data: item })),\n            page,\n            pageSize,\n            pages: Math.ceil(totalItems / pageSize)\n        };\n    }\n\n    /**\n     * Convierte un objeto de respuesta de Strapi en un modelo Song\n     * @param data Datos sin procesar de Strapi\n     * @returns Modelo Song mapeado o null si los datos son inválidos\n     */\n    getOne(data: any): Song {\n        if (!data) return null as any;\n\n        const item = data.data || data;\n        const id = item.id;\n        const attributes = item.attributes || item;\n\n        if (!attributes) {\n            return null as any;\n        }\n\n        // Procesar duración - convertir de string MM:SS a segundos o mantener número\n        let durationValue = 0;\n        if (attributes.duration !== undefined) {\n            if (typeof attributes.duration === 'number') {\n                durationValue = attributes.duration;\n            } else if (typeof attributes.duration === 'string') {\n                if (attributes.duration.includes(':')) {\n                    const parts = attributes.duration.split(':');\n                    durationValue = parseInt(parts[0], 10) * 60 + parseInt(parts[1], 10);\n                } else {\n                    durationValue = parseInt(attributes.duration, 10) || 0;\n                }\n            }\n        }\n\n        // Mapear IDs de artistas desde relación de Strapi\n        let artistIds: string[] = [];\n        if (attributes.artists_IDS && attributes.artists_IDS.data && Array.isArray(attributes.artists_IDS.data)) {\n            artistIds = attributes.artists_IDS.data\n                .filter((artist: any) => artist && artist.id)\n                .map((artist: any) => artist.id.toString());\n        }\n\n        // Mapear IDs de playlists desde relación de Strapi\n        let playlistIds: string[] = [];\n        if (attributes.playlistid_IDS && attributes.playlistid_IDS.data && Array.isArray(attributes.playlistid_IDS.data)) {\n            playlistIds = attributes.playlistid_IDS.data\n                .filter((p: any) => p && p.id)\n                .map((p: any) => p.id.toString());\n        }\n\n        // Mapear imagen con todos los formatos disponibles\n        let imageData = undefined;\n        if (attributes.image && attributes.image.data && attributes.image.data.attributes) {\n            const imgAttrs = attributes.image.data.attributes;\n            imageData = {\n                url: imgAttrs.url,\n                large: imgAttrs.formats?.large?.url || imgAttrs.url,\n                medium: imgAttrs.formats?.medium?.url || imgAttrs.url,\n                small: imgAttrs.formats?.small?.url || imgAttrs.url,\n                thumbnail: imgAttrs.formats?.thumbnail?.url || imgAttrs.url,\n            };\n        }\n\n        // Mapear URL de audio desde archivo relacionado\n        let audioUrl: string | undefined = undefined;\n        if (attributes.audioUrl && attributes.audioUrl.data && attributes.audioUrl.data.attributes) {\n            audioUrl = attributes.audioUrl.data.attributes.url;\n        }\n\n        // Mapear usuarios que han dado like (relación de Strapi)\n        let usersLike: string[] = [];\n        if (attributes.users_like && attributes.users_like.data && Array.isArray(attributes.users_like.data)) {\n            usersLike = attributes.users_like.data\n                .filter((user: any) => user && user.id)\n                .map((user: any) => user.id.toString());\n        }\n\n        // Procesar contador de likes\n        let likesCount = 0;\n        if (attributes.likes_count !== undefined) {\n            if (typeof attributes.likes_count === 'string') {\n                likesCount = parseInt(attributes.likes_count, 10) || 0;\n            } else if (typeof attributes.likes_count === 'number') {\n                likesCount = attributes.likes_count;\n            }\n        }\n\n        const mappedSong: Song = {\n            id: id.toString(),\n            name: attributes.name || 'Unknown Song',\n            album: attributes.album || 'Unknown Album',\n            duration: durationValue,\n            audioUrl: audioUrl,\n            artists_IDS: artistIds,\n            playlistid_IDS: playlistIds,\n            lyrics: attributes.lyrics || undefined,\n            image: imageData,\n            users_like: usersLike,\n            likes_count: likesCount\n        };\n\n        return mappedSong;\n    }\n\n    /**\n     * Prepara los datos parciales de la canción para actualización en Strapi\n     * @param data Datos parciales del Song a actualizar\n     * @returns Objeto con estructura compatible con Strapi para PUT/PATCH\n     */\n    setUpdate(data: Partial): any {\n        const mappedData: any = {};\n        \n        // Mapear campos simples\n        if (data.name !== undefined) mappedData.name = data.name;\n        if (data.album !== undefined) mappedData.album = data.album;\n        if (data.duration !== undefined) mappedData.duration = data.duration;\n        if (data.lyrics !== undefined) mappedData.lyrics = data.lyrics;\n        if (data.likes_count !== undefined) mappedData.likes_count = data.likes_count;\n        \n        // Mapear relaciones - convertir strings a IDs numéricos para Strapi\n        if (data.users_like !== undefined) {\n            mappedData.users_like = data.users_like\n                .map(id => {\n                    const numId = parseInt(id, 10);\n                    return isNaN(numId) ? null : numId;\n                })\n                .filter(id => id !== null && id > 0);\n        }\n        \n        if (data.artists_IDS !== undefined) {\n            mappedData.artists_IDS = data.artists_IDS\n                .map(id => parseInt(id, 10))\n                .filter(id => !isNaN(id) && id > 0);\n        }\n        \n        if (data.playlistid_IDS !== undefined) {\n            mappedData.playlistid_IDS = data.playlistid_IDS\n                .map(id => parseInt(id, 10))\n                .filter(id => !isNaN(id) && id > 0);\n        }\n        \n        // CORREGIDO: Manejo mejorado de imagen para Strapi\n        if (data.image !== undefined) {\n            if (data.image === null) {\n                // Para remover imagen\n                mappedData.image = null;\n            } else if (data.image) {\n                console.log('🖼️ Procesando imagen:', data.image);\n                \n                const imageData: any = data.image;\n                let imageId: number | null = null;\n                \n                // 1. Si es un número directamente (ID del archivo en Strapi)\n                if (typeof imageData === 'number' && imageData > 0) {\n                    imageId = imageData;\n                }\n                // 2. Si es un objeto con estructura de Strapi response\n                else if (typeof imageData === 'object' && imageData !== null) {\n                    // Formato: { data: { id: 123, attributes: {...} } }\n                    if (imageData.data && typeof imageData.data.id === 'number') {\n                        imageId = imageData.data.id;\n                    }\n                    // Formato: { id: 123, url: \"...\", ... }\n                    else if (typeof imageData.id === 'number') {\n                        imageId = imageData.id;\n                    }\n                    // Formato: { data: { id: \"123\" } } (ID como string)\n                    else if (imageData.data && imageData.data.id) {\n                        const parsedId = parseInt(imageData.data.id, 10);\n                        if (!isNaN(parsedId) && parsedId > 0) {\n                            imageId = parsedId;\n                        }\n                    }\n                    // Si viene del form como File o FormData, necesitarías subirla primero\n                    else if (imageData instanceof File || imageData instanceof FormData) {\n                        console.warn('⚠️ Se detectó un archivo nuevo. Necesitas subirlo primero usando MediaService');\n                        // Aquí deberías manejar la subida del archivo\n                        // return null; // o manejar de otra forma\n                    }\n                }\n                // 3. Si es un string que representa un ID\n                else if (typeof imageData === 'string') {\n                    const parsedId = parseInt(imageData, 10);\n                    if (!isNaN(parsedId) && parsedId > 0) {\n                        imageId = parsedId;\n                    }\n                }\n                \n                if (imageId && imageId > 0) {\n                    mappedData.image = imageId;\n                    console.log('✅ Imagen mapeada con ID:', imageId);\n                } else {\n                    console.warn('⚠️ No se pudo obtener un ID válido de imagen:', imageData);\n                    // No incluir imagen en la actualización si no se puede procesar\n                }\n            }\n        }\n        \n        // Mapear URL de audio\n        if (data.audioUrl !== undefined) {\n            if (data.audioUrl === null || data.audioUrl === '') {\n                mappedData.audioUrl = null;\n            } else {\n                // Si audioUrl es un ID de archivo\n                const audioId = Number(data.audioUrl);\n                if (!isNaN(audioId) && audioId > 0) {\n                    mappedData.audioUrl = audioId;\n                } else {\n                    // Si es una URL string\n                    mappedData.audioUrl = data.audioUrl;\n                }\n            }\n        }\n        \n        console.log('📦 Datos finales para Strapi:', { data: mappedData });\n        return { data: mappedData };\n    }\n\n    /**\n     * Prepara los datos de la canción para ser enviados a Strapi en una operación de creación\n     * @param data Modelo Song a convertir\n     * @returns Objeto con estructura compatible con Strapi para POST\n     */\n    setAdd(data: Song): any {\n        const mappedData: any = {\n            name: data.name,\n            album: data.album || '',\n            duration: data.duration || 0,\n            lyrics: data.lyrics || null,\n            likes_count: data.likes_count || 0,\n            users_like: data.users_like?.map(id => parseInt(id, 10)) || [],\n            artists_IDS: data.artists_IDS?.map(id => parseInt(id, 10)) || [],\n            playlistid_IDS: data.playlistid_IDS?.map(id => parseInt(id, 10)) || []\n        };\n\n        // Manejar imagen en creación - convertir diferentes formatos a ID numérico\n        if (data.image !== undefined) {\n            const imageData: any = data.image;\n            \n            if (typeof imageData === 'number') {\n                mappedData.image = imageData;\n            } else if (typeof imageData === 'object' && imageData !== null) {\n                if (imageData.data && imageData.data.id) {\n                    mappedData.image = Number(imageData.data.id);\n                } else if (imageData.id) {\n                    mappedData.image = Number(imageData.id);\n                } else if (imageData.url && !isNaN(Number(imageData.url))) {\n                    mappedData.image = Number(imageData.url);\n                }\n            } else if (typeof imageData === 'string' && !isNaN(Number(imageData))) {\n                mappedData.image = Number(imageData);\n            }\n        }\n\n        // Mapear URL de audio\n        if (data.audioUrl !== undefined) {\n            mappedData.audioUrl = data.audioUrl;\n        }\n\n        return { data: mappedData };\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de creación\n     * @param data Respuesta de Strapi tras POST\n     * @returns Modelo Song mapeado\n     */\n    getAdded(data: any): Song {\n        return this.getOne(data);\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de actualización\n     * @param data Respuesta de Strapi tras PUT/PATCH\n     * @returns Modelo Song mapeado\n     */\n    getUpdated(data: any): Song {\n        return this.getOne(data);\n    }\n\n    /**\n     * Mapea la respuesta de Strapi después de una operación de eliminación\n     * @param data Respuesta de Strapi tras DELETE\n     * @returns Modelo Song mapeado\n     */\n    getDeleted(data: any): Song {\n        return this.getOne(data);\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SongsPageModule.html":{"url":"modules/SongsPageModule.html","title":"module - SongsPageModule","body":"\n                   \n\n\n\n\n    Modules\n    SongsPageModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SongsPageModule\n\n\n\ncluster_SongsPageModule_imports\n\n\n\ncluster_SongsPageModule_declarations\n\n\n\n\nSongsPage\n\nSongsPage\n\n\n\nSongsPageModule\n\nSongsPageModule\n\nSongsPageModule -->\n\nSongsPage->SongsPageModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nSongsPageModule -->\n\nSharedModule->SongsPageModule\n\n\n\n\n\nSongsPageRoutingModule\n\nSongsPageRoutingModule\n\nSongsPageModule -->\n\nSongsPageRoutingModule->SongsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/songs/songs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SongsPage\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SharedModule\n                        \n                        \n                            SongsPageRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { SongsPageRoutingModule } from './songs-routing.module';\nimport { SongsPage } from './songs.page';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { SharedModule } from 'src/app/shared/shared.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SongsPageRoutingModule,\n    TranslateModule.forChild(),\n    SharedModule\n  ],\n  declarations: [SongsPage]\n})\nexport class SongsPageModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SongsPageRoutingModule.html":{"url":"modules/SongsPageRoutingModule.html","title":"module - SongsPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SongsPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/songs/songs-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SongsPage } from './songs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SongsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SongsPageRoutingModule {}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SongsService.html":{"url":"injectables/SongsService.html","title":"injectable - SongsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SongsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/songs.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                addPlaceholderArtistNames\n                            \n                            \n                                    Private\n                                base64ToFile\n                            \n                            \n                                getAllWithArtists\n                            \n                            \n                                getByIdWithArtists\n                            \n                            \n                                getByPlaylistId\n                            \n                            \n                                    Private\n                                processImageForStrapi\n                            \n                            \n                                updateSongs\n                            \n                            \n                                    Async\n                                updateSongWithImage\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, repository: ISongsRepository, mediaService: BaseMediaService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/songs.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        repository\n                                                  \n                                                        \n                                                                        ISongsRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mediaService\n                                                  \n                                                        \n                                                                        BaseMediaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        addPlaceholderArtistNames\n                        \n                    \n                \n            \n            \n                \n                        \n                    addPlaceholderArtistNames(song: Song)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:56\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                song\n                                            \n                                                            Song\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         SongWithArtists\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        base64ToFile\n                        \n                    \n                \n            \n            \n                \n                        \n                    base64ToFile(base64String: string, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:147\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                base64String\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     File\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllWithArtists\n                        \n                    \n                \n            \n            \n                \ngetAllWithArtists(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:40\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    1\n                                            \n\n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    25\n                                            \n\n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByIdWithArtists\n                        \n                    \n                \n            \n            \n                \ngetByIdWithArtists(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:64\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByPlaylistId\n                        \n                    \n                \n            \n            \n                \ngetByPlaylistId(playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:33\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        processImageForStrapi\n                        \n                    \n                \n            \n            \n                \n                        \n                    processImageForStrapi(imageData: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:162\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                imageData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSongs\n                        \n                    \n                \n            \n            \n                \nupdateSongs(id: number | string, body: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:70\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                body\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateSongWithImage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateSongWithImage(id: number | string, songData: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/songs.service.ts:85\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                        number | string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                songData\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:28\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `${environment.apiUrl}/api/songs`\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/songs.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { BaseService } from './base-service.service';\nimport { ISongsService } from '../interfaces/songs-service.interface';\nimport { Song } from '../../models/song.model';\nimport { SONGS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { ISongsRepository } from '../../repositories/intefaces/songs-repository.interface';\nimport { map, Observable } from 'rxjs';\nimport { Paginated } from '../../models/paginated.model';\nimport { SearchParams } from '../../repositories/intefaces/base-repository.interface';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment.prod';\nimport { BaseMediaService } from '../impl/base-media.service';\n\n// Interfaz extendida para canciones con nombres de artistas\nexport interface SongWithArtists extends Song {\n  artistNames?: string[];\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SongsService extends BaseService implements ISongsService {\n  private apiUrl = `${environment.apiUrl}/api/songs`;\n\n  constructor(\n    private http: HttpClient,\n    @Inject(SONGS_REPOSITORY_TOKEN) repository: ISongsRepository,\n    private mediaService: BaseMediaService\n  ) {\n    super(repository);\n  }\n\n  getByPlaylistId(playlistId: string): Observable {\n    return this.repository.getAll(1, 1000, { playlistId: playlistId }).pipe(\n      map(res => Array.isArray(res) ? res : res.data)\n    );\n  }\n\n  // Método para obtener canciones con nombres de artistas enriquecidos\n  getAllWithArtists(page: number = 1, pageSize: number = 25, filters: SearchParams = {}): Observable> {\n    return this.getAll(page, pageSize, filters).pipe(\n      map((result: Song[] | Paginated) => {\n        if (Array.isArray(result)) {\n          return result.map((song: Song) => this.addPlaceholderArtistNames(song));\n        } else {\n          return {\n            ...result,\n            data: result.data.map((song: Song) => this.addPlaceholderArtistNames(song))\n          } as Paginated;\n        }\n      })\n    );\n  }\n\n  // Método auxiliar para agregar nombres de artistas temporales\n  private addPlaceholderArtistNames(song: Song): SongWithArtists {\n    return {\n      ...song,\n      artistNames: song.artists_IDS?.length > 0 ? ['Loading...'] : ['Unknown Artist']\n    };\n  }\n\n  // Método para obtener una canción con nombres de artistas\n  getByIdWithArtists(id: string): Observable {\n    return this.getById(id).pipe(\n      map(song => song ? this.addPlaceholderArtistNames(song) : null)\n    );\n  }\n\n  updateSongs(id: number | string, body: { data: Partial }): Observable {\n    console.log('🔄 Datos originales:', body);\n    \n    // Procesar solo la imagen si existe\n    if (body.data.image !== undefined) {\n      const processedImage = this.processImageForStrapi(body.data.image);\n      body.data.image = processedImage;\n    }\n    \n    console.log('📦 Datos procesados para enviar:', body);\n    \n    return this.http.put(`${this.apiUrl}/${id}`, body);\n  }\n\n  // ✅ MÉTODO MEJORADO: Actualizar canción con posible subida de imagen\n  async updateSongWithImage(id: number | string, songData: Partial): Promise {\n    console.log('🔄 Actualizando canción con imagen:', id);\n    \n    // Si hay una imagen en base64, subirla primero\n    if (songData.image && typeof songData.image === 'string' && (songData.image as string).startsWith('data:image/')) {\n      console.log('📤 Subiendo imagen base64...');\n      \n      try {\n        // Convertir base64 a File\n        const imageFile = this.base64ToFile(songData.image as string, 'song-image.png');\n        \n        // Subir imagen a Strapi\n        const uploadResult: any = await this.mediaService.upload(imageFile).toPromise();\n        \n        console.log('✅ Imagen subida exitosamente:', uploadResult);\n        \n        // Usar el ID de la imagen subida\n        // Strapi puede devolver un array o un objeto, manejar ambos casos\n        let imageId: number | undefined = undefined;\n        \n        if (Array.isArray(uploadResult)) {\n          // Si es un array de IDs directos: [195]\n          if (typeof uploadResult[0] === 'number') {\n            imageId = uploadResult[0];\n          } \n          // Si es un array de objetos: [{id: 195}]\n          else if (uploadResult[0] && uploadResult[0].id) {\n            imageId = uploadResult[0].id;\n          }\n        } else if (uploadResult) {\n          // Si es un objeto: {id: 195}\n          if (uploadResult.id) {\n            imageId = uploadResult.id;\n          }\n          // Si es un ID directo: 195\n          else if (typeof uploadResult === 'number') {\n            imageId = uploadResult;\n          }\n        }\n        \n        if (imageId) {\n          // Asignar el ID numérico directamente\n          (songData as any).image = imageId;\n          console.log('🎯 ID de imagen asignado:', imageId);\n        } else {\n          console.error('❌ No se pudo obtener ID de imagen válido');\n          delete songData.image;\n        }\n        \n      } catch (error) {\n        console.error('❌ Error al subir imagen:', error);\n        // Remover imagen del update si falló la subida\n        delete songData.image;\n        throw error; // Re-lanzar el error para que el componente lo maneje\n      }\n    }\n    \n    // Continuar con la actualización normal\n    return this.updateSongs(id, { data: songData }).toPromise();\n  }\n\n  // ✅ MÉTODO AUXILIAR: Convertir base64 a File\n  private base64ToFile(base64String: string, filename: string): File {\n    const arr = base64String.split(',');\n    const mime = arr[0].match(/:(.*?);/)?.[1] || 'image/png';\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    \n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    \n    return new File([u8arr], filename, { type: mime });\n  }\n\n  // ✅ MÉTODO AUXILIAR: Procesar imagen para Strapi\n  private processImageForStrapi(imageData: any): any {\n    if (imageData === null || imageData === undefined) {\n      return null;\n    }\n\n    console.log('🖼️ Procesando imagen:', typeof imageData === 'string' ? imageData.substring(0, 50) + '...' : imageData);\n    console.log('🖼️ Tipo de imagen:', typeof imageData);\n\n    // Si es un número directamente (ID del archivo en Strapi)\n    if (typeof imageData === 'number' && imageData > 0) {\n      console.log('✅ Imagen es ID numérico:', imageData);\n      return imageData;\n    }\n\n    // Si es un objeto con estructura de Strapi response\n    if (typeof imageData === 'object' && imageData !== null) {\n      // Formato: { data: { id: 123, attributes: {...} } }\n      if (imageData.data && typeof imageData.data.id === 'number') {\n        console.log('✅ Imagen extraída de data.id:', imageData.data.id);\n        return imageData.data.id;\n      }\n      // Formato: { id: 123, url: \"...\", ... }\n      if (typeof imageData.id === 'number') {\n        console.log('✅ Imagen extraída de id:', imageData.id);\n        return imageData.id;\n      }\n      // Formato: { data: { id: \"123\" } } (ID como string)\n      if (imageData.data && imageData.data.id) {\n        const parsedId = parseInt(imageData.data.id, 10);\n        if (!isNaN(parsedId) && parsedId > 0) {\n          console.log('✅ Imagen parseada de data.id string:', parsedId);\n          return parsedId;\n        }\n      }\n    }\n\n    // Si es un string que representa un ID numérico\n    if (typeof imageData === 'string' && !imageData.startsWith('data:')) {\n      const parsedId = parseInt(imageData, 10);\n      if (!isNaN(parsedId) && parsedId > 0) {\n        console.log('✅ Imagen parseada de string:', parsedId);\n        return parsedId;\n      }\n    }\n\n    // ⚠️ DETECTAR BASE64: Si es una imagen en base64, no podemos procesarla aquí\n    if (typeof imageData === 'string' && imageData.startsWith('data:image/')) {\n      console.error('❌ ERROR: Se detectó imagen en base64. Necesitas subirla primero!');\n      console.warn('💡 SOLUCIÓN: Usa MediaService para subir la imagen antes de actualizar la canción');\n      return null; // No enviar imagen base64 a Strapi\n    }\n\n    return imageData; \n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SplashPage.html":{"url":"components/SplashPage.html","title":"component - SplashPage","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SplashPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/pages/splash/splash.page.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-splash\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            IonicModule\n                            CommonModule\n                            LottieComponent\n                \n            \n\n            \n                styleUrls\n                ./splash.page.scss\n            \n\n\n\n            \n                templateUrl\n                ./splash.page.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Optional\n                                animationItem\n                            \n                            \n                                    Private\n                                isNavigating\n                            \n                            \n                                lottieOptions\n                            \n                            \n                                    Private\n                                    Optional\n                                navigationSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                animationCreated\n                            \n                            \n                                    Private\n                                initSplashTimer\n                            \n                            \n                                    Private\n                                navigateToHome\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                performNavigation\n                            \n                            \n                                skipSplash\n                            \n                            \n                                toggleAnimation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authSvc: BaseAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/pages/splash/splash.page.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authSvc\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        animationCreated\n                        \n                    \n                \n            \n            \n                \nanimationCreated(animationItem: AnimationItem)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:61\n                        \n                    \n\n\n            \n                \n                        Callback cuando se crea la animación Lottie\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                animationItem\n                                            \n                                                        AnimationItem\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initSplashTimer\n                        \n                    \n                \n            \n            \n                \n                        \n                    initSplashTimer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:81\n                        \n                    \n\n\n            \n                \n                        Inicializa el timer del splash screen\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        navigateToHome\n                        \n                    \n                \n            \n            \n                \n                        \n                    navigateToHome()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:93\n                        \n                    \n\n\n            \n                \n                        Navega a la página principal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:46\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        performNavigation\n                        \n                    \n                \n            \n            \n                \n                        \n                    performNavigation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:118\n                        \n                    \n\n\n            \n                \n                        Realiza la navegación basada en el estado de autenticación\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        skipSplash\n                        \n                    \n                \n            \n            \n                \nskipSplash()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:148\n                        \n                    \n\n\n            \n                \n                        Método para saltar el splash (opcional)\nSe puede llamar desde el template si se quiere permitir skip\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleAnimation\n                        \n                    \n                \n            \n            \n                \ntoggleAnimation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/pages/splash/splash.page.ts:159\n                        \n                    \n\n\n            \n                \n                        Pausa/resume la animación Lottie\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        animationItem\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnimationItem\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/splash/splash.page.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isNavigating\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/splash/splash.page.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lottieOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AnimationOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    path: '/assets/lotties/splash.json',\n    autoplay: true,\n    loop: true,\n    renderer: 'svg' as const, // Mejor rendimiento para móviles\n    rendererSettings: {\n      progressiveLoad: true,\n      preserveAspectRatio: 'xMidYMid meet', // Mantener proporción\n      hideOnTransparent: true,\n      className: 'lottie-animation'\n    }\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/splash/splash.page.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Optional\n                        navigationSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pages/splash/splash.page.ts:34\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { timer, Subscription } from 'rxjs';\nimport { BaseAuthenticationService } from 'src/app/core/services/impl/base-authentication.service';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { LottieComponent, AnimationOptions } from 'ngx-lottie';\nimport type { AnimationItem } from 'lottie-web';\n\n@Component({\n  selector: 'app-splash',\n  templateUrl: './splash.page.html',\n  styleUrls: ['./splash.page.scss'],\n  standalone: true,\n  imports: [IonicModule, CommonModule, LottieComponent]\n})\nexport class SplashPage implements OnInit, OnDestroy {\n  \n  // Configuración de Lottie\n  lottieOptions: AnimationOptions = {\n    path: '/assets/lotties/splash.json',\n    autoplay: true,\n    loop: true,\n    renderer: 'svg' as const, // Mejor rendimiento para móviles\n    rendererSettings: {\n      progressiveLoad: true,\n      preserveAspectRatio: 'xMidYMid meet', // Mantener proporción\n      hideOnTransparent: true,\n      className: 'lottie-animation'\n    }\n  };\n\n  private animationItem?: AnimationItem;\n  private navigationSubscription?: Subscription;\n  private isNavigating = false;\n\n  constructor(\n    private router: Router,\n    private authSvc: BaseAuthenticationService\n  ) {}\n\n  ngOnInit() {\n    this.initSplashTimer();\n  }\n\n  ngOnDestroy() {\n    // Limpiar subscripciones\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n    \n    // Limpiar animación Lottie\n    if (this.animationItem) {\n      this.animationItem.destroy();\n    }\n  }\n\n  /**\n   * Callback cuando se crea la animación Lottie\n   */\n  animationCreated(animationItem: AnimationItem): void {\n    this.animationItem = animationItem;\n    console.log('UMusic splash animation created');\n    \n    // Opcional: Ajustar velocidad de la animación\n    this.animationItem.setSpeed(1.2);\n    \n    // Opcional: Configurar eventos de la animación\n    this.animationItem.addEventListener('complete', () => {\n      console.log('Splash animation completed');\n    });\n\n    this.animationItem.addEventListener('loopComplete', () => {\n      console.log('Splash animation loop completed');\n    });\n  }\n\n  /**\n   * Inicializa el timer del splash screen\n   */\n  private initSplashTimer(): void {\n    // Duración del splash (3 segundos)\n    const splashDuration = 3000;\n    \n    this.navigationSubscription = timer(splashDuration).subscribe(() => {\n      this.navigateToHome();\n    });\n  }\n\n  /**\n   * Navega a la página principal\n   */\n  private navigateToHome(): void {\n    if (this.isNavigating) {\n      return;\n    }\n    \n    this.isNavigating = true;\n    \n    // Opcional: Añadir efecto de fade out antes de navegar\n    const splashContainer = document.querySelector('.splash-container') as HTMLElement;\n    if (splashContainer) {\n      splashContainer.style.transition = 'opacity 0.5s ease-out';\n      splashContainer.style.opacity = '0';\n      \n      // Navegar después del fade out\n      setTimeout(() => {\n        this.performNavigation();\n      }, 500);\n    } else {\n      this.performNavigation();\n    }\n  }\n\n  /**\n   * Realiza la navegación basada en el estado de autenticación\n   */\n  private performNavigation(): void {\n    // Verificar si el usuario está autenticado usando authenticated$\n    this.authSvc.authenticated$.subscribe({\n      next: (isAuthenticated: boolean) => {\n        if (isAuthenticated) {\n          // Usuario autenticado, ir al home\n          this.router.navigate(['/home'], { \n            replaceUrl: true\n          });\n        } else {\n          // Usuario no autenticado, ir al login\n          this.router.navigate(['/login'], { \n            replaceUrl: true\n          });\n        }\n      },\n      error: (error: any) => {\n        console.error('Error checking authentication status:', error);\n        // En caso de error, ir al home por defecto\n        this.router.navigate(['/home'], { \n          replaceUrl: true\n        });\n      }\n    });\n  }\n\n  /**\n   * Método para saltar el splash (opcional)\n   * Se puede llamar desde el template si se quiere permitir skip\n   */\n  skipSplash(): void {\n    if (this.navigationSubscription) {\n      this.navigationSubscription.unsubscribe();\n    }\n    \n    this.navigateToHome();\n  }\n\n  /**\n   * Pausa/resume la animación Lottie\n   */\n  toggleAnimation(): void {\n    if (this.animationItem) {\n      if (this.animationItem.isPaused) {\n        this.animationItem.play();\n      } else {\n        this.animationItem.pause();\n      }\n    }\n  }\n}\n    \n\n    \n        \n  \n    \n    \n    \n      \n      \n    \n    \n    \n    UMusic\n    Tu música, tu mundo\n    \n    \n    \n      Cargando...\n      \n      \n      \n    \n    \n    \n    v1.0.0\n    \n  \n\n    \n\n    \n                \n                    ./splash.page.scss\n                \n                // splash.page.scss - Estilo UMusic con diseño moderno tipo Spotify\n\n// Variables del tema UMusic\n:root {\n  --umusic-dark: #121212;\n  --umusic-dark-elevated: #1e1e1e;\n  --umusic-dark-card: #282828;\n  --umusic-green: #1DB954;\n  --umusic-green-hover: #1ed760;\n  --umusic-white: #ffffff;\n  --umusic-text-primary: #ffffff;\n  --umusic-text-secondary: #b3b3b3;\n  --umusic-gradient: linear-gradient(135deg, #1DB954, #191414);\n  --umusic-accent: #ff6b35;\n}\n\n// Fondo principal con gradiente animado\nion-content {\n  --background: var(--umusic-dark);\n  position: relative;\n  overflow: hidden;\n  \n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background: var(--umusic-gradient);\n    opacity: 0.9;\n    z-index: 1;\n  }\n  \n  // Efecto de partículas de fondo\n  &::after {\n    content: '';\n    position: absolute;\n    top: -50%;\n    left: -50%;\n    width: 200%;\n    height: 200%;\n    background: repeating-conic-gradient(\n      from 0deg,\n      transparent 0deg 2deg,\n      rgba(255, 255, 255, 0.03) 2deg 4deg\n    );\n    animation: rotateBackground 30s linear infinite;\n    z-index: 1;\n  }\n}\n\n.splash-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  min-height: 100vh;\n  height: 100%;\n  position: relative;\n  z-index: 2;\n  padding: 2rem 1rem;\n  box-sizing: border-box;\n  \n  // Animación de contenedor\n  animation: fadeInUp 1s ease-out;\n  \n  // Logo/Lottie container con efectos\n  .lottie-container {\n    position: relative;\n    margin-bottom: 2rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    \n    ng-lottie {\n      width: 180px;\n      height: 180px;\n      max-width: 180px;\n      max-height: 180px;\n      filter: drop-shadow(0 15px 30px rgba(29, 185, 84, 0.3));\n      transition: all 0.3s ease;\n      \n      // Efecto hover (opcional)\n      &:hover {\n        transform: scale(1.05);\n        filter: drop-shadow(0 20px 35px rgba(29, 185, 84, 0.4));\n      }\n    }\n    \n    // Anillo brillante alrededor del logo\n    &::before {\n      content: '';\n      position: absolute;\n      top: -15px;\n      left: -15px;\n      right: -15px;\n      bottom: -15px;\n      border: 1px solid transparent;\n      border-radius: 50%;\n      background: conic-gradient(from 0deg, var(--umusic-green), transparent, var(--umusic-green));\n      animation: rotateBorder 3s linear infinite;\n      opacity: 0.5;\n      z-index: -1;\n    }\n    \n    // Resplandor interno\n    &::after {\n      content: '';\n      position: absolute;\n      top: 50%;\n      left: 50%;\n      width: 120px;\n      height: 120px;\n      background: radial-gradient(circle, rgba(29, 185, 84, 0.15) 0%, transparent 70%);\n      transform: translate(-50%, -50%);\n      border-radius: 50%;\n      animation: pulse 2s ease-in-out infinite alternate;\n      z-index: -1;\n    }\n  }\n  \n  // Título de la app\n  .app-title {\n    color: var(--umusic-white);\n    font-size: 2.5rem;\n    font-weight: 700;\n    letter-spacing: -0.02em;\n    margin-bottom: 0.5rem;\n    text-align: center;\n    background: linear-gradient(45deg, var(--umusic-white), var(--umusic-green));\n    -webkit-background-clip: text;\n    -webkit-text-fill-color: transparent;\n    background-clip: text;\n    animation: slideInFromLeft 1s ease-out 0.3s both;\n  }\n  \n  // Subtítulo\n  .app-subtitle {\n    color: var(--umusic-text-secondary);\n    font-size: 1.1rem;\n    font-weight: 400;\n    text-align: center;\n    margin-bottom: 3rem;\n    opacity: 0.8;\n    animation: slideInFromRight 1s ease-out 0.6s both;\n  }\n  \n  // Indicador de carga\n  .loading-indicator {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n    animation: fadeIn 1s ease-out 0.9s both;\n    \n    .loading-text {\n      color: var(--umusic-text-secondary);\n      font-size: 0.9rem;\n      font-weight: 500;\n      text-transform: uppercase;\n      letter-spacing: 0.1em;\n    }\n    \n    // Barra de progreso personalizada\n    .progress-bar {\n      width: 200px;\n      height: 3px;\n      background: rgba(255, 255, 255, 0.1);\n      border-radius: 2px;\n      overflow: hidden;\n      position: relative;\n      \n      &::after {\n        content: '';\n        position: absolute;\n        top: 0;\n        left: -100%;\n        width: 100%;\n        height: 100%;\n        background: linear-gradient(90deg, var(--umusic-green), var(--umusic-green-hover));\n        animation: loadingProgress 2s ease-in-out infinite;\n        border-radius: 2px;\n      }\n    }\n    \n    // Puntos de carga alternativos\n    .loading-dots {\n      display: flex;\n      gap: 0.5rem;\n      \n      .dot {\n        width: 8px;\n        height: 8px;\n        background: var(--umusic-green);\n        border-radius: 50%;\n        animation: bounce 1.4s ease-in-out infinite both;\n        \n        &:nth-child(1) { animation-delay: -0.32s; }\n        &:nth-child(2) { animation-delay: -0.16s; }\n        &:nth-child(3) { animation-delay: 0s; }\n      }\n    }\n  }\n  \n  // Versión de la app\n  .app-version {\n    position: absolute;\n    bottom: 2rem;\n    color: var(--umusic-text-secondary);\n    font-size: 0.8rem;\n    opacity: 0.6;\n    animation: fadeIn 1s ease-out 1.2s both;\n  }\n}\n\n// Animaciones\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(30px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes slideInFromLeft {\n  from {\n    opacity: 0;\n    transform: translateX(-50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes slideInFromRight {\n  from {\n    opacity: 0;\n    transform: translateX(50px);\n  }\n  to {\n    opacity: 1;\n    transform: translateX(0);\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n  }\n  to {\n    opacity: 1;\n  }\n}\n\n@keyframes rotateBackground {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes rotateBorder {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n\n@keyframes pulse {\n  from {\n    opacity: 0.2;\n    transform: translate(-50%, -50%) scale(0.8);\n  }\n  to {\n    opacity: 0.4;\n    transform: translate(-50%, -50%) scale(1.2);\n  }\n}\n\n@keyframes loadingProgress {\n  0%, 100% {\n    left: -100%;\n  }\n  50% {\n    left: 100%;\n  }\n}\n\n@keyframes bounce {\n  0%, 80%, 100% {\n    transform: scale(0);\n  }\n  40% {\n    transform: scale(1);\n  }\n}\n\n// Responsive Design\n@media (max-width: 768px) {\n  .splash-container {\n    padding: 1rem;\n    \n    .lottie-container ng-lottie {\n      width: 150px;\n      height: 150px;\n      max-width: 150px;\n      max-height: 150px;\n    }\n    \n    .app-title {\n      font-size: 2rem;\n    }\n    \n    .app-subtitle {\n      font-size: 1rem;\n      margin-bottom: 2rem;\n    }\n    \n    .loading-indicator .progress-bar {\n      width: 150px;\n    }\n  }\n}\n\n@media (max-width: 480px) {\n  .splash-container {\n    padding: 0.5rem;\n    \n    .lottie-container {\n      margin-bottom: 1.5rem;\n      \n      ng-lottie {\n        width: 120px;\n        height: 120px;\n        max-width: 120px;\n        max-height: 120px;\n      }\n      \n      &::after {\n        width: 80px;\n        height: 80px;\n      }\n    }\n    \n    .app-title {\n      font-size: 1.8rem;\n      margin-bottom: 0.3rem;\n    }\n    \n    .app-subtitle {\n      font-size: 0.9rem;\n      margin-bottom: 1.5rem;\n    }\n    \n    .loading-indicator {\n      gap: 0.8rem;\n      \n      .progress-bar {\n        width: 120px;\n      }\n    }\n  }\n}\n\n// Modo de alto contraste\n@media (prefers-contrast: high) {\n  .splash-container {\n    .app-title {\n      -webkit-text-fill-color: var(--umusic-white);\n    }\n    \n    .loading-indicator .progress-bar::after {\n      background: var(--umusic-white);\n    }\n  }\n}\n\n// Reduce motion para usuarios sensibles\n@media (prefers-reduced-motion: reduce) {\n  ion-content::after,\n  .lottie-container::before,\n  .lottie-container::after {\n    animation: none;\n  }\n  \n  .splash-container {\n    animation: fadeIn 0.5s ease-out;\n  }\n  \n  .app-title,\n  .app-subtitle,\n  .loading-indicator,\n  .app-version {\n    animation: fadeIn 0.5s ease-out;\n  }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          UMusic    Tu música, tu mundo                  Cargando...                                  v1.0.0      '\n    var COMPONENTS = [{'name': 'AboutPage', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ArtistGridCardComponent', 'selector': 'app-artist-grid-card'},{'name': 'ArtistModalComponent', 'selector': 'app-artist-modal'},{'name': 'ArtistProfilePage', 'selector': 'app-artist-profile'},{'name': 'ArtistsPage', 'selector': 'app-artists'},{'name': 'AudioPlayerComponent', 'selector': 'app-audio-player'},{'name': 'ChangePasswordModalComponent', 'selector': 'app-change-password-modal'},{'name': 'ClickableArtistNamesComponent', 'selector': 'app-clickable-artist-names'},{'name': 'EditProfileModalComponent', 'selector': 'app-edit-profile-modal'},{'name': 'FollowArtistButtonComponent', 'selector': 'app-follow-artist-button'},{'name': 'GlobalSearchComponent', 'selector': 'app-global-search'},{'name': 'HomePage', 'selector': 'app-home'},{'name': 'LikeButtonComponent', 'selector': 'app-like-button'},{'name': 'LoginPage', 'selector': 'app-login'},{'name': 'PictureSelectableComponent', 'selector': 'app-picture-selectable'},{'name': 'PlayButtonComponent', 'selector': 'app-play-button'},{'name': 'PlaylistDetailPage', 'selector': 'app-playlist-detail'},{'name': 'PlaylistLikeButtonComponent', 'selector': 'app-playlist-like-button'},{'name': 'PlaylistModalComponent', 'selector': 'app-playlist-modal'},{'name': 'PlaylistsPage', 'selector': 'app-playlists'},{'name': 'ProfilePage', 'selector': 'app-profile'},{'name': 'RegisterPage', 'selector': 'app-register'},{'name': 'SongDetailModalComponent', 'selector': 'app-song-detail-modal'},{'name': 'SongGridCardComponent', 'selector': 'app-song-grid-card'},{'name': 'SongModalComponent', 'selector': 'app-song-modal'},{'name': 'SongsPage', 'selector': 'app-songs'},{'name': 'SplashPage', 'selector': 'app-splash'}];\n    var DIRECTIVES = [{'name': 'DragDropDirective', 'selector': '[appDragDrop]'}];\n    var ACTUAL_COMPONENT = {'name': 'SplashPage'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SplashPageRoutingModule.html":{"url":"modules/SplashPageRoutingModule.html","title":"module - SplashPageRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SplashPageRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pages/splash/splash-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SplashPage } from './splash.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SplashPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SplashPageRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthMappingService.html":{"url":"injectables/StrapiAuthMappingService.html","title":"injectable - StrapiAuthMappingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthMappingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signInPayload\n                            \n                            \n                                signUp\n                            \n                            \n                                signUpPayload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme(response: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(response: StrapiSignInResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:82\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignInResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signInPayload\n                        \n                    \n                \n            \n            \n                \nsignInPayload(payload: SignInPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:67\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignInPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignIn\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(response: StrapiSignUpResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                response\n                                            \n                                                            StrapiSignUpResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         User\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUpPayload\n                        \n                    \n                \n            \n            \n                \nsignUpPayload(payload: SignUpPayload)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-auth-mapping.service.ts:74\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                payload\n                                            \n                                                            SignUpPayload\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         StrapiSignUp\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { User } from \"../../models/user.model\"; \n\nexport interface StrapiMeResponse {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiSignUpResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\ninterface StrapiSignIn {\n    identifier: string;\n    password: string;\n}\n\ninterface StrapiSignUp {\n    email: string;\n    password: string;\n    username: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload): StrapiSignIn {\n        return {\n            identifier: payload.email,\n            password: payload.password\n        };\n    }\n\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            email: payload.email,\n            password: payload.password,\n            username: payload.name + \" \" + payload.surname\n        };\n    }\n\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            // ✅ CAMPOS SOCIALES INICIALIZADOS\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    me(response: any): User {\n        let userData: any;\n        \n        if (response?.data) {\n            // Caso 1: Respuesta viene wrapped con { data: usuario }\n            userData = response.data;\n        } else if (response?.id && response?.email) {\n            // Caso 2: Respuesta viene directamente como usuario\n            userData = response;\n        } else {\n            console.error('StrapiAuthMapping - Unknown response structure:', response);\n            throw new Error('Invalid user data structure');\n        }\n        \n        \n        if (!userData || !userData.id || !userData.email) {\n            console.error('StrapiAuthMapping - Missing required user data:', userData);\n            throw new Error('Missing required user data (id or email)');\n        }\n        \n        const username = userData.username || userData.email?.split('@')[0] || 'User';\n        \n        const mappedUser: User = {\n            id: userData.id.toString(),\n            username: username,\n            email: userData.email,\n            followers: userData.followers || 0,\n            following: userData.following || 0,\n            following_ids: userData.following_ids || [],\n            followers_FK: userData.followers_FK || [],\n            liked_songs: userData.liked_songs || [],\n            following_artists: userData.following_artists || [],\n            playlists_IDS: userData.playlists_IDS || [],\n            provider: userData.provider || 'local',\n            confirmed: userData.confirmed ?? false,\n            blocked: userData.blocked ?? false,\n            image: userData.avatar ? {\n                url: userData.avatar.url,\n                large: userData.avatar.large,\n                medium: userData.avatar.medium,\n                small: userData.avatar.small,\n                thumbnail: userData.avatar.thumbnail\n            } : undefined,\n        };\n        \n        return mappedUser;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiAuthenticationService.html":{"url":"injectables/StrapiAuthenticationService.html","title":"injectable - StrapiAuthenticationService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiAuthenticationService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-authentication.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseAuthenticationService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initializationPromise\n                            \n                            \n                                    Private\n                                jwt_token\n                            \n                            \n                                    Private\n                                    Readonly\n                                TOKEN_KEY\n                            \n                            \n                                    Protected\n                                _authenticated\n                            \n                            \n                                    Protected\n                                _ready\n                            \n                            \n                                    Protected\n                                _user\n                            \n                            \n                                    Public\n                                authenticated$\n                            \n                            \n                                    Public\n                                ready$\n                            \n                            \n                                    Public\n                                user$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                changePassword\n                            \n                            \n                                    Private\n                                clearAuthentication\n                            \n                            \n                                    Async\n                                getCurrentUser\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                getToken\n                            \n                            \n                                    Private\n                                    Async\n                                initializeAuthentication\n                            \n                            \n                                    Private\n                                initializeAuthenticationSafely\n                            \n                            \n                                me\n                            \n                            \n                                signIn\n                            \n                            \n                                signOut\n                            \n                            \n                                signUp\n                            \n                            \n                                    Protected\n                                updateCurrentUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(signInUrl: string, signUpUrl: string, meUrl: string, authMapping: IAuthMapping, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        signInUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        signUpUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        meUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authMapping\n                                                  \n                                                        \n                                                                        IAuthMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        changePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    changePassword(data: literal type)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        literal type\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        clearAuthentication\n                        \n                    \n                \n            \n            \n                \n                        \n                    clearAuthentication()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:102\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getCurrentUser()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:88\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     literal type\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getToken\n                        \n                    \n                \n            \n            \n                \ngetToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:132\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     string | null\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Async\n                        initializeAuthentication\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeAuthentication()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:41\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializeAuthenticationSafely\n                        \n                    \n                \n            \n            \n                \n                        \n                    initializeAuthenticationSafely()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-authentication.service.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        me\n                        \n                    \n                \n            \n            \n                \nme()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:155\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signIn\n                        \n                    \n                \n            \n            \n                \nsignIn(authPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:136\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                authPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signOut\n                        \n                    \n                \n            \n            \n                \nsignOut()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:187\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        signUp\n                        \n                    \n                \n            \n            \n                \nsignUp(signUpPayload: any)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:170\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                signUpPayload\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        updateCurrentUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCurrentUser(user: User)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseAuthenticationService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseAuthenticationService:27\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                user\n                                            \n                                                            User\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        initializationPromise\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Promise | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jwt_token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        TOKEN_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'people-jwt-token'\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/strapi-authentication.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _authenticated\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:11\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _ready\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(false)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Protected\n                        _user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject(undefined)\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:14\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        authenticated$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._authenticated.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        ready$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : this._ready.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:19\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        user$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Observable\n\n                    \n                \n                \n                    \n                        Default value : this._user.asObservable()\n                    \n                \n                        \n                            \n                                Inherited from         BaseAuthenticationService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseAuthenticationService:15\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { filter, map, Observable, of, throwError, tap, firstValueFrom, lastValueFrom } from 'rxjs';\nimport { BaseAuthenticationService } from './base-authentication.service';\nimport { AUTH_MAPPING_TOKEN, AUTH_ME_API_URL_TOKEN, AUTH_SIGN_IN_API_URL_TOKEN, AUTH_SIGN_UP_API_URL_TOKEN } from '../../repositories/repository.tokens';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { IAuthMapping } from '../interfaces/auth-mapping.interface';\nimport { StrapiMeResponse, StrapiSignInResponse, StrapiSignUpResponse } from './strapi-auth-mapping.service';\nimport { IStrapiAuthentication } from '../interfaces/strapi-authentication.interface';\nimport { User } from '../../models/user.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiAuthenticationService extends BaseAuthenticationService implements IStrapiAuthentication {\n  private readonly TOKEN_KEY = 'people-jwt-token';\n  private jwt_token: string | null = null;\n  private initializationPromise: Promise | null = null;\n\n  constructor(\n    @Inject(AUTH_SIGN_IN_API_URL_TOKEN) protected signInUrl: string,\n    @Inject(AUTH_SIGN_UP_API_URL_TOKEN) protected signUpUrl: string,\n    @Inject(AUTH_ME_API_URL_TOKEN) protected meUrl: string,\n    @Inject(AUTH_MAPPING_TOKEN) authMapping: IAuthMapping,\n    private httpClient: HttpClient\n  ) {\n    super(authMapping);\n    // NO llamar initializeAuthentication() aquí directamente\n    this.initializeAuthenticationSafely();\n  }\n\n  private initializeAuthenticationSafely() {\n    // Crear una promesa de inicialización para evitar múltiples ejecuciones\n    this.initializationPromise = this.initializeAuthentication();\n  }\n\n  private getHeaders(): { headers: HttpHeaders } {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.jwt_token}`);\n    return { headers };\n  }\n\n  private async initializeAuthentication(): Promise {    \n    try {\n      this.jwt_token = localStorage.getItem(this.TOKEN_KEY);\n      \n      if (this.jwt_token) {\n        \n        try {\n          const headers = new HttpHeaders().set('Authorization', `Bearer ${this.jwt_token}`);\n          const meUrlWithPopulate = `${this.meUrl}?populate=*`;\n          \n          \n          const response = await lastValueFrom(\n            this.httpClient.get(meUrlWithPopulate, { headers })\n          );\n          \n          \n          const mappedUser = this.authMapping.me(response);\n          \n          // Validar que el usuario mapeado es válido\n          if (!mappedUser || mappedUser.id === 'unknown' || mappedUser.email === 'unknown@example.com') {\n            console.error('StrapiAuth: Invalid mapped user, clearing authentication');\n            this.clearAuthentication();\n          } else {\n            this._authenticated.next(true);\n            this._user.next(mappedUser);\n          }\n          \n        } catch (error) {\n          console.error('StrapiAuth: Error verifying token with server:', error);\n          // Token inválido o expirado\n          this.clearAuthentication();\n        }\n        \n      } else {\n        this._authenticated.next(false);\n        this._user.next(undefined);\n      }\n      \n    } catch (error) {\n      console.error('StrapiAuth: Critical error during initialization:', error);\n      this.clearAuthentication();\n    } finally {\n      // SIEMPRE marcar como ready al final, independientemente del resultado\n      this._ready.next(true);\n    }\n  }\n\n  async getCurrentUser(): Promise {    \n    // Esperar a que la inicialización se complete\n    if (this.initializationPromise) {\n      await this.initializationPromise;\n    }\n    \n    // Esperar a que ready$ sea true\n    await firstValueFrom(this._ready.pipe(filter(ready => ready === true)));\n    \n    const currentUser = await firstValueFrom(this._user);\n    \n    return currentUser;\n  }\n\n  private clearAuthentication() {\n    this.jwt_token = null;\n    localStorage.removeItem(this.TOKEN_KEY);\n    this._authenticated.next(false);\n    this._user.next(undefined);\n  }\n  \n  async changePassword(data: {oldPassword: string, newPassword: string}): Promise {\n    const user = await this.getCurrentUser();\n    if (!user) throw new Error('No user logged in');\n  \n    try {\n      const response = await lastValueFrom(this.httpClient.post(\n        `${this.meUrl.replace('/api/users/me', '/api/auth/change-password')}`,\n        {\n          currentPassword: data.oldPassword,\n          password: data.newPassword,\n          passwordConfirmation: data.newPassword\n        },\n        this.getHeaders()\n      ));\n      return response;\n    } catch (error: any) {\n      if (error.error?.error?.message) {\n        throw new Error(error.error.error.message);\n      }\n      throw error;\n    }\n  }\n\n  getToken(): string | null {\n    return this.jwt_token;\n  }\n\n  signIn(authPayload: any): Observable {\n    const mappedPayload = this.authMapping.signInPayload(authPayload);\n    \n    return this.httpClient.post(\n      this.signInUrl, \n      mappedPayload\n    ).pipe(\n      tap(response => {\n        if (response?.jwt) {\n          this.jwt_token = response.jwt;\n          localStorage.setItem(this.TOKEN_KEY, response.jwt);\n          this._authenticated.next(true);\n          this._user.next(this.authMapping.signIn(response));\n        }\n      }),\n      map(response => this.authMapping.signIn(response))\n    );\n  }\n\n  me(): Observable {\n    if (!this.jwt_token) {\n      return throwError(() => new Error('No authentication token available'));\n    }\n\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.jwt_token}`);\n    const meUrlWithPopulate = `${this.meUrl}?populate=*`;\n    \n    return this.httpClient.get(meUrlWithPopulate, { headers }).pipe(\n      map(response => {\n        return { data: response };\n      })\n    );\n  }\n\n  signUp(signUpPayload: any): Observable {\n    return this.httpClient.post(\n      this.signUpUrl, \n      this.authMapping.signUpPayload(signUpPayload)\n    ).pipe(\n      tap(response => {\n        if (response?.jwt) {\n          this.jwt_token = response.jwt;\n          localStorage.setItem(this.TOKEN_KEY, response.jwt);\n          this._authenticated.next(true);\n          this._user.next(this.authMapping.signUp(response));\n        }\n      }),\n      map(response => this.authMapping.signUp(response))\n    );\n  }\n\n  signOut(): Observable {\n    return of(true).pipe(\n      tap(() => {\n        this.clearAuthentication();\n      })\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMeResponse.html":{"url":"interfaces/StrapiMeResponse.html","title":"interface - StrapiMeResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMeResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { User } from \"../../models/user.model\"; \n\nexport interface StrapiMeResponse {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiSignUpResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\ninterface StrapiSignIn {\n    identifier: string;\n    password: string;\n}\n\ninterface StrapiSignUp {\n    email: string;\n    password: string;\n    username: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload): StrapiSignIn {\n        return {\n            identifier: payload.email,\n            password: payload.password\n        };\n    }\n\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            email: payload.email,\n            password: payload.password,\n            username: payload.name + \" \" + payload.surname\n        };\n    }\n\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            // ✅ CAMPOS SOCIALES INICIALIZADOS\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    me(response: any): User {\n        let userData: any;\n        \n        if (response?.data) {\n            // Caso 1: Respuesta viene wrapped con { data: usuario }\n            userData = response.data;\n        } else if (response?.id && response?.email) {\n            // Caso 2: Respuesta viene directamente como usuario\n            userData = response;\n        } else {\n            console.error('StrapiAuthMapping - Unknown response structure:', response);\n            throw new Error('Invalid user data structure');\n        }\n        \n        \n        if (!userData || !userData.id || !userData.email) {\n            console.error('StrapiAuthMapping - Missing required user data:', userData);\n            throw new Error('Missing required user data (id or email)');\n        }\n        \n        const username = userData.username || userData.email?.split('@')[0] || 'User';\n        \n        const mappedUser: User = {\n            id: userData.id.toString(),\n            username: username,\n            email: userData.email,\n            followers: userData.followers || 0,\n            following: userData.following || 0,\n            following_ids: userData.following_ids || [],\n            followers_FK: userData.followers_FK || [],\n            liked_songs: userData.liked_songs || [],\n            following_artists: userData.following_artists || [],\n            playlists_IDS: userData.playlists_IDS || [],\n            provider: userData.provider || 'local',\n            confirmed: userData.confirmed ?? false,\n            blocked: userData.blocked ?? false,\n            image: userData.avatar ? {\n                url: userData.avatar.url,\n                large: userData.avatar.large,\n                medium: userData.avatar.medium,\n                small: userData.avatar.small,\n                thumbnail: userData.avatar.thumbnail\n            } : undefined,\n        };\n        \n        return mappedUser;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMedia.html":{"url":"interfaces/StrapiMedia.html","title":"interface - StrapiMedia","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMedia\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            attributes\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        attributes:         StrapiMediaData\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiMediaData\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiMediaData.html":{"url":"interfaces/StrapiMediaData.html","title":"interface - StrapiMediaData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiMediaData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alternativeText\n                                        \n                                \n                                \n                                        \n                                            caption\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            formats\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            previewUrl\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternativeText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternativeText:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        caption\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        caption:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        formats\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        formats:         Formats\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Formats\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        previewUrl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        previewUrl:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StrapiMediaService.html":{"url":"classes/StrapiMediaService.html","title":"class - StrapiMediaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StrapiMediaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseMediaService\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                    Public\n                                upload\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uploadUrl: string, auth: IStrapiAuthentication, httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/strapi-media.service.ts:99\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uploadUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/strapi-media.service.ts:109\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     { headers: { Authorization: string; }; }\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        upload\n                        \n                    \n                \n            \n            \n                \n                        \n                    upload(blob: Blob)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseMediaService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseMediaService:116\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                blob\n                                            \n                                                        Blob\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiPlaylistResponse.html":{"url":"interfaces/StrapiPlaylistResponse.html","title":"interface - StrapiPlaylistResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiPlaylistResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/strapi/strapi-playlist.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiPlaylistResponse {\n    data: {\n        id: number;\n        attributes: {\n            name: string;\n            author: string;\n            duration: string;\n            image?: {\n                data?: {\n                    attributes: {\n                        url: string;\n                        formats: {\n                            large?: { url: string };\n                            medium?: { url: string };\n                            small?: { url: string };\n                            thumbnail?: { url: string };\n                        }\n                    }\n                }\n            };\n            song_IDS: {\n                data: Array\n            };\n            users_IDS: {\n                data: Array\n            };\n            createdAt: string;\n            updatedAt: string;\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/StrapiRepositoryService.html":{"url":"injectables/StrapiRepositoryService.html","title":"injectable - StrapiRepositoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  StrapiRepositoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/repositories/impl/strapi-repository.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio de repositorio específico para Strapi v4\nImplementa operaciones CRUD con autenticación Bearer token y populate para relaciones\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                    Private\n                                getHeaders\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, auth: IStrapiAuthentication, apiUrl: string, resource: string, mapping: IBaseMapping)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/repositories/impl/strapi-repository.service.ts:43\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                        IStrapiAuthentication\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiUrl\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resource\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        mapping\n                                                  \n                                                        \n                                                                        IBaseMapping\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:149\n                        \n                    \n\n\n            \n                \n                        Crea un nuevo elemento con populate para obtener relaciones en la respuesta\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Entidad a crear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad creada incluyendo relaciones\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:203\n                        \n                    \n\n\n            \n                \n                        Elimina un elemento del recurso\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad eliminada\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll(page: number, pageSize: number, filters: SearchParams)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Obtiene todos los elementos con paginación y filtros específicos de Strapi\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Número de página (empezando en 1)\n\n                                            \n                                        \n                                        \n                                                pageSize\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Tamaño de página\n\n                                            \n                                        \n                                        \n                                                filters\n                                            \n                                                            SearchParams\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    {}\n                                            \n\n                                            \n                                                    Filtros de búsqueda usando sintaxis Strapi\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                Observable con elementos paginados\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:124\n                        \n                    \n\n\n            \n                \n                        Obtiene un elemento específico por su ID con todas las relaciones pobladas\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a obtener\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con el elemento encontrado o null si no existe\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        getHeaders\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHeaders()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:57\n                        \n                    \n\n\n            \n                \n                        Obtiene headers de autenticación con Bearer token\n\n\n                        \n                            Returns :     { headers?: undefined; } | { headers: { Authorization: string; }; }\n\n                        \n                            \n                                Objeto con headers de autorización o vacío si no hay token\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/repositories/impl/strapi-repository.service.ts:171\n                        \n                    \n\n\n            \n                \n                        Actualiza un elemento existente sin wrapper \"data\" y hace GET para obtener datos completos\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del elemento a actualizar\n\n                                            \n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Datos a actualizar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                Observable con la entidad actualizada incluyendo todas las relaciones\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { map, Observable, catchError, tap, switchMap } from 'rxjs';\nimport { IBaseRepository, SearchParams } from '../intefaces/base-repository.interface';\nimport { API_URL_TOKEN, REPOSITORY_MAPPING_TOKEN, RESOURCE_NAME_TOKEN, STRAPI_AUTH_TOKEN } from '../repository.tokens';\nimport { Model } from '../../models/base.model';\nimport { IBaseMapping } from '../intefaces/base-mapping.interface';\nimport { Paginated } from '../../models/paginated.model';\nimport { IStrapiAuthentication } from '../../services/interfaces/strapi-authentication.interface';\n\n/**\n * Interfaces para respuestas de Strapi v4\n */\nexport interface PaginatedRaw {\n  data: Data[];\n  meta: Meta;\n}\n\nexport interface Data {\n  id: number;\n  attributes: T;\n}\n\nexport interface Meta {\n  pagination: Pagination;\n}\n\nexport interface Pagination {\n  page: number;\n  pageSize: number;\n  pageCount: number;\n  total: number;\n}\n\n/**\n * Servicio de repositorio específico para Strapi v4\n * Implementa operaciones CRUD con autenticación Bearer token y populate para relaciones\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class StrapiRepositoryService implements IBaseRepository {\n  \n  constructor(\n    protected http: HttpClient,\n    @Inject(STRAPI_AUTH_TOKEN) protected auth: IStrapiAuthentication,\n    @Inject(API_URL_TOKEN) protected apiUrl: string,\n    @Inject(RESOURCE_NAME_TOKEN) protected resource: string,\n    @Inject(REPOSITORY_MAPPING_TOKEN) protected mapping: IBaseMapping\n  ) {}\n\n  /**\n   * Obtiene headers de autenticación con Bearer token\n   * @returns Objeto con headers de autorización o vacío si no hay token\n   */\n  private getHeaders() {\n    const token = this.auth.getToken();\n    if (!token) {\n      return {};\n    }\n\n    return {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    };\n  }\n\n  /**\n   * Obtiene todos los elementos con paginación y filtros específicos de Strapi\n   * @param page Número de página (empezando en 1)\n   * @param pageSize Tamaño de página\n   * @param filters Filtros de búsqueda usando sintaxis Strapi\n   * @returns Observable con elementos paginados\n   */\n  getAll(page: number, pageSize: number, filters: SearchParams = {}): Observable> {\n    let url = `${this.apiUrl}/${this.resource}?populate=*`;\n\n    // Agregar parámetros de paginación\n    url += `&pagination[page]=${page}&pagination[pageSize]=${pageSize}`;\n\n    // Procesar filtros con sintaxis específica de Strapi\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined) {\n        switch(key) {\n          case 'user':\n            url += `&filters[users_IDS][id][$eq]=${value}`;\n            break;\n          case 'sort':\n            url += `&sort[0]=${value}`;\n            break;\n          default:\n            url += `&filters[${key}][$eq]=${value}`;\n        }\n      }\n    });\n\n    const headers = this.getHeaders();\n\n    return this.http.get>(url, headers).pipe(\n      map(res => {\n        if (!res.meta?.pagination) {\n          return this.mapping.getPaginated(page, pageSize, res.data.length, res.data);\n        }\n        return this.mapping.getPaginated(\n          page,\n          pageSize,\n          res.meta.pagination.total,\n          res.data\n        );\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n\n  /**\n   * Obtiene un elemento específico por su ID con todas las relaciones pobladas\n   * @param id ID del elemento a obtener\n   * @returns Observable con el elemento encontrado o null si no existe\n   */\n  getById(id: string): Observable {\n    const url = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n    \n    return this.http.get(url, this.getHeaders())\n      .pipe(\n        map(res => {\n          if (res.data) {\n            return this.mapping.getOne(res);\n          } else if (res.id) {\n            return this.mapping.getOne({ data: res });\n          } else {\n            return null;\n          }\n        }),\n        catchError(error => {\n          throw error;\n        })\n      );\n  }\n\n  /**\n   * Crea un nuevo elemento con populate para obtener relaciones en la respuesta\n   * @param entity Entidad a crear\n   * @returns Observable con la entidad creada incluyendo relaciones\n   */\n  add(entity: T): Observable {\n    // Incluir populate para obtener relaciones en la respuesta\n    const url = `${this.apiUrl}/${this.resource}?populate=*`;\n    \n    return this.http.post(\n      url,\n      this.mapping.setAdd(entity),\n      this.getHeaders()\n    ).pipe(\n      map(res => {\n        const mappedResult = this.mapping.getAdded(res);\n        return mappedResult;\n      })\n    );\n  }\n\n  /**\n   * Actualiza un elemento existente sin wrapper \"data\" y hace GET para obtener datos completos\n   * @param id ID del elemento a actualizar\n   * @param entity Datos a actualizar\n   * @returns Observable con la entidad actualizada incluyendo todas las relaciones\n   */\n  update(id: string, entity: T): Observable {\n    const updateUrl = `${this.apiUrl}/${this.resource}/${id}`;\n    const mappedData = this.mapping.setUpdate(entity);\n    \n    // Usar contenido directo sin wrapper \"data\" para Strapi\n    const bodyToSend = mappedData.data || mappedData;\n    \n    return this.http.put(\n      updateUrl,\n      bodyToSend,\n      this.getHeaders()\n    ).pipe(\n      // Después del PUT, hacer GET para obtener datos completos con relaciones\n      switchMap(updateResponse => {\n        const getUrl = `${this.apiUrl}/${this.resource}/${id}?populate=*`;\n        return this.http.get(getUrl, this.getHeaders());\n      }),\n      map(getResponse => {\n        const mappedResult = this.mapping.getUpdated(getResponse);\n        return mappedResult;\n      }),\n      catchError(error => {\n        throw error;\n      })\n    );\n  }\n  \n  /**\n   * Elimina un elemento del recurso\n   * @param id ID del elemento a eliminar\n   * @returns Observable con la entidad eliminada\n   */\n  delete(id: string): Observable {\n    return this.http.delete(\n      `${this.apiUrl}/${this.resource}/${id}`,\n      this.getHeaders()\n    ).pipe(\n      map(res => this.mapping.getDeleted(res))\n    );\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignIn.html":{"url":"interfaces/StrapiSignIn.html","title":"interface - StrapiSignIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            identifier\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        identifier:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { User } from \"../../models/user.model\"; \n\nexport interface StrapiMeResponse {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiSignUpResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\ninterface StrapiSignIn {\n    identifier: string;\n    password: string;\n}\n\ninterface StrapiSignUp {\n    email: string;\n    password: string;\n    username: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload): StrapiSignIn {\n        return {\n            identifier: payload.email,\n            password: payload.password\n        };\n    }\n\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            email: payload.email,\n            password: payload.password,\n            username: payload.name + \" \" + payload.surname\n        };\n    }\n\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            // ✅ CAMPOS SOCIALES INICIALIZADOS\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    me(response: any): User {\n        let userData: any;\n        \n        if (response?.data) {\n            // Caso 1: Respuesta viene wrapped con { data: usuario }\n            userData = response.data;\n        } else if (response?.id && response?.email) {\n            // Caso 2: Respuesta viene directamente como usuario\n            userData = response;\n        } else {\n            console.error('StrapiAuthMapping - Unknown response structure:', response);\n            throw new Error('Invalid user data structure');\n        }\n        \n        \n        if (!userData || !userData.id || !userData.email) {\n            console.error('StrapiAuthMapping - Missing required user data:', userData);\n            throw new Error('Missing required user data (id or email)');\n        }\n        \n        const username = userData.username || userData.email?.split('@')[0] || 'User';\n        \n        const mappedUser: User = {\n            id: userData.id.toString(),\n            username: username,\n            email: userData.email,\n            followers: userData.followers || 0,\n            following: userData.following || 0,\n            following_ids: userData.following_ids || [],\n            followers_FK: userData.followers_FK || [],\n            liked_songs: userData.liked_songs || [],\n            following_artists: userData.following_artists || [],\n            playlists_IDS: userData.playlists_IDS || [],\n            provider: userData.provider || 'local',\n            confirmed: userData.confirmed ?? false,\n            blocked: userData.blocked ?? false,\n            image: userData.avatar ? {\n                url: userData.avatar.url,\n                large: userData.avatar.large,\n                medium: userData.avatar.medium,\n                small: userData.avatar.small,\n                thumbnail: userData.avatar.thumbnail\n            } : undefined,\n        };\n        \n        return mappedUser;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignInResponse.html":{"url":"interfaces/StrapiSignInResponse.html","title":"interface - StrapiSignInResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignInResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { User } from \"../../models/user.model\"; \n\nexport interface StrapiMeResponse {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiSignUpResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\ninterface StrapiSignIn {\n    identifier: string;\n    password: string;\n}\n\ninterface StrapiSignUp {\n    email: string;\n    password: string;\n    username: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload): StrapiSignIn {\n        return {\n            identifier: payload.email,\n            password: payload.password\n        };\n    }\n\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            email: payload.email,\n            password: payload.password,\n            username: payload.name + \" \" + payload.surname\n        };\n    }\n\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            // ✅ CAMPOS SOCIALES INICIALIZADOS\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    me(response: any): User {\n        let userData: any;\n        \n        if (response?.data) {\n            // Caso 1: Respuesta viene wrapped con { data: usuario }\n            userData = response.data;\n        } else if (response?.id && response?.email) {\n            // Caso 2: Respuesta viene directamente como usuario\n            userData = response;\n        } else {\n            console.error('StrapiAuthMapping - Unknown response structure:', response);\n            throw new Error('Invalid user data structure');\n        }\n        \n        \n        if (!userData || !userData.id || !userData.email) {\n            console.error('StrapiAuthMapping - Missing required user data:', userData);\n            throw new Error('Missing required user data (id or email)');\n        }\n        \n        const username = userData.username || userData.email?.split('@')[0] || 'User';\n        \n        const mappedUser: User = {\n            id: userData.id.toString(),\n            username: username,\n            email: userData.email,\n            followers: userData.followers || 0,\n            following: userData.following || 0,\n            following_ids: userData.following_ids || [],\n            followers_FK: userData.followers_FK || [],\n            liked_songs: userData.liked_songs || [],\n            following_artists: userData.following_artists || [],\n            playlists_IDS: userData.playlists_IDS || [],\n            provider: userData.provider || 'local',\n            confirmed: userData.confirmed ?? false,\n            blocked: userData.blocked ?? false,\n            image: userData.avatar ? {\n                url: userData.avatar.url,\n                large: userData.avatar.large,\n                medium: userData.avatar.medium,\n                small: userData.avatar.small,\n                thumbnail: userData.avatar.thumbnail\n            } : undefined,\n        };\n        \n        return mappedUser;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUp.html":{"url":"interfaces/StrapiSignUp.html","title":"interface - StrapiSignUp","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUp\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { User } from \"../../models/user.model\"; \n\nexport interface StrapiMeResponse {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiSignUpResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\ninterface StrapiSignIn {\n    identifier: string;\n    password: string;\n}\n\ninterface StrapiSignUp {\n    email: string;\n    password: string;\n    username: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload): StrapiSignIn {\n        return {\n            identifier: payload.email,\n            password: payload.password\n        };\n    }\n\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            email: payload.email,\n            password: payload.password,\n            username: payload.name + \" \" + payload.surname\n        };\n    }\n\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            // ✅ CAMPOS SOCIALES INICIALIZADOS\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    me(response: any): User {\n        let userData: any;\n        \n        if (response?.data) {\n            // Caso 1: Respuesta viene wrapped con { data: usuario }\n            userData = response.data;\n        } else if (response?.id && response?.email) {\n            // Caso 2: Respuesta viene directamente como usuario\n            userData = response;\n        } else {\n            console.error('StrapiAuthMapping - Unknown response structure:', response);\n            throw new Error('Invalid user data structure');\n        }\n        \n        \n        if (!userData || !userData.id || !userData.email) {\n            console.error('StrapiAuthMapping - Missing required user data:', userData);\n            throw new Error('Missing required user data (id or email)');\n        }\n        \n        const username = userData.username || userData.email?.split('@')[0] || 'User';\n        \n        const mappedUser: User = {\n            id: userData.id.toString(),\n            username: username,\n            email: userData.email,\n            followers: userData.followers || 0,\n            following: userData.following || 0,\n            following_ids: userData.following_ids || [],\n            followers_FK: userData.followers_FK || [],\n            liked_songs: userData.liked_songs || [],\n            following_artists: userData.following_artists || [],\n            playlists_IDS: userData.playlists_IDS || [],\n            provider: userData.provider || 'local',\n            confirmed: userData.confirmed ?? false,\n            blocked: userData.blocked ?? false,\n            image: userData.avatar ? {\n                url: userData.avatar.url,\n                large: userData.avatar.large,\n                medium: userData.avatar.medium,\n                small: userData.avatar.small,\n                thumbnail: userData.avatar.thumbnail\n            } : undefined,\n        };\n        \n        return mappedUser;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSignUpResponse.html":{"url":"interfaces/StrapiSignUpResponse.html","title":"interface - StrapiSignUpResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSignUpResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            jwt\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        jwt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        jwt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         StrapiUser\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StrapiUser\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { User } from \"../../models/user.model\"; \n\nexport interface StrapiMeResponse {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiSignUpResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\ninterface StrapiSignIn {\n    identifier: string;\n    password: string;\n}\n\ninterface StrapiSignUp {\n    email: string;\n    password: string;\n    username: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload): StrapiSignIn {\n        return {\n            identifier: payload.email,\n            password: payload.password\n        };\n    }\n\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            email: payload.email,\n            password: payload.password,\n            username: payload.name + \" \" + payload.surname\n        };\n    }\n\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            // ✅ CAMPOS SOCIALES INICIALIZADOS\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    me(response: any): User {\n        let userData: any;\n        \n        if (response?.data) {\n            // Caso 1: Respuesta viene wrapped con { data: usuario }\n            userData = response.data;\n        } else if (response?.id && response?.email) {\n            // Caso 2: Respuesta viene directamente como usuario\n            userData = response;\n        } else {\n            console.error('StrapiAuthMapping - Unknown response structure:', response);\n            throw new Error('Invalid user data structure');\n        }\n        \n        \n        if (!userData || !userData.id || !userData.email) {\n            console.error('StrapiAuthMapping - Missing required user data:', userData);\n            throw new Error('Missing required user data (id or email)');\n        }\n        \n        const username = userData.username || userData.email?.split('@')[0] || 'User';\n        \n        const mappedUser: User = {\n            id: userData.id.toString(),\n            username: username,\n            email: userData.email,\n            followers: userData.followers || 0,\n            following: userData.following || 0,\n            following_ids: userData.following_ids || [],\n            followers_FK: userData.followers_FK || [],\n            liked_songs: userData.liked_songs || [],\n            following_artists: userData.following_artists || [],\n            playlists_IDS: userData.playlists_IDS || [],\n            provider: userData.provider || 'local',\n            confirmed: userData.confirmed ?? false,\n            blocked: userData.blocked ?? false,\n            image: userData.avatar ? {\n                url: userData.avatar.url,\n                large: userData.avatar.large,\n                medium: userData.avatar.medium,\n                small: userData.avatar.small,\n                thumbnail: userData.avatar.thumbnail\n            } : undefined,\n        };\n        \n        return mappedUser;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiSongResponse.html":{"url":"interfaces/StrapiSongResponse.html","title":"interface - StrapiSongResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiSongResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/strapi/strapi-song.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiSongResponse {\n    data: {\n        id: number;\n        attributes: {\n            name: string;\n            author: string;\n            album: string;\n            duration: number;\n            image?: {\n                data?: {\n                    attributes: {\n                        url: string;\n                        formats: {\n                            large?: { url: string };\n                            medium?: { url: string };\n                            small?: { url: string };\n                            thumbnail?: { url: string };\n                        }\n                    }\n                }\n            };\n            playlistid_IDS: {\n                data: Array\n            };\n            createdAt: string;\n            updatedAt: string;\n        }\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUser.html":{"url":"interfaces/StrapiUser.html","title":"interface - StrapiUser","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/strapi/strapi-user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            following\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            playlists\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlists:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    followers: {\n        data: { id: number }[];\n    };\n    following: {\n        data: { id: number }[];\n    };\n    playlists: {\n        data: { id: number }[];\n    };\n    image: {\n        data: {\n            attributes: {\n                url: string;\n                formats: {\n                    large: { url: string };\n                    medium: { url: string };\n                    small: { url: string };\n                    thumbnail: { url: string };\n                };\n            };\n        };\n    };\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface StrapiUserResponse {\n    data: {\n        id: number;\n        attributes: StrapiUser;\n    };\n    meta: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUser-1.html":{"url":"interfaces/StrapiUser-1.html","title":"interface - StrapiUser-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUser\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-auth-mapping.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            blocked\n                                        \n                                \n                                \n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from \"@angular/core\";\nimport { IAuthMapping } from \"../interfaces/auth-mapping.interface\";\nimport { SignInPayload, SignUpPayload} from \"../../models/auth.model\";\nimport { User } from \"../../models/user.model\"; \n\nexport interface StrapiMeResponse {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\nexport interface StrapiSignInResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiSignUpResponse {\n    jwt: string;\n    user: StrapiUser;\n}\n\nexport interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    createdAt: string;\n    updatedAt: string;\n    avatar?: {\n        url: string;\n        large: string;\n        medium: string;\n        small: string;\n        thumbnail: string;\n    };\n}\n\ninterface StrapiSignIn {\n    identifier: string;\n    password: string;\n}\n\ninterface StrapiSignUp {\n    email: string;\n    password: string;\n    username: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class StrapiAuthMappingService implements IAuthMapping {\n    signInPayload(payload: SignInPayload): StrapiSignIn {\n        return {\n            identifier: payload.email,\n            password: payload.password\n        };\n    }\n\n    signUpPayload(payload: SignUpPayload): StrapiSignUp {\n        return {\n            email: payload.email,\n            password: payload.password,\n            username: payload.name + \" \" + payload.surname\n        };\n    }\n\n    signIn(response: StrapiSignInResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            // ✅ CAMPOS SOCIALES INICIALIZADOS\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    signUp(response: StrapiSignUpResponse): User {\n        return {\n            id: response.user.id.toString(),\n            username: response.user.username || '',\n            email: response.user.email,\n            followers: 0,\n            following: 0,\n            following_ids: [],\n            followers_FK: [],\n            liked_songs: [],\n            following_artists: [],\n            playlists_IDS: [],\n            provider: response.user.provider,\n            confirmed: response.user.confirmed,\n            blocked: response.user.blocked,\n            image: response.user.avatar ? {\n                url: response.user.avatar.url,\n                large: response.user.avatar.large,\n                medium: response.user.avatar.medium,\n                small: response.user.avatar.small,\n                thumbnail: response.user.avatar.thumbnail\n            } : undefined,\n        };\n    }\n\n    me(response: any): User {\n        let userData: any;\n        \n        if (response?.data) {\n            // Caso 1: Respuesta viene wrapped con { data: usuario }\n            userData = response.data;\n        } else if (response?.id && response?.email) {\n            // Caso 2: Respuesta viene directamente como usuario\n            userData = response;\n        } else {\n            console.error('StrapiAuthMapping - Unknown response structure:', response);\n            throw new Error('Invalid user data structure');\n        }\n        \n        \n        if (!userData || !userData.id || !userData.email) {\n            console.error('StrapiAuthMapping - Missing required user data:', userData);\n            throw new Error('Missing required user data (id or email)');\n        }\n        \n        const username = userData.username || userData.email?.split('@')[0] || 'User';\n        \n        const mappedUser: User = {\n            id: userData.id.toString(),\n            username: username,\n            email: userData.email,\n            followers: userData.followers || 0,\n            following: userData.following || 0,\n            following_ids: userData.following_ids || [],\n            followers_FK: userData.followers_FK || [],\n            liked_songs: userData.liked_songs || [],\n            following_artists: userData.following_artists || [],\n            playlists_IDS: userData.playlists_IDS || [],\n            provider: userData.provider || 'local',\n            confirmed: userData.confirmed ?? false,\n            blocked: userData.blocked ?? false,\n            image: userData.avatar ? {\n                url: userData.avatar.url,\n                large: userData.avatar.large,\n                medium: userData.avatar.medium,\n                small: userData.avatar.small,\n                thumbnail: userData.avatar.thumbnail\n            } : undefined,\n        };\n        \n        return mappedUser;\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StrapiUserResponse.html":{"url":"interfaces/StrapiUserResponse.html","title":"interface - StrapiUserResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StrapiUserResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/strapi/strapi-user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface StrapiUser {\n    id: number;\n    username: string;\n    email: string;\n    provider: string;\n    confirmed: boolean;\n    blocked: boolean;\n    followers: {\n        data: { id: number }[];\n    };\n    following: {\n        data: { id: number }[];\n    };\n    playlists: {\n        data: { id: number }[];\n    };\n    image: {\n        data: {\n            attributes: {\n                url: string;\n                formats: {\n                    large: { url: string };\n                    medium: { url: string };\n                    small: { url: string };\n                    thumbnail: { url: string };\n                };\n            };\n        };\n    };\n    createdAt: string;\n    updatedAt: string;\n}\n\nexport interface StrapiUserResponse {\n    data: {\n        id: number;\n        attributes: StrapiUser;\n    };\n    meta: any;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/task.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            date\n                                        \n                                \n                                \n                                        \n                                            owner\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        date:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        owner\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        owner:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\nimport { Person } from \"./person.model\";\n\nexport interface Task extends Model{\n    owner:Person,\n    date:Date\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thumbnail.html":{"url":"interfaces/Thumbnail.html","title":"interface - Thumbnail","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Thumbnail\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/strapi-media.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            ext\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            mime\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            provider_metadata\n                                        \n                                \n                                \n                                        \n                                            size\n                                        \n                                \n                                \n                                        \n                                            url\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ext\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ext:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mime\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider_metadata\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider_metadata:         ProviderMetadata\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProviderMetadata\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        url:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from \"@angular/common/http\";\nimport { BaseMediaService } from \"./base-media.service\";\nimport { STRAPI_AUTH_TOKEN, UPLOAD_API_URL_TOKEN } from \"../../repositories/repository.tokens\";\nimport { Inject } from \"@angular/core\";\nimport { map, Observable } from \"rxjs\";\nimport { IStrapiAuthentication } from \"../interfaces/strapi-authentication.interface\";\n\nexport type StrapiUploadResponse = StrapiMediaData[]\n\nexport interface StrapiMedia{\n    id:number,\n    attributes:StrapiMediaData\n}\n\nexport interface StrapiMediaData {\n  id: number\n  name: string\n  alternativeText: any\n  caption: any\n  width: number\n  height: number\n  formats: Formats\n  hash: string\n  ext: string\n  mime: string\n  size: number\n  url: string\n  previewUrl: any\n  provider: string\n  provider_metadata: ProviderMetadata\n  createdAt: string\n  updatedAt: string\n}\n\nexport interface Formats {\n  large: Large\n  small: Small\n  medium: Medium\n  thumbnail: Thumbnail\n}\n\nexport interface Large {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Small {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Medium {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface Thumbnail {\n  ext: string\n  url: string\n  hash: string\n  mime: string\n  name: string\n  path: any\n  size: number\n  width: number\n  height: number\n  provider_metadata: ProviderMetadata\n}\n\nexport interface ProviderMetadata {\n  public_id: string\n  resource_type: string\n}\n\nexport class StrapiMediaService extends BaseMediaService {\n\n    constructor(\n        @Inject(UPLOAD_API_URL_TOKEN) private uploadUrl: string,\n        @Inject(STRAPI_AUTH_TOKEN) private auth: IStrapiAuthentication,\n        private httpClient:HttpClient\n    ) { \n      super();\n    }\n  \n    private getHeaders() {\n        const token = this.auth.getToken();\n        return {\n            headers: token ? { 'Authorization': `Bearer ${token}` } : undefined\n        };\n    }\n\n    public upload(blob:Blob):Observable{\n      const formData = new FormData();\n      formData.append('files', blob);\n      return this.httpClient.post(\n        `${this.uploadUrl}`, formData, this.getHeaders())\n            .pipe(map((response:StrapiUploadResponse)=>{\n        return response.map(media=>media.id);\n      }));\n    }\n  }\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            Model\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            blocked\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmationToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            confirmed\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            followers\n                                        \n                                \n                                \n                                        \n                                            followers_FK\n                                        \n                                \n                                \n                                        \n                                            following\n                                        \n                                \n                                \n                                        \n                                            following_artists\n                                        \n                                \n                                \n                                        \n                                            following_ids\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            liked_songs\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            playlists_IDS\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            provider\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            resetPasswordToken\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            role\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        blocked\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        blocked:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmationToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmationToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        confirmed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        confirmed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_FK\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers_FK:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_artists\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following_artists:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        liked_songs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        liked_songs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlists_IDS\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlists_IDS:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetPasswordToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetPasswordToken:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        role\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        role:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface User extends Model {\n    username: string;\n    email: string;\n    provider?: string;\n    password?: string;\n    resetPasswordToken?: string;\n    confirmationToken?: string;\n    confirmed?: boolean;\n    blocked?: boolean;\n    role?: string;\n    playlists_IDS: string[];\n    image?: {\n        url: string | undefined;\n        large: string | undefined;\n        medium: string | undefined;\n        small: string | undefined;\n        thumbnail: string | undefined;\n    };\n    \n    followers: number;\n    following: number;\n    following_ids: string[];\n    followers_FK: string[];\n    liked_songs: string[];\n    following_artists: string[];\n}\n\nexport interface SignInPayload {\n    email: string;\n    password: string;\n}\n\nexport interface SignUpPayload {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    birthDate: string;\n    gender: string;\n    group: string;\n    user: string;\n}\n\nexport interface UserDisplayData {\n    id: string;\n    username: string;\n    displayName: string;    \n    email: string;\n    image?: {\n        url: string | undefined;\n        thumbnail: string | undefined;\n    };\n    followers_count: number;\n    following_count: number;\n    playlists_count: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserDisplayData.html":{"url":"interfaces/UserDisplayData.html","title":"interface - UserDisplayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserDisplayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/models/user.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            followers_count\n                                        \n                                \n                                \n                                        \n                                            following_count\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            playlists_count\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        followers_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        followers_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        following_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        following_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        playlists_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        playlists_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Model } from \"./base.model\";\n\nexport interface User extends Model {\n    username: string;\n    email: string;\n    provider?: string;\n    password?: string;\n    resetPasswordToken?: string;\n    confirmationToken?: string;\n    confirmed?: boolean;\n    blocked?: boolean;\n    role?: string;\n    playlists_IDS: string[];\n    image?: {\n        url: string | undefined;\n        large: string | undefined;\n        medium: string | undefined;\n        small: string | undefined;\n        thumbnail: string | undefined;\n    };\n    \n    followers: number;\n    following: number;\n    following_ids: string[];\n    followers_FK: string[];\n    liked_songs: string[];\n    following_artists: string[];\n}\n\nexport interface SignInPayload {\n    email: string;\n    password: string;\n}\n\nexport interface SignUpPayload {\n    email: string;\n    password: string;\n    name: string;\n    surname: string;\n    birthDate: string;\n    gender: string;\n    group: string;\n    user: string;\n}\n\nexport interface UserDisplayData {\n    id: string;\n    username: string;\n    displayName: string;    \n    email: string;\n    image?: {\n        url: string | undefined;\n        thumbnail: string | undefined;\n    };\n    followers_count: number;\n    following_count: number;\n    playlists_count: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/core/services/impl/user.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            BaseService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isUpdatingUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addPlaylist\n                            \n                            \n                                follow\n                            \n                            \n                                getByEmail\n                            \n                            \n                                    \n                                getById\n                            \n                            \n                                getFollowers\n                            \n                            \n                                getFollowing\n                            \n                            \n                                removePlaylist\n                            \n                            \n                                unfollow\n                            \n                            \n                                updateProfile\n                            \n                            \n                                updateSafely\n                            \n                            \n                                add\n                            \n                            \n                                delete\n                            \n                            \n                                getAll\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userRepository: IUserRepository, authService: BaseAuthenticationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/core/services/impl/user.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userRepository\n                                                  \n                                                        \n                                                                        IUserRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        BaseAuthenticationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addPlaylist\n                        \n                    \n                \n            \n            \n                \naddPlaylist(userId: string, playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        follow\n                        \n                    \n                \n            \n            \n                \nfollow(userId: string, followId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:101\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                followId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getByEmail\n                        \n                    \n                \n            \n            \n                \ngetByEmail(email: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        getById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getById(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:203\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowers\n                        \n                    \n                \n            \n            \n                \ngetFollowers(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:133\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFollowing\n                        \n                    \n                \n            \n            \n                \ngetFollowing(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:137\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removePlaylist\n                        \n                    \n                \n            \n            \n                \nremovePlaylist(userId: string, playlistId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:157\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                playlistId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unfollow\n                        \n                    \n                \n            \n            \n                \nunfollow(userId: string, followId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:117\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                followId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile(id: string, changes: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changes\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateSafely\n                        \n                    \n                \n            \n            \n                \nupdateSafely(id: string, changes: Partial)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/core/services/impl/user.service.ts:174\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                changes\n                                            \n                                                            Partial\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:32\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:40\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAll\n                        \n                    \n                \n            \n            \n                \ngetAll()\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:18\n\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, entity: T)\n                \n            \n\n\n                    \n                        \n                            Inherited from         BaseService\n\n                        \n                    \n                    \n                        \n                                Defined in         BaseService:36\n\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                entity\n                                            \n                                                        T\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isUpdatingUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/core/services/impl/user.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Observable, tap } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { BaseService } from './base-service.service';\nimport { User } from '../../models/user.model';\nimport { IUserService } from '../interfaces/user-service.interface';\nimport { IUserRepository } from '../../repositories/intefaces/user-repository.interface';\nimport { USERS_REPOSITORY_TOKEN } from '../../repositories/repository.tokens';\nimport { BaseAuthenticationService } from './base-authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class UserService extends BaseService implements IUserService {\n    private isUpdatingUser = false;\n\n    constructor(\n        @Inject(USERS_REPOSITORY_TOKEN) private userRepository: IUserRepository,\n        private authService: BaseAuthenticationService\n    ) {\n        super(userRepository);\n    }\n\n    getByEmail(email: string): Observable {\n        return this.userRepository.getByEmail(email);\n    }\n\n    // ✅ MÉTODO CORREGIDO: updateProfile\n    updateProfile(id: string, changes: Partial): Observable {\n        console.log('🔄 UserService.updateProfile called with:', { id, changes });\n        \n        this.isUpdatingUser = true;\n        \n        // ✅ PROCESAR LA IMAGEN ANTES DE ENVIAR AL REPOSITORY\n        const processedChanges = { ...changes };\n        \n        if (changes.image !== undefined) {\n            console.log('🖼️ Processing image in updateProfile:', changes.image, 'type:', typeof changes.image);\n            \n            const imageData: any = changes.image;\n            \n            // Si la imagen es un número (ID de imagen ya subida)\n            if (typeof imageData === 'number') {\n                processedChanges.image = imageData as any;\n                console.log('🖼️ Image processed as ID:', imageData);\n            }\n            // Si la imagen es un objeto con structure compleja\n            else if (typeof imageData === 'object' && imageData !== null) {\n                if (imageData.data && imageData.data.id) {\n                    processedChanges.image = Number(imageData.data.id) as any;\n                    console.log('🖼️ Image processed from object.data.id:', Number(imageData.data.id));\n                } else if (imageData.id) {\n                    processedChanges.image = Number(imageData.id) as any;\n                    console.log('🖼️ Image processed from object.id:', Number(imageData.id));\n                } else if (imageData.url && !isNaN(Number(imageData.url))) {\n                    processedChanges.image = Number(imageData.url) as any;\n                    console.log('🖼️ Image processed from object.url as number:', Number(imageData.url));\n                }\n                // Si es un objeto de imagen con URLs (mantener como está para retorno)\n                else if (imageData.url && typeof imageData.url === 'string') {\n                    console.log('🖼️ Image object with URLs, keeping as is:', imageData);\n                    // No modificar - es el formato de respuesta correcto\n                }\n            }\n            // Si la imagen es string y parece ser un ID numérico\n            else if (typeof imageData === 'string' && !isNaN(Number(imageData))) {\n                processedChanges.image = Number(imageData) as any;\n                console.log('🖼️ Image processed from string as number:', Number(imageData));\n            }\n            else if (imageData === null) {\n                processedChanges.image = null as any;\n                console.log('🖼️ Image set to null for removal');\n            }\n            else {\n                console.warn('⚠️ Unrecognized image format in updateProfile:', imageData);\n            }\n        }\n        \n        console.log('🔄 UserService.updateProfile processed changes:', processedChanges);\n        \n        return this.update(id, processedChanges as User).pipe(\n            tap(updatedUser => {\n                console.log('✅ UserService.updateProfile result:', updatedUser);\n                \n                try {\n                    if (updatedUser && updatedUser.id) {\n                        (this.authService as any).updateCurrentUser(updatedUser);\n                        console.log('✅ Updated current user in auth service');\n                    }\n                } catch (authError) {\n                    console.error('❌ Error updating auth service:', authError);\n                } finally {\n                    setTimeout(() => {\n                        this.isUpdatingUser = false;\n                    }, 100);\n                }\n            })\n        );\n    }\n\n    follow(userId: string, followId: string): Observable {\n        this.isUpdatingUser = true;\n        \n        return this.userRepository.follow(userId, followId).pipe(\n            tap(updatedUser => {\n                try {\n                    (this.authService as any).updateCurrentUser(updatedUser);\n                } finally {\n                    setTimeout(() => {\n                        this.isUpdatingUser = false;\n                    }, 100);\n                }\n            })\n        );\n    }\n\n    unfollow(userId: string, followId: string): Observable {\n        this.isUpdatingUser = true;\n        \n        return this.userRepository.unfollow(userId, followId).pipe(\n            tap(updatedUser => {\n                try {\n                    (this.authService as any).updateCurrentUser(updatedUser);\n                } finally {\n                    setTimeout(() => {\n                        this.isUpdatingUser = false;\n                    }, 100);\n                }\n            })\n        );\n    }\n\n    getFollowers(userId: string): Observable {\n        return this.userRepository.getFollowers(userId);\n    }\n\n    getFollowing(userId: string): Observable {\n        return this.userRepository.getFollowing(userId);\n    }\n\n    addPlaylist(userId: string, playlistId: string): Observable {\n        this.isUpdatingUser = true;\n        \n        return this.userRepository.addPlaylist(userId, playlistId).pipe(\n            tap(updatedUser => {\n                try {\n                    (this.authService as any).updateCurrentUser(updatedUser);\n                } finally {\n                    setTimeout(() => {\n                        this.isUpdatingUser = false;\n                    }, 100);\n                }\n            })\n        );\n    }\n\n    removePlaylist(userId: string, playlistId: string): Observable {\n        this.isUpdatingUser = true;\n        \n        return this.userRepository.removePlaylist(userId, playlistId).pipe(\n            tap(updatedUser => {\n                try {\n                    (this.authService as any).updateCurrentUser(updatedUser);\n                } finally {\n                    setTimeout(() => {\n                        this.isUpdatingUser = false;\n                    }, 100);\n                }\n            })\n        );\n    }\n\n    // ✅ MÉTODO MEJORADO: updateSafely  \n    updateSafely(id: string, changes: Partial): Observable {\n        console.log('🔄 UserService: Safe update for user:', id, 'with changes:', changes);\n        \n        return this.getById(id).pipe(\n            take(1),\n            switchMap(currentUser => {\n                if (!currentUser) {\n                    throw new Error('User not found');\n                }\n                \n                // Crear objeto completo preservando todos los campos\n                const updatedUser: User = {\n                    ...currentUser, // ✅ Preserva TODOS los campos existentes\n                    ...changes     // ✅ Aplica solo los cambios necesarios\n                };\n                \n                console.log('🔄 UserService: Updating user with preserved data:', {\n                    userId: id,\n                    preservedFields: Object.keys(currentUser).length,\n                    changedFields: Object.keys(changes).length,\n                    originalImage: currentUser.image?.url,\n                    finalImage: updatedUser.image?.url\n                });\n                \n                return this.updateProfile(id, updatedUser);\n            })\n        );\n    }\n\n    override getById(id: string): Observable {\n        const shouldUpdateAuth = !this.isUpdatingUser;\n        \n        return this.userRepository.getById(id).pipe(\n            filter((userData): userData is User => userData !== null),\n            tap(userData => {\n                if (shouldUpdateAuth && \n                    userData && \n                    userData.id === (this.authService as any)._user.value?.id) {\n                    this.isUpdatingUser = true;\n                    \n                    try {\n                        (this.authService as any).updateCurrentUser(userData);\n                    } finally {\n                        setTimeout(() => {\n                            this.isUpdatingUser = false;\n                        }, 100);\n                    }\n                }\n            })\n        );\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/app.module.ts\n            \n            function\n            createTranslateLoader\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.module.ts\n            \n            function\n            playerFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/auth.guard.ts\n            \n            variable\n            authGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/guards/no-auth.guard.ts\n            \n            variable\n            noAuthGuard\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/core/models/artist.model.ts\n            \n            interface\n            Artist\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            SignInPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/auth.model.ts\n            \n            interface\n            SignUpPayload\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/models/base.model.ts\n            \n            interface\n            Model\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/models/enriched-song.interface.ts\n            \n            interface\n            EnrichedSong\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-artist.model.ts\n            \n            interface\n            FirebaseArtist\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-group.model.ts\n            \n            interface\n            FirebaseGroup\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-person.model.ts\n            \n            interface\n            FirebasePerson\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-playlist.model.ts\n            \n            interface\n            FirebasePlaylist\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-song.model.ts\n            \n            interface\n            FirebaseSong\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/core/models/firebase/firebase-user.model.ts\n            \n            interface\n            FirebaseUser\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/core/models/group.model.ts\n            \n            interface\n            Group\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/paginated.model.ts\n            \n            interface\n            Paginated\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/models/person.model.ts\n            \n            interface\n            Person\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/models/playlist.model.ts\n            \n            interface\n            Playlist\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/models/song.model.ts\n            \n            interface\n            Song\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/models/strapi/strapi-playlist.model.ts\n            \n            interface\n            StrapiPlaylistResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/strapi/strapi-song.model.ts\n            \n            interface\n            StrapiSongResponse\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/models/strapi/strapi-user.model.ts\n            \n            interface\n            StrapiUser\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/core/models/strapi/strapi-user.model.ts\n            \n            interface\n            StrapiUserResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/task.model.ts\n            \n            interface\n            Task\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            SignInPayload\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            SignUpPayload\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/models/user.model.ts\n            \n            interface\n            UserDisplayData\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/artists-mapping-strapi.service.ts\n            \n            injectable\n            ArtistsMappingStrapi\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-firebase.service.ts\n            \n            injectable\n            BaseRepositoryFirebaseService\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-http.service.ts\n            \n            injectable\n            BaseRepositoryHttpService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/base-repository-local-storage.service.ts\n            \n            injectable\n            BaseRepositoryLocalStorageService\n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/json-server-repository.service.ts\n            \n            injectable\n            JsonServerRepositoryService\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/json-server-repository.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/playlists-mapping-strapi.service.ts\n            \n            injectable\n            PlaylistsMappingStrapi\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/songs-mapping-strapi.service.ts\n            \n            injectable\n            SongsMappingStrapi\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            injectable\n            StrapiRepositoryService\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Data\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Meta\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            PaginatedRaw\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/strapi-repository.service.ts\n            \n            interface\n            Pagination\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/repositories/impl/users-mapping-strapi.service.ts\n            \n            injectable\n            UserMappingStrapiService\n            \n                100 %\n                (17/17)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/artists-repository.interface.ts\n            \n            interface\n            IArtistsRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-mapping.interface.ts\n            \n            interface\n            IBaseMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            IBaseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            IBaseRepository\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            SearchOperators\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/base-repository.interface.ts\n            \n            interface\n            SearchParams\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/playlists-repository.interface.ts\n            \n            interface\n            IPlaylistsRepository\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/songs-repository.interface.ts\n            \n            interface\n            ISongsRepository\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/user-mapping.interface.ts\n            \n            interface\n            IUserMapping\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/repositories/intefaces/user-repository.interface.ts\n            \n            interface\n            IUserRepository\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            function\n            createBaseRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            ArtistsMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            ArtistsRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            AuthenticationServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            AuthMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            MediaServiceFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            PlaylistsMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            PlaylistsRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SongsMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            SongsRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            UsersMappingFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.factory.ts\n            \n            variable\n            UsersRepositoryFactory\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            ARTISTS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            ARTISTS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            ARTISTS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            ARTISTS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_ME_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_SIGN_IN_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_SIGN_UP_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            AUTH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            BACKEND_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            COLLECTION_SUBSCRIPTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            FIREBASE_COLLECTION_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            FIREBASE_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            PLAYLISTS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            PLAYLISTS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            PLAYLISTS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            PLAYLISTS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SONGS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SONGS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SONGS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            SONGS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            STRAPI_AUTH_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            UPLOAD_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            USERS_API_URL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            USERS_REPOSITORY_MAPPING_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            USERS_REPOSITORY_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/repositories/repository.tokens.ts\n            \n            variable\n            USERS_RESOURCE_NAME_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/artists.service.ts\n            \n            injectable\n            ArtistsService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/audio-player.service.ts\n            \n            injectable\n            AudioPlayerService\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/audio-player.service.ts\n            \n            interface\n            PlayerState\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-authentication.service.ts\n            \n            injectable\n            BaseAuthenticationService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-media.service.ts\n            \n            class\n            BaseMediaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/base-service.service.ts\n            \n            injectable\n            BaseService\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/enhanced-audio-player.service.ts\n            \n            injectable\n            EnhancedAudioPlayerService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-authentication.service.ts\n            \n            injectable\n            FirebaseAuthenticationService\n            \n                0 %\n                (0/19)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/firebase-media.service.ts\n            \n            injectable\n            FirebaseMediaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/playlists.service.ts\n            \n            injectable\n            PlaylistsService\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/share.service.ts\n            \n            injectable\n            ShareService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/social.service.ts\n            \n            injectable\n            SocialService\n            \n                24 %\n                (10/41)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/song-enrichment.service.ts\n            \n            injectable\n            SongEnrichmentService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/song-enrichment.service.ts\n            \n            interface\n            EnrichedSong\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/songs.service.ts\n            \n            injectable\n            SongsService\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/songs.service.ts\n            \n            interface\n            SongWithArtists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            injectable\n            StrapiAuthMappingService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiMeResponse\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignIn\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignInResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignUp\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiSignUpResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-auth-mapping.service.ts\n            \n            interface\n            StrapiUser\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-authentication.service.ts\n            \n            injectable\n            StrapiAuthenticationService\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            class\n            StrapiMediaService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Formats\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Large\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Medium\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            ProviderMetadata\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Small\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            StrapiMedia\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            StrapiMediaData\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/strapi-media.service.ts\n            \n            interface\n            Thumbnail\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                        src/app/core/services/impl/strapi-media.service.ts\n            \n            type alias\n            StrapiUploadResponse\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/impl/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/artists-service.interface.ts\n            \n            interface\n            IArtistsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/auth-mapping.interface.ts\n            \n            interface\n            IAuthMapping\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/authentication.interface.ts\n            \n            interface\n            IAuthentication\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/base-service.interface.ts\n            \n            interface\n            IBaseService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/collection-subscription.interface.ts\n            \n            interface\n            CollectionChange\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/collection-subscription.interface.ts\n            \n            interface\n            ICollectionSubscription\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/firebase-collection-subscription.interface.ts\n            \n            injectable\n            FirebaseCollectionSubscriptionService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/playlists-service.interface.ts\n            \n            interface\n            IPlaylistsService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/songs-service.interface.ts\n            \n            interface\n            ISongsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/strapi-authentication.interface.ts\n            \n            interface\n            IStrapiAuthentication\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/tasks-service.interface.ts\n            \n            interface\n            ITasksService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/core/services/interfaces/user-service.interface.ts\n            \n            interface\n            IUserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/core/services/language.service.ts\n            \n            injectable\n            LanguageService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                        src/app/core/utils/blob.ts\n            \n            function\n            dataURLtoBlob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/validators.ts\n            \n            function\n            passwordsMatchValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/core/utils/validators.ts\n            \n            function\n            passwordValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/about/about.page.ts\n            \n            component\n            AboutPage\n            \n                45 %\n                (5/11)\n            \n        \n        \n            \n                \n                src/app/pages/artist-profile/artist-profile.page.ts\n            \n            component\n            ArtistProfilePage\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                src/app/pages/artist-profile/artist-profile.page.ts\n            \n            interface\n            EnrichedSong\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/artists/artists.page.ts\n            \n            component\n            ArtistsPage\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            component\n            HomePage\n            \n                28 %\n                (17/59)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            interface\n            ReactiveEnrichedSong\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            interface\n            SearchResult\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/pages/home/home.page.ts\n            \n            interface\n            SearchSuggestion\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/pages/login/login.page.ts\n            \n            component\n            LoginPage\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/pages/playlist-detail/playlist-detail.page.ts\n            \n            component\n            PlaylistDetailPage\n            \n                20 %\n                (6/30)\n            \n        \n        \n            \n                \n                src/app/pages/playlist-detail/playlist-detail.page.ts\n            \n            interface\n            SongWithArtists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/playlists/playlists.page.ts\n            \n            component\n            PlaylistsPage\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/app/pages/profile/profile.page.ts\n            \n            component\n            ProfilePage\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                        src/app/pages/profile/profile.page.ts\n            \n            function\n            dataURLtoBlob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/pages/register/register.page.ts\n            \n            component\n            RegisterPage\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/pages/songs/songs.page.ts\n            \n            component\n            SongsPage\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/pages/songs/songs.page.ts\n            \n            interface\n            SongWithArtists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/pages/splash/splash.page.ts\n            \n            component\n            SplashPage\n            \n                42 %\n                (6/14)\n            \n        \n        \n            \n                \n                src/app/shared/components/artist-grid-card/artist-grid-card.component.ts\n            \n            component\n            ArtistGridCardComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/artist-modal.component/artist-modal.component.ts\n            \n            component\n            ArtistModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/audio-player/audio-player.component.ts\n            \n            component\n            AudioPlayerComponent\n            \n                10 %\n                (3/29)\n            \n        \n        \n            \n                \n                src/app/shared/components/change-password-modal/change-password-modal.component.ts\n            \n            component\n            ChangePasswordModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/clickable-artist/clickable-artist-names.component.ts\n            \n            component\n            ClickableArtistNamesComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/shared/components/clickable-artist/clickable-artist-names.component.ts\n            \n            interface\n            ArtistData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts\n            \n            component\n            EditProfileModalComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                        src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts\n            \n            function\n            dataURLtoBlob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/follow-artist-button/follow-artist-button.component.ts\n            \n            component\n            FollowArtistButtonComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/shared/components/global-search/global-search.component.ts\n            \n            component\n            GlobalSearchComponent\n            \n                0 %\n                (0/45)\n            \n        \n        \n            \n                \n                src/app/shared/components/global-search/global-search.component.ts\n            \n            interface\n            SearchResult\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/shared/components/like-button/like-button.component.ts\n            \n            component\n            LikeButtonComponent\n            \n                20 %\n                (3/15)\n            \n        \n        \n            \n                \n                src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            component\n            PictureSelectableComponent\n            \n                70 %\n                (12/17)\n            \n        \n        \n            \n                \n                        src/app/shared/components/picture-selectable/picture-selectable.component.ts\n            \n            variable\n            PICTURE_SELECTABLE_VALUE_ACCESSOR\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/components/play-button/play-button.component.ts\n            \n            component\n            PlayButtonComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/components/playlist-like-button/playlist-like-button.component.ts\n            \n            component\n            PlaylistLikeButtonComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/shared/components/playlist-modal/playlist-modal.component.ts\n            \n            component\n            PlaylistModalComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/shared/components/song-detail-modal/song-detail-modal.component.ts\n            \n            component\n            SongDetailModalComponent\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/components/song-detail-modal/song-detail-modal.component.ts\n            \n            interface\n            SongWithArtists\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/shared/components/song-grid-card/song-grid-card.component.ts\n            \n            component\n            SongGridCardComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                src/app/shared/components/song-modal/song-modal.component.ts\n            \n            component\n            SongModalComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                        src/app/shared/components/song-modal/song-modal.component.ts\n            \n            function\n            dataURLtoBlob\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/directives/drag-drop.directive.ts\n            \n            directive\n            DragDropDirective\n            \n                0 %\n                (0/16)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/duration.pipe.ts\n            \n            pipe\n            DurationPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/password-visibility.pipe.ts\n            \n            pipe\n            PasswordVisibilityPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/shared/pipe/playlist-duration.pipte.ts\n            \n            pipe\n            PlaylistDurationPipe\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.0.0\n        \n            @angular/common : ^18.0.0\n        \n            @angular/compiler : ^18.0.0\n        \n            @angular/core : ^18.0.0\n        \n            @angular/forms : ^18.2.13\n        \n            @angular/platform-browser : ^18.0.0\n        \n            @angular/platform-browser-dynamic : ^18.0.0\n        \n            @angular/router : ^18.2.13\n        \n            @apollo/client : ^3.11.8\n        \n            @capacitor/android : 6.2.0\n        \n            @capacitor/app : ^6.0.2\n        \n            @capacitor/core : ^6.2.0\n        \n            @capacitor/haptics : 6.0.2\n        \n            @capacitor/keyboard : 6.0.2\n        \n            @capacitor/share : ^7.0.0\n        \n            @capacitor/status-bar : 6.0.2\n        \n            @ionic/angular : ^8.4.3\n        \n            @ngx-translate/core : ^16.0.4\n        \n            @ngx-translate/http-loader : ^16.0.1\n        \n            angular : ^1.8.3\n        \n            firebase : ^11.1.0\n        \n            http-proxy-middleware : ^3.0.3\n        \n            ionicons : ^7.0.0\n        \n            lottie-web : ^5.12.2\n        \n            ngx-lottie : ^11.0.0\n        \n            pusher-js : ^8.4.0-rc2\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createBaseMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createBaseRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            createTranslateLoader   (src/.../app.module.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../blob.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../profile.page.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../edit-profile-modal.component.ts)\n                        \n                        \n                            dataURLtoBlob   (src/.../song-modal.component.ts)\n                        \n                        \n                            passwordsMatchValidator   (src/.../validators.ts)\n                        \n                        \n                            passwordValidator   (src/.../validators.ts)\n                        \n                        \n                            playerFactory   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createBaseMappingFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseMappingFactory(token: InjectionToken, dependencies, modelType)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                modelType\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createBaseRepositoryFactory\n                        \n                    \n                \n            \n            \n                \ncreateBaseRepositoryFactory(token: InjectionToken, dependencies)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                token\n                                            \n                                                        InjectionToken\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                dependencies\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     FactoryProvider\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createTranslateLoader\n                        \n                    \n                \n            \n            \n                \ncreateTranslateLoader(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                http\n                                            \n                                                        HttpClient\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playerFactory\n                        \n                    \n                \n            \n            \n                \nplayerFactory()\n                \n            \n\n\n\n\n        \n    \n    src/app/core/utils/blob.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataUrl: string, callback)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataUrl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                callback\n                                            \n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    src/app/pages/profile/profile.page.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataurl: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataurl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Blob\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/shared/components/edit-profile-modal/edit-profile-modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataurl: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataurl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Blob\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/shared/components/song-modal/song-modal.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataURLtoBlob\n                        \n                    \n                \n            \n            \n                \ndataURLtoBlob(dataurl: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                dataurl\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Blob\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/app/core/utils/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        passwordsMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordsMatchValidator(group: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                group\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordValidator\n                        \n                    \n                \n            \n            \n                \npasswordValidator(control: AbstractControl)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                control\n                                            \n                                                        AbstractControl\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     ValidationErrors | null\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nUMusic - Music Streaming Application\nFeatures\n\n🎵 Music streaming\n📝 Playlist creation and management\n👤 User profiles\n🔍 Advanced search functionality\n🌐 Multi-language support\n📱 Responsive design\n🎨 Customizable themes\n🔒 Secure authentication\n\nDemonstration\nCheck out this video demonstration of UMusic in action:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AboutPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AboutPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArtistProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArtistProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArtistsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ArtistsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HomePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlaylistDetailPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlaylistDetailPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlaylistsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PlaylistsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfilePageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RegisterPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SongsPageModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SongsPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SplashPageRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AboutPageModule\n\n\n\ncluster_AboutPageModule_declarations\n\n\n\ncluster_AboutPageModule_imports\n\n\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_ArtistProfilePageModule\n\n\n\ncluster_ArtistProfilePageModule_declarations\n\n\n\ncluster_ArtistProfilePageModule_imports\n\n\n\ncluster_ArtistsPageModule\n\n\n\ncluster_ArtistsPageModule_declarations\n\n\n\ncluster_ArtistsPageModule_imports\n\n\n\ncluster_HomePageModule\n\n\n\ncluster_HomePageModule_declarations\n\n\n\ncluster_HomePageModule_imports\n\n\n\ncluster_LoginPageModule\n\n\n\ncluster_LoginPageModule_declarations\n\n\n\ncluster_LoginPageModule_imports\n\n\n\ncluster_PlaylistDetailPageModule\n\n\n\ncluster_PlaylistDetailPageModule_declarations\n\n\n\ncluster_PlaylistDetailPageModule_imports\n\n\n\ncluster_PlaylistsPageModule\n\n\n\ncluster_PlaylistsPageModule_declarations\n\n\n\ncluster_PlaylistsPageModule_imports\n\n\n\ncluster_ProfilePageModule\n\n\n\ncluster_ProfilePageModule_declarations\n\n\n\ncluster_ProfilePageModule_imports\n\n\n\ncluster_RegisterPageModule\n\n\n\ncluster_RegisterPageModule_declarations\n\n\n\ncluster_RegisterPageModule_imports\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_declarations\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SongsPageModule\n\n\n\ncluster_SongsPageModule_declarations\n\n\n\ncluster_SongsPageModule_imports\n\n\n\n\nAboutPage\n\nAboutPage\n\n\n\nAboutPageModule\n\nAboutPageModule\n\nAboutPageModule -->\n\nAboutPage->AboutPageModule\n\n\n\n\n\nAboutPageRoutingModule\n\nAboutPageRoutingModule\n\nAboutPageModule -->\n\nAboutPageRoutingModule->AboutPageModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nArtistProfilePageModule\n\nArtistProfilePageModule\n\nArtistProfilePageModule -->\n\nSharedModule->ArtistProfilePageModule\n\n\n\n\n\nArtistsPageModule\n\nArtistsPageModule\n\nArtistsPageModule -->\n\nSharedModule->ArtistsPageModule\n\n\n\n\n\nHomePageModule\n\nHomePageModule\n\nHomePageModule -->\n\nSharedModule->HomePageModule\n\n\n\n\n\nLoginPageModule\n\nLoginPageModule\n\nLoginPageModule -->\n\nSharedModule->LoginPageModule\n\n\n\n\n\nPlaylistDetailPageModule\n\nPlaylistDetailPageModule\n\nPlaylistDetailPageModule -->\n\nSharedModule->PlaylistDetailPageModule\n\n\n\n\n\nPlaylistsPageModule\n\nPlaylistsPageModule\n\nPlaylistsPageModule -->\n\nSharedModule->PlaylistsPageModule\n\n\n\n\n\nProfilePageModule\n\nProfilePageModule\n\nProfilePageModule -->\n\nSharedModule->ProfilePageModule\n\n\n\n\n\nRegisterPageModule\n\nRegisterPageModule\n\nRegisterPageModule -->\n\nSharedModule->RegisterPageModule\n\n\n\n\n\nArtistGridCardComponent \n\nArtistGridCardComponent \n\nArtistGridCardComponent  -->\n\nSharedModule->ArtistGridCardComponent \n\n\n\n\n\nAudioPlayerComponent \n\nAudioPlayerComponent \n\nAudioPlayerComponent  -->\n\nSharedModule->AudioPlayerComponent \n\n\n\n\n\nChangePasswordModalComponent \n\nChangePasswordModalComponent \n\nChangePasswordModalComponent  -->\n\nSharedModule->ChangePasswordModalComponent \n\n\n\n\n\nClickableArtistNamesComponent \n\nClickableArtistNamesComponent \n\nClickableArtistNamesComponent  -->\n\nSharedModule->ClickableArtistNamesComponent \n\n\n\n\n\nDragDropDirective \n\nDragDropDirective \n\nDragDropDirective  -->\n\nSharedModule->DragDropDirective \n\n\n\n\n\nDurationPipe \n\nDurationPipe \n\nDurationPipe  -->\n\nSharedModule->DurationPipe \n\n\n\n\n\nEditProfileModalComponent \n\nEditProfileModalComponent \n\nEditProfileModalComponent  -->\n\nSharedModule->EditProfileModalComponent \n\n\n\n\n\nFollowArtistButtonComponent \n\nFollowArtistButtonComponent \n\nFollowArtistButtonComponent  -->\n\nSharedModule->FollowArtistButtonComponent \n\n\n\n\n\nGlobalSearchComponent \n\nGlobalSearchComponent \n\nGlobalSearchComponent  -->\n\nSharedModule->GlobalSearchComponent \n\n\n\n\n\nLikeButtonComponent \n\nLikeButtonComponent \n\nLikeButtonComponent  -->\n\nSharedModule->LikeButtonComponent \n\n\n\n\n\nPasswordVisibilityPipe \n\nPasswordVisibilityPipe \n\nPasswordVisibilityPipe  -->\n\nSharedModule->PasswordVisibilityPipe \n\n\n\n\n\nPictureSelectableComponent \n\nPictureSelectableComponent \n\nPictureSelectableComponent  -->\n\nSharedModule->PictureSelectableComponent \n\n\n\n\n\nPlayButtonComponent \n\nPlayButtonComponent \n\nPlayButtonComponent  -->\n\nSharedModule->PlayButtonComponent \n\n\n\n\n\nPlaylistDurationPipe \n\nPlaylistDurationPipe \n\nPlaylistDurationPipe  -->\n\nSharedModule->PlaylistDurationPipe \n\n\n\n\n\nPlaylistLikeButtonComponent \n\nPlaylistLikeButtonComponent \n\nPlaylistLikeButtonComponent  -->\n\nSharedModule->PlaylistLikeButtonComponent \n\n\n\n\n\nPlaylistModalComponent \n\nPlaylistModalComponent \n\nPlaylistModalComponent  -->\n\nSharedModule->PlaylistModalComponent \n\n\n\n\n\nSongDetailModalComponent \n\nSongDetailModalComponent \n\nSongDetailModalComponent  -->\n\nSharedModule->SongDetailModalComponent \n\n\n\n\n\nSongGridCardComponent \n\nSongGridCardComponent \n\nSongGridCardComponent  -->\n\nSharedModule->SongGridCardComponent \n\n\n\n\n\nSongModalComponent \n\nSongModalComponent \n\nSongModalComponent  -->\n\nSharedModule->SongModalComponent \n\n\n\n\n\nSongsPageModule\n\nSongsPageModule\n\nSongsPageModule -->\n\nSharedModule->SongsPageModule\n\n\n\n\n\nArtistsService\n\nArtistsService\n\nAppModule -->\n\nArtistsService->AppModule\n\n\n\n\n\nAudioPlayerService\n\nAudioPlayerService\n\nAppModule -->\n\nAudioPlayerService->AppModule\n\n\n\n\n\nEnhancedAudioPlayerService\n\nEnhancedAudioPlayerService\n\nAppModule -->\n\nEnhancedAudioPlayerService->AppModule\n\n\n\n\n\nPlaylistsService\n\nPlaylistsService\n\nAppModule -->\n\nPlaylistsService->AppModule\n\n\n\n\n\nSongEnrichmentService\n\nSongEnrichmentService\n\nAppModule -->\n\nSongEnrichmentService->AppModule\n\n\n\n\n\nSongsService\n\nSongsService\n\nAppModule -->\n\nSongsService->AppModule\n\n\n\n\n\nUserService\n\nUserService\n\nAppModule -->\n\nUserService->AppModule\n\n\n\n\n\nArtistProfilePage\n\nArtistProfilePage\n\nArtistProfilePageModule -->\n\nArtistProfilePage->ArtistProfilePageModule\n\n\n\n\n\nArtistProfilePageRoutingModule\n\nArtistProfilePageRoutingModule\n\nArtistProfilePageModule -->\n\nArtistProfilePageRoutingModule->ArtistProfilePageModule\n\n\n\n\n\nArtistModalComponent\n\nArtistModalComponent\n\nArtistsPageModule -->\n\nArtistModalComponent->ArtistsPageModule\n\n\n\n\n\nArtistsPage\n\nArtistsPage\n\nArtistsPageModule -->\n\nArtistsPage->ArtistsPageModule\n\n\n\n\n\nArtistsPageRoutingModule\n\nArtistsPageRoutingModule\n\nArtistsPageModule -->\n\nArtistsPageRoutingModule->ArtistsPageModule\n\n\n\n\n\nHomePage\n\nHomePage\n\nHomePageModule -->\n\nHomePage->HomePageModule\n\n\n\n\n\nHomePageRoutingModule\n\nHomePageRoutingModule\n\nHomePageModule -->\n\nHomePageRoutingModule->HomePageModule\n\n\n\n\n\nLoginPage\n\nLoginPage\n\nLoginPageModule -->\n\nLoginPage->LoginPageModule\n\n\n\n\n\nLoginPageRoutingModule\n\nLoginPageRoutingModule\n\nLoginPageModule -->\n\nLoginPageRoutingModule->LoginPageModule\n\n\n\n\n\nPlaylistDetailPage\n\nPlaylistDetailPage\n\nPlaylistDetailPageModule -->\n\nPlaylistDetailPage->PlaylistDetailPageModule\n\n\n\n\n\nPlaylistDetailPageRoutingModule\n\nPlaylistDetailPageRoutingModule\n\nPlaylistDetailPageModule -->\n\nPlaylistDetailPageRoutingModule->PlaylistDetailPageModule\n\n\n\n\n\nPlaylistsPage\n\nPlaylistsPage\n\nPlaylistsPageModule -->\n\nPlaylistsPage->PlaylistsPageModule\n\n\n\n\n\nPlaylistsPageRoutingModule\n\nPlaylistsPageRoutingModule\n\nPlaylistsPageModule -->\n\nPlaylistsPageRoutingModule->PlaylistsPageModule\n\n\n\n\n\nProfilePage\n\nProfilePage\n\nProfilePageModule -->\n\nProfilePage->ProfilePageModule\n\n\n\n\n\nProfilePageRoutingModule\n\nProfilePageRoutingModule\n\nProfilePageModule -->\n\nProfilePageRoutingModule->ProfilePageModule\n\n\n\n\n\nRegisterPage\n\nRegisterPage\n\nRegisterPageModule -->\n\nRegisterPage->RegisterPageModule\n\n\n\n\n\nRegisterPageRoutingModule\n\nRegisterPageRoutingModule\n\nRegisterPageModule -->\n\nRegisterPageRoutingModule->RegisterPageModule\n\n\n\n\n\nArtistGridCardComponent\n\nArtistGridCardComponent\n\nSharedModule -->\n\nArtistGridCardComponent->SharedModule\n\n\n\n\n\nAudioPlayerComponent\n\nAudioPlayerComponent\n\nSharedModule -->\n\nAudioPlayerComponent->SharedModule\n\n\n\n\n\nChangePasswordModalComponent\n\nChangePasswordModalComponent\n\nSharedModule -->\n\nChangePasswordModalComponent->SharedModule\n\n\n\n\n\nClickableArtistNamesComponent\n\nClickableArtistNamesComponent\n\nSharedModule -->\n\nClickableArtistNamesComponent->SharedModule\n\n\n\n\n\nDragDropDirective\n\nDragDropDirective\n\nSharedModule -->\n\nDragDropDirective->SharedModule\n\n\n\n\n\nDurationPipe\n\nDurationPipe\n\nSharedModule -->\n\nDurationPipe->SharedModule\n\n\n\n\n\nEditProfileModalComponent\n\nEditProfileModalComponent\n\nSharedModule -->\n\nEditProfileModalComponent->SharedModule\n\n\n\n\n\nFollowArtistButtonComponent\n\nFollowArtistButtonComponent\n\nSharedModule -->\n\nFollowArtistButtonComponent->SharedModule\n\n\n\n\n\nGlobalSearchComponent\n\nGlobalSearchComponent\n\nSharedModule -->\n\nGlobalSearchComponent->SharedModule\n\n\n\n\n\nLikeButtonComponent\n\nLikeButtonComponent\n\nSharedModule -->\n\nLikeButtonComponent->SharedModule\n\n\n\n\n\nPasswordVisibilityPipe\n\nPasswordVisibilityPipe\n\nSharedModule -->\n\nPasswordVisibilityPipe->SharedModule\n\n\n\n\n\nPictureSelectableComponent\n\nPictureSelectableComponent\n\nSharedModule -->\n\nPictureSelectableComponent->SharedModule\n\n\n\n\n\nPlayButtonComponent\n\nPlayButtonComponent\n\nSharedModule -->\n\nPlayButtonComponent->SharedModule\n\n\n\n\n\nPlaylistDurationPipe\n\nPlaylistDurationPipe\n\nSharedModule -->\n\nPlaylistDurationPipe->SharedModule\n\n\n\n\n\nPlaylistLikeButtonComponent\n\nPlaylistLikeButtonComponent\n\nSharedModule -->\n\nPlaylistLikeButtonComponent->SharedModule\n\n\n\n\n\nPlaylistModalComponent\n\nPlaylistModalComponent\n\nSharedModule -->\n\nPlaylistModalComponent->SharedModule\n\n\n\n\n\nSongDetailModalComponent\n\nSongDetailModalComponent\n\nSharedModule -->\n\nSongDetailModalComponent->SharedModule\n\n\n\n\n\nSongGridCardComponent\n\nSongGridCardComponent\n\nSharedModule -->\n\nSongGridCardComponent->SharedModule\n\n\n\n\n\nSongModalComponent\n\nSongModalComponent\n\nSharedModule -->\n\nSongModalComponent->SharedModule\n\n\n\n\n\nSongsPage\n\nSongsPage\n\nSongsPageModule -->\n\nSongsPage->SongsPageModule\n\n\n\n\n\nSongsPageRoutingModule\n\nSongsPageRoutingModule\n\nSongsPageModule -->\n\nSongsPageRoutingModule->SongsPageModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        24 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    28 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    26 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    3 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    77 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        33 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : An Ionic project\n        \n            Homepage : https://ionicframework.com/\n        \n            Author : Ionic Framework\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            StrapiUploadResponse   (src/.../strapi-media.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/services/impl/strapi-media.service.ts\n    \n    \n        \n            \n                \n                    \n                    StrapiUploadResponse\n                \n            \n            \n                \n                        StrapiMediaData[]\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            ARTISTS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            ARTISTS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            ARTISTS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            ARTISTS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            ArtistsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            ArtistsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            AUTH_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_ME_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_IN_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_SIGN_UP_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            AuthenticationServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            authGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            AuthMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            BACKEND_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            COLLECTION_SUBSCRIPTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            FIREBASE_COLLECTION_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            FIREBASE_CONFIG_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            MediaServiceFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            noAuthGuard   (src/.../no-auth.guard.ts)\n                        \n                        \n                            PICTURE_SELECTABLE_VALUE_ACCESSOR   (src/.../picture-selectable.component.ts)\n                        \n                        \n                            PLAYLISTS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PLAYLISTS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PLAYLISTS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PLAYLISTS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            PlaylistsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            PlaylistsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SONGS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SONGS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SONGS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SONGS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            SongsMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            SongsRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            STRAPI_AUTH_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            UPLOAD_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USERS_API_URL_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USERS_REPOSITORY_MAPPING_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USERS_REPOSITORY_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            USERS_RESOURCE_NAME_TOKEN   (src/.../repository.tokens.ts)\n                        \n                        \n                            UsersMappingFactory   (src/.../repository.factory.ts)\n                        \n                        \n                            UsersRepositoryFactory   (src/.../repository.factory.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/core/repositories/repository.tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ARTISTS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ArtistsApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ARTISTS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IArtistsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ARTISTS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IArtistsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ARTISTS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ArtistsResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IAuthMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_ME_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthMeApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_IN_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignInApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_SIGN_UP_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('AuthSignUpApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        BACKEND_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Backend')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        COLLECTION_SUBSCRIPTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>(\n    'CollectionSubscriptionService'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_COLLECTION_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FIREBASE_COLLECTION_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FIREBASE_CONFIG_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FIREBASE_CONFIG_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYLISTS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('PlaylistsApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYLISTS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IPlaylistsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYLISTS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IPlaylistsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PLAYLISTS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('PlaylistsResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IBaseRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('REPOSITORY_TOKEN')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SONGS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SongsApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SONGS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('ISongsRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SONGS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('ISongsRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SONGS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('SongsResourceName')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        STRAPI_AUTH_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IStrapiAuthentication')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UploadApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERS_API_URL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UsersApiUrl')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERS_REPOSITORY_MAPPING_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken>('IUsersRepositoryMapping')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERS_REPOSITORY_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('IUserRepository')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USERS_RESOURCE_NAME_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('UsersResourceName')\n                    \n                \n\n\n        \n    \n\n    src/app/core/repositories/repository.factory.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ArtistsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  ARTISTS_REPOSITORY_MAPPING_TOKEN,\n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'artist'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ArtistsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseRepositoryFactory(\n  ARTISTS_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN,\n    HttpClient,\n    BaseAuthenticationService,\n    ARTISTS_API_URL_TOKEN,\n    ARTISTS_RESOURCE_NAME_TOKEN,\n    ARTISTS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthenticationServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseAuthenticationService,\n  useFactory: (backend: string, firebaseConfig: any, signIn: string, signUp: string, meUrl: string, mapping: IAuthMapping, http: HttpClient) => {\n    switch(backend) {\n      case 'strapi':\n        return new StrapiAuthenticationService(signIn, signUp, meUrl, mapping, http);\n      case 'firebase':\n        return new FirebaseAuthenticationService(firebaseConfig, mapping);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n  },\n  deps: [\n    BACKEND_TOKEN, \n    FIREBASE_CONFIG_TOKEN, \n    AUTH_SIGN_IN_API_URL_TOKEN, \n    AUTH_SIGN_UP_API_URL_TOKEN, \n    AUTH_ME_API_URL_TOKEN, \n    AUTH_MAPPING_TOKEN, \n    HttpClient\n  ]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        AuthMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: AUTH_MAPPING_TOKEN,\n  useFactory: (backend: string) => {\n    switch(backend) {\n      case 'strapi':\n        return new StrapiAuthMappingService();\n      case 'firebase':\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n  },\n  deps: [BACKEND_TOKEN]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        MediaServiceFactory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FactoryProvider\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: BaseMediaService,\n  useFactory: (backend: string, firebaseConfig: any, upload: string, auth: BaseAuthenticationService, http: HttpClient) => {\n    switch(backend) {\n      case 'firebase':\n        return new FirebaseMediaService(firebaseConfig, auth);\n      case 'strapi':\n        if (!('getToken' in auth)) {\n          throw new Error(\"Auth service must implement getToken for media service\");\n        }\n        return new StrapiMediaService(upload, auth as IStrapiAuthentication, http);\n      default:\n        throw new Error(\"BACKEND NOT IMPLEMENTED\");\n    }\n  },\n  deps: [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN, UPLOAD_API_URL_TOKEN, BaseAuthenticationService, HttpClient]\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlaylistsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  PLAYLISTS_REPOSITORY_MAPPING_TOKEN,\n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'playlist'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PlaylistsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseRepositoryFactory(\n  PLAYLISTS_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN,\n    HttpClient,\n    BaseAuthenticationService,\n    PLAYLISTS_API_URL_TOKEN,\n    PLAYLISTS_RESOURCE_NAME_TOKEN,\n    PLAYLISTS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SongsMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  SONGS_REPOSITORY_MAPPING_TOKEN,\n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'song'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SongsRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseRepositoryFactory(\n  SONGS_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN,\n    HttpClient,\n    BaseAuthenticationService,\n    SONGS_API_URL_TOKEN,\n    SONGS_RESOURCE_NAME_TOKEN,\n    SONGS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UsersMappingFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseMappingFactory(\n  USERS_REPOSITORY_MAPPING_TOKEN,\n  [BACKEND_TOKEN, FIREBASE_CONFIG_TOKEN],\n  'user'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UsersRepositoryFactory\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createBaseRepositoryFactory(\n  USERS_REPOSITORY_TOKEN,\n  [\n    BACKEND_TOKEN,\n    HttpClient,\n    BaseAuthenticationService,\n    USERS_API_URL_TOKEN,\n    USERS_RESOURCE_NAME_TOKEN,\n    USERS_REPOSITORY_MAPPING_TOKEN,\n    FIREBASE_CONFIG_TOKEN\n  ]\n)\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const authService = inject(BaseAuthenticationService);\n    const router = inject(Router);\n\n    return authService.ready$.pipe(\n        filter(isReady => {\n            return isReady === true;\n        }),\n        take(1), // Solo tomar el primer valor true\n        \n        switchMap(() => {\n            return authService.authenticated$.pipe(\n                take(1), // Tomar el estado actual\n                timeout(5000), // Timeout de 5 segundos para evitar bloqueos\n                catchError(error => {\n                    return of(false);\n                })\n            );\n        }),\n        \n        map(isLoggedIn => {\n            \n            if (isLoggedIn) {\n                return true;\n            } else {\n                router.navigate(['/login'], { \n                    queryParams: { returnUrl: state.url } \n                });\n                return false;\n            }\n        }),\n        \n        catchError(error => {\n            // En caso de error crítico, redirigir al login\n            router.navigate(['/login'], { \n                queryParams: { returnUrl: state.url } \n            });\n            return of(false);\n        })\n    );\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true,\n  apiUrl:\"https://umusic-rtfn.onrender.com\"\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  apiUrl:\"https://umusic-rtfn.onrender.com\"\n}\n                    \n                \n\n\n        \n    \n\n    src/app/core/guards/no-auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        noAuthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n    const authService = inject(BaseAuthenticationService);\n    const router = inject(Router);\n\n    return authService.ready$.pipe(\n        filter(isReady => {\n            return isReady === true;\n        }),\n        take(1),\n        switchMap(() => {\n            return authService.authenticated$;\n        }),\n        take(1),\n        map(isAuthenticated => {\n            if (isAuthenticated) {\n                router.navigate(['/home']);\n                return false;\n            }\n            return true;\n        })\n    );\n}\n                    \n                \n\n            \n                \n                    Guardia que impide el acceso a las rutas de login y registro si el usuario ya está autenticado\nRedirige a la página de inicio si el usuario ya ha iniciado sesión\n\n                \n            \n\n        \n    \n\n    src/app/shared/components/picture-selectable/picture-selectable.component.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        PICTURE_SELECTABLE_VALUE_ACCESSOR\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PictureSelectableComponent),\n  multi: true\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
