/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import "@ionic/angular/css/core.css";

/* Basic CSS for apps built with Ionic */
@import "@ionic/angular/css/normalize.css";
@import "@ionic/angular/css/structure.css";
@import "@ionic/angular/css/typography.css";
@import "@ionic/angular/css/display.css";

/* Optional CSS utils that can be commented out */
@import "@ionic/angular/css/padding.css";
@import "@ionic/angular/css/float-elements.css";
@import "@ionic/angular/css/text-alignment.css";
@import "@ionic/angular/css/text-transformation.css";
@import "@ionic/angular/css/flex-utils.css";

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

/* @import "@ionic/angular/css/palettes/dark.always.css"; */
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
@import "@ionic/angular/css/palettes/dark.system.css";


.custom-modal {
  --width: 900px;  /* Aumenta el ancho */
  --height: 550px; /* Reduce la altura */
  --border-radius: 12px;
}

.custom-modal::part(backdrop) {
  background: rgba(0, 0, 0, 0.6); /* Ajusta el fondo oscuro */
}

.custom-modal::part(content) {
  width: var(--width);
  height: var(--height);
  max-width: 90vw; /* Evita que sea demasiado grande en pantallas pequeñas */
  max-height: 90vh;
  border-radius: var(--border-radius);
}



.custom-modal.spotify-theme {
  --width: 400px;
  --height: 550px;
  --border-radius: 12px;
  
  &::part(content) {
    background: linear-gradient(180deg, black, #2aac16fb, black);
    color: white;
  }

  ion-header {
    ion-toolbar {
      --background: transparent;
      --color: white;
    }
  }

  ion-content {
    --background: transparent;
  }

  ion-item {
    --background: rgba(0, 0, 0, 0.905);
    --border-color: rgba(255, 255, 255, 0.784);
    --color: white;
    
    &::part(native) {
      border-radius: 8px;
    }
  }

  ion-input {
    --color: white;
    --placeholder-color: rgba(255, 255, 255, 0.6);
  }

  ion-button {
    --background: #2aac16fb;
    --background-hover: #ffffff;
    --ripple-color: rgba(0, 255, 38, 0.4);
    margin-top: 20px;
  }
}

/* Estilos para elementos arrastrables */
[appDragDrop] {
  cursor: grab;
  transition: all 0.2s ease;
  
  /* Cuando se está arrastrando el elemento */
  &.dragging {
    opacity: 0.6;
    transform: scale(0.95);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
  }
  
  /* Cuando se está sobre un elemento destino */
  &.drag-over {
    background-color: rgba(42, 172, 22, 0.1);
    border: 2px dashed rgba(42, 172, 22, 0.5);
    transform: scale(1.02);
  }
}

/* Animación para la reordenación */
.reorder-animation {
  transition: transform 0.3s ease;
}

/* Para listas */
.drag-container {
  padding: 10px 0;
  
  /* Espacio para la zona de drop */
  &.has-drop-zone::after {
    content: '';
    display: block;
    height: 50px;
    border: 2px dashed #ccc;
    border-radius: 8px;
    margin-top: 10px;
  }
}

// Variable CSS para la altura del miniplayer
:root {
  --miniplayer-height: 0px;
}

// Cuando el miniplayer está visible, agregar padding automáticamente
body.has-miniplayer {
  ion-content {
    --padding-bottom: 120px; /* Altura fija del miniplayer */
  }
  
  // También para el tab-bar si usas tabs
  ion-tab-bar {
    margin-bottom: 120px;
  }
}

// Transición suave para el cambio
ion-content {
  transition: padding-bottom 0.3s ease;
}

ion-tab-bar {
  transition: margin-bottom 0.3s ease;
}